#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
Results management For this task, you are required to read the text file
 “
\series bold
overall_grades.txt
\series default
” which contains the subject grades of the first and second semester examination
 of 50 students.
\end_layout

\begin_deeper
\begin_layout Standard
The format of the text file is as follow: 
\family typewriter
<name>;<subject1>:<grade1>,<grade2>;<subject2>:<grade1>,<grade 2>;<subject3>:<gr
ade1>,<grade2>,…etc;
\backslash
n 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard

\family typewriter
Rufus Schuck;EL:C,B;CL:C,C;Math:C,E;Bio:B,F; 
\end_layout

\begin_layout Standard
Student Rufus Schuck takes 4 subjects.
 They are English (EL), Chinese (CL), Math (Math) and Biology (Bio).
 His 1st and 2nd semester grades for English is C and B respectively.
 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write the program code for the function process_data() which reads the text
 file “
\series bold
overall_grades.txt
\series default
” and returns a dictionary which has the following format.
 
\end_layout

\begin_layout Standard

\family typewriter
{'Rufus Schuck': {'EL': ['C', 'B'], 'CL': ['C', 'C'], 'Math': ['C', 'E'],
 'Bio': ['B', 'F']}, ...} 
\end_layout

\begin_layout Standard
The returned dictionary uses the name of student as key and another dictionary
 as its return value.
 This “another” dictionary then uses the subjects and a list containing
 the grades of the 1st and 2nd semesters as its key and value respectively.
 
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
The program code for the function process_data().
 [4] 
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Write a function have_n_improvement(n) which takes in an integer n and returns
 a list of student names who have improvement in exactly n subject(s).
 Using the example in Task 1.1, 'Rufus Schuck' shows improvement in only
 English.
 So, if n is 1, 'Rufus Schuck' must be included in the student name list.
 
\end_layout

\begin_layout Subsection*
Evidence 2
\end_layout

\begin_layout Standard
The program code for the function have_n_improvement(n).
 [3] 
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write a function have_improvement_in_all_subjs() which returns a list of
 student names who have improvement in all his/her subjects.
 
\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
The program code for the function have_improvement_in_all_subjs(n).
 [3] Page 3 of 14 2017 Y6 H2 computing Prelim Paper 1 
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write a function count_combi(combi) which takes a list of subjects combi
 as input and returns the total number of students who take the subject
 combination in combi.
 Take note that students who take more subjects than what is indicated in
 combi are included.
 For example: >>> count_combi(['EL', 'MATH']) >>> 50 
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
The program code for the function count_combi(n).
 [4] 
\end_layout

\begin_layout Standard
Task 1.5
\end_layout

\begin_layout Standard
Using your solution in Task 1.4, find the total number of students who take
 "Chem" and "Bio" but not "Physics".
 Evidence 5 The program code to find what is required in Task 1.5.
 [2]
\end_layout

\begin_layout Standard
Task 1.6 
\end_layout

\begin_layout Standard
Write a function calculate_GPA(name)which takes a string name as input and
 calculates the GPA of the student indicated by name.
 The points for each grade are as follow: {'A':5, 'B':4, 'C':3, 'D':2, 'E':1,
 'F':0} The 1 st and 2nd semester grades in the data has the same weightages.
 To calculate GPA, • Find the average points achieved of each subject.
 o e.g.
 if a student gets C and D in "CL", his average points for "CL" is 3 + 2
 = 2.5 • Add up the average points of each subject • Divide the total by
 the number subjects the student takes o e.g.
 'Claudette Bode': {'EL': ['C', 'D'], 'CL': ['D', 'A'], 'Math': ['A', 'D'],
 'Phy': ['A', 'D'], 'Bio': ['D', 'C']}, o [(3 + 2)/2 + (2 + 5)/2 + (5 +
 2)/2 + (2 + 5)/2 + (2 + 3)/2]/5 = 3.1 • GPA for 'Claudette Bode' is 3.1 
\end_layout

\begin_layout Standard
Evidence 6 
\end_layout

\begin_layout Standard
The program code for the function calculate_GPA(name).
 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Missing phone number digits Your friend (Mary) made an oversea friend (Jenny)
 yesterday while she was studying in the regional library.
 To remain in contact, Jenny gave Marry her phone number and told Mary that
 it is also a valid 10 digits International Standard Book Number (ISBN).
 After Jenny had left, Mary accidentally punched a few holes on the phone
 number while she was arranging her notes using the library’s hole puncher
 machine.
 It was too difficult for Mary to recover the lost pieces of paper.
 So, Mary decided to look for you to recover the missing digits instead.
 Below is the picture of the paper.
 To recover the missing digits, you need to understand how ISBN-10 works.
 The steps to check for a valid ISBN-10 is as follow: 1.
 Each of the digits of the ISBN-10 is first multiplied by a number in a
 sequence from 10 to 1 (Take note that the last digit of the ISBN-10 can
 be ‘X’ which holds a value of 10).
 2.
 All the 10 digits are then added up together.
 3.
 If the sum is divisible by 11, it is a valid ISBN-10, else it is invalid.
 For example, to check if ‘997150233X’ is a valid ISBM-10: Step 1 and 2
 (9x10) + (9x9) + (7x8) + (1x7) + (5x6) + (0x5) + (2x4) + (3x3) + (3x2)
 + (Xx1) = (9x10) + (9x9) + (7x8) + (1x7) + (5x6) + (0x5) + (2x4) + (3x3)
 + (3x2) + (10x1) = 297 Step 3 297 is a multiple of 11.
 Therefore, ‘997150233X’ is a valid ISBN-10.
 Task 2.1 Write a function is_valid_ISBN10(isbn10) which takes a string isbn10
 as input and returns True if isdn10 is a valid ISBN-10 and False otherwise.
 You are to validate the input string isbn10 and print to terminal the issue
 related to the isbn10 string.
 The possible issues to be printed to terminal includes: • ISBN-10 must
 only have 10 digits.
 • ISBN-10 can only contain numbers and the character 'X'.
 • 'X' can only be found at the last digit of isbn10.
 • Wrong check digit.
 • Valid ISBN-10.
 Evidence 7 The program code for the function is_valid_ISBN10(isbn10).
 [6] 8 1 7 5 3 5 9 9 8 6 Page 5 of 14 2017 Y6 H2 computing Prelim Paper
 1 Task 2.2 Write a function possible_ISBN(isbn) which takes a query string
 isbn10 as input and returns a list of possible ISBN-10.
 The query string isbn10 has 3 missing digits replaced with a '?' and they
 can be at any positions of the query string.
 For example, >>> possible_ISBN("9971??23?X") >>> ['997100237X', '997102232X',
 '997103235X', '997104238X', '997105230X', '997106233X', '997107236X', '99710823
9X', '997109231X', '997110234X', '997111237X', '997113232X', '997114235X',
 '997115238X', '997116230X', '997117233X', '997118236X', '997119239X', '99712023
1X', '997121234X', '997122237X', '997124232X', '997125235X', '997126238X',
 '997127230X', '997128233X', '997129236X', '997130239X', '997131231X', '99713223
4X', '997133237X', '997135232X', '997136235X', '997137238X', '997138230X',
 '997139233X', '997140236X', '997141239X', '997142231X', '997143234X', '99714423
7X', '997146232X', '997147235X', '997148238X', '997149230X', '997150233X',
 '997151236X', '997152239X', '997153231X', '997154234X', '997155237X', '99715723
2X', '997158235X', '997159238X', '997160230X', '997161233X', '997162236X',
 '997163239X', '997164231X', '997165234X', '997166237X', '997168232X', '99716923
5X', '997170238X', '997171230X', '997172233X', '997173236X', '997174239X',
 '997175231X', '997176234X', '997177237X', '997179232X', '997180235X', '99718123
8X', '997182230X', '997183233X', '997184236X', '997185239X', '997186231X',
 '997187234X', '997188237X', '997190232X', '997191235X', '997192238X', '99719323
0X', '997194233X', '997195236X', '997196239X', '997197231X', '997198234X',
 '997199237X'] Evidence 8 The program code for the function possible_ISBN(isbn).
 [6] Task 2.3 Examine the missing numbers in the paper closely and eliminate
 impossible digit choices.
 For example, the three missing digits cannot be ‘1’ as the three missing
 digits in the paper have round edges at the top.
 Modify your solution in Task 2.2 and suggest these possible ISBN-10 to Mary.
 Evidence 9 The screenshot of the suggested possible ISBN-10 that you will
 give to Mary.
 [2] Page 6 of 14 2017 Y6 H2 computing Prelim Paper 1 Task 2.4 Write a menu
 to help other to generate possible ISBN-10.
 The menu should have the following functions.
 Menu A) Input a ISBN-10 query string B) Display all possible ISBN-10 C)
 Quit You should validate user inputs and call for re-entry when an invalid
 option is given.
 Evidence 10 Program code for the procedure menu().
 [6] Page 7 of 14 2017 Y6 H2 computing Prelim Paper 1 
\end_layout

\begin_layout Enumerate
Unsorted Linked List The classes Node and LinkedList is partially implemented
 for you according to the specification given below.
 The attribute start of class LinkedList stores the first node instance
 of the linked list.
 If the linked list has no node, start has the value of None.
 Functions in bold are not implemented.
 Node LinkedList -data : STRING -next : Node -start : Node +constructor()
 +set_data(data) +get_data() +set_next(node) +get_next() +__str__() +constructor
() +set_start(node) +get_start() +insert_data(data) +transfer(linkedlist)
 +delete_pos(pos) +display() Task 3 Implement the following LinkedList class
 functions according to its specification given: • +insert_data(node) •
 +transfer(llist) • +delete_pos(pos) Function Specification insert_data(data)
 This function takes a string data as input and uses its value to create
 a new Node instance.
 The new Node instance is then inserted as the first node of the linked
 list.
 transfer(llist) This function takes a LinkedList instance llist as input
 and transfers all its Node instances in the same order to the LinkedList
 instance that calls for this function.
 For example: A:'boy'->'man'->'woman' B:'girl'->'baby' >>> A.transfer(B)
 A: 'boy'->'man'->'woman'->'girl'->'baby' B: None delete_pos(pos) This function
 takes in an integer pos as input and deletes the node at position pos.
 Take note that the first node of the linked list is position 1.
 For example: A:'boy'->'man'->'woman' >>> A.
 delete_pos(2) A:'boy'->'woman' Page 8 of 14 2017 Y6 H2 computing Prelim
 Paper 1 Evidence 11 Program code for: • insert_data(node) [3] • transfer(linked
list) [3] • delete_pos() [4] Page 9 of 14 2017 Y6 H2 computing Prelim Paper
 1 
\end_layout

\begin_layout Enumerate
Sorting Algorithms The pseudocode procedure below is given a list of integers
 in random order, the procedure then outputs a sorted list in ascending
 order.
 1.
 FUNCTION Merge_Sort (ARRAY: arr) 2.
 n = SIZE(arr) 3.
 IF n < 2: 4.
 RETURN arr 5.
 END IF 6.
 left = Merge_Sort(PARTITION(arr, 0, n DIV 2)) 7.
 right = Merge_Sort(PARTITION(arr, n DIV 2, n)) 8.
 RETURN Merge(left, right) 9.
 END FUNCTION 10.
 11.
 FUNCTION Merge (ARRAY: left, LIST: right) 12.
 DECLARE results: ARRAY[SIZE(left) + SIZE(right)] 13.
 DECLARE i, j, index : INTEGER 14.
 i, j, index = 0, 0, 0 15.
 WHILE i < SIZE(left) and j < SIZE(right) 16.
 IF left[i] < right[j]: 17.
 results[index] = left[i] 18.
 i = i + 1 19.
 ELSE: 20.
 results[index] = right[j] 21.
 j = j + 1 22.
 END IF 23.
 index = index + 1 24.
 END WHILE 25.
 WHILE i < SIZE(left) 26.
 results[index] = left[i] 27.
 i = i + 1 28.
 index = index + 1 29.
 END WHILE 30.
 WHILE j < SIZE(right) 31.
 results[index] = right[j] 32.
 j = j + 1 33.
 index = index + 1 34.
 END WHILE 35.
 RETURN results 36.
 END FUNCTION Page 10 of 14 2017 Y6 H2 computing Prelim Paper 1 Task 4.1
 Write program code to implement the given procedure.
 Execute the function using the following list as the parameter.
 [1, 15, 2, 4, 3, 9, 7, 10] Evidence 12 Program Code.
 Screenshot showing the output.
 [6] Evidence 13 Analyze and state the time complexity of the algorithm
 in big O notation.
 [1] Task 4.2 Bubble sort is a common sorting algorithm, below is an implementati
on of in-place bubble sort using recursion.
 There are three missing lines in the pseudocode, indicated as A, B and
 C.
 1.
 PROCEDURE Bubble_Sort (ARRAY: arr, INTEGER: n) 2.
 IF _______A_______: 3.
 RETURN 4.
 END IF 5.
 6.
 FOR i FROM 0 TO (n-1): 7.
 IF _______B_______: 8.
 temp = arr[i] 9.
 arr[i] = arr[i+1] 10.
 arr[i+1] = temp 11.
 END IF 12.
 END FOR 13.
 14.
 _______C_______ 15.
 END PROCEDURE Execute the procedure to sort the following list.
 [1, 15, 2, 4, 3, 9, 7, 10] Evidence 14 Complete the missing lines A, B
 and C.
 [3] Insert a counting mechanism to count the number of comparisons made,
 and return the value as an integer.
 Implement the new recursive bubble sort.
 Evidence 15 Program Code.
 Screenshot showing the output of the sorted list and count value.
 [4] Page 11 of 14 2017 Y6 H2 computing Prelim Paper 1 Evidence 16 Analyze
 and state the time complexity of the algorithm in big O notation.
 [1] Task 4.3 Due to the nature of bubble sort, if no swaps are observed
 in a given iteration, then there is no need for the next iteration.
 Implement the improved bubble sort.
 Execute the function to sort the following list.
 [1, 15, 2, 4, 3, 9, 7, 10] Evidence 17 Program Code.
 Screenshot showing the output of the sorted list and count value.
 [3] Page 12 of 14 2017 Y6 H2 computing Prelim Paper 1 5.
 Grocery Store Manager The grocery shop in the neighborhood ask your help
 to create an application to manage the grocery store.
 First, you are tasked to work on an object-oriented solution to store all
 the grocery details.
 The title of the grocery item, cost, price and stock of each grocery is
 recorded.
 Besides the normal groceries, the shop identifies three unique types of
 grocery too, namely: • Electrical Appliance: there is a need to indicate
 the power of the product to understand its energy consumption rate.
 • Cigarette: it is important to track the nicotine content of various kinds
 of cigarette.
 • Alcohol: there are distinct types of alcohols such as wine or beer.
 Below is an UML class diagram for your reference.
 Grocery - title: string - cost: float - price: float - stock: integer +
 Grocery(title: string, cost: float, price: float, stock: integer) + set_title(n
ew_title:string) + set_cost(new_cost) + set_price(new_price) + get_title():
 string + get_cost(): float + get_price(): float + get_stock(): float +
 update_stock(change_in_stock: integer) + calculate_final_price(): float
 + __str__(): string ElectricalAppliance Cigarette Alcohol - title: string
 - cost: float - price: float - stock: integer - power: float - title: string
 - cost: float - price: float - stock: integer - nicotine_content: float
 - title: string - cost: float - price: float - stock: integer - type: string
 + ElectricalAppliance(title: string, cost: float, price: float, stock:
 integer, power: float) + get_power(): float + calculate_final_price():
 float + Cigarette(title: string, cost: float, price: float, stock: integer,
 nicotine_content: float) + get_nicotine_content(): float + calculate_final_pric
e(): float + Alcohol (title: string, cost: float, price: float, stock: integer,
 type: string) + get_type(): string + calculate_final_price(): float Page
 13 of 14 2017 Y6 H2 computing Prelim Paper 1 Task 5.1 Implement the classes
 of Grocery, ElectricalAppliance, Cigarette and Alcohol with object-oriented
 programming.
 Evidence 18 Program Code for four classes.
 [7] Task 5.2 In country S, purchasing all groceries will incur a 7% Goods
 and Services Tax(GST).
 To promote healthy living, additional tax have been imposed to cigarettes
 and alcohols: • Cigarette: additional 60% tax • Wines: additional 50% tax
 • Beers: additional 20% tax For example: the price of one packet of “Yun
 Yan” cigarette is $23.00, the final price can be calculated by: $23.00 x
 160% x 107% = $39.38 In addition, to support the “save energy movement”,
 all electrical appliance with a power less than or equals to 10Watt was
 set to be sold at 80% of its original price.
 Implement the function calculate_final_price() which includes the above
 mentioned tax and promotion into consideration.
 Implement the __str__() function which returns a string in the following
 format (You may refer to the test_function_5_1() to understand the formatting):
 Title | Cost | Price | Stock | Final Price For example, Yun Yan’s cost
 is $16.50, price is set at $23.00, the current stock is 4 and final price
 is $39.38.
 The __str__() function should return the following string: Yun Yan | $
 16.50 | $ 23.00 | 4 | $ 39.38 Evidence 19 Program Code for calculate_final_price()
 and __str__().
 Screenshot showing output of test_function_5_1().
 [6] Page 14 of 14 2017 Y6 H2 computing Prelim Paper 1 Task 5.3 Implement
 a class StoreManager which keep track of a list of grocery items, curr_item_lis
t.
 The StoreManager should have the following class functions: Function Descriptio
n sell_item(sold_item) sold_item is a tuple containing 2 elements: the title
 of the item and the quantity sold.
 You may assume the title of item is always valid and the quantity sold
 is always smaller than the current stock.
 The function should decrease the current stock of the sold items.
 Upon completion, it should print out a string containing the following
 information: Title | Unit Price | Quantity Sold | Subtotal The function
 should return a float containing the sub_total value.
 sell_items(sold_item _list) sold_item_list is a list of tuples; each tuple
 containing the item title and quantity sold.
 The function should print out a table displaying information for all sold
 items in the following format: Title | Unit Price | Quantity Sold | Subtotal
 The summary should end with a line indicating the overall total value of
 items sold in this transaction.
 stock_check() When this function is called, it should check the list of
 all grocery items and print out a summary of items with current stock value
 below 5.
 This indicates the need for stocking up these items soon.
 A summary table should be printed in the following format: Title | Unit
 Cost | Quantity Left Evidence 20 Program Code for class functions of StoreManag
er class: • sell_item [3] • sell_items [2] • stock_check [2] Screenshot
 showing output of test_function_5_2().
 [2]
\end_layout

\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="28">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Plain text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
g
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
h
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
i
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
j
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
k
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
m
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
o
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
p
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
u
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
v
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is substituted by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Cipher text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Please enter a menu item index (or −1 to complete the order):
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
