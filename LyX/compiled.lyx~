#LyX file created by tex2lyx 2.3
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin C:/Users/Admin/Desktop/Github/question_bank/LyX/
\textclass article
\begin_preamble

\usepackage{enumitem}
\usepackage{amsthm}



\usepackage{enumitem}
\setenumerate[1]{label=\textbf{\arabic*}}
\setenumerate[2]{label=\textbf{(\alph*)}}
\setenumerate[3]{label=\textbf{(\roman*)}}
\setlist[enumerate]{align=right}

\setcounter{page}{2}

%for upright integrals
\usepackage[integrals]{wasysym}


%to be used in conjunction with fancyfoot for last page
\usepackage{zref-totpages}


%fancyhrd settings
\usepackage{fancyhdr}

\fancyhf{}

\fancypagestyle{laststyle}
{
   \fancyhf{}
   \chead{\thepage}
   \fancyfoot[L]{\copyright NJC }
   \fancyfoot[R]{\textbf{END}} %Put \thispagestyle{laststyle} in the last page
}

%%centering page number
\chead{\thepage}

\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

%%footer settings, different footer for ODD and EVEN pages, also for the LASTPAGE
\fancyfoot[LO]{Generated with Python Script by BRW\hfill \textbf{[Turn Over}}
\fancyfoot[LE]{Generated with Python Script by BRW }

%%shameless self-plug BRW



\usepackage{babel}

\end_preamble
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "default" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing double
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\leftmargin 1.5cm
\topmargin 1.8cm
\rightmargin 2cm
\bottommargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The files 
\family typewriter
WORDS1.TXT
\family default
 and 
\family typewriter
WORDS2.TXT
\family default
 store a list of single word computing terms used in a textbook.
\end_layout

\begin_layout Standard
Each entry has the following format:
\end_layout

\begin_layout Standard

\family typewriter
<computing term>
\family default

\end_layout

\begin_layout Standard

\family typewriter
<number>
\family default

\end_layout

\begin_layout Standard
One of the file entries (in both files) is:
\end_layout

\begin_layout Standard

\family typewriter
program 
\family default

\end_layout

\begin_layout Standard

\family typewriter
52
\family default

\end_layout

\begin_layout Standard
This means that after a complete scan of the textbook the word 'program' was found 52 times.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to find and output the term with the highest number of occurrences. Use the file 
\family typewriter
WORDS1.TXT
\family default
 to test your program.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Amend your program code so that if more than one term exists with the highest number of occurrences, all terms are reported. Use the file 
\family typewriter
WORDS2.TXT
\family default
 to test your program.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company keeps data about its employees. The employee surname and employee ID are recorded.
\end_layout

\begin_layout Standard
All employee IDs are unique and have the format C999 where C is any uppercase letter and 9 is a digit.
\end_layout

\begin_layout Standard
A program is to be produced to search by either: 
\end_layout

\begin_layout Itemize
The surname, which then reports the matching employee ID 
\end_layout

\begin_layout Itemize
The employee ID, which then reports the matching surname 
\end_layout

\begin_layout Standard
The programmer stores the data a two 1-dimensional arrays and produces the following search algorithm to search a string array and output the matching value from the second array.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
INPUT SearchItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR Index ‚Üê 1 TO UpperBound 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF SearchItem = Array1[Index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN OUTPUT Array2[Index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFOR
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This search algorithm is inefficient.
\end_layout

\begin_layout Standard
The programmer uses the following design to produce the program code: 
\end_layout

\begin_layout Itemize
code to search by surname 
\end_layout

\begin_layout Itemize
The search algorithm has 
\family typewriter
Surname
\family default
 as 
\family typewriter
Array1
\family default
 and 
\family typewriter
EmployeeID
\family default
 as 
\family typewriter
Array2
\family default
 followed by code to search by employee ID 
\end_layout

\begin_layout Itemize
The search algorithm has 
\family typewriter
EmployeeID
\family default
 as 
\family typewriter
Array1
\family default
 and 
\family typewriter
Surname
\family default
 as 
\family typewriter
Array2
\family default
 
\end_layout

\begin_layout Standard
This design would produce repetition of code.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code which performs each of the searches: 
\end_layout

\begin_layout Itemize
Search by surname 
\end_layout

\begin_layout Itemize
Search by employee ID 
\end_layout

\begin_layout Standard
Your code should address the issues of inefficiency and repetition of code described in the scenario above.
\end_layout

\begin_layout Standard
Use the sample array data available from the text file 
\family typewriter
EMPLOYEEDATA.txt
\family default
 and paste this into your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [11]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Devise a set of four test cases with the data to be used.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store a dataset (maximum size 20 items) as a binary tree structure. You should assume that the data items are unique.
\end_layout

\begin_layout Standard
The program will use a user-defined type Node for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left pointer for the node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node's data value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is maintained of all the unused nodes which do not form part of the tree. The first available node which is used for a new term is indicated by NextFreePosition. Items in the unused list are linked using their left pointers.
\end_layout

\begin_layout Standard
The binary tree and linked list are implemented using variables as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisTree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[20] : Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The tree data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position of the 
\family typewriter
ThisTree
\family default
 array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreePosition
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the binary tree and linked list after four values have been added.
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to declare all the required variables and create the initial linked list which contains all 20 nodes. Add statement(s) to initialise the empty tree.
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code for Task 3.1. [11]
\end_layout

\begin_layout Standard
The following (incomplete) pseudocode inserts a data value into the binary tree structure.
\end_layout

\begin_layout Standard
The 
\family typewriter
LastMove
\family default
 variable holds the direction of the previous traversal move as follows:
\end_layout

\begin_layout Standard
X - no move yet made
\end_layout

\begin_layout Standard
L - move was to the left
\end_layout

\begin_layout Standard
R - move was to the right
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddItemToBinaryTree(NewFreeItem)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Root = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Root ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the tree to find the position for the new value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê Root
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'X'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PreviousPosition ‚Üê CurrentPosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewFreeItem < ThisTree[CurrentPosition].Data
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move left
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'L'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].LeftP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move right
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'R'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].RightP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL CurrentPosition = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LastMove = 'R'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].RightP ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].LeftP ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

NextFreePosition ThisTree[NextFreePosition].LeftP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: The above text is available in the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write non-recursive code to implement the 
\family typewriter
AddItemToBinaryTree
\family default
 procedure. You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The given pseudocode is incomplete as: 
\end_layout

\begin_layout Itemize
it does not initially test that there is space available for a new item 
\end_layout

\begin_layout Itemize
it does not assign 
\family typewriter
NewTreeItem
\family default
 to the data field of the 
\family typewriter
ThisTree
\family default
 array 
\end_layout

\begin_layout Standard
Add these requirements to your program solution.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code for Task 3.2.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write a procedure
\family typewriter
 OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreePosition
\family default
 and the contents of 
\family typewriter
ThisTree
\family default
 in index order.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for Task 3.3. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
Input new data items and add them to the binary tree by calling procedure 
\family typewriter
AddItemToBinaryTree
\family default
. The input is terminated with value 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

. Do not attempt to validate the input of the country names. 
\end_layout

\begin_layout Itemize
Your program will then call procedure 
\family typewriter
OutputData
\family default
. 
\end_layout

\begin_layout Standard
Run the program with the input of the single value 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Test your program using the following data items input in the order shown: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
INDIA, NEPAL, MALAYSIA, SINGAPORE, BURMA, CANADA, LATVIA, XXX
\family default
 
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Provide screenshot test evidence for Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Further program code is required to carry out an 
\series bold
in-order traversal
\series default
.
\end_layout

\begin_layout Subsubsection*
Task 3.6
\end_layout

\begin_layout Standard
Write a recursive procedure to carry out an in-order tree traversal.
\end_layout

\begin_layout Standard
Include a call to the procedure from your main program.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Produce a screenshot for the Task 3.5 dataset confirming the output of the countries in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to input data for a frequency distribution and then output to the screen a horizontal bar chart.
\end_layout

\begin_layout Standard
The data is input as an X value followed by its frequency. Assume the frequency is always in the range 0 to 60 and there are no more than six X values.
\end_layout

\begin_layout Standard
The input shown below shows the number of sweatshirts sold in a retail shop over a one week period; for example there were 39 XL items sold
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XS 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> S 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 22 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 56 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 39 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XXL
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 11 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> ZZZ
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++++++++++++++++++++++++
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency distribution 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++++++++++++++++++++++++
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XS 
\begin_inset space ~

\end_inset

@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
S 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
M 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
L 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XL 
\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XXL @@@@@@@@@@@
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write a program which inputs a set of X values and frequencies and produces output in the format shown.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code for Task 4.1.
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
A screenshot to confirm the dataset used and the output produced. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The appearance of the bar chart display is to be improved as follows: 
\end_layout

\begin_layout Itemize
Each bar is to be represented by more than one line of the same character to that its bar width is increased. 
\end_layout

\begin_layout Itemize
Each bar will be shown with the same number of lines. 
\end_layout

\begin_layout Itemize
The complete bar chart, including the heading, is to take up no more than 40 lines. 
\end_layout

\begin_layout Itemize
The line width for the output is exactly 80 characters. 
\end_layout

\begin_layout Itemize
Its appearance could be improved by changing the @ character. 
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write code to produce a new chart for the data used in Task 4.1 showing the maximum possible bar width and any other refinements you have introduced.
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Your program code for Task 4.2. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
A screenshot showing the data entry followed by the bar chart. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
Some datasets will have a frequency which is greater than 60 and so the frequencies of the dataset can no longer be shown with a corresponding number of characters in the line. The frequencies will need to be scaled before the output is attempted.
\end_layout

\begin_layout Standard
The bar chart would benefit by the inclusion of a horizontal axis labelled with a scale showing the frequency values.
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Revise your program code to meet these new requirements.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
Your program code for Task 4.3.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshots demonstrating: 
\end_layout

\begin_layout Itemize
Dataset 1 as used in Task 4.1 which needs no scaling 
\end_layout

\begin_layout Itemize
Dataset 2 of your choice to demonstrate frequencies which must be scaled 
\end_layout

\begin_layout Itemize
Dataset 3 of your choice to demonstrate frequencies which must be scaled differently to Dataset 2 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A dental practice currently uses a computer system to store details of its patients, staff and appointments in separate files.
\end_layout

\begin_layout Standard
The practice manager and the receptionist have their own computers for accessing and updating the files.
\end_layout

\begin_layout Standard
The system produces a small number of reports.
\end_layout

\begin_layout Standard
An updated system is to be produced by a software company. The updated system will use a database. In the updated system the dentists will be given a hand-held device to use in their rooms for accessing and updating the patient records. The new system will also be capable of producing additional reports.
\end_layout

\begin_layout Standard
The software company has software engineers who have expert skills in specific areas of software development. A number of the engineers will be involved in the development of the updated system. 
\end_layout

\begin_layout Enumerate
Describe and justify three methods which can be used to determine what further reports are required from the updated computer system. [6] 
\end_layout

\begin_layout Enumerate
The work to update the system is partly managed by the following Program Evaluation and Review Technique (PERT) chart.
\end_layout

\begin_deeper
\begin_layout Standard
A - investigation
\end_layout

\begin_layout Standard
B - analysis
\end_layout

\begin_layout Standard
C - design of database
\end_layout

\begin_layout Standard
D - design of reports
\end_layout

\begin_layout Standard
E - design of screen displays for dentists
\end_layout

\begin_layout Standard
F - transfer of data from files into database
\end_layout

\begin_layout Standard
G - documentation produced
\end_layout

\begin_layout Standard
H - acceptance testing
\end_layout

\begin_layout Standard
I - hand over to customer
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the updated system could be operational. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
For activity E state the 
\end_layout

\begin_deeper
\begin_layout Itemize
earliest Start time 
\end_layout

\begin_layout Itemize
earliest Finish time 
\end_layout

\begin_layout Itemize
latest Start time 
\end_layout

\begin_layout Itemize
latest Finish time
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\color white
_
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q1-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The Gantt chart above is based on the information in part 
\series bold
(b)
\series default
. The timing of two activities is missing and also the timing of one of the activities shown is incorrect.
\end_layout

\begin_layout Standard
Draw a sketch of the Gantt chart to show the correct version. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how the Gantt chart can help with the work that the software engineers have to carry out. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A small team is put together to consider security aspects of the updated system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Identify 
\series bold
two
\series default
 possible members of the team and justify your choice.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The team have to produce a report to which they all make a contribution. The report is stored on a network. Each member of the team has access to allow them to add their contribution. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii
\end_layout

\end_inset

Give 
\series bold
two
\series default
 examples of unethical behaviour by a team member.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Name and describe 
\series bold
two
\series default
 types of documentation produced for this project.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
End-User documentation 
\end_layout

\begin_layout Itemize
for actual users of system to learn about features and how to use them 
\end_layout

\begin_layout Itemize
minimum/recommended hardware and software system requirements (operating system, version, processor, amount of RAM and hard disk space, etc.) 
\end_layout

\begin_layout Itemize
installation guide + step by step guide of how to perform a task or use a feature 
\end_layout

\begin_layout Itemize
frequently asked questions (FAQ) for common troubleshooting problems and solutions 
\end_layout

\begin_layout Itemize
support contact information, safety instructions, warranty information 
\end_layout

\begin_layout Plain Layout
Technical documentation 
\end_layout

\begin_layout Itemize
for developers to document technical requirements and features of system 
\end_layout

\begin_layout Itemize
system objectives and scope 
\end_layout

\begin_layout Itemize
input and output/report specifications 
\end_layout

\begin_layout Itemize
data storage/database specification 
\end_layout

\begin_layout Itemize
modules/processes and algorithms 
\end_layout

\begin_layout Itemize
user interfaces and application programming interfaces (APIs) 
\end_layout

\begin_layout Itemize
testing 
\end_layout

\begin_layout Itemize
implementation/deployment 
\end_layout

\begin_layout Itemize
bugs report and known issues 
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
The hand-held devices the dentists use in their practice rooms will be networked. Both client-side scripting and server-side scripting will be used in the new software which is produced. An intranet with a web server will be created. Web browsers will be used on the hand-held devices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe three possible uses of the device.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

For each scripting method, client-side scripting and server-side scripting, give an appropriate example. Justify your response.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Examination centres receive examination results for their candidates as a printed report. The report lists the candidates in order based on their Index Number. For each candidate their results occupy one row of the report. Each row displays the results for all subjects that the candidate sat in the examination. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Candidates can only take examinations at one centre in a particular session.
\end_layout

\begin_layout Standard
Currently the candidate results for each centre are stored in a separate file. The software that produces the above report is written in a programming language. 
\end_layout

\begin_layout Enumerate
Describe, using an example, why this file has data redundancy.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
An extra field is added to the file, but the report will not include this new field.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the problem that will arise. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A normalised database solution to this problem is designed, which has a number of tables. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw an E-R diagram that shows these tables and the relationships between them.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

When the data are stored in a database, privacy is of great concern.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A hash table has an index range of 1 to 900. The following pseudocode describes an algorithm for searching the table using the hashing function Hash. It is assumed that the key is present in the table.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Index <- Hash(Key) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 WHILE Table[Index, 1] <> Key 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

Index <- Index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 Value <- Table[Index, 2]
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the purpose of: 
\end_layout

\begin_deeper
\begin_layout Enumerate
line 3 
\end_layout

\begin_layout Enumerate
line 5
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a problem that might occur with a key which, when hashed, produces an index of 900. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What modification to the algorithm is required to overcome this problem? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain how a new item can be added to this hash table. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A software development company currently hosts its own email server. The company is considering a replacement webmail service, using cloud computing. 
\end_layout

\begin_layout Enumerate
(a) State two advantages of this change.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
(b) State one disadvantage of this change. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The company is also considering other uses of the cloud. These include collaborative activities between employees of the company and also assistance in developing new software. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe an example of how employees of the company may use the cloud to work collaboratively.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe how the cloud can be beneficial to the company when developing new software for a client. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Bank customers are allowed to withdraw money from their accounts at an ATM. They cannot withdraw more than the current balance in their account. There is a daily limit on the amount that can be withdrawn. In some circumstances a charge is made for the transaction. The rules are: 
\end_layout

\begin_layout Itemize
the transaction is rejected if the withdrawal amount requested is greater than the current balance 
\end_layout

\begin_layout Itemize
the transaction is rejected if the withdrawal amount exceeds the daily limit 
\end_layout

\begin_layout Itemize
if the current balance before the transaction is carried out is less than 50 dollars then any successful transaction incurs a fixed charge 
\end_layout

\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using your answer in (b) write a function using pseudocode. The function returns: 
\end_layout

\begin_deeper
\begin_layout Itemize
-1 to indicate a rejection; 
\end_layout

\begin_layout Itemize
0 for a charge-free successful transaction; 
\end_layout

\begin_layout Itemize
the charge for a chargeable successful transaction.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
State two ways in which your answer in (c) demonstrates clarity of code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The ASCII code for the character 'Z', expressed as a denary integer, is 90. 
\end_layout

\begin_layout Enumerate
Express the denary integer 90 as: 
\end_layout

\begin_deeper
\begin_layout Enumerate
an eight-bit binary number 
\end_layout

\begin_layout Enumerate
a hexadecimal number 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give two reasons why hexadecimal numbers are used in computing. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the ASCII code for 'X' in denary. Explain your answer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why the Unicode encoding system has replaced ASCII. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe a method of storing strings of characters of variable length in a computer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Many applications require the user to search for a data item from a file or one-dimensional array.
\end_layout

\begin_layout Standard

\family typewriter
JARGON.TXT
\family default
 is a text file containing computing terms with one term per line. The program will read all the terms from 
\family typewriter
JARGON.TXT
\family default
 into an array.
\end_layout

\begin_layout Standard
The user will choose if the type of search is to find: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

An exact match 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

A match at the beginning of the term text 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

A match anywhere within the term text 
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
Read the entire contents of 
\family typewriter
JARGON.TXT
\family default
 into an array 
\end_layout

\begin_layout Itemize
Allow the user to repeatedly select the type of search, then input a term 
\end_layout

\begin_layout Itemize
Output the matching term(s) found 
\end_layout

\begin_layout Itemize
Output a count of the number of matches 
\end_layout

\begin_layout Itemize
End with the input of term 
\begin_inset Quotes qld
\end_inset

XXX
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Standard
A typical run of the program is shown below:
\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?1 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?firewall 
\family default

\end_layout

\begin_layout Standard

\family typewriter
firewall 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 1 matching term(s)
\family default

\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?2 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?data 
\family default

\end_layout

\begin_layout Standard

\family typewriter
data flow diagram 
\family default

\end_layout

\begin_layout Standard

\family typewriter
database management system 
\family default

\end_layout

\begin_layout Standard

\family typewriter
data file 
\family default

\end_layout

\begin_layout Standard

\family typewriter
database 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 4 matching term(s)
\family default

\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?3 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?box 
\family default

\end_layout

\begin_layout Standard

\family typewriter
white box testing 
\family default

\end_layout

\begin_layout Standard

\family typewriter
black box testing 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 2 matching term(s)
\family default

\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Study the contents of 
\family typewriter
JARGON.TXT
\family default
 and then design four test cases to thoroughly test the working of your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
State the test data used in Task 1.2 and show screenshots to confirm the successful testing of each of your four test cases. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary search (binary chop) is a technique to search for a value in an ordered dataset.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Study the identifier table and incomplete recursive algorithm.
\end_layout

\begin_layout Standard
The missing parts of the algorithm are labelled A, B and C. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Variable 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisArray
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY OF STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array containing the the dataset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FindValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Item to be found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Low
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lowest index of the considered list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
High
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Highest index of the considered list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Middle
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The array index for the middle position of the current list considered
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION BinarySearch(ThisArray, FindValue, Low, High) RETURNS INTEGER
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DECLARE Middle : INTEGER
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF ............... A ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN -1 // not found
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// calculate new Middle value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Middle ‚Üê ............... B ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisArray[Middle] > FindValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN BinarySearch(ThisArray, FindValue, Low, Middle - 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisArray[Middle] < FindValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

............... C ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Middle // found at position Middle
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
What are the three missing lines in this pseudocode? 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Write a program to implement binary search.
\end_layout

\begin_layout Standard
The program will 
\end_layout

\begin_layout Itemize
Call procedure InitialiseAnimals 
\end_layout

\begin_layout Itemize
Input an animal name 
\end_layout

\begin_layout Itemize
Use the function BinarySearch 
\end_layout

\begin_layout Itemize
Report whether or now this animal name was found. If found, also output the index position. 
\end_layout

\begin_layout Standard
The array in the program has identifier 
\family typewriter
MyAnimal
\family default
.
\end_layout

\begin_layout Standard
Use the dataset given in the file 
\family typewriter
ANIMALS.TXT
\family default
. You should paste the contents of this file into your program. The statements will form the basis of the code for the procedure 
\family typewriter
InitialiseAnimals
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Program code for Task 2.2 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot to confirm that an animal wich is present in the list was found with its index position displayed. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Amend the program as follows:
\end_layout

\begin_layout Standard
The program must also output the number of function calls carried out.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
The amended program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Screenshots showing the amended ouput for runs of the program where: 
\end_layout

\begin_layout Itemize
the animal is found 
\end_layout

\begin_layout Itemize
the animal is not found. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to represent and implement a linked list of nodes. Each node contains a string data value and a pointer. The pointers link the data items in alphabetical order.
\end_layout

\begin_layout Standard
The unused nodes are linked as shown below. The first unused node is the position where the next new data item is to be stored. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P1-Q3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the items MANGO, ORANGE, BANANA and LEMON (added in that order). 
\end_layout

\begin_layout Itemize
the unused nodes linked together. 
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class
\family typewriter
 ListNode
\family default
. The class 
\family typewriter
ListNode
\family default
 has the following properties: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: ListNode
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PointerValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
LinkedList
\family default
. The class 
\family typewriter
LinkedList
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: LinkedList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[30] OF ListNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The linked list data structure ‚Äî data values and pointers.The array index starts at 1.For testing purposes the dataset has a maximum of 30 items.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the node at the start of the linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the next unused node 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Initialise
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sets all the node data values to 
\begin_inset Quotes els
\end_inset

empty string
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
Set pointers to indicate all nodes are unused and linked.
\end_layout

\begin_layout Standard
lnitialise values for 
\family typewriter
Start
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AddNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add a new data item to the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Traversal
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the data items in order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ReverseTraversal
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the data items in reverse order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayLinkedList
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current state of pointers and the array contents.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tests for empty linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tests for no unused nodes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code that repeatedly: 
\end_layout

\begin_layout Itemize
displays a menu with the following choices: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Add an item 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Traverse the linked list of used nodes and output the data values 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Output all pointers and data values 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset

Exit 
\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure depending on the user's choice. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Program code for Task 3.1.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 including the 
\family typewriter
IsEmpty
\family default
 method. The code should follow the specification given.
\end_layout

\begin_layout Standard
Do not attempt to write the methods 
\family typewriter
AddNode
\family default
, 
\family typewriter
Traversal
\family default
, 
\family typewriter
ReverseTraversal
\family default
 or 
\family typewriter
IsFull
\family default
 at this stage.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes (Task 3.2).
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program.
\end_layout

\begin_layout Standard
Run the program and select menu choice 3 to confirm the initial values of the pointers and data values when the linked list is empty. [10]
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
 object (Task 3.3).
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Consider the 
\family typewriter
AddNode
\family default
 method. The following algorithm will add a new data item to the linked list.
\end_layout

\begin_layout Standard
The algorithm uses the variables below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NewItem
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New data item input by the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Found
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Flags to 
\family typewriter
TRUE
\family default
 when the position at which to insert the new item has been found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Current array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Previous
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Previous array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Temp
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temporary storage of pointer value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddNode 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

INPUT NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Node[NextFree].DataValue <‚Äî NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Start = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Start <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <‚Äî Node[NextFree].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the list - starting at Start to find 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// the position at which to insert the new item 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <‚Äî Node[NextFree].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem < Node[Start].DataValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// new item will become the start of the list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Start <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// the new item is not at the start of the list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current <‚Äî Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <‚Äî False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem <= Node[Current].DataValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Previous].PointerValue <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <‚Äî True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move on to the next node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous <‚Äî Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current <‚Äî Node[Current].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL Found = True OR Current = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Current <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Previous].PointerValue <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\begin_layout Plain Layout
Note: The above pseudocode is available in the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write code to implement for the 
\family typewriter
LinkedList
\family default
 class: 
\end_layout

\begin_layout Itemize
the 
\family typewriter
AddNode
\family default
 method 
\end_layout

\begin_layout Itemize
the 
\family typewriter
IsFull
\family default
 method. 
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The main program should check each time that the 
\family typewriter
LinkedList
\family default
 object is not full before using the 
\family typewriter
AddNode
\family default
 method.
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard
MANGO, ORANGE. BANANA. LEMON in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 3 to display. 
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Program code for method 
\family typewriter
AddNode
\family default
. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Screenshot showing the pointers and the addition of the four nodes to the linked list.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write program code to implement the 
\family typewriter
LinkedList
\family default
 class method 
\family typewriter
Traversal
\family default
 by calling the 
\family typewriter
TraversalInOrder
\family default
 procedure given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE TraversalInOrder(Index)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Index <> 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT Node[lndex].DataValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// follow the pointer to the next data item in the linked list
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TraversalInOrder(Node[Index].PointerValue)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPRCCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Program code for procedures 
\family typewriter
Traversal
\family default
 and 
\family typewriter
TraversalInOrder
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 3.6
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard
MANGO, ORANGE, BANANA. LEMON in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 2 to display. 
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Screenshot showing the program execution to test the 
\family typewriter
Traversal
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 3.7
\end_layout

\begin_layout Standard
Make a copy of the 
\family typewriter
TraversalInOrder
\family default
 and 
\family typewriter
Traversal
\family default
 procedures.
\end_layout

\begin_layout Standard
Paste to form two new procedures 
\family typewriter
TraversalInReverseOrder
\family default
 and 
\family typewriter
ReverseTraversal
\family default
.
\end_layout

\begin_layout Standard
Make the necessary changes/additions to these procedures in order that the data items are output in reverse order by calling the new method 
\family typewriter
ReverseTraversal
\family default
.
\end_layout

\begin_layout Standard
Run the program code from a new menu choice 4.
\end_layout

\begin_layout Standard
Test the method using the four items given in Task 3.6.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code for the new procedures. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Screenshot showing option 4 selected and the resulting output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Design and code a computer program to simulate the following:
\end_layout

\begin_layout Standard
A garden has a rectangular fish pond measuring 15 metres by 8 metres.
\end_layout

\begin_layout Standard
The pond is to be represented on the screen by a rectangular grid. Each square metre of the pond is represented by an x-coordinate and a y-coordinate. The top left square metre of the pond display has x = 1 and y = 1.
\end_layout

\begin_layout Standard
A boy throws a stone into the pond. The user will input the x-coordinate and y-coordlnate of the stone impact position.
\end_layout

\begin_layout Standard
A grid representing the pond is then displayed with the stone's impact position:
\end_layout

\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 9 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 3 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . S . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
The following are the suggested characters to use for the visual representation of the pond: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
46 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
83 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone impact position
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Decide on the design to be used for: 
\end_layout

\begin_layout Itemize
The data structure to represent the grid 
\end_layout

\begin_layout Itemize
The contents of each square metre of the pond 
\end_layout

\begin_layout Itemize
Procedure(s) and/or function(s)s to be used 
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Show your program design (Task 4.1). 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to display the pond contents after a single stone has been thrown.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshot for a single run of the program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
The boy has been told to stop throwing stones into the pond because the pond now has three fish. The fish randomly swim around. Each fish will occupy a unique grid position.
\end_layout

\begin_layout Standard
Using a random number generator, simulate the positioning of the three fish.
\end_layout

\begin_layout Standard
Use the following character for a fish: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code to show the pond containing the three fish at a particular instance of time. The program will now only display the pond and fish.
\end_layout

\begin_layout Subsubsection*
Evidence 20
\end_layout

\begin_layout Standard
The program code for Task 4.3. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 21
\end_layout

\begin_layout Standard
Screenshot for a single run of the program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
The boy has been asked to feed the fish. He cannot see the fish in the pond. He throws a food pellet into the pond which lands inside one of the square metres. If one of the fish is in this square. it eats the food and becomes a happy fish.
\end_layout

\begin_layout Standard
Use character symbols for the pond
\begin_inset Quotes els
\end_inset

s grid display as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
46 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
80 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pellet (if not eaten by one of the fish)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
72 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Happy (fed) fish
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code to simulate the boy throwing one food pellet into the pond. The user will input an x-coordinate and y-coordinate for the food pellet position. You should consider the possible reuse of any code from Tasks 4.2 and 4.3.
\end_layout

\begin_layout Subsubsection*
Evidence 22
\end_layout

\begin_layout Standard
The program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 23
\end_layout

\begin_layout Standard
Screenshotevldence similar to that shown which shows: 
\end_layout

\begin_layout Itemize
one throw which did not feed a fish
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 2 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 5 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . F . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. P . . . . . . . . F . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . F . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
a second throw where a fish was fed
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 1 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 5 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . F
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
H . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . F . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A supermarket chain wants to encourage customers to return to its store. They operate a scheme of rewards for customers based on how much they spend over a period of time.
\end_layout

\begin_layout Standard
Customers are issued with a card that is readable by a Point of Sale (POS) terminal. When a customer provides their card at the checkout, the system identifies them and stores the products they purchased and how much they spent.
\end_layout

\begin_layout Standard
Currently the only use of this data is to issue the customer with vouchers every three months. Vouchers have a value based on the total amount the customer has spent during the previous three months. The vouchers can only be used in part payment for goods bought in the supermarket.
\end_layout

\begin_layout Standard
The supermarket managers want to make more use of the customer purchase data. They hire a software development company to produce software that will implement new uses of the data.
\end_layout

\begin_layout Standard
Software developers have skills in developing software. The supermarket managers have in depth knowledge of their business. At first, software developers will have little knowledge of the business. 
\end_layout

\begin_layout Enumerate
Explain how the supermarket managers can communicate to the software developers what they require. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Before designing the new software, the software developers need to understand the content and structure of the customer purchase data. Give two methods that can be used for this task, justifying the use of each. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Once the analysis phase has been completed, describe what decisions software developers need to make before coding can begin. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard
The work to implement new uses of the customer data needs to be managed. The following Program Evaluation and Review Technique (PERT) chart is used as a management tool.
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P2-Q1.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Each activity indicated by a dashed line on the PERT chart is a dummy activity. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the nature and purpose of a dummy activity.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Each of the following activities matches one of the labels A-H on the chart. 
\end_layout

\begin_deeper
\begin_layout Itemize
write user documentation 
\end_layout

\begin_layout Itemize
train users 
\end_layout

\begin_layout Itemize
write code 
\end_layout

\begin_layout Itemize
convert files 
\end_layout

\begin_layout Itemize
test code 
\end_layout

\begin_layout Itemize
end-user testing 
\end_layout

\begin_layout Itemize
test system 
\end_layout

\begin_layout Itemize
install new hardware 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Copy and complete the following table, 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="50col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the significance of the dummy activity that leads into event 8. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

From the PERT chart: 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the new software can be developed and implemented.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
The chart omits an activity: 
\series bold
write technical documentation
\series default
. State a starting point and a finishing point for this activity. Justify your choices. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard
Management staff can already access the company network remotely for other software applications. Management are to be given the facility to access, and interact with, the customer data Via the company LAN. However, a decision is made not to allow access to the customer data remotely for this updated system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 methods which can be used to ensure that there is no remote access to customer data by management staff. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
ln the new system, customers will have access to information through a web browser. Each customer will be able to see some information about their purchase history. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Explain what software needs to be developed to provide this customer facility. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

One of the software developers has the task of ensuring that social issues are considered. This developer has to document these issues.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 issues that might be in the document with regard to customers accessing their data. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Consider the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P2-Q2.png
	width 35page%

\end_inset

 
\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for a post-order traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for an inorder traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What property is exhibited by the list of items produced in 
\series bold
part (b)
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe an algorithm, using pseudocode, to perform a binary tree search. The output should state whether or not the item is present in the tree. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A network manager for a sales company types the following into his computer:
\end_layout

\begin_layout Standard

\family typewriter
copy C:
\backslash
monthlysales
\backslash
*.dat E
\backslash
:
\backslash
backup
\backslash
junesales /V
\family default
 
\end_layout

\begin_layout Enumerate
State the type of user interface being used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe, using the example, two benefits of the user interface named in 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
The network manager has a disabled user who cannot use a keyboard but can control a point-and-click device that moves a pointer on the screen. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe a user interface that would allow this user to enter text into a word processor. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The sales company provides a special user interface for this user. State
\series bold
 two
\series default
 benefits to the company. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A small local area network (LAN) in a school consists of one switch, one file server and ten computers. 
\end_layout

\begin_layout Enumerate
Explain why circuit switching could be used in this LAN. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The network has a connection to the lnternet added. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain how packet switching is used when a web page is downloaded from the Internet. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
A packet from the web server consists of 256 bytes. One of the bytes is the checksum byte. In each byte one bit is the parity bit. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

If the byte 0 0 1 1 0 1 0 1 results in a parity error, state the type of parity being used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The receiving computer uses the checksum byte to check whether the packet contains an error. Explain how it does this.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A software developer is given the task of producing software for a college. The software will help to manage information about what students do after finishing at the college.
\end_layout

\begin_layout Standard
The destination of each student after college is classified in one of three possible ways: 
\end_layout

\begin_layout Itemize
University 
\end_layout

\begin_layout Itemize
Employment 
\end_layout

\begin_layout Itemize
Other 
\end_layout

\begin_layout Standard
The college wishes to store: 
\end_layout

\begin_layout Itemize
name 
\end_layout

\begin_layout Itemize
number of A Level passes 
\end_layout

\begin_layout Itemize
destination (U / E / O) 
\end_layout

\begin_layout Itemize
university attended 
\end_layout

\begin_layout Itemize
main subject studied at university 
\end_layout

\begin_layout Itemize
type of employment 
\end_layout

\begin_layout Itemize
what students do when their destination is classified as 'O' 
\end_layout

\begin_layout Standard
The software developer will use an objectoriented approach to developing a solution. 
\end_layout

\begin_layout Enumerate
Draw a class diagram which exhibits the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
suitable classes with appropriate properties and methods 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
polymorphism 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how your solution to (a) demonstrates software reuse.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The data on the students is to be stored in a serial text file called STUDENT.DAT. Each line of the file has the same structure:
\end_layout

\begin_layout Standard

\family typewriter
<Name><NoOfPasses><Destination><University><MainSubject><EmpType><Other>
\family default

\end_layout

\begin_layout Standard
with the string NULL stored where appropriate. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write an algorithm, in pseudocode, to read data from 
\family typewriter
STUDENT.DAT
\family default
 and to output the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
total number of students going to university 
\end_layout

\begin_layout Itemize
average number of passes for the students going to university e total number of students
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A function is to be written that returns the sum of all values held in an array that are greater than a minimum value. The function will be used with arrays of varying size, but never more than a maximum of 50 000 elements.
\end_layout

\begin_layout Standard
A first attempt at writing the program code for the function is given below:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION TotalSum(Results : ARRAY[50000] OF REAL, ArraySize : INTEGER, MinValue : REAL) RETURNS REAL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

DECLARE Sum, Counter : INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

DECLARE Temp : Real 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Sum = 0.0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR Counter = 1 TOO ArraySize 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp = Results[Counter] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Temp > MinValue THEN Sum = Sum * Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDEOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

RETURN Sum 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The function is included in a program specifically written to test the function. The main program outputs the value returned by the function. A compiler was used to compile the source program. 
\end_layout

\begin_layout Enumerate
The compiler reported an error at line 5 in the function. Identify the error and explain why it was flagged as a syntax error. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The compiler also reported an error at line 8. State the type of error reported by the compiler justifying your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The errors indicated in 
\series bold
parts (a)
\series default
 and 
\series bold
(b)
\series default
 were corrected. A successful compilation produces executable code. When the code was executed, the program failed to complete and reports an error at line 7. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the type of error that occurred. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The error described in 
\series bold
part (c) (i)
\series default
 depends on the detection of another type of error. Name this other type of error. How should the code be changed to correct this error?
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
When the program finally runs without error, the test plan needs to be completed. The test plan uses data that tests different sizes of array, different array values and different minimum values.
\end_layout

\begin_layout Standard
The array 
\family typewriter
TempArray
\family default
 is used in the main program as the array to be processed.
\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Each element of 
\family typewriter
TempArray
\family default
 stores a random value between 1.0 and 10.0. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 1000, 5.0)
\family default

\end_layout

\begin_layout Standard
is not an appropriate black box test. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 10, 10.5)
\family default

\end_layout

\begin_layout Standard
is not an appropriate white box test. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

if each element of 
\family typewriter
TempArray
\family default
 stores the value 1.0, state a function call that will be an appropriate black box test. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Pioneer Generation Joint Committee (PGJC) is a diverse taskforce set up to manage and promote information about the Pioneer Generation Package (PGP) to honour and thank pioneers for their hard work and dedication to make Singapore what it is today. The PGP will benefit about 450,000 Singaporeans.
\end_layout

\begin_layout Standard
Beyond the conventional means of raising awareness of PGP via mainstream media (newspapers and television broadcast), PGJC also desires to enhance its outreach using the Internet, new media (e.g. social networks) and mobile applications. 
\end_layout

\begin_layout Enumerate
Give two advantages of using the latter modes of outreach compared to traditional mass media. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A significant challenge of using non-conventional outreach methods is that while the Internet and mobile devices are becoming increasingly ubiquitous, many user interfaces are often not well suited to the elderly's specific needs.
\end_layout

\begin_deeper
\begin_layout Standard
Design and justify an appropriate user interface for a pioneer to enter information to file for hospitalisation claim on an insurance company's website using a desktop or laptop computer. The information required are: NRIC, hospital name, from and to dates of hospitalisation, invoice number, invoice amount and brief description of reason for hospitalisation. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give two factors developers would need to consider to adapt the user interface for a mobile device such as a smartphone. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The development of the PGP mobile application will involve the following phases: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Phase 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration(mandays) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Preceding Phase
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Adapt contents for smaller form factors 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepare development environment 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purchase developer license (include approval time) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Develop and test for Android 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Develop and test for iOS 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Publish to Google Play 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Publish to App Store 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Promotion and marketing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F, G
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Construct a PERT chart for this project.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State the critical path and the total time required for the project.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
There is also a need to maintain documentation for the project. Why is documentation important? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Construct a Gantt chart to include and justify a documentation phase of a reasonable duration.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard
The following screenshot shows the user interface where a pioneer can verify his/her eligibility. 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

The code below the NRIC field shows a randomly generated string. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the purpose of this code. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Outline an algorithm to generate another random string when the refresh button is clicked.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Using examples from the above user interface, explain the following concepts: 
\end_layout

\begin_deeper
\begin_layout Enumerate
(i) validation and verification 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
(ii) client-side and server-side scripting 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Information is transmitted to the server using the https protocol. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the significance of this protocol.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe how information is typically transmitted between a client and a server. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following invoice shows the medical bill incurred by a pioneer in a polyclinic. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2014-P1-Q1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
A normalised database solution is to be designed, which has a number of tables. 
\end_layout

\begin_layout Enumerate
Derive the normalised process from the unnormalised form (UNF) to the third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram that shows these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Using suitable examples, explain the concepts of 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
composite key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
To enhance the security of online transactions, a one-time randomly generated 5-digit Personal Identification Number (PIN) will be sent to the user's registered mobile phone number as part of the authentication process. The security algorithm, 
\family typewriter
Secret()
\family default
, makes use of the sum of squares of the prime factors of the rightmost 5 digits of the user's mobile number modulo 
\begin_inset Formula $k$
\end_inset

, where 
\begin_inset Formula $k$
\end_inset

 is a randomly generated prime in the range 100000 ‚Äì 999999.
\end_layout

\begin_layout Standard
As an illustration, consider the mobile phone number 87654321 (
\begin_inset Formula $n=54321$
\end_inset

):
\end_layout

\begin_layout Standard
Sum of squares of prime factors of 
\begin_inset Formula $n=3^{2}+19^{2}+953^{2}=908579$
\end_inset


\end_layout

\begin_layout Standard
PIN = 908579 modulo 
\begin_inset Formula $k$
\end_inset

 (let's say 
\begin_inset Formula $k=102077$
\end_inset

) = 91963
\end_layout

\begin_layout Standard
So a one-time 5-digit PIN 91963 will be sent to the mobile number 87654321.
\end_layout

\begin_layout Standard
The algorithm for finding the prime factors of a number n is detailed recursively as follows: 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $n$
\end_inset

 is even, one factor is 2, then find the prime factors of n/2. 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $n$
\end_inset

 is divisible by 3, remove this factor and then find the prime factors of the remainder. 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $n$
\end_inset

 is divisible by 5, remove this factor and then find the prime factors of the remainder. 
\end_layout

\begin_layout Itemize
If 
\begin_inset Formula $n$
\end_inset

 is divisible by 7, remove this factor and then find the prime factors of the remainder. 
\end_layout

\begin_layout Itemize
... 
\end_layout

\begin_layout Standard
You may assume the availability of a random function 
\family typewriter
Random()
\family default
 but should indicate how it is used. 
\end_layout

\begin_layout Enumerate
Identify, giving examples, any pitfall(s) with your 
\family typewriter
Secret()
\family default
 algorithm, and suggest possible solution(s) to overcome them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Devise, incorporating your answer to (a), an efficient means of generating a PIN using 
\family typewriter
Secret()
\family default
. Your function should include a recursive algorithm for finding the prime factors of n. State explicitly any necessary assumption(s) made. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Leveraging on technology, PGJC intends to connect all pioneers using a social network to help foster a greater sense of community, promote active aging and bridge the digital divide. 
\end_layout

\begin_layout Enumerate
What is a social network? Suggest two appropriate applications in this context compared to traditional face-to-face interaction and online communication means such as email and instant messaging.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Give two benefits and one concern of hosting the social network using cloud computing.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Using appropriate examples, explain why the Object-Oriented Programming (OOP) paradigm is well suited to implement the features of a social network. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Pioneers who are eligible for the PGP must meet the following conditions: 
\end_layout

\begin_layout Itemize
still alive 
\end_layout

\begin_layout Itemize
Aged 16 and above in 1965 
\end_layout

\begin_layout Itemize
obtained citizenship on or before 31 December 1986 
\end_layout

\begin_layout Standard
Eligible pioneers enjoy the following benefits: 
\end_layout

\begin_layout Itemize
additional outpatient care subsidies 
\end_layout

\begin_layout Itemize
Medisave account top-ups 
\end_layout

\begin_layout Itemize
Medishield Life insurance subsidies and top-ups 
\end_layout

\begin_layout Standard
A panel will assess appeals for individuals who may have marginally missed out on the PGP on a case-by-case basis. Citizens aged 55 and above this year who do not qualify for the PGP will receive Medisave account quantum top-ups for five years. 
\end_layout

\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Draw a program flowchart to determine if an individual is eligible for the PGP and if not, if they qualify for an appeal or will receive five-year quantum top-ups. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Give 3 examples of test cases to test the age criteria for your algorithm in (c). 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Given the date of birth in DD/MM/YYYY, write pseudocode to determine if an individual is aged 16 and above in 1965. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2014/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
While English is the official working language in Singapore, beneficiaries of the PGP are elderly and a significant segment of them do not speak or understand English. As a multi-racial society, the pioneer generation also consists of Chinese, Malays and Indians. 
\end_layout

\begin_layout Enumerate
What is Unicode and why is it an appropriate representation for PGP information compared to ASCII? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Give two disadvantages of using Unicode in this context. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Mailing information of the pioneers is currently held in a sequential file in NRIC order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<NRIC><Statutory name><Address line><Postal code> 
\family default
 
\end_layout

\begin_layout Standard
Postal code is a 6-digit string representing the geographic location of an address. To mail the PGP information to the pioneers efficiently, three methods are proposed: 
\end_layout

\begin_layout Itemize
M1 - Sort the contents of the sequential file using quick sort on the postal code field. 
\end_layout

\begin_layout Itemize
M2 - Reorganise the contents of the sequential file to a linked list of linked lists in ascending postal code order. Each node of the linked list points to a linked list of addresses with the same postal code. 
\end_layout

\begin_layout Itemize
M3 - Reorganize the contents of the sequential file to a binary search tree using postal code as the key field. Each node in the binary search tree points to a linked list of addresses with the same postal code. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Why is quick sort appropriate or inappropriate for method M1? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Draw diagrams to represent the scenario in 
\end_layout

\begin_deeper
\begin_layout Enumerate
method M2 using linked list 
\end_layout

\begin_layout Enumerate
method M3 using binary tree 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Your diagrams should contain at least 3 nodes for each scenario. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Write an algorithm to insert a new entry to the linked list in method M2, assuming a successful appeal. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Write an algorithm to delete an entry from the binary search tree in method M3, assuming the demise of a pioneer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to process daily high scores recorded from an online game. The program can be run every day.
\end_layout

\begin_layout Standard
All scores are integers in the range 1 to 500.
\end_layout

\begin_layout Standard
The program reads from file 
\family typewriter
HIGHEST.txt
\family default
 the current highest score and player name from running the program on previous days.
\end_layout

\begin_layout Standard
The program specification is to: 
\end_layout

\begin_layout Itemize
input up to 5 player names and their corresponding scores for today 
\end_layout

\begin_layout Itemize
calculate and display on screen: 
\end_layout

\begin_deeper
\begin_layout Itemize
the highest score with the player name for today 
\end_layout

\begin_layout Itemize
a message saying whether or not the highest score today beat the current highest score 
\end_layout

\end_deeper
\begin_layout Itemize
update the file 
\family typewriter
HIGHEST.txt
\family default
 if a higher score was input today. 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for this task.
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Draw up a set of test data which tests the functioning of your program. Consider carefully all cases which could occur for both the scores input and the two processing requirements.
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
A 
\series bold

\emph on
palindrome
\emph default

\series default
 is an integer that reads the same backwards and forwards -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- so 6, 11 and 121 are all palindromes, while 10, 12, 223 and 2244 are not (even though 010=10, we don't consider leading zeroes when determining whether a number is a palindrome).
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write program code with the following specification: 
\end_layout

\begin_layout Itemize
input two integers -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- the endpoints of an interval e.g. 
\family typewriter
10 120 
\family default
 
\end_layout

\begin_layout Itemize
output the number of integers that are palindromes in the interval. 
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Produce two screenshots showing the output of 1 4 and 10 120 by the user.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following is a pseudocode algorithm for the quick sort function.
\end_layout

\begin_layout Standard
The function takes in an array and returns a sorted array in 
\series bold
ascending
\series default
 order. The algorithm works for most input but is missing out on a few edge cases.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION quicksort(array) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if array length = 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return array 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

select and remove a pivot value from array 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

create empty subarrays less and greater 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for each item in array
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if item < pivot 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

append item to less 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

append item to greater
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return quicksort(less) + pivot + quicksort(greater) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for this algorithm including all the amendments you would make to: 
\end_layout

\begin_layout Itemize
make the function work for all cases 
\end_layout

\begin_layout Itemize
adhere to good programming style 
\end_layout

\begin_layout Standard
Use the 
\family typewriter
Team
\family default
 array sample data available from text file 
\family typewriter
SPORT+NAME+TEAM.txt
\family default
 and paste this into your program code.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
One screenshot showing the output from running the program code for array Team.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
The following is a pseudocode algorithm of a binary search written by a student to search for an item in an array Sport. This array stores string data arranged in ascending order and has a final subscript MAX.
\end_layout

\begin_layout Standard
The algorithm is poorly designed and also contains errors.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Enter k 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
A = 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
B = MAX 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
While not found 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

C = (A+B) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

If Sport(C) = k 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Print 
\begin_inset Quotes eld
\end_inset

Found
\begin_inset Quotes erd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Else If Sport(C) < k 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

B = C-1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Else 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

A = C+1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

End-If-Else 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
End-While 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code for this algorithm including all the changes you would make to: 
\end_layout

\begin_layout Itemize
follow good programming practice 
\end_layout

\begin_layout Itemize
make the algorithm work properly 
\end_layout

\begin_layout Standard
Use the sample array data available from text file 
\family typewriter
SPORT+NAME+TEAM.txt
\family default
 and paste this into your programming code.
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
The binary search code could be useful for many programs where a search routine is required.
\end_layout

\begin_layout Standard
Re-design the program code to have a procedure 
\family typewriter
BinarySearch
\family default
. This procedure should have parameters which allow it to be used for 
\bar under
any
\bar default
 sorted array of string data.
\end_layout

\begin_layout Standard
Use the data provided in the array 
\family typewriter
Name
\family default
 from text file 
\family typewriter
SPORT+NAME+TEAM.txt
\family default
 and test the procedure with appropriate test cases to ensure it is working properly.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your amended program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
A screenshot for each appropriate test case. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Morse Code is a type of code in which letters are represented by combinations by long or short signals, e.g. the letter 
\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset

 is represented by a short followed by a long signal, i.e. 
\begin_inset Quotes els
\end_inset

.-
\begin_inset Quotes els
\end_inset


\end_layout

\begin_layout Standard
Here we use the period (
\begin_inset Quotes els
\end_inset

.
\begin_inset Quotes ers
\end_inset

) to represent the short signal and the dash (
\begin_inset Quotes els
\end_inset

-
\begin_inset Quotes els
\end_inset

) to present the long signal. The Morse code equivalent for the letters 
\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset

 to 
\begin_inset Quotes els
\end_inset

Z
\begin_inset Quotes ers
\end_inset

 is provided in the file 
\family typewriter
MORSE.txt
\family default
. In this implementation, we use a space (
\begin_inset Quotes els
\end_inset

 
\begin_inset Quotes els
\end_inset

) to simulate the inter-character gap and the slash (
\begin_inset Quotes els
\end_inset

/
\begin_inset Quotes ers
\end_inset

) to represent the inter-word gap.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write the program code for a function that will convert a given word into its Morse Code equivalent using the following specification. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION ConvertWord(SingleWord : STRING): STRING 
\family default
 
\end_layout

\begin_layout Standard
The function has a single parameter 
\family typewriter
SingleWord
\family default
 and returns the Morse Code equivalent for that word as a string.
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
ConvertWord
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
A screenshot showing the correct Morse Code equivalent for the word 
\begin_inset Quotes eld
\end_inset

COMPUTING
\begin_inset Quotes erd
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write the program code that does the following: 
\end_layout

\begin_layout Itemize
the user inputs a sentence of words not exceeding 5 words. 
\end_layout

\begin_layout Itemize
uses the function 
\family typewriter
ConvertWord
\family default
 in Task 3.1 
\end_layout

\begin_layout Itemize
outputs the Morse Code equivalent of the sentence of words that was entered. 
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Draw up 
\series bold
two
\series default
 suitable tests to assess that your program is working properly, explaining the reason for each test and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write the program code that will do the following: the user enters a word string in Morse Code the program converts the Morse Code word to its alphabetical equivalent outputs the converted word.
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
A screenshot showing the correct word equivalent for the following Morse Code string, 
\begin_inset Quotes eld
\end_inset

‚Ä¶ 
\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\family default
 ‚Ä¶
\begin_inset Quotes erd
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Many programming languages use a variety of brackets eg 
\family typewriter
()
\family default
, 
\family typewriter
{}
\family default
 and 
\family typewriter
[]
\family default
 in their program statement constructs. Brackets can be nested e.g. (()) and {[]}. A well-formed construct must contain a matched set of optionally nested brackets e.g.
\family typewriter
 (())
\family default
, 
\family typewriter
{[]}
\family default
 and 
\family typewriter
(){}[]
\family default
 are well-formed whereas
\family typewriter
 (()
\family default
,
\family typewriter
 {] 
\family default
and
\family typewriter
 )( 
\family default
are not.
\end_layout

\begin_layout Standard
An efficient way to check if a program construct is well-formed is to use a stack to scan the brackets once from left to right as follows:
\end_layout

\begin_layout Standard
Start from an empty stack. Whenever we encounter an open bracket, push it into the stack. Whenever we encounter a close bracket, we check if it is of the same type with the item at the top of the stack. Once we have a match, we pop the topmost bracket from the stack. Only when we managed to read the last bracket and find that the stack is empty, then we know that the brackets are properly nested, and the program construct is well-formed.
\end_layout

\begin_layout Standard
The stack ADT contains character data and a top pointer, and has the following operations: 
\end_layout

\begin_layout Itemize

\family typewriter
Create()
\family default
 : initializes a new stack 
\end_layout

\begin_layout Itemize

\family typewriter
Push(item)
\family default
 : add item to top of stack 
\end_layout

\begin_layout Itemize

\family typewriter
Pop()
\family default
 : remove item from top of stack 
\end_layout

\begin_layout Itemize

\family typewriter
Peep()
\family default
 : inspect the topmost item of stack 
\end_layout

\begin_layout Itemize

\family typewriter
isEmpty()
\family default
 : check if stack is empty 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Using object-oriented programming techniques, implement the stack ADT using the class name 
\family typewriter
Stack
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
Stack
\family default
 class program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
CheckNested(construct)
\family default
 which accepts a string program construct of nested brackets and returns a Boolean result indicating if construct is well-formed.
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CheckNested
\family default
 function code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Test your 
\family typewriter
CheckNested
\family default
 function using the data file provided in 
\family typewriter
DATA.txt
\family default
. If a construct is not well-formed, append it to a text file 
\family typewriter
ERRORS.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Screenshot of 
\family typewriter
ERRORS.txt
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 4.4
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
CheckWellformed(construct)
\family default
 which contains a modified and enhanced version of 
\family typewriter
CheckNested(construct)
\family default
. When a first mismatch of bracket occurs, output the diagnostic message 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Expecting '?'
\begin_inset Quotes qrd
\end_inset


\family default
, where ? is the type of bracket expected. For example, for the construct 
\family typewriter
())
\family default
, output the diagnostic message 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Expecting '('
\begin_inset Quotes qrd
\end_inset


\family default
.
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CheckWellformed
\family default
 function code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.5
\end_layout

\begin_layout Standard
Test your 
\family typewriter
CheckWellformed
\family default
 function using 
\family typewriter
ERRORS.txt
\family default
. Display the diagnostic messages to screen.
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Screenshot of diagnostic messages on screen. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Hwa Chong has partnered with Q&M to set up a dental clinic in the Campus. The clinic will have a few dentists to serve the student population. The clinic will also have an on-line system for students to make appointment with dentist. You are task to design the on-line system to handle all student appointments. 
\end_layout

\begin_layout Enumerate
Draw an entity-relationship diagram for the appointment system. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate
Convert the entity-relationship diagram into a relational database schema. You may use shorthand notation to put across your answers. Be certain to indicate the key fields. Your solution should include a brief description for each table. 
\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\begin_layout Enumerate
Ensuring data integrity and security is an important issue in data design. Explain why they are important for HC Dental system. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The school plans to extent the dental service to other users after the first year. Modify the entity relationship diagram to cater to the teachers and staff too. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_deeper
\begin_layout Standard
Besides the data design, the user interface is an important factor in determining the success of the HC dental system. The graphical user interface for students to make an appointment using their desktops/laptops must be intuitive and usable. 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe 3 design principles that will guide you in designing your interfaces. Give specific examples on how you will incorporate it into your user interface design for the HC dental system. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Design the user-interfaces for the following features 
\end_layout

\begin_deeper
\begin_layout Enumerate
On-line appointment booking 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Updating of students particulars 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Part of the future enhancement of the system is to allow a multimodal interaction between the user and the system. A multimodal human-computer interaction usually involves the 5 human senses and enables a more free and natural communication. Suggest 2 realistic possibilities for such an enhancement. Your suggestions should include a brief description of how it works in this context.
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_deeper
\begin_layout Standard
HC Dental system will reside in the school server and will allow access beyond the school intranet. Mr Huang, the network administrator has allocated an IP address 192.168.123.132 with a subnet mask 255.255.0.0 to access this system. 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
IP address 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Subnet mask 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Based on the information given, what is the network address? Show the workings. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_deeper
\begin_layout Standard
The management team is concern with the accuracy of data transmitted/received outside the school network. To ensure the team that they have looked into this area, the development team highlighted that they have use parity checks and checksums in detecting errors 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain parity checks and give an example to illustrate how it works. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_deeper
\begin_layout Standard
The network administrator highlighted that there are proxy and firewalls settings for devices accessing the school network. 
\end_layout

\end_deeper
\begin_layout Enumerate
What is the purpose of a proxy server in the Network? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P2/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The Retail Company has engaged a software house to computerize its operations. The project has been defined to contain the following list of activities along with their required times for completion: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration (Working Days) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Predecessor/s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Requirement Analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Systems Design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programming 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
telecoms 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hardware Installation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integration 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C, D
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
System Testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E, F
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Training/Support 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Handover and Go-Live 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Complete the PERT chart below, indicating the earliest start time and latest start time of each activity: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2014-P1-Q2.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State the critical path. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the elapsed time of the project. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State 2 activities not on the critical path, as well as their slack time. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The Gantt chart below is based on the above information. There are three activities missing and three activities shown are incorrect. Draw a sketch of the Gantt chart to show the correct version. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="20">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Weeks
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Activity
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
11
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
13
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
17
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
18
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
19
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
All
\begin_inset Quotes ers
\end_inset

s Well Hospital is in the process of computerizing its clinic processes. At the clinic, there are various doctors specializing in different areas e.g. neuroscience specialists, gynaecologists, etc. All patients of the clinic must be registered in the patient database and make prior appointments to see the relevant doctors. No walk-in patients will be entertained. Appointments are made based on the doctor
\begin_inset Quotes ers
\end_inset

s weekly schedule i.e. different doctors have clinic sessions at different day/time of the week.
\end_layout

\begin_layout Standard
On the day of appointment, patients are to register at the self-registration counter before proceeding to the doctor
\begin_inset Quotes ers
\end_inset

s room. Upon seeing the doctor, the doctor will input the diagnosis into the system. After the doctor
\begin_inset Quotes ers
\end_inset

s consultation, the patient is to proceed to make payment. Upon payment, a prescription slip, reference letter, medical certificate, will be printed as necessary for the patient. In addition, the next appointment may be scheduled, if necessary. 
\end_layout

\begin_layout Enumerate
Use a diagram to show the data flows, processes, data stores and external links in the system. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Enumerate
At the self-registration counter, patients can scan the barcode of their appointment card or NRIC. Alternatively, they can also enter their NRIC number using the keyboard. When the NRIC is entered using the keyboard, it must be validated and verified. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between validation and verification of data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two validation tests that can be performed on the NRIC number entered. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe how the NRIC number entered by the patient can be verified by the system.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
As part of the hospital welfare program, there is a fitness center for staff. To enter the fitness center, staff needs to use a swipe card together with a 4-digit PIN to gain access. Access is only allowed if there are fewer than 50 people already in the fitness center, in order to avoid overcrowding. Access is also restricted to one person per card. If maintenance is being carried out then access is denied and a message is output to a screen asking the staff to return in 1 hour. In order to exit the fitness center, the swipe card is used again. Using appropriate variable names, write in pseudocode, an algorithm to control the entry system to the fitness center.
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A Retail Company has a customer loyalty program that gives a range of discounts. For customers in the loyalty program between 5 to 9 years, they will receive a 5% discount. For 10 or more years, the customer will receive a 10% discount. However, whether a customer is in the loyalty program or not, if the cumulative value of his purchases for this calendar year exceed $1000, he will receive a 15% discount. Note: Aggregation of discounts is not allowed. 
\end_layout

\begin_layout Enumerate
Create a decision table that shows all possible outcomes for the above loyalty program. 
\end_layout

\begin_layout Enumerate
Draw the decision table after redundancies have been removed. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Using your answer in (b), write a function using pseudocode. The function returns: 
\end_layout

\begin_deeper
\begin_layout Itemize
0 to indicate no discount 
\end_layout

\begin_layout Itemize
the percentage discount offered
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2014/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An apartment block in a city consists of a large number of apartments. Each of the residents of the apartments has their information stored in a file.
\end_layout

\begin_layout Standard
The records in the file are to be sorted into alphabetical order of the resident
\begin_inset Quotes ers
\end_inset

s name. 
\end_layout

\begin_layout Enumerate
Using the following list of names as an example, show how the records can be sorted into alphabetical order using an insertion sort. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent
GRA, CHR, DAV, SAR, TOM, KAT 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Residents sometimes make requests for maintenance on their apartments. Each request is given a priority number ranging from 1, for failure of the air conditioning, to 10, for a dripping tap. Each request is stored in a linked list in order of priorities. Jobs with equal priority are stored in order of the date that they have been submitted.
\end_layout

\begin_deeper
\begin_layout Standard
Describe an algorithm to insert a new job into the list. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
At the Commonwealth Games, the timings for the heats of 100m race are recorded in a file 
\family typewriter
RACE.csv
\family default
.
\end_layout

\begin_layout Standard
Each record has the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<runnerID>,<country code>,<name of runner>,<race time> 
\family default
 
\end_layout

\begin_layout Standard
A sample record is: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
2225,SIN,Kang,10.77
\family default
 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to find and output the 
\series bold

\emph on
number of runners
\emph default

\series default
 who recorded a timing of more than 11 seconds, and 
\series bold

\emph on
list these runners
\emph default

\series default
 on the screen along with their full records under this heading: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Runner ID 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Country
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Race Time
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code for task 1.1. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code to display the top 10 runners in order of race time. Runners with the same race time will have the same rank. The fastest runner will be displayed first, under this heading: Runner ID 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Runner ID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Country
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Race Time
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code for task 1.2. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A pseudocode algorithm for a binary search on an array 
\family typewriter
CITY
\family default
 is shown below. This array stores records of city, and its country and population. Array is sorted by name of city. It has an initial subscript 1 and final subscript 
\family typewriter
MAX
\family default
. The algorithm can be improved to make it clearer and more efficient.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Set element_found to false 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Set low_element to 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Set high_element to MAX 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
DOWHILE
\series default

\family default

\family typewriter
 (NOT element_found)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

index = (low_element + high_element)/2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
IF
\series default

\family default

\family typewriter
 CITY(index) = input_value 
\family default

\family typewriter

\series bold
THEN
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Set element_found to true 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
ELSE
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
IF
\series default

\family default

\family typewriter
 input_value <= CITY(index) 
\family default

\family typewriter

\series bold
THEN
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

high_element = index ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
ELSE
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

low_element = index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
ENDIF
\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
ENDIF
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
ENDDO
\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
IF
\series default

\family default

\family typewriter
 element_found = true 
\family default

\family typewriter

\series bold
THEN
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Print index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
ELSE
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Print 
\begin_inset Quotes qld
\end_inset

sorry
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDIF 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for this algorithm and improve on clarity and efficiency. Include the sample array data available by reading from the file 
\family typewriter
CITY.csv
\family default
. If a city is found after searching, display the full record of the city, which includes country and population.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Produce a screenshot of running your program code, by searching for 
\family typewriter

\series bold
Istanbul
\series default

\family default
 and 
\family typewriter

\series bold
Aberdeen
\series default

\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write the binary search algorithm as a recursive function. Using comment lines, explain on your choice of parameters passed into the recursive function and return value, if any.
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Implement a linked list to store names of runners and their best running times in seconds, in ascending order of running time. The runner with the fastest timing is stored at the first node while the runner with the slowest timing is stored at the last node. A linked list of free nodes is also implemented with a maximum size of 20 nodes.
\end_layout

\begin_layout Standard
The program will use a user-defined type 
\family typewriter
Node
\family default
 for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The name of the runner
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Time
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FLOAT
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The best running time of the runner
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
POINTER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer to the next node 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The program will also use another user-defined type 
\family typewriter
LinkedList
\family default
 for each linked list. It contains a 
\family typewriter
first
\family default
 pointer that points to the first node of the linked list and makes use of 
\family typewriter
Node
\family default
 for its nodes.
\end_layout

\begin_layout Standard
The user-defined type LinkedList contains methods as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To display the contents of the linked list in order 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AddFirst 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To add a new node as first node of linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RemoveFirst 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To remove first node of linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AddLast
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To add a new node as last node of linked list 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RemoveLast
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To remove last node of linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Empty
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
To return Boolean True if linked list is empty
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows two linked lists ‚Äì 
\family typewriter
RaceList
\family default
 and 
\family typewriter
FreeList
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
RaceList
\family default
 contains a dataset of four nodes. Each node contains a 
\emph on
name
\emph default
, a 
\emph on
running time
\emph default
, and a 
\emph on
pointer
\emph default
 to the next node.
\end_layout

\begin_layout Standard

\family typewriter
FreeList
\family default
 is a list of free nodes available for 
\family typewriter
RaceList
\family default
 to store data, where the maximum number of nodes is 20. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-PJC-2014-P1-Q3.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to create 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
, and initialise an empty linked 
\family typewriter
RaceList
\family default
, and 
\family typewriter
FreeList
\family default
 of 
\series bold
20
\series default
 nodes. Ensure all identifiers and methods specified above are created.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your program code for task 3.1. 
\begin_inset space \hfill{}

\end_inset

[17]
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Screenshot of running method to display 
\family typewriter
RaceList
\family default
 and 
\family typewriter
FreeList
\family default
 on screen. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write code to implement a method 
\family typewriter
AddInOrder
\family default
 that will add a new node with data into 
\family typewriter
RaceList
\family default
 in ascending order of running time. Node added to 
\family typewriter
RaceList
\family default
 should be taken from 
\family typewriter
FreeList
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Your program code for task 3.2. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Test your program using the following data items input in the order shown and run method to display 
\family typewriter
RaceList
\family default
 and 
\family typewriter
FreeList
\family default
 on screen. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Order of input 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Running Time
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Barry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Gani 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.56
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hong 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.88
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ken 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.32 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Provide screenshot for task 3.3. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write code to implement a method 
\family typewriter
RemoveNode
\family default
 that will remove the node that contains data specified by user to be removed from 
\family typewriter
RaceList
\family default
. Node removed from 
\family typewriter
RaceList
\family default
 should be returned to 
\family typewriter
FreeList
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code for task 3.4. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Test your program by removing 
\family typewriter
Gani
\family default
 from 
\family typewriter
RaceList
\family default
 and run method to display 
\family typewriter
RaceL
\family default
ist and 
\family typewriter
FreeList
\family default
 on screen.
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Provide screenshot for task 3.5. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A message is encrypted and passed between two parties. To decrypt the message, a 
\begin_inset Quotes eld
\end_inset

key
\begin_inset Quotes erd
\end_inset

 is applied. Both the sending and receiving parties hold the key which enables them to encrypt and decrypt the message.
\end_layout

\begin_layout Standard
An approach of cryptography is the simple substitution cipher, a method of encryption by which each letter of a message is substituted with another letter. The receiving party deciphers the text by performing an inverse substitution.
\end_layout

\begin_layout Standard
The substitution system is created by first writing out a 
\emph on
phrase
\emph default
. The key is then derived from the phrase by removing all the repeated letters. The 
\emph on
cipher text
\emph default
 alphabet is then constructed starting with the letters of the 
\emph on
key
\emph default
 and then followed by all the remaining letters in the alphabet.
\end_layout

\begin_layout Standard
Using this system, the phrase 
\begin_inset Quotes qld
\end_inset


\family typewriter
apple
\family default

\begin_inset Quotes qrd
\end_inset

 gives us the key as 
\begin_inset Quotes qld
\end_inset


\family typewriter
APLE
\family default

\begin_inset Quotes qrd
\end_inset

 and the following substitution scheme:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="28">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Plain text alphabet :
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
b 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
c 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
d 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
e 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
f 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
g 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
h 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
i 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
j 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
k 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
l 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
m 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
n 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
o 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
p 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
q 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
r 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
s 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
t 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
u 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
v 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
w 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
x 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
z 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\downarrow$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\downarrow$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\downarrow$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
is substituted by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Cipher text alphabet :
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
P 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
O 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Q 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
R 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
T 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
U 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
W 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Z 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
'a'
\family default
 will be substituted by 
\family typewriter
'A'
\family default
, 
\family typewriter
'b'
\family default
 will be substituted by 
\family typewriter
'P'
\family default
, 
\family typewriter
'c'
\family default
 will be substituted by 
\family typewriter
'L'
\family default
, 
\family typewriter
'd'
\family default
 will be substituted by
\family typewriter
 'E'
\family default
,
\family typewriter
 'e' 
\family default
will be substituted by 
\family typewriter
'B'
\family default
, and so on.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for a function to create cipher text using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION CreateCipher (phrase : STRING) : STRING 
\family default
 
\end_layout

\begin_layout Standard
The function 
\family typewriter
CreateCipher
\family default
 has a single parameter 
\family typewriter
phrase
\family default
 and returns the cipher text alphabet as a string.
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Your program code for task 4.1.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
CreateCipherTest
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
read the phrases from file phrases.txt 
\end_layout

\begin_layout Itemize
create cipher text for each of the phrases 
\end_layout

\begin_layout Itemize
display each phrase and cipher text on the screen as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: apple 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Cipher text: APLEBCDFGHIJKMNOQRSTUVWXYZ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
... ...
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
... ... 
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Your program code for task 4.2.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Screenshot for running task 4.2. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code for a function to decrypt a message using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION Decrypt (enc_message:STRING, cipher:STRING) : STRING 
\family default
 
\end_layout

\begin_layout Standard
The function 
\family typewriter
Decrypt
\family default
 accepts parameters 
\family typewriter
enc_message
\family default
 and 
\family typewriter
cipher
\family default
, and returns the decrypted message as a string. Parameter 
\family typewriter
enc_message
\family default
 is the encrypted message, and parameter 
\family typewriter
cipher
\family default
 is the cipher text alphabet.
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your program code for task 4.3. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
read the phrase and encrypted message from file 
\family typewriter
cipher.txt 
\family default
 
\end_layout

\begin_layout Itemize
cipher text is generated from 
\family typewriter
CreateCipher
\family default
 function 
\end_layout

\begin_layout Itemize
message is decrypted from 
\family typewriter
Decrypt
\family default
 function 
\end_layout

\begin_layout Itemize
display decrypted message on the screen together with the phrase and encrypted message
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: ...
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Encrypted message: ...
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Decrypted message: ...
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Your program code for task 4.4.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Screenshot for running task 4.4. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write program code for a function to encrypt a message using the following specification:
\end_layout

\begin_layout Standard

\family typewriter
FUNCTION Encrypt (message:STRING, cipher:STRING) : STRING
\family default

\end_layout

\begin_layout Standard
The function 
\family typewriter
Encrypt
\family default
 accepts parameters 
\family typewriter
message
\family default
 and 
\family typewriter
phrase
\family default
, and returns the encrypted message as a string. Parameter 
\family typewriter
message
\family default
 is the message to be encrypted while parameter 
\family typewriter
cipher
\family default
 is the cipher text.
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Your program code for task 4.5.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.6 
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
encrypt the message: 
\begin_inset Quotes eld
\end_inset


\family typewriter
do not give up!
\family default

\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
use the phrase: 
\begin_inset Quotes eld
\end_inset


\family typewriter
skyhigh
\family default

\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
generate cipher text from 
\family typewriter
CreateCipher
\family default
 function 
\end_layout

\begin_layout Itemize
message is encrypted using 
\family typewriter
Encrypt
\family default
 function 
\end_layout

\begin_layout Itemize
encrypted message is displayed on screen as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: skyhigh
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Encrypted message: ...
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 21: 
\end_layout

\begin_layout Standard
Your program code for task 4.6. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 22: 
\end_layout

\begin_layout Standard
Screenshot for running task 4.6. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A manual system for producing school student reports works in the following manner: 
\end_layout

\begin_layout Itemize
a subject report is completed for each subject that a student takes by the single teacher teaching that subject; 
\end_layout

\begin_layout Itemize
to help the subject teacher, initially a blank report form is issued to the student for the student to add their details: student NRIC, name, contact phone, teacher and class; 
\end_layout

\begin_layout Itemize
the subject report is completed by the teacher with appropriate comments; 
\end_layout

\begin_layout Itemize
all subject reports for the student are passed to the student's tutor; 
\end_layout

\begin_layout Itemize
the tutor puts all the subject reports together to form the student's report folder; 
\end_layout

\begin_layout Itemize
the tutor adds a tutor's report including attendance data supplied by the school administration attendance records; 
\end_layout

\begin_layout Itemize
each student's report folder is copied; 
\end_layout

\begin_layout Itemize
the copy is filed in the report storage facility for the school; 
\end_layout

\begin_layout Itemize
the report folder is sent to the student's parents. 
\end_layout

\begin_layout Standard
The school has decided to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
A system developer is employed to carry out the task. The first task assigned to the system developer is to write a project proposal. 
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the Problem Statement.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
The proposal is accepted and the main stages of the project have been identified and durations assessed as follows:
\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weeks 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staffing
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
analysis of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Analyst A1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
design of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Analysts A2 and A3 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
development of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programmers P1 and P2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
documentation of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Clerks C1 and C2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
implementation of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programmer P1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
testing of the solution 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programmers P3 and P4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
B and D cannot start until A is completed
\end_layout

\begin_layout Standard
F and C cannot start until B is completed
\end_layout

\begin_layout Standard
E cannot start until C is completed
\end_layout

\begin_layout Standard
The project will end when D, E and F are completed. 
\end_layout

\begin_layout Enumerate
Draw a Program Evaluation and Review Technique (PERT) chart for these 6 project stages (A to F). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Calculate and display on the diagram, with a node layout key, the earliest and latest start and finish times of each task. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the project could be completed. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages. For each type of stage give an example from this chart. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A decision is made that the PERT chart should show more detail with regard to testing. It is proposed that stage F (testing) should be removed from the chart and three new stages added:
\end_layout

\begin_deeper
\begin_layout Standard
L ‚Äì black box testing ‚Äì 2 weeks
\end_layout

\begin_layout Standard
M ‚Äì white box testing ‚Äì 2 weeks
\end_layout

\begin_layout Standard
N ‚Äì beta testing ‚Äì 3 weeks
\end_layout

\begin_layout Standard
Redraw the PERT chart to show the effect of these changes.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a Gantt chart showing all 
\series bold
eight
\series default
 stages and their dependencies, allowing for the resource allocations as indicated above. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
List and explain briefly 
\series bold
TWO
\series default
 advantages and 
\series bold
ONE
\series default
 disadvantage of using a Program Evaluation and Review Technique (PERT) chart for a project plan in comparison with using a Gantt chart. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Identify 
\series bold
FIVE
\series default
 key stages with brief description of the software development life cycle (SDLC). 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
At which stage of the SDLC is top-down analysis used? Explains why it helps in the solution of complex problems. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The attendance data enter into the new system needs to be validated and verified. Explain with examples the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Marek is designing a program for this computerised system. His test strategy includes beta testing and acceptance testing. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe what is meant by beta testing and how it can be used to test Marek
\begin_inset Quotes ers
\end_inset

s program. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe what is meant by acceptance testing and how it can be used to test Marek
\begin_inset Quotes ers
\end_inset

s program. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Teachers spend part of their week working from home. A system analyst will assist in improving their school communication systems. Explain why it is important to define problem accurately. [2] 
\end_layout

\begin_layout Enumerate
Subject teachers and tutors are worried because so much information is being stored about their students on the server of the school. Describe the fears that the teachers may have and explain what the school can do to allay those fears. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
When data is transmitted between devices on a network it is liable to corruption. One way of checking data for corruption is to carry out a check sum. What is check sum? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain another method of checking data to ensure that it has been transmitted without corruption. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
When data is transmitted on a network it can use a number of different transmission modes. State what is meant by each of the following modes of data transmission. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Simplex 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Duplex 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Half-duplex 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is going to write part of the computer system, using an object-oriented programming language, which will store details subject teachers and tutors. All teachers and tutors will be identified by their NRICs.
\end_layout

\begin_layout Standard
Properties identified the subject teachers: 
\end_layout

\begin_layout Itemize
Subject code 
\end_layout

\begin_layout Standard
Properties identified the tutors: 
\end_layout

\begin_layout Itemize
Class name 
\end_layout

\begin_layout Enumerate
Draw a diagram that shows how the properties could be distributed amongst a number of classes. Include in your diagram any inheritance between classes. Also indicate some of the methods that would be required. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
In the context of object-oriented programming explain what is meant by: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation; 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
inheritance;
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
polymorphism. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give two advantages of object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The words COW, BEEF and FORTY have all their letters written in alphabetical order. Here is an algorithm for a function which checks whether all the letters in a word are in alphabetical order.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION IsInOrder(Word) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(Word) = 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FirstChar = First character in Word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RestOfWord = All characters in Word except the first 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF FirstChar > RestOfWord THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN IsInOrder(RestOfWord) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 END FUNCTION
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by recursion using this algorithm as an example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The algorithm is tested with the call 
\family typewriter
IsInOrder(
\begin_inset Quotes qrd
\end_inset

Z
\begin_inset Quotes qrd
\end_inset

)
\family default
. State the value which will be returned. State the lines of the algorithm which will be executed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain what happens if the algorithm is tested with a call 
\family typewriter
IsInOrder(
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

)
\family default
 where the value of the argument is the empty string. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain what happens when the algorithm is tested with the call 
\family typewriter
IsInOrder(
\begin_inset Quotes qrd
\end_inset

APE
\begin_inset Quotes qrd
\end_inset

)
\family default
. You should show each call made, the lines of the algorithm executed and the return value of each call. You may use a diagram.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Character sets are used in computers to perform tasks. 
\end_layout

\begin_layout Enumerate
Explain how a character set is used by a computer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the differences between Unicode and ASCII.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The ASCII representation for character A is 65 (denary). 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the 8-bit binary number of the character E? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What is the hexadecimal representation of the character E? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A bookstore stores details about 
\emph on
book code
\emph default
, 
\emph on
title of book
\emph default
, 
\emph on
author
\emph default
, 
\emph on
unit price
\emph default
, 
\emph on
number in stock
\emph default
 and 
\emph on
type of book
\emph default
 using a computer. The field which stores the number in stock is stored as a one byte binary integer. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why character and floating point representations would not be appropriate for this field. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe a situation which could cause the suggested representation to fail and state how the problem can be overcome.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Pioneer Book Store sells books online and charges for delivery. Its delivery charges for orders less than $200 are as follows: 
\end_layout

\begin_layout Itemize
If the number of items is 3 or less, delivery by next day will be charged at $30, while standard delivery will be charged at $2 per item. 
\end_layout

\begin_layout Itemize
If the number of items is 4 or more, delivery by next day will be charged at $5 per item, while standard delivery is free. 
\end_layout

\begin_layout Standard
For orders more than $200, standard delivery is free for any number of items, while delivery by next day will be charged at $5 per item. 
\end_layout

\begin_layout Enumerate
Draw a decision table showing clearly the different conditions and actions, removing the redundancies.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard
Customers can view a catalogue of books and order from its website. Payment is made by the customer forwarding their credit card details, which are processed immediately. Details of the orders are matched against the stock file to check for availability of items before packing lists are produced and sent to the packing department. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Draw a data flow diagram to explain the flow of data through this system.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard
New customers have to register with the online book store from its website before they can make any orders. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Design a suitable user interface for a new customer to register with the online book store, showing its possible contents in terms of options presented to the user, justifying your design. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q6] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Names of employees are stored in a file. Show how a binary tree can be used to store the employee names: 
\series bold
Johnson
\series default
, 
\series bold
Henry
\series default
, 
\series bold
Larry
\series default
, 
\series bold
Stewart
\series default
, 
\series bold
Alice
\series default
, 
\series bold
Kennedy
\series default
 in alphabetic order.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why problems may arise if 
\series bold
Larry
\series default
 is deleted from the tree and how such problems may be overcome. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe an algorithm for reading the complete set of names, stored in the tree, in alphabetical order.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
As a result of many additions and deletions, the tree has become very unbalanced. For most nodes in the tree, the left and right subtrees are of significantly different sizes. Describe how a new balanced tree may be created. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2014/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Pioneer Dental Group runs a number of clinics and requires its dentists to use forms, such as the ones shown (on the next page), to keep a record of treatments given to patients. Each patient has a number, name, and a category (for example, adult, child, student, senior citizen, etc.). A patient can received many treatments on the same day, but the same treatment is not administered twice on the same day. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
DENTIST RECORD FORM
\series default

\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Number
\series default

\family default

\family typewriter
: P102 
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Name
\series default

\family default

\family typewriter
: Yap Kim Meng 
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Category Number
\series default

\family default

\family typewriter
: 1 
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Category Description
\series default

\family default

\family typewriter
: Adult
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Appointment Date
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Treatment ID
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Treatment Description
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
13-Aug-2013 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T05 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root canal
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
13-Aug-2013
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T03 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Extraction 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
21-Oct-2013 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T03 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Extraction 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
DENTIST RECORD FORM
\series default

\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Number
\series default

\family default

\family typewriter
: P104
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Name
\series default

\family default

\family typewriter
: Christopher Thomas
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Category Number
\series default

\family default

\family typewriter
: 2
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Patient Category Description
\series default

\family default

\family typewriter
: Child 
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Appointment Date
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Treatment ID
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Treatment Description
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
14-Aug-2013
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T01
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Scale and polish
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
14-Aug-2013
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T02
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Fillings
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
02-Sep-2013
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T03
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Extraction
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain why inconsistencies may occur as a result of operations to update and delete records. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Pioneer Dental Group would like to use a relational database to hold these data and needs to normalise the entities. Explain (i) what entities are, [1] (ii) what it means by normalisation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Show using standard notation, the entities in the database after normalisation. For each of the entities, identify the primary key(s). 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
Before using a relational database, the dental group used a series of application programs that perform services for the end-users, such as to produce reports for dentists and for the individual clinics.
\end_layout

\begin_deeper
\begin_layout Standard
Discuss 
\series bold
three
\series default
 disadvantages of this approach. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
ADMISSIONS-DATA.TXT
\family default
 contains the daily total admissions to a theme park over a period of 50 days.
\end_layout

\begin_layout Standard
The task is to read the numbers from the file and display a sorted list.
\end_layout

\begin_layout Standard
You will program two different sort algorithms: 
\end_layout

\begin_layout Enumerate
A bubble sort. 
\end_layout

\begin_layout Enumerate
Either a quick sort or an insertion sort but not both. 
\end_layout

\begin_layout Standard
Task 1.1
\end_layout

\begin_layout Standard
Write code for a procedure to display a menu with the following options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Read file data 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Bubble sort 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Quick sort/ Insertion sort 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4
\end_layout

\end_inset

End Task 
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Write the program code for a procedure to implement menu option 1.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Itemize
The program code for the menu. 
\end_layout

\begin_layout Itemize
Program code for menu option 1. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
Options 2 and 3 will sort and display the sorted data. The algorithm for a bubble sort is given in file 
\family typewriter
BUBBLE.TXT
\family default
.
\end_layout

\begin_layout Standard
Write program code as a procedure to implement the bubble sort.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Itemize
The bubble sort code procedure. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
Write program code as a procedure to implement the quick sort or the insertion sort.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Itemize
Indicate the sort method used. 
\end_layout

\begin_layout Itemize
The program for the sort method used. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Additional code is to be written for each sort procedure. The sort methods will count and display the number of comparisons made in completing the sort process. This will provide an indicator of the efficiency of each algorithm.
\end_layout

\begin_layout Standard
Write the additional code to count and display the number of comparisons made for each sort method.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Itemize
The output from menu option 2. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Itemize
The output from menu option 3. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The pseudocode procedure below is given a denary number. The procedure then outputs the binary equivalent of the denary number.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE Converter(DenaryNumber : INTEGER) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF DenaryNumber = 0 OR DenaryNumber = 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT DenaryNumber 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT DenaryNumber MOD 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Converter(DenaryNumber DIV 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to implement the given procedure.
\end_layout

\begin_layout Standard
Execute the procedure using 56 as the parameter.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Itemize
Program code. 
\end_layout

\begin_layout Itemize
Screenshot showing the output. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
There is an error with the given algorithm.
\end_layout

\begin_layout Standard
Describe the error and the effect it created on the output in Evidence 6.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Itemize
Statement(s) to answer Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Make changes to the procedure Converter which will correct the error.
\end_layout

\begin_layout Standard
Draw up a list of test cases for the testing of the amended code. by completing a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DenaryNumber
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Itemize
The amended PROCEDURE Converter program code. 
\end_layout

\begin_layout Itemize
The completed table. 
\end_layout

\begin_layout Itemize
Screenshots for two of the tests. 
\begin_inset space \hfill{}

\end_inset

[11] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
When buying software. the purchaser is issued with a licence key. The product licence can be purchased for either one or three computers. A file is maintained of all the licence keys currently active and whether the licence was for a single-user or 3-users.
\end_layout

\begin_layout Standard
The licence key is a 10 character code as follows: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
CCCCCCCCCD 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
C
\family default
 = a randomly generated uppercase letter. 
\end_layout

\begin_layout Itemize

\family typewriter
D
\family default
 = a check digit character calculated from the preceding nine letters. 
\end_layout

\begin_layout Standard
A new licence key is generated for each purchase.
\end_layout

\begin_layout Standard
An example key is produced as follows: 
\end_layout

\begin_layout Itemize
randomly generated letters: 
\family typewriter
FGKWRDFTA
\family default
 
\end_layout

\begin_layout Itemize
a set of products is calculated as shown: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Randomly generated letter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Multiplier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Product
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
71 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
142
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
75 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
225
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
87 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
348
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
82 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
410
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
68 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
490
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
84 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
672
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
65 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
585
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Then the total of the products is calculated: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Total 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3350
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The total 3350 is then divided by 11 to give remainder 6. which becomes the check digit character. 
\end_layout

\begin_layout Itemize
This gives the complete licence key: 
\family typewriter
FGKWRDFTA6 
\family default
 
\end_layout

\begin_layout Itemize
If the calculation gives remainder 10, the check digit character used is 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Design a function 
\family typewriter
LicenceKey
\family default
 to generate a new licence key.
\end_layout

\begin_layout Standard
Write program code to implement the function.
\end_layout

\begin_layout Standard
Test the function for 
\series bold
three
\series default
 new licence keys.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Itemize
Program code for the 
\family typewriter
LicenceKey
\family default
 function. 
\end_layout

\begin_layout Itemize
Screenshot(s) showing the generation of the three new licence keys. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
A file 
\family typewriter
LICENCE-KEYS.TXT
\family default
 is maintained storing all licence keys which are currently active. This test file has 20 licence records.You will need this file for the programming which follows.
\end_layout

\begin_layout Standard
Typical data for two licences are shown:
\end_layout

\begin_layout Standard

\family typewriter
SYNCTKMMF8 1
\family default

\end_layout

\begin_layout Standard
indicates this is a single-user licence.
\end_layout

\begin_layout Standard

\family typewriter
SNPHHUATV7 3 1
\family default

\end_layout

\begin_layout Standard
purchased as a 3-user licence. but currently has only one registered user.
\end_layout

\begin_layout Standard
Write program code for a menu with the following options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Purchase of a new licence for either a single-user or a 3-user licence 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Register an additional user to an active 3-user licence 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

End 
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code as a procedure for menu option 1.
\end_layout

\begin_layout Standard
The requirement will be: 
\end_layout

\begin_layout Itemize
input from the user the type of licence. 
\end_layout

\begin_layout Itemize
Generate the new licence key. 
\end_layout

\begin_layout Itemize
Display licence key issued. 
\end_layout

\begin_layout Itemize
Save the data as a new record in the 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\end_layout

\begin_layout Itemize
Display final contents of 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Itemize
Program code for menu option 1. 
\end_layout

\begin_layout Itemize
Screenshot(s). showing evidence for the issue of the two types of licence, displaying: 
\end_layout

\begin_deeper
\begin_layout Itemize
the licence key issued 
\end_layout

\begin_layout Itemize
the final contents of 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Program menu option 2.
\end_layout

\begin_layout Standard
Carry out three relevant tests.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Itemize
Program code for menu option 2. 
\end_layout

\begin_layout Itemize
Screenshot evidence of three test cases. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
When a licence is purchased, the licence key, licence type (single-user or 3-user), purchase date and name of the purchaser are recorded.
\end_layout

\begin_layout Standard
A registration process then follows for each computer. 
\end_layout

\begin_layout Itemize
The computer to which a licence is registered has its MAC address and the date of registration recorded. 
\end_layout

\begin_layout Standard
The program design to manage purchases and registrations is to be implemented with object-oriented programming with the following three classes: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write program code 
\series bold
only
\series default
 for the three classes shown.
\end_layout

\begin_layout Standard
Do not attempt to develop the application further.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Itemize
Program code for the three classes.
\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Users of a local area network each have a network account ID. The IDs have the format 2015_NNNN. where N is a digit.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Complete the test case table with the addition of 
\series bold
three
\series default
 more invalid User IDs. The reasons for their invalidity should be different.
\end_layout

\begin_layout Standard
The return value is a code as follows: 
\end_layout

\begin_layout Itemize
0 - valid User lD 
\end_layout

\begin_layout Itemize
1 - the User ID was not 9 characters 
\end_layout

\begin_layout Itemize
you will use other integer numbers for other invalid cases. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Return value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Explanation of the test case
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2015_0987
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Valid User ID
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Itemize
The completed test case table. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code for a function to validate a User ID. The function header has the format: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
FUNCTION ValidateUserID (ThisUserID : STRING) RETURNS INTEGER 
\family default
 
\end_layout

\begin_layout Standard
Write a program to: 
\end_layout

\begin_layout Itemize
Input an ID entered by the user 
\end_layout

\begin_layout Itemize
Validate the input using the function
\family typewriter
 ValidateUserID 
\family default
 
\end_layout

\begin_layout Itemize
Output a message describing the validity of the input. 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Itemize
Program code for the function 
\family typewriter
ValidateUserID
\family default
 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Itemize

\series bold
Three
\series default
 screenshots showing the testing of Test Numbers 2, 3, and 4. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
You are to design an object-oriented program which simulates a print queue for a printer on a local area network (LAN).The print queue consists at any time of none, one, or more print jobs.
\end_layout

\begin_layout Standard
Each user can send a print job from any of the terminals on the LAN. Each terminal on the network is identified by an integer number in the range 1 to 172.
\end_layout

\begin_layout Standard
The program you are to design will record for each printjob: 
\end_layout

\begin_layout Itemize
the user lD 
\end_layout

\begin_layout Itemize
the terminal number from which the print request was sent 
\end_layout

\begin_layout Itemize
the file size (integer in Kbytes). 
\end_layout

\begin_layout Standard
In practice, there are several print queues each associated with a different printer. Each printer is identified by a short name, such as 
\family typewriter
Room16
\family default
.
\end_layout

\begin_layout Standard
Task 4.3
\end_layout

\begin_layout Standard
Design and write program code to define one or more classes and other appropriate data structures for this application.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code for the class(es). 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
A print queue behaves as a queue data structure.
\end_layout

\begin_layout Standard
Assume, for testing purposes: 
\end_layout

\begin_layout Itemize
there is a single printer on the LAN 
\end_layout

\begin_layout Itemize
the maximum print queue size for the printer is five print jobs. 
\end_layout

\begin_layout Standard
The main program will simulate: 
\end_layout

\begin_layout Itemize
the sending of print jobs to the printer by different users 
\end_layout

\begin_deeper
\begin_layout Itemize
that is, the addition of a print job to the print queue 
\end_layout

\end_deeper
\begin_layout Itemize
the output of a job from the print queue 
\end_layout

\begin_deeper
\begin_layout Itemize
that is, the removal of a print job from the print queue 
\end_layout

\end_deeper
\begin_layout Standard
The program design has the following menu: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

New print job added to print queue 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Next print job output from printer 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Current print queue displayed 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4
\end_layout

\end_inset

End 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The program simulates the working of the print queue as follows: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

The empty print queue is initialised. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

The program user selects menu options 1, 2 and 3 in any order. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

The program user selects menu opt
\series bold
two
\series default
ion 4. 
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
display the main menu 
\end_layout

\begin_layout Itemize
input the choice by the user 
\end_layout

\begin_layout Itemize
run the appropriate code for the choice made. 
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.5
\end_layout

\begin_layout Standard
Write program code to initialise the print queue for the 
\family typewriter
Room16
\family default
 printer.
\end_layout

\begin_layout Standard
Write program code to display the current state of the print queue.
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
The program code for: 
\end_layout

\begin_layout Itemize
initialising the print queue 
\end_layout

\begin_layout Itemize
output of the current print queue. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 4.6
\end_layout

\begin_layout Standard
Write program code to add a new print job to the print queue.
\end_layout

\begin_layout Standard
The requirement will be: 
\end_layout

\begin_layout Itemize
program user enters data for the new print job 
\end_layout

\begin_layout Itemize
print job is added to the print queue. 
\end_layout

\begin_layout Standard
Test the code by adding one new print job.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Itemize
Program code to add a new print job. 
\end_layout

\begin_layout Itemize
Screenshot following menu option 1 then menu option 3. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsubsection*
Task 4.7
\end_layout

\begin_layout Standard
Write program code to output the next print job from the printer.
\end_layout

\begin_layout Standard
This code will execute from menu option 2.
\end_layout

\begin_layout Standard
Test the code by: 
\end_layout

\begin_layout Itemize
adding three print jobs 
\end_layout

\begin_layout Itemize
outputting the next print job. 
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Itemize
Program code to output next print job. 
\end_layout

\begin_layout Itemize
Screenshot following menu option 1 three times. then menu option 2, and menu option 3. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The management of a university is keen to implement changes which will result in higher student attainment. The management believes this is possible if it collects more data about its students which is then analysed.
\end_layout

\begin_layout Standard
Possible data that might be collected includes: assignment grades, books taken out of the library, attendance at lectures, attendance at tutorials, meetings with personal tutor, email exchanges with university staff. and participation in sporting and cultural activities.
\end_layout

\begin_layout Standard
University staff are classified as either academic or management. All data about students will be available to academic staff for viewing and editing. Summary information, which does not identify any individual student. will be viewable by some management staff. Students have no access to the data.
\end_layout

\begin_layout Standard
A project working party is to be set up consisting of representatives from across the university. The working party will define the scope of the project. It will consider what data is to be collected. it will also decide what the data is to be used for and consider any potential further use of the data.
\end_layout

\begin_layout Standard
If this project has a successful outcome, the university will market its expertise to other universities. 
\end_layout

\begin_layout Enumerate
Give 
\series bold
three
\series default
 different representative members of the working party. Justify each choice. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The working party has been asked to produce a list of issues that will be considered by the Ethics Committee of the university.
\end_layout

\begin_deeper
\begin_layout Standard
State 
\series bold
two
\series default
 issues that could be on the list.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard
After consideration of the reports from the working party and the Ethics Committee the university management decide to proceed with the project. A project team is put together to design and implement a new software system.
\end_layout

\begin_layout Standard
The initial work of the project team involves an investigation process. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Name 
\series bold
two 
\series default
techniques that can be used by the project team in the investigation process. For each technique, explain how it can be used in this project.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A detailed report is produced following the investigation.Thls report will form the starting point of the design stage. Describe 
\series bold
two
\series default
 sections of the report.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The project team draw up a list of activities that will be required for the completion of the software project: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Activity Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected Duration (in weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design solution to project 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Development of solution to project 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Produce documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
implement system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Acceptance trials 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A first attempt to produce a Program Evaluation and Review Technique (PERT) chart from the activity table is: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 benefits that can be gained by producing a PERT chart from the activity table. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the significance of the dashed line on the PERT chart. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
There are two errors on the PERT chart. identify these errors. Redraw the PERT chart to show the changes needed to correct these errors. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Using your PERT chart from part 
\series bold
(e)(iii)
\series default
: 
\end_layout

\begin_deeper
\begin_layout Itemize
State the minimum time in which the project could be completed.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Itemize
By how many weeks can the start of the production of documentation be delayed without delaying the whole project? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Itemize
Describe and give an example of concurrent activities.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Itemize
Describe and give an example of dependent activities. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
Output from the system is made available to permitted staff via the university intranet. However, the university intranet can be accessed by all students and staff. both locally and remotely, via the lnternet. The system needs security measures to prevent all types of unauthorised access. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe
\series bold
 two
\series default
 suitable physical security measures that could be adopted. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 suitable software security measures that could be adopted. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Following the success of the project, management decides that the software system will be marketed to other universities. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Explain how the university's investment in the software can be legally protected. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stock control system requires that each stock item has a unique ID consisting of six digits. The sixth digit is a check digit. This check digit ensures that a value of 0 is the final result of the following series of calculations: 
\end_layout

\begin_layout Itemize
multiply each of the six digits by its position (position 6 is the leftmost position) 
\end_layout

\begin_layout Itemize
sum the resulting six products 
\end_layout

\begin_layout Itemize
find the sum modulo 11. 
\end_layout

\begin_layout Enumerate
Deduce whether the following IDs are valid or not valid. Show your working. 
\end_layout

\begin_deeper
\begin_layout Enumerate
810230 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
371025 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The ID 483095 is a valid lD. Describe 
\series bold
one
\series default
 typical data entry error for this ID. Show how this error would be detected.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Describe a method of verification that can be used when an ID is entered from a data entry form.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A simple queue data structure is implemented using a one-dimensional array and two pointers, Head and Tail, as shown: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="r">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Queue
\family default

\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Mac
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ben
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\impliedby$
\end_inset

 
\family typewriter
Head
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dog
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Can
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Yog
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Hur
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\impliedby$
\end_inset

 
\family typewriter
Tail
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Show the state of the above queue after: 
\end_layout

\begin_deeper
\begin_layout Itemize
two items, Dap and Eck, are added (in that order) 
\end_layout

\begin_layout Itemize
one item is removed. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
When ten items have been added, this simple queue cannot accept any further items. 
\end_layout

\end_deeper
\begin_layout Enumerate
A first attempt at an algorithm for adding an item to this queue is:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 IF ..............................
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

No more room to add items
\begin_inset Quotes erd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

INPUT 
\begin_inset Quotes qld
\end_inset

New item to be added
\begin_inset Quotes qrd
\end_inset

, NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Queue[..............................] <- NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O7 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O8 ENDIF 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write the pseudocode to show the completed lines 01, 06, and 07. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give the initial value for 
\family typewriter
Tail
\family default
 when the queue is created and justify your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The programmer can reuse the space released after removing an item. This maximises the available space. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe how the algorithm for adding an item should be amended so that the released space is made available. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An algorithm for converting a number n from denary to octal uses the three built-in functions: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="15col%">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Function 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTMOD(Number,Divisor)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
returns the remainder when the first parameter is divided by the second parameter 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTMOD(7,3) 
\family default
returns 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTDIV(Number,Divisor)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
returns the integer part when thefirst parameteris divided by the second parameter. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTDIV(7,3) 
\family default
returns 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SUBSTR(ThisString,Start,Length)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
forms a substring from ThisString, starting at Start (with first index in string zero) and taking Length characters 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SUBSTR(
\begin_inset Quotes eld
\end_inset

abcd
\begin_inset Quotes erd
\end_inset

,1,2)
\family default
 returns 
\family typewriter

\begin_inset Quotes eld
\end_inset

bc
\begin_inset Quotes erd
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Study the following pseudocode:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION DenaryToOctal (n : INTEGER) RETURNS STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

OctalDigits <- 
\begin_inset Quotes qld
\end_inset

01234567
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF n < 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TempString <- SUBSTR(OctalDigits, n, 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// '+' is the concatenation operator 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TempString <- DenaryToOctal(INTDIV(n,8)) + SUBSTR(OctalDigits, INTMOD(n,8),1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

RETURN TempString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Identify where and why this is a recursive function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The diagram shows the execution of the call 
\family typewriter
DenaryToOctal(39)
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Draw a similar diagram to show the execution of the call 
\family typewriter
DenaryToOctal(67)
\family default
.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Changes are to be made to the function 
\family typewriter
DenaryToOctal()
\family default
 so that it converts denary numbers to hexadecimal.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the changes: 
\end_layout

\begin_layout Itemize
that are essential to make the revised function work. 
\end_layout

\begin_layout Itemize
that are non-essential but would help with the clarity of the pseudocode.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to test an insertion sort algorithm. A top-down approach was used in the design of the program. The program, 
\family typewriter
InsertionSortTester
\family default
, has a number of parts: 
\end_layout

\begin_layout Itemize
input integer values into the array 
\end_layout

\begin_layout Itemize
output the initial values in the array 
\end_layout

\begin_layout Itemize
output the sorted values in the array 
\end_layout

\begin_layout Itemize
perform the insertion sort 
\end_layout

\begin_layout Itemize
validate the values 
\end_layout

\begin_layout Enumerate
Draw a diagram, which exhibits top-down design, for the 
\family typewriter
InsertionSortTester
\family default
 program. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_deeper
\begin_layout Standard
A list of data items is stored in the array 
\family typewriter
Values
\family default
. The pseudocode for the insertion sort algorithm is:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR i <- 2 TO Arraysize 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Temp <- Values[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

j <- i‚Äîl 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

WHILE (j > 0) AND (Values [j] > Temp) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Values[j+1] <‚Äî Values [j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j <- j‚Äîl 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Values [j+1] <- Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 ENDFOR 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The sort algorithm is to be tested using the sequence of numbers: 6, 8, 2 and 1. Copy and complete the trace table given below. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c|">
\begin_inset Text

\begin_layout Standard

\family typewriter
Values
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Temp
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why this particular algorithm is inefficient for an array where the initial values are already in order.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 different test cases for the program. Justify your selection in each case.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Students from several schools are entered for examinations in different subjects.
\end_layout

\begin_layout Standard
A relational database is to be used by the examination board to store data about examination entries and results. Four tables present in the database are STUDENT, SCHOOL, SUBJECT and STUDENT-SUBJECT.
\end_layout

\begin_layout Standard
Every time a student registers for a subject examination. a new row is created in the STUDENT-SUBJECT table. When the result becomes available, this is added to the appropriate row.
\end_layout

\begin_layout Standard
Each student, each school, and each subject has a unique identification code. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram to show the relationship between the STUDENT table and the SUBJECT table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the type of relationship that exists between the STUDENT and SUBJECT tables. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw an E-R diagram to show the relationship between the four tables that provides for a fully normalised database design.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
A table description can be expressed as:
\end_layout

\begin_layout Standard

\family typewriter
TableName(Attribute1, Attribute2, Attribute3, ...)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
An incomplete STUDENT table is:
\end_layout

\begin_layout Standard

\family typewriter
STUDENT(
\family default

\family typewriter

\bar under
StudentID
\bar default

\family default

\family typewriter
, StudentName, DateOfBirth) 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Give a table description for the SUBJECT table. Ensure there are 
\series bold
two
\series default
 attributes in addition to the primary key. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Give a table description for the STUDENT-SUBJECT table. Ensure there is 
\series bold
one
\series default
 non-key attribute.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the type of relationship that exists between the STUDENT and the SCHOOL tables.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how the relationship between the STUDENT table and the SCHOOL table is established. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The coming General Election will see 28481 voters in the MacPherson Single Member Constituency (SMC) voting for their Member of Parliament (MP). The data file 
\family typewriter
ELECTION.txt
\family default
 contains the simulated voting results, with A, B, C and V representing votes for the political parties National Solidarity Party, People Action Party and Workers' Party, as well as void votes respectively.
\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
Determine the winner and the voting statistics (correct to 1 decimal place) for this SMC. Your output should look like the following:
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Results for the Electoral Division of MacPherson 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
PAP 58.7%
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
WP 37.5%
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
NSP 2.6% 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Void 1.2%
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Winner is PAP 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 2
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
In the event of a tie, the parties tied will enter into a revoting exercise. For example, if there is a tie between PAP and WP, return the message 
\begin_inset Quotes qld
\end_inset


\family typewriter
Revote between PAP and WP
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
Write program code to generate a text file 
\family typewriter
TIE.txt
\family default
 with approximately 3% void votes, 7% votes for NSP and a tie between PAP and WP. Test your program with your generated 
\family typewriter
TIE.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are provided with the registration dates and email addresses of participants who registered for an event in the text file 
\family typewriter
PARTICIPANTS.txt
\family default
. Unfortunately, some participants registered more than once.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code to remove duplicate entries and generate the final participant list in alphabetical email order. If a participant registered more than once, take the last registered record as the final entry. Return also a count of duplicate entries removed.
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
ali@yahoo.com,03-05-2015
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
dave@savetheworld.org,05-05-2015 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
james007@bond.uk,07-05-2015
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
limahseng@gmail.com,01-05-2015 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
mary_ong@m1.com.sg,05-05-2015 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
zorro@outlook.com,30-04-2015 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 duplicate entries removed.
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Some email addresses may be entered wrongly. Using first principles, write a Boolean function 
\family typewriter
Valid_Email(email)
\family default
 to determine if an email address is valid. Design test cases to thoroughly test the working of your function code.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 8
\end_layout

\begin_layout Standard
Test data with purpose and corresponding screenshots. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
International Standard Book Number (ISBN) is a unique number assigned to each edition of a book. It has two formats: ISBN-10 and ISBN-13. The former is used before 1 Jan 2007 and the latter after that. Examples of valid ISBNs are 020103803X and 978-1-284-05591-7. The last digit is the check digit and is computed as follows:
\end_layout

\begin_layout Standard

\series bold
ISBN check digit (10 digits) - mod 11 algorithm
\series default
 
\end_layout

\begin_layout Itemize
Each digit starting from left to right is assigned a weight from 1 to 9. Each digit is multiplied by its position weight. The sum of products modulo 11 gives a remainder between 0 and 10. If the remainder is 10, the check digit is the roman numeral X, else the check digit is the remainder. 
\end_layout

\begin_layout Itemize

\series bold
Example ISBN-10: 0-07-063546-3 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Formula $(0\times1)+(0\times2)+(7\times3)+(0\times4)+(6\times5)+(3\times6)+(5\times7)+(4\times8)+(6\times9)=190$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\begin_inset Formula $190\mod11=3$
\end_inset

 
\end_layout

\begin_layout Itemize
Hence 3 is the check digit. 
\end_layout

\begin_layout Standard

\series bold
ISBN check digit (13 digits) - mod 10 algorithm
\series default
 
\end_layout

\begin_layout Itemize
Each digit starting from the left to right is multiplied by 1 or 3 alternatively. The sum of the products modulo 10 gives a remainder between 0 to 9. If the remainder is nonzero, subtract this from 10 to get the check digit, else the check digit is 0. 
\end_layout

\begin_layout Itemize
Example ISBN-13: 978-0-07-063546-3
\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Formula $1\times9+3\times7+1\times8+3\times0+1\times0+3\times7+1\times0+3\times6+1\times3+3\times5+1\times4+3\times6=117$
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\begin_inset Formula $117\mod10=7$
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Formula $10-7=3$
\end_inset

 
\end_layout

\begin_layout Itemize
Hence 3 is the check digit. 
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
ISBN_Check_Digit(isbn)
\family default
 which generates the check digit for a given ISBN-10 or ISBN-13 number.
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Screenshots (1 for ISBN-10 and 1 for ISBN-13)
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
Valid_ISBN(isbn)
\family default
 which calls your 
\family typewriter
ISBN_Check_Digit(isbn)
\family default
 function in Task 3.1 to determine if a given ISBN-10 or ISBN-13 number is valid.
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Screenshots for appropriately generated ISBN-10 and ISBN-13 numbers.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
An ISBN-10 number can be converted to its ISBN-13 equivalent by prefixing '978' to the ISBN-10 number and then calculating the check digit using the ISBN-13 algorithm.
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
ISBN10_To_ISBN13(isbn)
\family default
 to convert an ISBN-10 number to its ISBN13 equivalent.
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
Screenshot of output for ISBN-10 number 1904467520. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
ISBN13_To_ISBN10(isbn)
\family default
 to convert an ISBN-13 number to its ISBN10 equivalent.
\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Screenshot of output for ISBN-13 number 9780748740468. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
A small library wishes to store its book collection details using a random file organisation. It currently holds 200 books but wishes to expand its collection by about 10% every year. To resolve collisions, it decides to use double hashing which minimises clustering. For a start, assume that this file organisation will be maintained for 3 years.
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Devise and implement a suitable double hashing strategy 
\family typewriter
Hash_Key(isbn)
\family default
. Annotate your strategy using program comments.
\end_layout

\begin_layout Subsection*
Evidence 17
\end_layout

\begin_layout Standard
Program code with comments. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.6
\end_layout

\begin_layout Standard
Write program code to generate an appropriate number of ISBNs to the random text file 
\family typewriter
LIBRARY.txt
\family default
 which will cater to the library's collection growth over 3 years. Include 
\family typewriter
Insert_Book(isbn)
\family default
 and 
\family typewriter
Lookup_Book(isbn)
\family default
 functions to insert a book and lookup a book respectively.
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Screenshots showing the insertion and lookup of one non-collided record and one collided record. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 20 
\end_layout

\begin_layout Standard
Separate printout of 
\family typewriter
LIBRARY.txt
\family default
 after insertion of all generated records. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are tasked to maintain a binary search tree for optimal search efficiency. Each node of the binary search tree contains a unique identifier (productid) and a reference to a linked list which holds individual order details for that product. For simplicity, orderid will suffice.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Using object-oriented programming, implement the above binary search tree with its associated class methods (
\family typewriter
insert()
\family default
, 
\family typewriter
search()
\family default
 and 
\family typewriter
inorder()
\family default
).
\end_layout

\begin_layout Subsection*
Evidence 21
\end_layout

\begin_layout Standard
Program code for binary search tree with 8 products inserted, 3 of which has at least 2 orders. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 22
\end_layout

\begin_layout Standard
Screenshot of output of inorder traversal (product and order information). 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a support class method most_popular() to determine the best selling product(s).
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 24 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
A product is no longer available. Write a class method delete() to remove this node from the binary search tree, accounting for all possible cases.
\end_layout

\begin_layout Subsection*
Evidence 25 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 26 
\end_layout

\begin_layout Standard
Screenshots. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
After a series of insertion and deletion, the binary search tree may become unbalanced and this requires reorganisation to maintain optimal search efficiency. Write functions 
\family typewriter
is_balanced()
\family default
 to test if a binary search tree is balanced, and 
\family typewriter
reorg()
\family default
 to reorganise an unbalanced binary search tree. Include appropriate annotation.
\end_layout

\begin_layout Subsection*
Evidence 27 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A young family decides to purchase a new car. The following precedence table shows the constituent activities with their preceding activities and durations. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="16" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Preceding Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration (days) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Decide feasibility of purchase 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Find buyer for existing car 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Decide on possible models 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Investigate decided models 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Discuss with knowledgeable friends 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Get information from dealers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Put together all information 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D, E, F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shortlist three options 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test drive shortlisted options 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Get finance information 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Confirm car model 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I, J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Compare dealers and choose one 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Decide on colour 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test drive chosen model 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
O 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Buy new car 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B, M, N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Discuss how the family can conduct a feasibility study for the purchase.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Construct a PERT chart for this project. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State the critical path and the total time required for the project. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Name a floating task and state its role in the project.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain the significance of dummy activities in this project.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Construct the corresponding Gantt chart for the project. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Why should one derive the PERT chart before the Gantt chart?
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
How does a Gantt chart help in the project?
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Suggest two reasons why activity M requires 4 days. What can be done to speed this up?
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
In activity E, the family decides to use a cross-platform mobile messaging app which allows users to exchange messages without having to pay for SMS. Communication with its network of knowledgeable friends requires the use of TCP/IP sockets. What is a TCP/IP socket and how does it help in network communication? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
A number of activities require the use of an Internet search engine. Explain how an Internet search engine works and how cloud computing is used in implementing an Internet search engine. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Enumerate
After the car purchase, the family decides to share their experience using either a personal blog post or a social network post to benefit other potential car buyers. Compare the relative pros and cons of using these approaches. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a social network, each user has a public profile name and can make zero or more posts. Each post contains a message and can be liked by the poster and/or other users. 
\end_layout

\begin_layout Enumerate
Draw an E-R diagram that shows the tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Design a normalised relational database schema. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Using your answer in (b), explain the concepts of 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
composite key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Some game tournament such as badminton, bridge, chess, Pokemon, Scabble, and many eSports employ the Swiss system of play, in which players are not eliminated after each round and are paired with players with the same number of wins or as close as possible. The following shows an example of a 16-player Scrabble tournament. Assume that all games have a winner and there are no draws.
\end_layout

\begin_layout Standard
First round pairing is by random draw i.e there will be 8 random pairs. After round 1, there will be a group of 8 players with a score of 1 (win), and a group of 8 players with a score of 0 (loss).
\end_layout

\begin_layout Standard
For the second round, players in each scoring group will be paired against each other ‚Äì 1
\begin_inset Quotes ers
\end_inset

s versus 1
\begin_inset Quotes ers
\end_inset

s and 0
\begin_inset Quotes ers
\end_inset

s versus 0
\begin_inset Quotes ers
\end_inset

s.
\end_layout

\begin_layout Standard
After round 2, there will be three scoring groups: 
\end_layout

\begin_layout Itemize
4 players who have won both games and have 2 points 
\end_layout

\begin_layout Itemize
8 players who have won a game and lost a game and have 1 point 
\end_layout

\begin_layout Itemize
4 players who have lost both games and have no points. 
\end_layout

\begin_layout Standard
Again, for the third round, players are paired with players in their scoring group. After round 3, the typical scoring groups will be: 
\end_layout

\begin_layout Itemize
2 players who have won 3 games (3 points) 
\end_layout

\begin_layout Itemize
6 players with 2 wins (2 points) 
\end_layout

\begin_layout Itemize
6 players with 1 win (1 point) 
\end_layout

\begin_layout Itemize
2 players with no wins (0 points) 
\end_layout

\begin_layout Standard
For the fourth (and in this case final) round, the process repeats, and players are matched with others in their scoring group. Note that there are only 2 players who have won all of their games so far ‚Äì they will be matched against each other for the 
\begin_inset Quotes qld
\end_inset

championship
\begin_inset Quotes qrd
\end_inset

 game. After the final round, we will have something that looks like this: 
\end_layout

\begin_layout Itemize
1 player with 4 points ‚Äì the winner! 
\end_layout

\begin_layout Itemize
4 players with 3 points ‚Äì tied for second place 
\end_layout

\begin_layout Itemize
6 players with 2 points 
\end_layout

\begin_layout Itemize
4 players with 1 point 
\end_layout

\begin_layout Itemize
1 player with 0 points 
\end_layout

\begin_layout Standard
The Swiss system produces a clear winner in just a few rounds, no one is eliminated and almost everyone wins at least one game, but there are many ties to deal with. 
\end_layout

\begin_layout Enumerate
Propose and justify a suitable data structure to store and initialise the player names, intermediate and final opponents, points and results of the 16-player tournament. You may denote the players' names with the alphabets A ‚Äì P. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Devise an algorithm to update the data structure in (a) and determine the final ranks of the players. Players who are tied will have their names output in alphabetical order. The next rank after 2 is 3. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A durian specialty business sells its different breeds of durians via two modes currently: 
\end_layout

\begin_layout Itemize
phone order via calling in to its sales hotline 
\end_layout

\begin_layout Itemize
web order via making an online order on its website 
\end_layout

\begin_layout Standard
For phone order, a sales agent will record the order details (breed, quantity, customer name and phone number). Payment terms will be cash on collection only. For web order, the customer will register for an account using his/her email address and select the breed and quantity, and enter his/her phone number. Payment terms will be either cash on collection or by entering credit card details upon checkout. 
\end_layout

\begin_layout Enumerate
Using suitable examples from this context, explain the concepts of 
\end_layout

\begin_deeper
\begin_layout Enumerate
validation 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
verification 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a UML class diagram to show the relationship between the different types of orders.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using suitable examples, explain the concepts of 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
inheritance
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
polymorphism 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
To cater to an aging population and elderly who face difficulty using smartphones, it is proposed that an SMS application be developed to allow elderly to order durians using SMS. Design and justify a suitable user interface and workflow. Assume that the SMS sales number is 88387426 (88DURIAN).
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You have taken over the following program module A in an unnamed programming language written by an unnamed intern (who did not take A-level Computing) to determine the number of markers and their consecutive labels to be positioned on a newly completed highway. X is the length of the highway in kilometres. Makers should be spaced 500 metres apart from one another.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1 FUNCTION A(X : REAL) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 FOR I FROM ONE TO X/500 DO 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 PRINT(I) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 PRINT(
\begin_inset Quotes qrd
\end_inset

NUMBER OF MARKERS = 
\begin_inset Quotes qld
\end_inset

 + X /500) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
How can you improve on the programming style for the above program module? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Identify and correct the errors in the above program. Explain the different types of errors identified.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Design and justify suitable black box and white box tests for the above program module. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2015/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following figure shows a Scrabble game board. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2015-P1-Q6-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
Propose and justify 
\end_layout

\begin_layout Enumerate
an efficient data structure to store the letter point values 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
an efficient data structure to store the game board 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
an efficient algorithm to compute the score of a word 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to process the total points of football league teams based on number of wins, draws and losses. The program can be run every day.
\end_layout

\begin_layout Standard
The program reads from file 
\family typewriter
TOP_TEAM.txt
\family default
 the current highest points and team name from running the program on previous days.
\end_layout

\begin_layout Standard
The program specification is to: 
\end_layout

\begin_layout Itemize
input 
\series bold
up to
\series default
 four team names (max. 12 characters long) each with the total number match wins, draws and losses so far. 
\end_layout

\begin_layout Itemize
calculate the total aggregate point for each team based on 3 points for every win, 1 point for every draw and 0 points for every loss. 
\end_layout

\begin_layout Itemize
display on screen: 
\end_layout

\begin_deeper
\begin_layout Itemize
the highest point with the team name for today 
\end_layout

\begin_layout Itemize
a message saying whether or not the highest point today beat the current team with the highest aggregate points. 
\end_layout

\end_deeper
\begin_layout Itemize
update the file 
\family typewriter
TOP_TEAM.txt
\family default
 if a higher aggregate point was computed today. 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for this task.
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code for Task 1.1. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Draw up a set of test data which tests the functioning of your program. Consider carefully all cases which could occur for both the data input and the two processing requirements.
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Russian peasant algorithm is an alternative method to perform multiplication of whole numbers by consecutive application of doubling numbers, halving numbers and addition.
\end_layout

\begin_layout Standard
Consider the multiplication of 
\family typewriter
57
\family default
 by 
\family typewriter
86
\family default
 (= 
\family typewriter
4902
\family default
):
\end_layout

\begin_layout Standard
Write each number side by side: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\strikeout on
57 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

86
\strikeout default

\family default
 
\end_layout

\begin_layout Standard
Double the first number and halve the second number (by performing integer division by 2 i.e. drop the remainder).
\end_layout

\begin_layout Standard
If the second number or halving result is even, cross out this entire row. Keep doubling, halving, and crossing out until the halving result is 1. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\strikeout on
57 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

86
\strikeout default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
114 
\begin_inset space ~

\end_inset

43
\strikeout default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
228 
\begin_inset space ~

\end_inset

21
\strikeout default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
456 
\begin_inset space ~

\end_inset

10
\strikeout default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
912 
\begin_inset space ~

\end_inset

5 
\strikeout default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
1824 2 
\strikeout default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\strikeout on
3648 1
\strikeout default

\family default

\family typewriter
 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Add up the remaining numbers in the first column. The total is the product of the original numbers. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

114
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

228
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

912
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\bar under
+ 3648 
\bar default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4902
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write a function to implement the Russian peasant multiplication algorithm. Test your function with the numbers 
\family typewriter
50
\family default
 and 
\family typewriter
22
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code for Task 2.1. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
The Russian peasant algorithm is actually related to binary numbers. Doubling a decimal number is to shift its binary equivalent left, while halving a decimal number is to shift its binary equivalent right.
\end_layout

\begin_layout Standard
Consider the multiplication of 
\family typewriter
13
\family default
 by 
\family typewriter
12
\family default
 (
\family typewriter
= 156
\family default
)
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\family default
In Binary
\family typewriter
 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\family default
In Decimal
\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\family default

\family typewriter

\strikeout on
1101 1100
\strikeout default

\family default

\family typewriter
 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\family default

\family typewriter

\strikeout on
13 12
\strikeout default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

 
\family default

\family typewriter

\strikeout on
11010 0110
\strikeout default

\family default

\family typewriter
 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\family default

\family typewriter

\strikeout on
26 6
\strikeout default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

110100 0011 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

52 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1101000 0001 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

104 1 
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
110100 + 1101000 = 10011100 = 156 (in decimal) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
DecToBin()
\family default
 to convert a decimal number to its binary equivalent.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code for Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Implement the Russian peasant multiplication algorithm using binary numbers. Your program should accept 2 decimal numbers as input, convert them to binary, and then perform the necessary operations to output a binary string as the result. You should make use of your 
\family typewriter
DecToBin()
\family default
 function in Task 2.2.
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Your program code for Task 2.3. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
One screenshot showing the output from running the program code. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A message is encrypted and passed between two parties. To decrypt the message, a 
\begin_inset Quotes eld
\end_inset

key
\begin_inset Quotes erd
\end_inset

 is applied. Both the sending and receiving parties hold the key which enables them to encrypt and decrypt the message.
\end_layout

\begin_layout Standard
An approach of cryptography is the simple substitution cipher, a method of encryption by which each letter of a message is substituted with another letter. The receiving party deciphers the text by performing an inverse substitution.
\end_layout

\begin_layout Standard
The substitution system is created by first writing out a 
\family typewriter

\emph on
phrase
\emph default

\family default
. The 
\family typewriter

\emph on
key
\emph default

\family default
 is then derived from the 
\family typewriter

\emph on
phrase
\emph default

\family default
 by removing all the repeated letters. The 
\family typewriter

\emph on
cipher text
\emph default

\family default
 alphabet is then constructed starting with the letters of the key and then followed by all the remaining letters in the alphabet.
\end_layout

\begin_layout Standard
Using this system, the phrase 
\begin_inset Quotes qld
\end_inset


\family typewriter
apple
\family default

\begin_inset Quotes qrd
\end_inset

 gives us the 
\family typewriter

\emph on
key
\emph default

\family default
 as 
\begin_inset Quotes qld
\end_inset


\family typewriter
APLE
\family default

\begin_inset Quotes qrd
\end_inset

 and the following substitution scheme:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="28">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Plain text alphabet:
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
b
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
c
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
d
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
e
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
f
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
g
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
h
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
k
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
l
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
m
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
n
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
o
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
p
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
r
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
s
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
t
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
v
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
w
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
x
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
z
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\downarrow$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\downarrow$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\downarrow$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
is substituted by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Cipher text alphabet:
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
P
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
E
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
H
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
I
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
M
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
N
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
S
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
U
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
V
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Z
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
'a'
\family default
 will be substituted by 
\family typewriter
'A'
\family default
, 
\family typewriter
'b'
\family default
 will be substituted by 
\family typewriter
'P'
\family default
, 
\family typewriter
'c'
\family default
 will be substituted by 
\family typewriter
'L'
\family default
, 
\family typewriter
'd'
\family default
 will be substituted by 
\family typewriter
'E'
\family default
, 
\family typewriter
'e'
\family default
 will be substituted by 
\family typewriter
'B'
\family default
, and so on.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for a function to create cipher text using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION CreateCipher (phrase: STRING): STRING 
\family default
 
\end_layout

\begin_layout Standard
The function 
\family typewriter
CreateCipher
\family default
 has a single parameter 
\family typewriter
phrase
\family default
 and returns the cipher text alphabet as a string.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your program code for Task 3.1. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
CreateCipherTest
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
read the phrases from file 
\family typewriter
PHRASES.txt
\family default
 
\end_layout

\begin_layout Itemize
create cipher text for each of the phrases 
\end_layout

\begin_layout Itemize
display each phrase and cipher text on the screen as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: apple
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Cipher text: APLEBCDFGHIJKMNOQRSTUVWXYZ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
... ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
... ... 
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Your program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Screenshot for running Task 3.2.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Write program code for a function to decrypt a message using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION Decrypt(enc_message: STRING, cipher: STRING): STRING 
\family default
 
\end_layout

\begin_layout Standard
The function 
\family typewriter
Decrypt
\family default
 accepts parameters 
\family typewriter
enc_message
\family default
 and 
\family typewriter
cipher
\family default
, and returns the decrypted message as a string. Parameter 
\family typewriter
enc_message
\family default
 is the encrypted message, and parameter 
\family typewriter
cipher
\family default
 is the cipher text alphabet.
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Your program code for Task 3.3.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
read the phrase and encrypted message from file 
\family typewriter
CIPHER.txt
\family default
 
\end_layout

\begin_layout Itemize
cipher text is generated from 
\family typewriter
CreateCipher
\family default
 function 
\end_layout

\begin_layout Itemize
message is decrypted from 
\family typewriter
Decrypt
\family default
 function 
\end_layout

\begin_layout Itemize
display decrypted message on the screen together with the phrase and encrypted message
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Encrypted message: ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Decrypted message: ...
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 13:
\end_layout

\begin_layout Standard
Screenshot for running Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write program code for a function to encrypt a message using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION Encrypt(message: STRING, cipher: STRING): STRING 
\family default
 
\end_layout

\begin_layout Standard
The function Encrypt accepts parameters 
\family typewriter
message
\family default
 and 
\family typewriter
cipher
\family default
, and returns the encrypted message as a string. Parameter 
\family typewriter
message
\family default
 is the message to be encrypted while parameter 
\family typewriter
cipher
\family default
 is the cipher text.
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Your program code for Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.6 
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
encrypt the message: 
\begin_inset Quotes qld
\end_inset


\family typewriter
do not give up!
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize
use the phrase: 
\begin_inset Quotes qld
\end_inset


\family typewriter
skyhigh
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize
generate cipher text from 
\family typewriter
CreateCipher
\family default
 function 
\end_layout

\begin_layout Itemize
message is encrypted using 
\family typewriter
Encrypt
\family default
 function 
\end_layout

\begin_layout Itemize
encrypted message is displayed on screen as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Phrase: skyhigh
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Encrypted Message: ... 
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Your program code for Task 3.6. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 16:
\end_layout

\begin_layout Standard
Screenshot for running Task 3.6. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store a dataset of students
\begin_inset Quotes ers
\end_inset

 names and test scores (max size of 20 students) as a binary tree structure. The text file 
\family typewriter
s
\family default
 stores the students
\begin_inset Quotes ers
\end_inset

 names and test scores in the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<student Name>|<Score> 
\family default
 
\end_layout

\begin_layout Standard
All test scores are integer values in the range 0 to 100 inclusive.
\end_layout

\begin_layout Standard
The program will use a user-defined type 
\family typewriter
Node
\family default
 for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left pointer for the node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The name of the student
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Score
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The score of the studen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right node pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is maintained of all the unused nodes which do not form part of the tree. The first available node which is used for a new student is indicated by 
\family typewriter
NextFreePosition
\family default
. Nodes in the unused list are linked using their left pointers.
\end_layout

\begin_layout Standard
The binary tree and linked list are implemented using variables as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisTree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[20]: Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The tree data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position of the 
\family typewriter
ThisTree
\family default
 array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreePosition
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2015-P1-Q4-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the binary tree with the students
\begin_inset Quotes ers
\end_inset

 scores 40, 70, 35 and 60 (added in that order) and linked list of unused nodes after the four students
\begin_inset Quotes ers
\end_inset

 scores have been added.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write the program code to declare all the required variables and create the initial linked list which contains all 20 nodes. Add statement(s) to initialize the empty tree.
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your program code for Task 4.1. [8]
\end_layout

\begin_layout Standard
The following (incomplete) pseudocode inserts a student
\begin_inset Quotes ers
\end_inset

s name and his/her score into the binary tree structure.
\end_layout

\begin_layout Standard
The 
\family typewriter
LastMove
\family default
 variable holds the direction of the previous traversal move as follows:
\end_layout

\begin_layout Standard
X -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- no move yet made
\end_layout

\begin_layout Standard
L -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- move was to the left
\end_layout

\begin_layout Standard
R -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- move was to the right
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddNodeToBinaryTree(NewName, NewScore) 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
IF Root = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Root <- NextFreePosition 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//traverse the tree to find the position for the new value 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition <- Root 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove <- 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PreviousPosition <- CurrentPosition 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewScore < ThisTree[CurrentPosition].Score 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//move left 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove <- 
\begin_inset Quotes els
\end_inset

L
\begin_inset Quotes ers
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].LeftP 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move right 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove <- 
\begin_inset Quotes els
\end_inset

R
\begin_inset Quotes ers
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].RightP 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

UNTIL CurrentPosition = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDIF 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
IF LastMove = 
\begin_inset Quotes els
\end_inset

R
\begin_inset Quotes ers
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].RightP <- NextFreePosition 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].LeftP <- NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
NextFreePosition ‚Üê ThisTree[NextFreePosition].LeftP
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: The above text is available in the text file 
\family typewriter
PSEUDOCODE_TASK_4_2.txt
\family default

\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write non-recursive code to implement the 
\family typewriter
AddNodeToBinaryTree
\family default
 procedure that will add a new node with student
\begin_inset Quotes ers
\end_inset

s name and score into the binary tree structure.
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_4_2.txt
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The given pseudocode is incomplete as: 
\end_layout

\begin_layout Itemize
it does not initially test that there is free node available for a new student 
\end_layout

\begin_layout Itemize
it does not assign 
\family typewriter
NewName
\family default
 and 
\family typewriter
NewScore
\family default
 to the data fields of the 
\family typewriter
ThisTree
\family default
 array Add these requirements to your program solution. 
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Your program code for Task 4.2. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreePosition
\family default
 and the contents of 
\family typewriter
ThisTree
\family default
 in index order.
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your program code for Task 4.3. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write a main program to: construct a binary search tree using the data provided in the text file 
\family typewriter
SCORES.txt
\family default
 by calling procedure 
\family typewriter
AddNodeToBinaryTree
\family default
 . Your program will then call procedure 
\family typewriter
OutputData
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Your program code for Task 4.4. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 21:
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 4.4 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write a recursive procedure 
\family typewriter
RankList
\family default
 to output the students
\begin_inset Quotes ers
\end_inset

 names and scores in descending scores order. Include a call to the procedure from your main program. Evidence 22: Your program code for Task 4.5. [6]
\end_layout

\begin_layout Subsection*
Evidence 23: 
\end_layout

\begin_layout Standard
Provide a screenshot showing students
\begin_inset Quotes ers
\end_inset

 names and scores in descending scores order. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What do you understand by the usability of a user interface?
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Handheld mobile devices have become increasing prevalent. Shneiderman
\begin_inset Quotes ers
\end_inset

s 
\begin_inset Quotes eld
\end_inset

Golden Rules of Interface Design
\begin_inset Quotes erd
\end_inset

 have existed for some time now. Making use of the 
\begin_inset Quotes eld
\end_inset

Golden Rules
\begin_inset Quotes erd
\end_inset

 as a starting point, grounded in previous research studies proposes a set of guidelines for mobile device interface design. Clear explanation needed to articulate your guidelines. Use examples if necessary to illustrate your point.
\begin_inset space \hfill{}

\end_inset

 [9] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What are the characteristics of client-server network architecture? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 2 examples of servers and explain how they function in a network.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe how parity bits are used to check the accuracy of a block of bits. Give an example to support your answers. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain the following cloud computing concepts: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Software as a service 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Platform as a service 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Infrastructure as a service 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Your company is starting the development of relational database for a patient billing system to be marketed to private medical practices in Singapore. The system is to be called PATMAN (short for PATient billing MANager), and is to run as a remote client-server system and a local area network.
\end_layout

\begin_layout Standard
An initial analysis phase of the project has resulted in the following description of the relevant data for PATMAN. 
\end_layout

\begin_layout Itemize
A practice has a number of patients and doctors. 
\end_layout

\begin_layout Itemize
Doctors are identified by name. 
\end_layout

\begin_layout Itemize
Each patient has a number used to identify the patient called the OHIP number, a name and an age. 
\end_layout

\begin_layout Itemize
Each patient is either a male or female and has a next of kin identified by name. 
\end_layout

\begin_layout Itemize
Each medical procedure paid by the government of Singapore is identified by a procedure code and has a description and a charging category. 
\end_layout

\begin_layout Itemize
Each charging category has a dollar value. 
\end_layout

\begin_layout Itemize
Each patient has a number of billing records, with each billing record recording the medical procedure, the date on which the procedure was performed, the examining doctor and some additional comments on the part of the examining doctor. 
\end_layout

\begin_layout Itemize
Billing records are either outstanding or paid in full. 
\end_layout

\begin_layout Enumerate
Draw an ER diagram that represents the PATMAN data. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Using shorthand notation, what are tables in this relational database?
\begin_inset space \hfill{}

\end_inset

 [12] 
\end_layout

\begin_layout Enumerate
Explain why relational database is better than a flat file design?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The University bookstore sells books online and charges for delivery. Its delivery charges for orders less than $200 are as follows: 
\end_layout

\begin_layout Itemize
If the number of items is 3 or less, delivery by next day will be charged at $30, while standard delivery will be charged at $2 per item. 
\end_layout

\begin_layout Itemize
If the number of items is 4 or more, delivery by next day will be charged at $5 per item, while standard delivery is free. 
\end_layout

\begin_layout Standard
For orders more than $200, standard delivery is free for any number of items, while delivery by next day will be charged at $5 per item. 
\end_layout

\begin_layout Enumerate
Draw a decision table showing all the possible conditions and actions. 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing the redundancies. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
HC university has various campuses around the city and Wilson Parking is responsible for all the university car parks.
\end_layout

\begin_layout Standard
At each car park:
\end_layout

\begin_layout Standard
A car arriving triggers a sensor (S1) and a fixed fee (F) is paid into a machine. This allows a barrier (B1) to be lifted and the car to enter the car park. When a car leaves the car park it passes over another sensor (S2) and another barrier (B2) is lifted.
\end_layout

\begin_layout Standard
Each car park has a maximum number of spaces for cars (M) and when this maximum is reached a 
\begin_inset Quotes eld
\end_inset

FULL
\begin_inset Quotes erd
\end_inset

 sign is illuminated at the entrance and the barrier (B1) will not rise. The car park is closed at least once a day for cleaning purposes. 
\end_layout

\begin_layout Enumerate
Write an algorithm which will control the barriers and which will keep a total (T) of the fees paid. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_deeper
\begin_layout Standard
There are 100 car parks, each of which is identified by a number between 1 and 100.
\end_layout

\begin_layout Standard
At the end of each month, the total fees paid for that month (T) is collected from each of the car parks as an integer value.
\end_layout

\begin_layout Standard
All data are stored in an array Parks(). 
\end_layout

\begin_layout Itemize
For car park x, Parks(x, 1) to Parks(x, 12) contains the totals for the twelve months of the year. 
\end_layout

\begin_layout Itemize
Parks(x, 13) contain the annual total fees collected for each car park. 
\end_layout

\end_deeper
\begin_layout Enumerate
Using Parks(x,y) to identify individual values in the array, write an algorithm which can be used to produce the annual totals once the twelve monthly totals have been input to the array, and the grand annual total for all the 100 carparks. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
When implementing the algorithm into program code, they should be written to display clarity. Describe 
\series bold
three
\series default
 features of the final program code for this implementation that would achieve this goal. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A systems analyst is developing a new computerized admission system for HC University.
\end_layout

\begin_layout Standard
The project manager identifies the following activities with their durations and precedence relations: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Task 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Predecessors 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Time(Weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G, H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a Program Evaluation and Review Technique (PERT) chart, show clearly the early start and late start time of each task, showing dummy tasks, where necessary. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages, giving examples from your chart. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the critical path and the minimum time in which the project can be completed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Produce a Gantt chart based on the above information. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 reason why a Gantt chart may be preferred over a PERT chart. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
In the current system, 
\end_layout

\begin_layout Itemize
Each new student sends a completed form that has their name, date of birth and the courses that they wish to enroll on. 
\end_layout

\begin_layout Itemize
The date of birth is checked to see whether the student is of the correct age range for admission to the college. 
\end_layout

\begin_layout Itemize
If the student is too young or too old, a standard rejection letter is produced. 
\end_layout

\begin_layout Itemize
If the student is of the correct age then each of the courses that the student has identified are checked on the course file to see whether they are full or not. 
\end_layout

\begin_layout Itemize
If there is room on a course then the student name is added to the appropriate course record on the course file. 
\end_layout

\begin_layout Itemize
A standard letter is produced with details of which course(s) the student has been enrolled on. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a data flow diagram (DFD) for the current system. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Using examples from your DFD, explain how the diagram helps to inform a database solution for the new computerized system. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 parts of the database design that is not possible from the DFD. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2015/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Hash table has an index range of 1 to 400. The following pseudocode describes an algorithm for searching the table using a hashing method. It is assumed that the key is present in the table.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1. index = hash(key)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2. while table(index, 1) <> key 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3. 
\begin_inset space \qquad{}

\end_inset

index = index + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4. endwhile 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5. value = table(index, 2) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the purpose of: 
\end_layout

\begin_deeper
\begin_layout Enumerate
line 1 
\end_layout

\begin_layout Enumerate
line 2 
\end_layout

\begin_layout Enumerate
line 3 
\end_layout

\begin_layout Enumerate
line 5 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
in this algorithm. 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\end_deeper
\begin_layout Enumerate
The algorithm fails to handle the upper limit on the range of the index. What modification to the algorithm is required to overcome this problem? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Rainfall_mth.csv
\family default
 is a file which contains monthly total rainfall (in millimetres), for years 1984 to 2014. The format of the record is 
\begin_inset Quotes eld
\end_inset


\series bold

\emph on
[Year] M [Month] , [rainfall in millimetres]
\emph default

\series default

\begin_inset Quotes erd
\end_inset

. Three sample records are: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset


\family typewriter
1984M01, 251.2
\family default

\begin_inset Quotes erd
\end_inset

, which means total rainfall for January 1984 is 251.2; 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset


\family typewriter
1999M07, 225.4
\family default

\begin_inset Quotes erd
\end_inset

, which means total rainfall for July 1999 is 225.4; 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset


\family typewriter
2014M11, 250.8
\family default

\begin_inset Quotes erd
\end_inset

, which means total rainfall for November 2014 is 250.8. 
\end_layout

\begin_layout Standard
The total annual rainfall for a particular year can be calculated by adding the monthly total rainfall for the twelve months.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to find total annual rainfall from 1984 to 2014 and display in a table with a heading and borders as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Year 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Total Annual Rainfall (millimetres in 1 d.p.)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1984 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2686.7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1985 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1483.9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1986 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2536.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... ...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... ...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... ...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2014 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1538.1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 2:
\end_layout

\begin_layout Standard
Screenshot to display total annual rainfall. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\family typewriter
Rainfall_day.csv
\family default
 is another file which contains number of rainy days in a month, for years 2009 to 2014. The format of the record is 
\begin_inset Quotes eld
\end_inset

[Year] M [Month] , [number of days]
\begin_inset Quotes erd
\end_inset

. Three sample record are: 
\end_layout

\begin_layout Itemize

\family typewriter

\begin_inset Quotes eld
\end_inset

2009M03, 19
\begin_inset Quotes erd
\end_inset


\family default
, which means there are 19 rainy days in March 2009; 
\end_layout

\begin_layout Itemize

\family typewriter

\begin_inset Quotes eld
\end_inset

2011M05, 15
\begin_inset Quotes erd
\end_inset


\family default
, which means there are 15 rainy days in May 2011; 
\end_layout

\begin_layout Itemize

\family typewriter

\begin_inset Quotes eld
\end_inset

2014M09, 9
\begin_inset Quotes erd
\end_inset


\family default
, which means there are 9 rainy days in September 2014. 
\end_layout

\begin_layout Standard
The average rainfall for a rainy day for a particular year can be calculated by dividing the total annual rainfall by the total number of rainy days in a year.
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Amend your program code using the following specifications: 
\end_layout

\begin_layout Itemize
Allow user to input a year from 2009 to 2014 
\end_layout

\begin_layout Itemize
Output error message if input is outside these years ‚Äì 2009 to 2014 
\end_layout

\begin_layout Itemize
Calculate the average rainfall for a rainy day for that year 
\end_layout

\begin_layout Itemize
Output the result 
\end_layout

\begin_layout Subsection*
Evidence 3:
\end_layout

\begin_layout Standard
Your amended program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshots that show 2 test cases from running Task 1.2. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Quicksort is a sorting algorithm that employs a divide-and-conquer strategy.
\end_layout

\begin_layout Standard
Here is a high-level description of Quicksort applied to an array A[0 : n ‚Äì 1]: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Select an element from A[0 : n ‚Äì 1] to be the pivot. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Rearrange the elements of A to partition A into a left subarray and a right subarray, such that no element in the left subarray is larger than the pivot and no element in the right subarray is smaller than the pivot. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Recursively sort the left and the right subarrays. 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Study the identifier table and incomplete quicksort algorithm. The missing parts of the algorithm are labelled A, B and C. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Variable 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ThisArray 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ARRAY OF INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array containing the dataset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First index of array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Last 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Last index of array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temp 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temporary variable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Low 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
High 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pivot 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Reference value in array
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION QuickSort(ThisArray, First, Last) RETURNS NULL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DECLARE Temp:INTEGER, Low:INTEGER, High:INTEGER, Pivot:INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Low <- First 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

High <- Last 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

.........A......... //Assign reference value 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE Low <= High 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE(ThisArray[Low] < Pivot) //Scan left
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

.........B......... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE(ThisArray[High] > Pivot) //Scan right
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

High <- High ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Low <= High //Swapping 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <- ThisArray[Low] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisArray[Low] <- ThisArray[High] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisArray[High] <- Temp; 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Low <- Low + 1 //Shift right by 1 element
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

High <- High - 1 //Shift left by 1 element 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF First < High 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

QuickSort(ThisArray, First, High)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Low < Last
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

.........C.........
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
What are the three missing lines of this pseudocode?
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Write a program to implement the quicksort.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
Call procedure 
\family typewriter
InitialiseList
\family default
. 
\end_layout

\begin_layout Itemize
Use the function 
\family typewriter
QuickSort
\family default
 to sort an array of integer 
\family typewriter
[435,646,344,54,23,98,789,212,847,201,733]
\family default
. Copy and paste this array from the file 
\family typewriter
Number.txt
\family default
 into your program. 
\end_layout

\begin_layout Itemize
Output the array 
\bar under
before
\bar default
 and 
\bar under
after
\bar default
 the quicksort algorithm is applied. 
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Program code for Task 2.2.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
Screenshot to show running of program code in Task 2.2.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Amend the program as follows:
\end_layout

\begin_layout Standard
The program must also output the number of function calls carried out.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
The amended program code.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
By selecting different reference values (pivot) and input datasets, and making use of the number of function calls, evaluate the efficiency of the algorithm.
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Evaluation of efficiency of quicksort algorithm with accompanying screenshots (showing runs of function) for different reference values and input datasets.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to find all the words in a piece of text and to print them in alphabetical order, together with the number of times each word occurs. The data structure used to hold this information will be a linked list, with each node holding a word, the number of occurrence of that word, and a pointer to the node containing the next word in alphabetical order.
\end_layout

\begin_layout Standard
The program will use nodes implemented as instances of the class ListNode. The class 
\family typewriter
ListNode
\family default
 has the following properties: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: ListNode
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Word
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node
\begin_inset Quotes ers
\end_inset

s value for a word from the text 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Count
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node's value for number of occurrences of the word
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
LinkedList
\family default
. The class 
\family typewriter
LinkedList
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: LinkedList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[30] of ListNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The linked list data structure ‚Äì data values (Word & Count) and pointers. Array index starts at 0. For testing purposes, the dataset has a maximum of 30 nodes. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the node at the start of the linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: LinkedList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialise 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PROCEDURE 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sets all node data values to empty string (for Word) and 0 (for Count). Set pointers to indicate all nodes are unused and linked. Initialise values for Start and NextFree.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Update 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PROCEDURE 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Updates the linked list with a word read from the text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PROCEDURE 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current state of array content and pointers in table form.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
IsEmpty 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FUNCTION RETURNS BOOLEAN 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test for empty linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
IsFull 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FUNCTION RETURNS BOOLEAN 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test for no unused nodes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the text 
\begin_inset Quotes eld
\end_inset

mary had a little lamb
\begin_inset Quotes erd
\end_inset

 added 
\end_layout

\begin_layout Itemize
the unused nodes linked together. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-PJC-2015-P1-Q3-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
, including the 
\family typewriter
Initialise
\family default
, 
\family typewriter
Display
\family default
, 
\family typewriter
IsEmpty
\family default
 and 
\family typewriter
IsFull
\family default
 method. The code should follow the specification given. Do not write the 
\family typewriter
Update
\family default
 procedure yet.
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Your program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object and run 
\family typewriter
Display
\family default
 procedure to show the content of the object.
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Screenshot confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write code to implement for the 
\family typewriter
LinkedList
\family default
 class the 
\family typewriter
Update
\family default
 method that will update the linked list with a word read from the text.
\end_layout

\begin_layout Subsection*
Evidence 12:
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
Update
\family default
 procedure. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write code to use the Update procedure by reading in the text from the file 
\family typewriter
Story.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 13:
\end_layout

\begin_layout Standard
Screenshot of state of array content and pointers by running 
\family typewriter
Display
\family default
 procedure. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write a method 
\family typewriter
Query
\family default
 inside 
\family typewriter
LinkedList
\family default
 class that: 
\end_layout

\begin_layout Itemize
takes a word input by user, 
\end_layout

\begin_layout Itemize
check if the word exists in the linked list, 
\end_layout

\begin_layout Itemize
output appropriate message with the number of occurrences, if word exists. 
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
Query
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Screenshot from running the 
\family typewriter
Query
\family default
 method for a word that exists and another word that does not exist in the linked list. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Implement a stack class using array using the following properties and methods: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Stack
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[x] of STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
x is the limit, which must be supplied when the object is called 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Limit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The maximum number of elements the stack can hold 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Stack
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates whether any elements are stored in stack or not 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates whether stack is full or not
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Push
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Inserts data onto stack
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pop
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Removes and returns the last inserted element from the stack
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Peek
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the last inserted element without removing it
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Size
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the number of elements stored in stack 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Displays the content of the stack with top of stack clearly indicated
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the stack class with all the properties and methods above.
\end_layout

\begin_layout Subsection*
Evidence 16:
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
A stack can be used to evaluate an arithmetic expression. An arithmetic expression can first be converted from infix notation to postfix notation, then the postfix notation can be evaluated to get the value of the infix notation.
\end_layout

\begin_layout Standard
For example, the infix notation 
\family typewriter
5 * (6 + 2) - 12 / 4
\family default
 can first be converted to postfix notation 
\family typewriter
5 6 2 + * 12 4 / -
\family default
, and then evaluated to 
\family typewriter
37
\family default
 using a stack.
\end_layout

\begin_layout Standard
The following is an algorithm for converting infix notation to postfix notation: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Create an empty stack called 
\family typewriter
opStack
\family default
 for keeping operators. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Scan the token list from left to right. 
\end_layout

\begin_deeper
\begin_layout Itemize
If the token is an operand, append it to the end of the output list. 
\end_layout

\begin_layout Itemize
If the token is a left parenthesis, push it on the 
\family typewriter
opStack
\family default
. 
\end_layout

\begin_layout Itemize
If the token is an operator, 
\family typewriter
*, /, +
\family default
, or 
\family typewriter
-
\family default
, push it on the 
\family typewriter
opStack
\family default
. However, first remove any operators already on the 
\family typewriter
opStack
\family default
 that have higher or equal precedence and append them to the output list. 
\end_layout

\begin_layout Itemize
If the token is a right parenthesis, pop the 
\family typewriter
opStack
\family default
 until the corresponding left parenthesis is removed. Append each operator to the end of the output list. 
\end_layout

\end_deeper
\begin_layout Standard
When the input expression has been completely processed, check the 
\family typewriter
opStack
\family default
. Any operators still on the stack can be removed and appended to the end of the output list.
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for the algorithm to convert infix notation to postfix notation using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION infixToPostfix(infixexpression:STRING):STRING
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
The following algorithm can be used to evaluate postfix notation: 
\end_layout

\begin_layout Enumerate
1. Create an empty stack called 
\family typewriter
operandStack
\family default
. 
\end_layout

\begin_layout Enumerate
2. Scan the token list from left to right. 
\end_layout

\begin_deeper
\begin_layout Itemize
If the token is an operand, convert it from a string to an integer and push the value onto the 
\family typewriter
operandStack
\family default
. 
\end_layout

\begin_layout Itemize
If the token is an operator, 
\family typewriter
*, /, +, 
\family default
or 
\family typewriter
-
\family default
, it will need two operands. Pop the 
\family typewriter
operandStack
\family default
 twice. The first pop is the second operand and the second pop is the first operand. Perform the arithmetic operation. Push the result back on the 
\family typewriter
operandStack
\family default
. 
\end_layout

\end_deeper
\begin_layout Standard
When the input expression has been completely processed, the result is on the stack. Pop the 
\family typewriter
operandStack
\family default
 and return the value.
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write program code for the algorithm to evaluate postfix notation using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION postfixEval(postfixexpression:STRING):FLOAT 
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Task 4.4
\end_layout

\begin_layout Standard
Write program code to read the infix expressions from the file Infix.txt and output its postfix expressions and its evaluation.
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Screenshot of running your program code in Task 4.4.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
PJ Parcels is a company that specialises in the delivery and collection of parcels for business customers. To use their services, a customer must first register for an account. The customer needs to provide their company name, address, telephone number and the name of a main contact for any queries.
\end_layout

\begin_layout Standard
As part of the registration process, the customer will have to decide if they wish to pay monthly on receipt of an invoice, or via credit card for each delivery made. If paying by credit card, then the card details are also required. Once these details have been accepted, the customer will be issued with an account number that they must quote when contacting the company.
\end_layout

\begin_layout Standard
When a customer requires a parcel to be delivered, they will contact PJ Parcels to arrange collection. The customer needs to provide details of where the parcel will be collected from; where it will be delivered to; how many parcels are to be collected and which type of service they want, for example, next day delivery.
\end_layout

\begin_layout Standard
Once the collection has been arranged, an Airway Bill will be generated. The details on this will be used by a Dispatcher to schedule the vehicle needed for the collection. Each parcel will be given a priority number by the Dispatcher and those with the highest priority will be collected first.
\end_layout

\begin_layout Standard
By 12 noon each day, the Dispatcher also needs to generate a delivery schedule to ensure all the parcels are delivered according to the service required.
\end_layout

\begin_layout Standard
Each Driver has a mobile device with a copy of the Airway Bill; a person at the delivery address must sign this to say that the parcel has been delivered. This will flag that the delivery has been completed.
\end_layout

\begin_layout Standard
Once the parcel has been delivered, if the customer pays via credit card, their card will be debited by the amount required, or if they pay monthly, then the invoice account will be debited. Once a month, the Finance Department will generate the invoices for payment.
\end_layout

\begin_layout Standard
If the parcel cannot be delivered for any reason, it will be returned to the Depot and a card will be left with at the delivery address with details of how to arrange re-delivery.
\end_layout

\begin_layout Standard
The company has decided to replace this manual system with an on-line computerised system.
\end_layout

\begin_layout Standard
A 
\series bold
system developer
\series default
 is employed to carry out the task. The first task assigned to the system developer is to write a project proposal. 
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the Problem Statement. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The system developer (who will act as project manager) has drawn up an initial plan of the work involved: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weeks
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
elicit requirements from the intended users, and draw up a specification 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
system analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
system design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
system development 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
system testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
implementation of computer system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
maintenance 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Task B must follow A.
\end_layout

\begin_layout Standard
Tasks C, D and E can run concurrently, but must follow B.
\end_layout

\begin_layout Standard
Tasks F and G can run concurrently, but cannot start until all three tasks C, D and E have been completed.
\end_layout

\begin_layout Standard
Task H must follow tasks F and G. 
\end_layout

\begin_layout Enumerate
Draw a Program Evaluation and Review Technique (PERT) chart for this project. Use week numbers as the time units. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Copy the following table and complete the earliest and latest start and end time, and the float, for each node. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Task 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Earliest Start Time 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Latest Start Time 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Earliest Finish Time 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Latest Finish Time 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Float
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
State the critical path. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the project could be completed. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages. For each type of stage give an example from this chart. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Draw a Gantt chart showing all eight stages and their dependencies, allowing for the resource allocations as indicated above. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Identify 
\series bold
five
\series default
 key stages with brief description of the software development life cycle (SDLC). 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Explain at which stage of the SDLC was top-down analysis used, and why it helps in the solution of complex problems. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The parcel
\begin_inset Quotes ers
\end_inset

s data from customers entered into the new system needs to be validated and verified.
\end_layout

\begin_deeper
\begin_layout Standard
Explain with examples the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Jane is the software testing engineer for this system. Her test strategy includes beta testing and acceptance testing. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe what is meant by beta testing and how it can be used to test the program. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe what is meant by acceptance testing and how it can be used to test the program. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Some account clerks spend at least part of their week working from home. A system analyst will assist in improving their company communication systems. Explain why it is important to define problem accurately. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Some customers are worried because so much information is being stored about their parcels on the server of the company. Describe the fears that the customers may have and explain what the company can do to allay those fears. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
When data is transmitted across the network it is sent in bytes. The following bytes of data have been received by a device on the network. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent
01101101 10110100 01101000 10100001 
\end_layout

\begin_layout Standard
One of the bytes has been corrupted.
\end_layout

\begin_layout Standard
State which is the corrupt byte, justifying your choice. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how transmitting bytes in 
\series bold
blocks
\series default
 can allow the receiving device to selfcorrect errors. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
When data is transmitted on a network it can use a number of different transmission modes. State what is meant by each of the following modes of data transmission. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Simplex 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Duplex 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Half-duplex 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is going to write part of the new system, using an object-oriented programming language, which will store details of customers. All customers will be identified by their CUST_ID. Properties identified type of customers is: 
\end_layout

\begin_layout Itemize
Payment_type 
\end_layout

\begin_layout Enumerate
Draw a diagram that shows how the properties could be distributed amongst a number of classes. Include in your diagram any inheritance between classes. Also indicate some of the methods that would be required. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
In the context of object-oriented programming explain what is meant by: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation; 
\end_layout

\begin_layout Enumerate
inheritance; 
\end_layout

\begin_layout Enumerate
polymorphism.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A recursive algorithm for finding a value, SearchItem, in an ordered array, X, is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Search(Low, High) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Mid =(Low + High) div 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

If X(Mid) = SearchItem then output 
\begin_inset Quotes qld
\end_inset

found
\begin_inset Quotes qrd
\end_inset

 : exit 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

If X(Mid) > Searchltem then Search(Low, Mid-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Else Search(Mid+1, High) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
End Search 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Note: the 
\family typewriter
div
\family default
 operation returns an integer value after division e.g.
\family typewriter
 7 div 2 = 3
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Using the above algorithm: 
\end_layout

\begin_layout Enumerate
Explain what is meant by a recursive algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe what might occur during execution with an incorrectly written recursive routine.
\end_layout

\begin_deeper
\begin_layout Standard
Array 
\family typewriter
X
\family default
 has 15 elements and the subscripts start at 1. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
If the algorithm was used to search the array 
\family typewriter
X
\family default
 for the value stored at 
\family typewriter
X(3)
\family default
 state the calls to Search as the recursion executes. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The algorithm does not handle the case where SearchItem is not present in 
\family typewriter
X
\family default
. Indicate what changes need to be made to Search to rectify this problem. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
For this method of searching state the maximum number of comparisons and the minimum number of comparisons for array 
\family typewriter
X
\family default
, justifying your answers. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An alternative solution for this project is to use cloud computing.
\end_layout

\begin_layout Standard
Discuss briefly the 
\series bold
three
\series default
 services that could be used for the new project. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
PJC Enterprise plans to create a computer system to store data on its employees and the insurance type and coverage for each of them. An employee may be insured by more than one policy. A solution is to create a database with three tables: 
\emph on
Employee
\emph default
, 
\emph on
Insurance
\emph default
 and 
\emph on
Policy
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Employee
\emph default
 table contains information about its employees. 
\emph on
Insurance
\emph default
 table gives information on the insurance plan type and the date of issue of the policy for an employee. 
\emph on
Policy
\emph default
 table contains, for each type of insurance plan, a description of its coverage and its monthly cost. 
\end_layout

\begin_layout Enumerate
Draw a fully labelled ER diagram (with attributes) to show how the tables Employee, Insurance, Policy are related, while keeping data redundancy to a minimum. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Using examples taken from this application explain what is meant by: 
\end_layout

\begin_deeper
\begin_layout Enumerate
a primary key 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
a foreign key 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
a composite key 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Write a SQL query to find the monthly cost of Jessie Tan
\begin_inset Quotes ers
\end_inset

s insurance. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why using a database for PJC Enterprise, rather than flat files, results in: 
\end_layout

\begin_deeper
\begin_layout Enumerate
improved data consistency 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
prevention of data redundancy 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
data independence 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how the following tools can help employees of PJC Enterprise make use of data in a database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
query language
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
report generator 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer system is to be used to monitor the condition of patients in a ward of a hospital. The computer system can help to identify the patient, monitor the respiratory rate, heart rate, blood pressure and temperature, and administer the medicine and its dosage. 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 input devices for such a computer system and how they can be used by the user. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 output of the system, and give reasons why they are useful. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Describe the effects on the jobs of the nursing staff by the introduction of such a computerised system. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A supermarket has a membership scheme and offer discounts to members who make purchases. The rules that apply to its customers making purchases and offered discounts are as follows: 
\end_layout

\begin_layout Itemize
if a customer spends $50 or more in a single transaction, a 3% discount would be given, 
\end_layout

\begin_layout Itemize
if a customer spends $150 or more in a single transaction, a 10% discount would be given, 
\end_layout

\begin_layout Itemize
for payment by cash, an additional 1% discount would be given, on top of the discount. 
\end_layout

\begin_layout Standard
Create a decision table and simplify it by removing redundancies.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A system to produce utility bills starts with a hand held device to record the meter readings. The readings are then recorded into a file and processed against the customer master file to produce the printed utility bills for the customers. Draw a data flow diagram for this system. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2015/P2/Q9] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
For the following list, perform an insertion sort in ascending order. Show the list after each exchange. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
98, 12, 23, 8, 74, 30, 62
\family default
 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Write an algorithm in pseudocode for the insertion sort. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Why is insertion sort preferred to bubble sort? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
High-level programming languages usually have libraries of commonly used routines. These include random number generators.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to generate 1000 random integers in the range 1 to 20.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
Maintain a count of how many times each number is produced 
\end_layout

\begin_layout Itemize
Print out a frequency table.
\end_layout

\begin_deeper
\begin_layout Standard
Example output:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="21" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Frequency
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
52
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
43
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
5: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
6: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
51
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
7: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
41
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
8: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
9: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
53
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
10: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
51
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
11: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
12: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
13: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
44
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
14: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
15: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
16: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
59
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
17: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
47
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
18: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
49
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
19: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
66
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
20: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
53
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
Random numbers generated by computers are usually referred to as pseudo-random numbers because they are generated by executing program code.
\end_layout

\begin_layout Standard
One criterion of a good pseudo-random number generator is that every number in the range has an equal chance of being generated. This means if 200 numbers are generated in the range 1 to 10, the expected frequency value of every number in this range is 20.
\end_layout

\begin_layout Standard
The program code is to be amended to check how well the given pseudo-random number generator meets this requirement.
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
Calculate the expected frequency 
\end_layout

\begin_layout Itemize
Output this expected frequency 
\end_layout

\begin_layout Itemize
Output the difference between the actual and the expected frequency for each number in the range as a third column of the frequency table. 
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers are identified by ID numbers. These ID numbers are to be stored in a hash table. The hashing function to be used is 
\end_layout

\begin_layout Standard
\align center

\family typewriter
Address <- IDnumber MOD Max 
\family default
 
\end_layout

\begin_layout Standard
The hash table is implemented as a one-dimensional array with elements indexed 0 to 
\family typewriter
(Max-1)
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Read ID numbers from a text file and store them in a hash table. For the purpose of testing the program. Max is to be set to the value 20.
\end_layout

\begin_deeper
\begin_layout Standard
Assume different IDs will hash to different addresses (no collisions). 
\end_layout

\end_deeper
\begin_layout Itemize
Print out the contents of the hash table in the order in which the elements are stored in the array. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Amend your program code so that collisions can be managed using open hashing. This means a collision is resolved by searching sequentially from the hashed address for an empty location and storing the ID at this empty location.
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS2.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Add code to your Task 2.2 program.
\end_layout

\begin_layout Standard
The program is to: 
\end_layout

\begin_layout Itemize
Take as input an ID number 
\end_layout

\begin_layout Itemize
Search the hash table and output the address (index number) of the hash table where the ID was found. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS2.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Standard
Run the program three times. Use the following inputs: 37, 77 and 97.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary tree Abstract Data Type (ADT) has commands to create a new tree, add unique data items to the tree and print the tree.
\end_layout

\begin_layout Standard
The sequence of commands:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CreateNewTree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Dave
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Fred
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Ed
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Greg
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Bob
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Cid
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Ali
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
would create the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
 designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Tree
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
tree : ARRAY OF Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
add(newItem)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
print() 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset


\family typewriter
Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
leftPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
rightPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setData(s : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setLeftPtr(x : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setRightPtr(y : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getData() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
summary() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getLeftPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getRightPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The program code must: 
\end_layout

\begin_layout Itemize
Create a new tree, which has: 
\end_layout

\begin_deeper
\begin_layout Itemize
no nodes 
\end_layout

\begin_layout Itemize
the root set to -1 
\end_layout

\end_deeper
\begin_layout Itemize
Use the root as a pointer to the first node in the tree 
\end_layout

\begin_layout Itemize
Add a new node to the tree in the appropriate position 
\end_layout

\begin_layout Itemize
Use the 
\family typewriter
print()
\family default
 method to output, for each node, in array order: 
\end_layout

\begin_deeper
\begin_layout Itemize
the data item 
\end_layout

\begin_layout Itemize
the left pointer 
\end_layout

\begin_layout Itemize
the right pointer. 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[30]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
The program is to be tested.
\end_layout

\begin_layout Standard
Write a sequence of program statements to: 
\end_layout

\begin_layout Itemize
Create a tree 
\end_layout

\begin_layout Itemize
Add the data items shown in the original list of ADT commands 
\end_layout

\begin_layout Itemize
Print the array contents. 
\end_layout

\begin_layout Standard
Execute your program to test it.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
A method 
\family typewriter
inOrderTraversal()
\family default
 is to be added, which outputs the data stored in the tree in alphabetical order.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Implement this method 
\end_layout

\begin_layout Itemize
Test the program code with the data from Task 3.2. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Numbers in Computing are often represented in hexadecimal form.
\end_layout

\begin_layout Standard
A program is required to convert a hexadecimal number into a denary number and vice versa.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code with the following specification: . 
\end_layout

\begin_layout Itemize
Input a hexadecimal number as a string 
\end_layout

\begin_layout Itemize
Validate the input 
\end_layout

\begin_layout Itemize
Calculate the denary value of each hexadecimal digit (write this code as a function) 
\end_layout

\begin_layout Itemize
Calculate the denary value of the hexadecimal number input 
\end_layout

\begin_layout Itemize
Output the denary value. 
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable test cases. Complete a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hexadecimal Number 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
The completed table.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write additional code to convert a denary number into a hexadecimal number.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Draw up a list of
\series bold
 three
\series default
 suitable test cases. Complete a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Denary Number 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
The completed table.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Many elderly people spend later life in a nursing home. The Ministry of Health (MOH) requires each nursing home to keep detailed care records for each resident. Care staff make daily entries in the care records about all aspects of resident care. These care records are currently paper-based documents. There is no common format for the documents that different nursing homes use.
\end_layout

\begin_layout Standard
Care staff do not have computer access to medical records that each resident
\begin_inset Quotes els
\end_inset

s doctor holds. Nurses at a nursing home need to keep their own medical records and to consult with residents
\begin_inset Quotes els
\end_inset

 doctors.
\end_layout

\begin_layout Standard
The MOH is planning an initiative to computerise all care records and would like all nursing homes to use a common design for care records.
\end_layout

\begin_layout Standard
The MOH will send a project proposal which is to be circulated to all nursing homes. This is to find out which homes would consider taking part in a pilot project. The MOH's aim is to introduce a pilot system into a single nursing home.
\end_layout

\begin_layout Standard
The MOH needs to find a software house to design and implement the computerised care record system. It will send the project proposal to software houses.
\end_layout

\begin_layout Standard
At a later date, all nursing homes will use the new computer system. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
four
\series default
 topics you would expect to find in this project proposal.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Describe the purpose of this project proposal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Following production of the project proposal. the initial activities with their expected times are as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="50col%">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Label
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Activity 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Time (weeks)
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send the project proposal document to all nursing homes. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Circulate the project proposal document to a number of software houses. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Review the feedback. Note which nursing homes and software houses have expressed interest. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
identify doctors who look after residents in homes that have expressed interest. Hold a presentation meeting to explain the proposed project to these doctors. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Presentation event for the chosen nursing home. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The Program Evaluation and Review Technique (PERT) chart for these initial activities is shown below. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the critical path for the initial activities. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Calculate the minimum time these initial activities will take.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

In activity E, the MOH presented more details about the project to the manager and care staff of the chosen nursing home. The manager and care staff raised a number of points about both social and ethical issues associated with the project.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 points that could have been raised.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Standard
Following activity E, the MOH decided the software house to which it would award the contract.
\end_layout

\begin_layout Standard
Following the initial project proposal. activities which make up the system development cycle are shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="50col%">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Label
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Time (weeks)
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data entry of current care record data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initial testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Program development 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Install new hardware in nursing home 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alpha testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Beta testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Implementation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q1-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The system development cycle starts at node (time point) 7. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The PERT chart shows four activities with dashed lines. Explain the significance of the dashed lines.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain the meanings of a dependent stage and concurrent stages in a PERT chart. Give an example of each for this project. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The table describes activity I as 
\begin_inset Quotes els
\end_inset

initial testing'. One category of initial testing is white-box testing.
\end_layout

\begin_deeper
\begin_layout Standard
Name and describe two other categories of initial testing. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The PERT chart indicates that some testing can commence almost as soon as program development does. Describe the type of program development that would allow for this.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

An analyst from the software house carried out the analysis for the project.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 examples of people whom the analyst consulted. For each example. state: 
\end_layout

\begin_layout Itemize
the fact finding technique used 
\end_layout

\begin_layout Itemize
the nature of the information that the analyst obtained. 
\end_layout

\begin_layout Standard
Each fact finding technique should be different.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

When the analysis stage was completed. the following decisions were taken: 
\end_layout

\begin_deeper
\begin_layout Itemize
Each nursing home will store and manage its own care records data. 
\end_layout

\begin_layout Itemize
Each nursing home will be provided with a local area network (LAN). 
\end_layout

\begin_layout Itemize
The care record system on each LAN will use a client-server model with a web interface for client computers. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Enumerate
Explain the meaning of the term client-server model. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State the 
\series bold
two
\series default
 items of software that the LAN will use to implement this client-server design. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
During the presentation event to doctors (part of activity D). the doctors gave feedback. They said that they would like to have access to the new computerised care records from their own offices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

A second phase of the project is to allow each nursing home access to the medical data stored by doctors. This will involve connecting the LAN for each nursing home to a number of doctors' surgery LANs. 
\end_layout

\begin_deeper
\begin_layout Enumerate
(l) State 
\series bold
two
\series default
 methods for ensuring the security of access to the care record network application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
(ll) Give 
\series bold
two
\series default
 methods for protecting the security of the LAN. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A firm hires vehicles to customers. A customer usually makes a booking a number of weeks before the start of the hire period. The customer pays a deposit at the time of the booking and the balance when they return the vehicle from hire.
\end_layout

\begin_layout Standard
At the time of the booking, the firm records the following data: 
\end_layout

\begin_layout Itemize
customer data, including a customer reference code 
\end_layout

\begin_layout Itemize
booking date 
\end_layout

\begin_layout Itemize
hire start date 
\end_layout

\begin_layout Itemize
hire return date 
\end_layout

\begin_layout Itemize
type of vehicle 
\end_layout

\begin_layout Itemize
deposit taken 
\end_layout

\begin_layout Standard
Vehicle types are coded as follows: 
\end_layout

\begin_layout Itemize
Small car - SC 
\end_layout

\begin_layout Itemize
Large car - LC 
\end_layout

\begin_layout Itemize
Utility vehicle - UV 
\end_layout

\begin_layout Standard
Each vehicle type has its own daily charge, for each day of the hire period.
\end_layout

\begin_layout Standard
Each vehicle has a unique registration.
\end_layout

\begin_layout Standard
Customers may make more than one booking. The software will not allow a customer to make more than one booking for the same start date.
\end_layout

\begin_layout Standard
The document below is an example of an invoice printed for the customer when they return the vehicle and pay the balance due. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
The firm wants to model this application using a relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
A database needs a number of tables to store the data for this application. Draw the Entity-Relationship (E-R) diagram showing the tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attributel
\bar default

\family default

\family typewriter
 , Attribute2 , Attribute3 , ....) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write table descriptions for the tables you identified in 
\series bold
part (i)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The firm implements the relational database using a Database Management System (DBMS). It writes programs to access the data using a Graphical User Interface (GUI).
\end_layout

\begin_deeper
\begin_layout Standard
One program is for recording a new booking.
\end_layout

\begin_layout Standard
The firm uses different types of components in a GUI for the display and entry of data.
\end_layout

\begin_layout Standard
Name 
\series bold
three
\series default
 types of component that the booking form could use and give the types of data it is used to capture. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive procedure 
\family typewriter
X
\family default
 was two parameters, 
\family typewriter
Value
\family default
 and 
\family typewriter
Index
\family default
. The procedure processes the contents of an array, 
\family typewriter
T
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE X(Value, Index)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF T[Index] > 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] > Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

X(Value, Index * 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] < Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

X(Value, Index * 2 + 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] = Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

True
\begin_inset Quotes qrd
\end_inset


\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
l6 
\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a recursive procedure. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Give the two line numbers which indicate that procedure x is recursive. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
An array T is used to store the data for a binary tree. A program places items in the array in the order in which they joined the tree structure. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="15">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary tree for the array 
\family typewriter
T
\family default
 dataset. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Copy and then complete the trace table for the procedure call 
\family typewriter
X(18, 1)
\family default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Procedure call 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Value
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
18
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe the purpose of procedure 
\family typewriter
X
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Data is to be transmitted in packets between two computers.
\end_layout

\begin_layout Standard
Each packet message can consist of: 
\end_layout

\begin_layout Itemize
upper case letters 
\end_layout

\begin_layout Itemize
the <Space> character. 
\end_layout

\begin_layout Standard
Each packet has a start character (#) and an end character (#).
\end_layout

\begin_layout Standard
A typical packet would be: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
#ETA FROM SRE#
\family default
 
\end_layout

\begin_layout Enumerate
Describe
\series bold
 two
\series default
 checks that the receiving computer should make for the integrity of: 
\end_layout

\begin_deeper
\begin_layout Itemize
the individual bytes which make up a packet 
\end_layout

\begin_layout Itemize
the collection of bytes which makes up the packet. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe 
\series bold
three
\series default
 validation checks that the receiving computer should pertorm on the packet. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer implements a linked list of surnames with a start pointer, 
\family typewriter
StartPtr
\family default
 and two one-dimensional arrays: 
\end_layout

\begin_layout Itemize
Array 
\family typewriter
Data
\family default
 stores the surnames. 
\end_layout

\begin_layout Itemize
Array 
\family typewriter
Ptr
\family default
 stores the link pointers. 
\end_layout

\begin_layout Itemize
Both arrays have lower bound 1 and upper bound 3000. 
\end_layout

\begin_layout Standard
The purpose of procedure 
\family typewriter
InsertListItem
\family default
 is to insert a new surname to the linked list.
\end_layout

\begin_layout Standard
Assume a function 
\family typewriter
NextFree()
\family default
 is available and returns: 
\end_layout

\begin_layout Itemize
the index position for the array 
\family typewriter
Data
\family default
 at which the new surname is to be inserted 
\end_layout

\begin_layout Itemize
-1 when the 
\family typewriter
Data
\family default
 array is full. 
\end_layout

\begin_layout Standard
The programmer designs the algorithm as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE InsertListItem(NewSurname : STRING) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF NextFree() = ‚Äî1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

List is full
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O6 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// input the surname 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF StartPtr = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

StartPtr w NextFree() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Data[StartPtr] e NewSurname 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the linked list to find the position 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// at which to insert NewSurname
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Describe the state of the linked list. if the condition 
\family typewriter
StartPtr = 0
\family default
 in line 
\family typewriter
07
\family default
 is 
\family typewriter
True
\family default
. [1] 
\end_layout

\begin_layout Enumerate
It is now necessary to complete the design for procedure 
\family typewriter
InsertListItem
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The pseudocode already uses some variables.
\end_layout

\begin_deeper
\begin_layout Standard
Copy the table below and complete it to show any extra variables that you will need to use. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Variable
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Write the pseudocode for line 
\family typewriter
14
\family default
 onwards to complete the procedure. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A real-estate management company owns a number of residential and business units. When the company first acquires a unit, it often requires renovation work. The company records the renovation cost.
\end_layout

\begin_layout Standard
A residential unit will be a house or an individual flat within a building. A business unit will be either an office building, a storage unit or a factory.
\end_layout

\begin_layout Standard
A residential unit is either advertised for sale, with the company looking to make a profit, or retained for rental. If the unit is sold, the sale price is recorded. If the unit is retained, the monthly rental charged, the start date and length of the rental (in months) are recorded.
\end_layout

\begin_layout Standard
A business unit has a long term lease, which is usually 10 years or longer. The company records the nature of the business. it does not offer any of its business units for sale.
\end_layout

\begin_layout Standard
Other data recorded for a unit include: purchase price, purchase date, number of rooms, floor space, whether or not a lift is present. The company records whether the house has a garage and whether it has a garden.
\end_layout

\begin_layout Standard
A programmer will develop an application, using object-oriented programming to store and process the company
\begin_inset Quotes ers
\end_inset

s data. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\family typewriter
UNIT
\family default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-class(es) 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
the properties required 
\end_layout

\begin_layout Itemize
appropriate methods, including 
\series bold
one
\series default
 pair of 
\begin_inset Quotes els
\end_inset

get
\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset

set
\begin_inset Quotes els
\end_inset

 methods for 
\series bold
one
\series default
 of the properties.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\end_deeper
\begin_layout Enumerate
The company has recently purchased a number of units that they want to renovate as a 
\begin_inset Quotes els
\end_inset

block of flats
\begin_inset Quotes ers
\end_inset

 (a number of self-contained flats in the same building). Once the renovation is complete, the company may offer a block of flats for sale. Alternatively, it may retain the unit and advertise each individual flat for rental.
\end_layout

\begin_deeper
\begin_layout Standard
Explain how this would affect the design in 
\series bold
part (a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the meaning of the term encapsulation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the meaning of the term polymorphism. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In Olympic diving, scoring is done by a panel comprising a minimum of 3 judges. The highest and lowest scores are dropped to eliminate the extremes. The raw score is computed by summing the middle scores. The raw score is then multiplied by the level of difficulty to give the total score.
\end_layout

\begin_layout Standard
Sample scoring for a 5-judges panel: Scores:
\end_layout

\begin_layout Standard
6.5, 6, 6.5, 6, 5.5
\end_layout

\begin_layout Standard
Lowest (5.5) and highest (6.5) scores dropped
\end_layout

\begin_layout Standard
Raw Score = 18.5 (6.5 + 6 + 6)
\end_layout

\begin_layout Standard
Total Score = Score (18.5) x Difficulty Level (1.5) = 27.75
\end_layout

\begin_layout Standard

\family typewriter
DIVE1.TXT
\family default
 contains the countries, difficulty levels and 5-judges scores for a diving competition.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to determine the podium winners of the competition. Your program should output the medal (Gold, Silver, Bronze), country name and the total score (to 2 decimal places).
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Gold: China 45.90 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Silver: Malaysia 39.20
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bronze: United States 36.00 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
In most international competitions with more than five judges, the 3/5 method is used. The middle 5 numbers are added and then multiplied by the difficulty of the dive and then multiplied again by 0.6. 
\family typewriter
DIVE2.TXT
\family default
 contains the countries, difficulty levels and 9-judges scores for a diving competition.
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code to determine the podium winners of the competition. Your program should output the medal (Gold, Silver, Bronze), country name as well as the total score (to 2 decimal places).
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Quicksort is an efficient sorting algorithm to order values in an array.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write a recursive quicksort method to sort the values in the text file 
\family typewriter
DATA.TXT
\family default
 in descending order.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Program code for Task 2.1. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 6:
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Using a suitable data structure, convert the recursive quicksort in Task 2.1 to one using iteration. Confirm the correctness of your iterative quicksort on the data set used in Task 2.1
\end_layout

\begin_layout Subsection*
Evidence 7:
\end_layout

\begin_layout Standard
Program code for Task 2.2.
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A Pokemon Go fan who nicknames himself Pokeboy wishes to manage his Pokemon collection using a binary search tree. Each binary search tree node stores the name together with the numbers of that particular Pokemon and candies collected, as well as a reference to a linked list. Each linked list node stores the combat power (CP) of a Pokemon. The binary search tree is organised in ascending Pokemon name order. Each linked list is organised in descending order of CP. For ease of reference, we shall name this composite data structure Poketree.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Using object-oriented programming, construct appropriate classes to initialise, insert and display the contents of the Poketree. In your main driver program, write code to initialise a Poketree with the first Pokemon collected which is randomly generated from the contents in the file 
\family typewriter
POKEMONS.TXT
\family default
 as well as a randomly generated CP in the range 10 to 200 inclusive. When a Pokemon is caught, 3 candies of that kind are also added to the candies count of the Poketree binary search tree node.
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Program code for class definition, initialisation and display methods.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 10:
\end_layout

\begin_layout Standard
Screenshot output to show contents of Poketree with first Pokemon inserted.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a class method 
\family typewriter
insert()
\family default
 and the necessary main driver program code to insert another 23 randomly generated Pokemons and their corresponding CPs into the Poketree.
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Program code for Task 3.2.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 12:
\end_layout

\begin_layout Standard
Screenshot to show updated contents of Poketree.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
Apart from collecting Pokemons, one can also evolve Pokemons. When a new Pokemon is evolved, its previous incarnation is deleted from the Poketree and its new incarnation either inserted (if its kind is not previously collected) or updated (if its kind is previously collected) to the Poketree. Evolving also requires a set amount and type of Pokemon candy. If there is insufficient Pokemon candies, Pokeboy's preferred action is to exchange (i.e. delete) existing Pokemons of the same species for candies, starting from the Pokemon with the lowest CP. Each Pokemon can be exchanged for one candy. Pokeboy also wishes to keep at least 2 Pokemons of the same species in his collection (well he is a Pokemon fan). The text file 
\family typewriter
CANDIES.TXT
\family default
 contains the candies requirement for evolvement.
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a Boolean class method 
\family typewriter
can_evolve(pokemon)
\family default
 to determine if a particular Pokemon can evolve by Pokeboy's preference. A Pokemon can evolve if there are sufficient candies or it is possible to exchange candies, leaving a minimum of 2 Pokemons of that species.
\end_layout

\begin_layout Standard
Write a class method evolve(pokemon) which will evolve a Pokemon using 
\family typewriter
can_evolve(pokemon)
\family default
.
\end_layout

\begin_layout Standard
Add necessary class method(s) and main driver program code to evolve all evolvable Pokemons.
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Program code for Task 3.3.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 14:
\end_layout

\begin_layout Standard
Screenshot(s) to show evolution.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write a class method 
\family typewriter
most_poke()
\family default
 to output the frequency and most collected Pokemon(s) collected by Pokeboy.
\end_layout

\begin_layout Standard
Add necessary program code to exercise 
\family typewriter
most_poke()
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Program code for Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 16:
\end_layout

\begin_layout Standard
Screenshot for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.5
\end_layout

\begin_layout Standard
Pokeboy aspires to join the Catch Them All club. The Catch Them All club is a group of elites who have managed to catch every species of Pokemon at least once. Write a class method 
\family typewriter
catch_them_all()
\family default
 to either output the message 
\begin_inset Quotes qld
\end_inset

Welcome to the club! You have caught them all!
\begin_inset Quotes qrd
\end_inset

 or output the number and remaining Pokemon names yet to be caught.
\end_layout

\begin_layout Standard
Add necessary program code to exercise 
\family typewriter
catch_them_all()
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 17:
\end_layout

\begin_layout Standard
Program code for Task 3.5.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Screenshot for annotated test cases. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.6 
\end_layout

\begin_layout Standard
After some time, it becomes necessary to reorganise the binary search tree to ensure optimal search performance. Write program code to rebalance the binary search tree and include as comments your strategy to do this. You should output the roots and heights of the old and new binary search trees.
\end_layout

\begin_layout Subsection*
Evidence 19:
\end_layout

\begin_layout Standard
Program code for Task 3.6.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 20:
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A magic index in an array A is defined to be an index such that 
\family typewriter
A[i] = i
\family default
.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Given a sorted array of distinct integers, write a brute force iterative method 
\family typewriter
magic_index(A)
\family default
 to find a magic index if one exists. If a magic index does not exist, return -1.
\end_layout

\begin_layout Subsection*
Evidence 21: 
\end_layout

\begin_layout Standard
Function code for 
\family typewriter
magic_index(A)
\family default
 and relevant driver code.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 22: 
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write an efficient recursive method 
\family typewriter
magic_index_duplicates(A)
\family default
 to find a magic index for an array containing non-distinct values. If a magic index does not exist, return -1.
\end_layout

\begin_layout Subsection*
Evidence 23: 
\end_layout

\begin_layout Standard
Function code for 
\family typewriter
magic_index_duplicates(A)
\family default
 and relevant driver code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 24:
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
A child is running up a staircase with n steps and can hop either 1, 2 or 3 steps at a time.
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a brute force recursive method to count how many possible ways the child can run up the stairs.
\end_layout

\begin_layout Subsection*
Evidence 25: 
\end_layout

\begin_layout Standard
Function code and relevant driver code.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 26: 
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Optimise your brute force recursive solution in Task 4.3 by eliminating unnecessary recomputations.
\end_layout

\begin_layout Subsection*
Evidence 27: 
\end_layout

\begin_layout Standard
Function code and relevant driver code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 28:
\end_layout

\begin_layout Standard
Screenshots showing annotated test cases. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
GovBuy is a Government Digital Services initiative that helps government employees buy microservices (small pieces of software that can be deployed independently), software libraries, non-critical bug fixes or even customised hardware from independent contractors.
\end_layout

\begin_layout Standard
The platform allows government employees to post a task. Anyone can bid to take on the task during the bidding period. The reverse auction starts at $5,000 and the lowest bid wins.
\end_layout

\begin_layout Standard
The winner works on the task and submits completed code to the team. If the code meets the acceptance criteria before the deadline, the winner is sent a cheque for the work.
\end_layout

\begin_layout Standard
The current prototype platform is a web interface: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2016-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
The agency in charge wishes to develop mobile native versions of the platform for Android and iOS. The following diagram shows the expected workflow. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2016-P2-Q1-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Create a PERT chart from the above workflow diagram. You may assume the following durations from the activity table below.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Phase 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration (weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Gather and document requirements 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
UI and workflow design and approval 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design and architect 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Build (coding) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Testing and validation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Customer QA and approval 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepare and submit to Google Play Store 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepare and submit to Apple App Store 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Apple approval 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
From the PERT chart, state the critical path and the minimum project completion time. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two benefits which can be gained by producing a PERT chart.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe and give an example of a dependent activity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe and give an example of a concurrent activity.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The project manager decides he needs another diagrammatic tool to monitor the project progress. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a Gantt chart for the project.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain how the Gantt chart can help the developers in carrying out their work.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe two activities to mark the closure of the project. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Cybersecurity is of paramount concern when it comes to government web services. Using suitable examples, explain the following cybersecurity exploits and suggest how they can be mitigated. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Cross site scripting 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Code injection 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Denial of service attack 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
The platform will be hosted using cloud computing. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why the cloud is a suitable hosting platform. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Use suitable example to illustrate the concepts of IaaS, PaaS and SaaS. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
What ethical considerations should bidders bear in mind when bidding for tasks on an open source platform such as GitHub?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The current GovBuy prototype supports two types of reverse auctions: a standard reverse auction and a sealed bid auction.
\end_layout

\begin_layout Standard
A standard reverse auction is one where bids begin at $5,000. The lowest possible bid is $1, and an auction automatically ends once a $1 bid has been submitted. Bidders are allowed to submit multiple bids throughout the duration of the auction. Bidders will see whether they are the winning bidder after submitting a bid, and will have an opportunity to submit a lower bid if the auction is still running. The GitHub user names of participating bidders are hidden during the auction. At the end of the auction, all bidders' GitHub accounts and bid amounts will be unsealed and posted on the GovBuy platform. A sealed bid auction is a type of reverse auction. Each bidder is allowed to submit only one bid in an auction. Once a bid is submitted, the bidder may not submit a second bid for the same auction. The lowest bidder at the conclusion of the auction will still win the auction. In the event that one or more bidders have the same bid amount, the bidder who was first to submit the lowest bid amount will win the auction. All bids will stay sealed until the end of the auction. A bidder will not know the amounts other bidders have bidded on the auction, or how many bids have been submitted. At the end of the auction, all bidders' GitHub accounts and bid amounts will be unsealed and posted on the GovBuy platform. 
\end_layout

\begin_layout Enumerate
Illustrate the types of reverse auctions in a class UML diagram. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Using your illustration, explain the following OOP concepts: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
inheritance 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
polymorphism 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q3]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following code shows the program 
\family typewriter
mystery1
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
epsilon = 0.01 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
step = epsilon ** 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
num_guesses = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ans = 0.0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
while abs(ans ** 2 - x) >= epsilon and ans * ans <= x: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ans += step 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

num_guesses += 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

#Guesses =
\begin_inset Quotes qrd
\end_inset

, num_guesses) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

Answer =
\begin_inset Quotes qrd
\end_inset

, ans) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Running the program with 
\family typewriter
x = 25
\family default
 gives the following output:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
#Guesses = 49990 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer = 4.999000000001688
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
What do you think is the purpose of the program 
\family typewriter
mystery1
\family default
? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Comment on the efficiency of program mystery1. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
An alternative version, program 
\family typewriter
mystery2
\family default
 is provided as follows.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
epsilon = 0.01
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
num_guesses = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
low = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
high = x
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ans = (high + low) / 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
while abs(ans ** 2 - x) >= epsilon:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

num_guesses += 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if ans ** 2 < x: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

low = ans 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

high = ans
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ans = (high + low) / 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

#Guesses =
\begin_inset Quotes qrd
\end_inset

, num_guesses)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

Answer =
\begin_inset Quotes qrd
\end_inset

, ans) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Running the program with 
\family typewriter
x = 25
\family default
 gives the following output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
#Guesses = 13 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer = 5.00030517578125 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Comment on the efficiency of program 
\family typewriter
mystery2
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
For 
\family typewriter
x = 123456
\family default
, 
\family typewriter
mystery1
\family default
 gives the following output:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
#Guesses = 3513631
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer = 351.36309998343665
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Justify a reasonable estimate for the number of guesses for 
\family typewriter
mystery2
\family default
 for 
\family typewriter
x = 123456
\family default
? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Given a list of integers, the task is to find the number with the highest occurrence. Describe and devise an algorithm for this task using: 
\end_layout

\begin_layout Enumerate
array 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
binary search tree 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
hash table / dictionary
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In ASCII, the decimal representation of the uppercase letter 'A' is 65. Uppercase letters precede their lowercase equivalents with the offset amount 32. 
\end_layout

\begin_layout Enumerate
Determine the decimal representation of the lowercase letter 'g'.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
State the range of ASCII in decimal.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
In Unicode, the legal range of codepoints is U+0000 through U+10FFFF. How many potential characters can be represented in decimal? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Devise an algorithm utilising a stack to convert a non-negative integer from decimal to hexadecimal.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2016/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
HonestBee is an end-to-end online grocery ordering and delivery service. When a customer makes orders from a grocery store, a concierge shopper handpicks the best products, and a delivery bee brings the groceries to the customer's doorstep. The following online cart page shows the current order of a customer: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2016-P2-Q6-1.png
	width 60page%

\end_inset

 
\end_layout

\begin_layout Standard
In the event that the item is out of stock, the customer can also opt for 3 options: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2016-P2-Q6-2.png
	width 60page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Produce a normalised relational database schema showing the table specifications. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram illustrating the entities and their relationships. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Using suitable examples from this context, explain the concepts of 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key (for the Customer table) 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
composite key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Orders below $30 is charged a delivery fee of $10, else delivery fee is waived. Some orders may incur a concierge fee for special instructions. Where should fields such as delivery fee and concierge fee be stored? Why? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A 
\series bold

\emph on
palindrome
\emph default

\series default
 is an integer that reads the same backwards and forwards ‚Äì so 6, 11 and 121 are all palindromes, while 10, 12, 223 and 2244 are not (even though 010=10, we don't consider leading zeroes when determining whether a number is a palindrome).
\end_layout

\begin_layout Standard
A 
\series bold

\emph on
fair and square
\emph default

\series default
 number is an integer that is a 
\emph on
palindrome
\emph default
 
\series bold
and
\series default
 the 
\emph on
square of a palindrome
\emph default
 at the same time. For instance, 1, 9 and 121 are fair and square (being palindromes and squares, respectively, of 1, 3 and 11), while 16, 22 and 676 are not fair and square: 16 is 
\series bold
not
\series default
 a palindrome, 22 is not a square, and while 676 is a palindrome and a square number, it is the square of 26, which is not a palindrome.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code with the following specification: 
\end_layout

\begin_layout Itemize
Input two integers -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- the endpoints of an interval e.g. 
\family typewriter
100 1000 
\family default
 
\end_layout

\begin_layout Itemize
Output all fair and square numbers, if any, in the interval (inclusive of endpoints). 
\end_layout

\begin_layout Itemize
Output a count of the number of fair and square numbers in the interval. 
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code for Task 1.1.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Produce three screenshots showing the output of 
\family typewriter
1 4
\family default
, 
\family typewriter
10 120
\family default
 and 
\family typewriter
100 1000
\family default
 by the user.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.2:
\end_layout

\begin_layout Standard
Write program code to output the first 10 positive fair and square numbers.
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code for Task 1.2.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 4:
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The data file 
\family typewriter
FRUITS.txt
\family default
 contains a list of fruit names.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code to sort the fruit names in 
\family typewriter
FRUITS.txt
\family default
 in descending order using insertion sort.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code for Task 2.1. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code to insert fruit names in 
\family typewriter
FRUITS.txt
\family default
 to a binary search tree using a linked structure.
\end_layout

\begin_layout Subsection*
Evidence 7:
\end_layout

\begin_layout Standard
Your program code for Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code to display the binary search tree contents in preorder, inorder and postorder.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A transport company has a number of vehicles which can carry passengers. Each vehicle is classified either as a bus or as a coach. All vehicles have a registration number and have a certain number of seats for the passengers. A bus can have a maximum number of standing passengers, but a coach is not allowed to carry any standing passengers. Some of the coaches are fitted with seat belts, but seat belts are never fitted in a bus.
\end_layout

\begin_layout Standard
The transport company currently has a data file,
\family typewriter
 VEHICLE.dat
\family default
, stores the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
RegNo
\family default
 is used to uniquely identify a particular vehicle. A typical vehicle registration number comes in the format 
\begin_inset Quotes qld
\end_inset

SBA1234
\begin_inset Quotes qrd
\end_inset

: 
\end_layout

\begin_deeper
\begin_layout Itemize
S ‚Äì vehicle class (
\begin_inset Quotes qrd
\end_inset

S
\begin_inset Quotes qrd
\end_inset

 stands for a private vehicle) 
\end_layout

\begin_layout Itemize
BA ‚Äì alphabetical series (
\begin_inset Quotes qrd
\end_inset

I
\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset

O
\begin_inset Quotes qrd
\end_inset

 are not used to avoid confusion with 
\begin_inset Quotes qld
\end_inset

1
\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset

0
\begin_inset Quotes qrd
\end_inset

) 
\end_layout

\begin_layout Itemize
1234 ‚Äì numerical series 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
NoOfSeats
\family default
 is the maximum number of seats for passengers that each vehicle can carry. 
\end_layout

\begin_layout Itemize

\family typewriter
VehicleType
\family default
 is the type of the vehicle and can take one of the two values: 
\begin_inset Quotes els
\end_inset


\family typewriter
B
\family default

\begin_inset Quotes ers
\end_inset

 for a bus and 
\begin_inset Quotes els
\end_inset

C
\begin_inset Quotes ers
\end_inset

 for a coach. 
\end_layout

\begin_layout Standard

\family typewriter
VEHICLE.dat
\family default
 has the following structure:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
<NumberOfRecords>
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
<RegNo>|<NoOfSeats>|<VehicleType> 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
<RegNo>|<NoOfSeats>|<VehicleType> 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
<RegNo>|<NoOfSeats>|<VehicleType> 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
NumberOfRecords
\family default
 is the number of records in the file.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Complete the test case table with the addition of 
\series bold
three
\series default
 more invalid vehicle registration numbers. The reasons for their invalidity should be different.
\end_layout

\begin_layout Standard
The return value is a code as follows: 
\end_layout

\begin_layout Itemize
0 ‚Äì valid registration number 
\end_layout

\begin_layout Itemize
1 ‚Äì the registration number was not 7 characters 
\end_layout

\begin_layout Itemize
you will use other integer numbers for other invalid cases.
\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RegNo
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Return value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Explanation of the test case
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SBA1234
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Valid registration number
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
The completed test case table. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code for a function to validate a registration number. The function header has the format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION ValidateRegNo(ThisRegNo : STRING) RETURNS INTEGER 
\family default
 
\end_layout

\begin_layout Standard
Write a program to: 
\end_layout

\begin_layout Itemize
Input a registration number by the user 
\end_layout

\begin_layout Itemize
Validate the input using the function 
\family typewriter
ValidateRegNo
\family default
 
\end_layout

\begin_layout Itemize
Output a message describing the validity of the input. 
\end_layout

\begin_layout Subsection*
Evidence 11:
\end_layout

\begin_layout Itemize
Program code for the function 
\family typewriter
ValidateRegNo
\family default

\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Itemize
Three screenshots showing the testing of Test Numbers 2, 3 and 4.. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
Additional data now needs to be stored about the vehicle: 
\end_layout

\begin_layout Itemize

\family typewriter
MaxStanding
\family default
 is the maximum number of standing passengers that a vehicle classified as of type 
\begin_inset Quotes els
\end_inset


\family typewriter
B
\family default

\begin_inset Quotes ers
\end_inset

 can carry. 
\end_layout

\begin_layout Itemize

\family typewriter
SeatBeltsFitted
\family default
 is a field that indicates whether a vehicle of type 
\begin_inset Quotes els
\end_inset


\family typewriter
C
\family default

\begin_inset Quotes ers
\end_inset

 has fitted with seat belts. 
\end_layout

\begin_layout Standard
The program design to process data about the vehicles is to be implemented with objectoriented programming with the following three classes: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2016-P1-Q3-1.png
	width 35page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write program code for the three classes shown. Evidence 12: Program code for the three classes. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
The data in 
\family typewriter
VEHICLE.dat
\family default
 does not currently contain the following additional data: 
\end_layout

\begin_layout Itemize
MaxStanding 
\end_layout

\begin_layout Itemize
SeatBeltsFitted 
\end_layout

\begin_layout Standard
Write code to read a record from 
\family typewriter
VEHICLE.dat
\family default
 and write the updated record to 
\family typewriter
UVEHICLE.dat
\family default
.
\end_layout

\begin_layout Standard
As the data on each vehicle is read it should be displayed and the user should be allowed to input the additional data required.
\end_layout

\begin_layout Standard
The user should be prompted to input the data item appropriate to the type of vehicle.
\end_layout

\begin_layout Standard
The number of standing passengers is never more than 15.
\end_layout

\begin_layout Standard
For a 
\begin_inset Quotes els
\end_inset


\family typewriter
C
\family default

\begin_inset Quotes ers
\end_inset

 type vehicle the 
\family typewriter
MaxStanding
\family default
 field should contain a zero value.
\end_layout

\begin_layout Standard
The 
\family typewriter
SeatBeltsFitted
\family default
 field should contain an appropriate value. You are expected to make use of the classes you designed in Task 3.3.
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Program code for Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [10]
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Screenshot showing the contents of 
\family typewriter
UVEHICLE.dat
\family default
 from running the program.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to represent and implement a linked list of nodes. Each node contains a string data value and a pointer. The pointers link the data items in alphabetical order.
\end_layout

\begin_layout Standard
The unused nodes are linked as shown below. The first unused node is the position where the next new data item is to be stored. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2016-P1-Q4-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the names 
\family typewriter
Sam
\family default
, 
\family typewriter
Tom
\family default
, 
\family typewriter
Ben
\family default
 and 
\family typewriter
Ken
\family default
 (added in that order). 
\end_layout

\begin_layout Itemize
the unused nodes linked together. 
\end_layout

\begin_layout Standard
The program will use a user-defined type 
\family typewriter
ListNode
\family default
 for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PointerValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node pointer 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
LinkedList
\family default
. The class 
\family typewriter
LinkedList
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: LinkedList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[10] OF ListNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The linked list data structure ‚Äì data values and pointers. The array index starts at 1. For testing purposes, the dataset has a maximum of 10 items.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the node at the start of the linked list. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the next unused node.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Initialise
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sets all node data values to empty string. Set pointers to indicate all nodes are unused and linked. Initialise values for 
\family typewriter
Start
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AddNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add a new data item to the linked list. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RemoveNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove a data item from the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current state of pointers and the array contents.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
BOOLEAN FUNCTION
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test for empty linked list. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
BOOLEAN FUNCTION
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test for no unused nodes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code that repeatedly: 
\end_layout

\begin_layout Itemize
displays a menu with the following choices: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Add an item 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Remove an item 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Output all pointers and data values 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset

Exit 
\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure depending on the user
\begin_inset Quotes ers
\end_inset

s choice. 
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Program code for Task 4.1. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
. Including the 
\family typewriter
Initialise
\family default
, 
\family typewriter
IsEmpty
\family default
, 
\family typewriter
IsFull
\family default
 and 
\family typewriter
Display
\family default
 methods. The code should follow the specification given. Do not attempt to write the methods 
\family typewriter
AddNode
\family default
 and 
\family typewriter
RemoveNode
\family default
 at this stage.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program.
\end_layout

\begin_layout Standard
Run the program and select menu choice 3 to confirm the initial values of the pointers and data values when the linked list is empty.
\end_layout

\begin_layout Subsection*
Evidence 17:
\end_layout

\begin_layout Standard
Screenshot confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
 object.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
Consider the 
\family typewriter
AddNode
\family default
 method. The following pseudocode adds a new data item to the linked list. The algorithm uses the variables below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
NewItem 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
STRING 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New data item input by the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Found 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
BOOLEAN 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
lags to TRUE when the position at which to insert the new item has been found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Current 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Previous 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Previous array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temp 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temporary storage of pointer value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddNode
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

INPUT NewItem
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Node[NextFree].DataValue = NewItem
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Temp = NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

NextFree = Node[NextFree].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# traverse the list to find the position to 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# insert the new item 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Found = False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Current = Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Previous = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE NOT Found AND Current != 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem > Node[Current].DataValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# move on to the next node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous = Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current = Node[Current].PointerValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found = True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Previous = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# new item will become the start of the list
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Start = Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Temp].PointerValue = Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# new item is between previous and current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Previous].PointerValue = Temp
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Temp].PointerValue = Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Identifier Data Type Description F Current Note: The above pseudocode is available in the text file 
\family typewriter
PSEUDOCODE_TASK_4_4.txt
\family default

\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write code to implement the 
\family typewriter
AddNode
\family default
 method for the 
\family typewriter
LinkedList
\family default
 class.
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_4_4.txt
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The main program should check each time that the 
\family typewriter
LinkedList
\family default
 object is not full before using the 
\family typewriter
AddNode
\family default
 method.
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Sam
\family default
, 
\family typewriter
Tom
\family default
, 
\family typewriter
Ben
\family default
, 
\family typewriter
Ken
\family default
 in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 3 to display. 
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Your program code for Task 4.4. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Screenshot showing the pointers and the addition of the four nodes to the linked list. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write code to implement the 
\family typewriter
RemoveNode
\family default
 method for the 
\family typewriter
LinkedList
\family default
 class.
\end_layout

\begin_layout Standard
The main program should check each time that the LinkedList object is not empty before using the 
\family typewriter
RemoveNode
\family default
 method. Node removed from the linked list should be returned to the NextFree list.
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Sam
\family default
, 
\family typewriter
Tom
\family default
, 
\family typewriter
Ben
\family default
, 
\family typewriter
Ken
\family default
 in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 2 two times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Sam
\family default
, 
\family typewriter
Ben
\family default
 in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 3 to display. 
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Your program code for Task 4.5. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 21: 
\end_layout

\begin_layout Standard
Screenshot showing the pointers and data values after the addition of the four nodes followed by the removal of two nodes to the linked list. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Using the information in the table below, assuming that the project team will work a standard working week (5 working days in 1 week) and that all tasks will start as soon as possible: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Task 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration (Working Days) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Predecessor/s 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Requirement Analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Systems Design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programming 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Telecoms 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hardware Installation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integration 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C, D
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
System Testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E, F
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Training/Support 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Handover and Go-Liv 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw a Program Evaluation and Review Technique (PERT) chart, show clearly the early start and late start time of each task, showing dummy tasks, where necessary. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain the nature and purpose of a dummy activity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages, giving examples from your chart. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the critical path and the minimum time in which the project can be completed in weeks.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Identify any non-critical tasks and the float (free slack) on each.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Produce a Gantt chart based on the above information.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The owner of HC Book Caf√© wishes to converts his book caf√© into a self-service book club caf√© for members only. All access to food or books is via a 
\begin_inset Quotes eld
\end_inset

vending machine
\begin_inset Quotes erd
\end_inset

 concept using the member
\begin_inset Quotes ers
\end_inset

s card.
\end_layout

\begin_layout Standard
There is a stock of 2000 different book titles and multiple copies of popular titles. Books may be hired by members. Different rates are charged for different books. Members are allowed to hire no more than 5 items at anytime.
\end_layout

\begin_layout Standard
Members can enjoy a light snack while viewing their favourite book. If the book is returned the same day via the book drop, hire charges are not incurred. All food and hire charges incurred for the month is billed to the member every 12th of the following month. Cash transaction is not available.
\end_layout

\begin_layout Standard
The shop owner wishes to computerize the system to handle the various transactions and stock control. The system should also perform the following functions: 
\end_layout

\begin_layout Itemize
Hold up-to-date details of members and stock 
\end_layout

\begin_layout Itemize
Allow enquiry to determine the whereabouts, and dates of return, of particular books 
\end_layout

\begin_layout Itemize
Produce an itemized bill for each customer at end of each month. 
\end_layout

\begin_layout Enumerate
The system analyst of a software house was to design the computerized system. What documentation should the system analyst produce and state 5 necessary contents of the documentation? Who would use it and state 2 reasons for use.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Enumerate
List the files, giving details of the fields which it may contain, that would be required for this system, and draw the data flow diagram of the computerized system. 
\begin_inset space \hfill{}

\end_inset

 [12] 
\end_layout

\begin_layout Enumerate
HC Book Caf√© offers a member loyalty program that offers a range of discounts. For members in the loyalty program between 3 to 5 years, they will receive a 5% discount. For more than 5 years, the member will receive a 10% discount. However, whether a member is in the loyalty program or not, if the cumulative value of his transactions for this calendar year exceed $1000, he will receive a 15% discount. However, note that aggregation of discounts is not allowed. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table that shows all possible outcomes for the above loyalty program. 
\end_layout

\begin_layout Enumerate
Draw the decision table after redundancies have been removed. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Given two positive integers 
\family typewriter
M
\family default
 and 
\family typewriter
N
\family default
, the function 
\family typewriter
GCD(M, N)
\family default
 is defined by 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

If 
\family typewriter
M < N
\family default
, swap 
\family typewriter
M
\family default
 and 
\family typewriter
N
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(ii)
\end_layout

\end_inset

Divide 
\family typewriter
M
\family default
 by 
\family typewriter
N
\family default
 and let 
\family typewriter
R
\family default
 be the remainder. If 
\family typewriter
R = 0
\family default
, 
\family typewriter
N
\family default
 is the answer 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iii)
\end_layout

\end_inset

Set 
\family typewriter
M = N
\family default
, 
\family typewriter
N = R
\family default
 and go back to step (i) 
\end_layout

\begin_layout Standard
Produce a recursive solution for 
\family typewriter
GCD(M,N)
\family default
 using pseudocode. You may assume the availability of the operator 
\family typewriter
MOD
\family default
 as in part 
\series bold
(b)
\series default
.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain what is meant by ASCII code and Unicode.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
A number is stored as a one byte binary integer. How would the number 99 be represented as a one byte binary? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Convert the number 99 into hexadecimal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give two reasons why hexadecimal numbers are used in computing. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q5] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Using the 3 design principle you have learnt in class to assess the interfaces between IOS and Android for mobile. Redraw and complete the table with your points. You may draw user interfaces to illustrate your point. 
\begin_inset space \hfill{}

\end_inset

[15] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design Principals 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
IOS 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Android
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Principal 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Principal 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Principal 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
From the table above, draw a brief conclusion on the usability of the above platforms.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A relational database is to be used by the Human Resource department to recruit and register new students at the beginning of each year. Four tables present in the database are STUDENT, SCHOOL, GRADES, REGISTRATION.
\end_layout

\begin_layout Standard
A brief description of the tables are as follow: 
\end_layout

\begin_layout Itemize
STUDENT table stores the demographic information of students 
\end_layout

\begin_layout Itemize
SCHOOL table stores information of the school they are currently studying 
\end_layout

\begin_layout Itemize
GRADES table stores information of the subjects and grades of the student in the previous year 
\end_layout

\begin_layout Itemize
REGISTRATION ties together all the relevant information of the students from other tables and their registration details 
\end_layout

\begin_layout Enumerate
Draw an E-R diagram to show the relationship between the four tables that provides for a fully normalized database design. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_deeper
\begin_layout Standard
A table description can be expressed as:
\end_layout

\begin_layout Standard

\family typewriter
Tablename[Attribute1, Attribute2, ‚Ä¶.. ] 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. 
\end_layout

\end_deeper
\begin_layout Standard
(b) Give a table description for all the tables. Ensure there are at least 2 attributes in addition to the primary key.
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2016/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Cloud computing is widely used in education to facilitate teaching and learning in classrooms. 
\end_layout

\begin_layout Enumerate
How is computing from the Cloud different from computing traditionally? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What are the benefits of cloud computing?
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
How can Cloud computing assist you as a student in project management? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Four stories are given in four data files: 
\family typewriter
AIRCON.txt
\family default
, 
\family typewriter
BLIND.txt
\family default
, 
\family typewriter
COMP.txt
\family default
, 
\family typewriter
EMPEROR.txt
\family default
. The task is to find the frequency of alphabets used in the stories.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Count the alphabets in each story and display the frequency of each alphabet in a table form. Do not distinguish between upper and lower cases. Do not count non-alphabets. Frequency should be displayed in descending order. Display alphabets with same frequency in ascending order.
\end_layout

\begin_layout Standard
Sample output: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Alphabet
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Frequency
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
e
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
t
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
14
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
12
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default
 and 
\family typewriter
i
\family default
 have same frequency of 12,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
12
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
display 
\family typewriter
a
\family default
 before 
\family typewriter
i
\family default
, since 
\family typewriter
a
\family default
 comes before 
\family typewriter
i
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
o
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
g
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
g
\family default
 and 
\family typewriter
j
\family default
 have same frequency of 12,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
display 
\family typewriter
g
\family default
 before 
\family typewriter
j,
\family default
 since 
\family typewriter
g
\family default
 comes before 
\family typewriter
j
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
z
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code for task 1.1.
\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Screenshot of running 
\family typewriter
AIRCON.txt
\family default
 data file.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Amend your program code to display alphabets and frequencies in all four files in a table form, with alphabets in first column and frequencies of alphabets in subsequent columns. Display in alphabetical order as shown in following sample output: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Alphabet
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AIRCON.txt
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
BLIND.txt
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
COMP.txt
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
EMPEROR.txt
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
115
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
471
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
604
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
490
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
b
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
25
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
87
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
111
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
56
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
c
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
46
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
117
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
230
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
107
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
x
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
38
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
121
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
128
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
130
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
z
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your amended program code for task 1.2. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshot of running your program code.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Write a program to encrypt and decrypt user passwords.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
A set of encryption key is given in the data file 
\family typewriter
ENCRYPT_KEY.txt
\family default
. The encryption key will map each alphabet and number according to the table below. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a ‚Üí m
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
m ‚Üí q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
y ‚Üí c
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
b ‚Üí h
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
n ‚Üí s
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
z ‚Üí a
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
c ‚Üí t
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
o ‚Üí l
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0 ‚Üí 7
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
d ‚Üí f
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
p ‚Üí n
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1 ‚Üí 3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
e ‚Üí g
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
q ‚Üí i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2 ‚Üí 8
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
f ‚Üí k
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
r ‚Üí u
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3 ‚Üí 9
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
g ‚Üí b
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
s ‚Üí o
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4 ‚Üí 5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
h ‚Üí p
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
t ‚Üí x
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5 ‚Üí 6
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i ‚Üí j
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u ‚Üí z
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6 ‚Üí 0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j ‚Üí w
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
v ‚Üí y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7 ‚Üí 1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
k ‚Üí e
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
w ‚Üí v
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8 ‚Üí 4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
l ‚Üí r
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
x ‚Üí d
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9 ‚Üí 2
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
For example, 
\family typewriter
a
\family default
 is mapped to 
\family typewriter
m
\family default
, 
\family typewriter
b
\family default
 mapped to 
\family typewriter
h
\family default
, m mapped to 
\family typewriter
q
\family default
, 
\family typewriter
9
\family default
 mapped to 
\family typewriter
2
\family default
, etc. The mapping is case-sensitive for alphabets. Therefore a password 
\family typewriter
WhizKid123
\family default
 will be encrypted to 
\family typewriter
VpjaEjf389
\family default
.
\end_layout

\begin_layout Standard
Conversely, decryption works in the opposite way. Hence the password 
\family typewriter
VpjaEjf389
\family default
 will be decrypted to 
\family typewriter
WhizKid123
\family default
.
\end_layout

\begin_layout Standard
There is no mapping for symbols. Some examples of symbols are 
\family typewriter
!
\family default
,
\family typewriter
 @
\family default
, 
\family typewriter
#
\family default
, 
\family typewriter
$
\family default
, 
\family typewriter
%
\family default
, 
\family typewriter
^
\family default
. Hence, a password 
\family typewriter
Extr@123
\family default
 will be encrypted to 
\family typewriter
Gdxu@389
\family default
, where the symbol remains the same.
\end_layout

\begin_layout Standard

\series bold

\emph on
Copy and paste
\emph default

\series default
 the encryption key (from data file 
\family typewriter
ENCRYPT_KEY.txt
\family default
)
\series bold

\emph on
 into your program code
\emph default

\series default
 and 
\series bold

\emph on
make use of it
\emph default

\series default
 to write a program that 
\end_layout

\begin_layout Itemize
Allows a user to select option to 
\series bold

\emph on
encrypt
\emph default

\series default
 or 
\series bold

\emph on
decrypt
\emph default

\series default
 a user password 
\end_layout

\begin_layout Itemize
Gets user input of the password, 
\end_layout

\begin_layout Itemize
Encrypts (or decrypts) the password according to user
\begin_inset Quotes ers
\end_inset

s option, 
\end_layout

\begin_layout Itemize
Displays the encrypted or decrypted password 
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code for task 2.1.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 6:
\end_layout

\begin_layout Standard
Screenshot of running program by encrypting 
\family typewriter
WhizKid123
\family default
 and decrypting 
\family typewriter
XgteV^cg84
\family default
.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Amend your program code into a function that accepts two parameters ‚Äì 
\begin_inset Quotes qld
\end_inset


\family typewriter
password
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
encrypt
\family default

\begin_inset Quotes qrd
\end_inset

, and returns the encrypted or decrypted password.
\end_layout

\begin_layout Standard

\family typewriter
FUNCTION Cryptograph(password:STRING, encrypt:BOOLEAN):RETURN STRING 
\family default

\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
Your program code for task 2.2.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code that makes use of the function 
\family typewriter
Cryptograph
\family default
 from task 2.2 that reads all the passwords in data file 
\family typewriter
PASSWORDS.txt
\family default
, encrypts and writes them into another file 
\family typewriter
CONVERTED.txt
\family default
.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sample input file: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
WhizKid123 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Extr@123
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Encrypt and write
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sample output file: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
VpjaEjf389
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Gdxu@389
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Program code for task 2.3. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Screenshot of output file 
\family typewriter
CONVERTED.txt
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Tic-tac-toe is a game in which two players take turns marking X and O in the spaces in a 
\begin_inset Formula $3\times3$
\end_inset

 grid. The player who succeeds in placing three of their marks in a horizontal, vertical, or diagonal row wins the game.
\end_layout

\begin_layout Standard
For example, player who marks 
\family typewriter
X
\family default
 wins this game. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The task is to write program code for a tic-tac-toe game for two human players.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Decide on the design to be used for: 
\end_layout

\begin_layout Itemize
the data structure to represent the 
\begin_inset Formula $3\times3$
\end_inset

 grid, using the identifier 
\family typewriter
board
\family default
 
\end_layout

\begin_layout Itemize
the contents of the marks (
\family typewriter
X
\family default
, 
\family typewriter
O
\family default
 and blank) in the spaces 
\end_layout

\begin_layout Itemize
how user input (
\family typewriter
X
\family default
 or 
\family typewriter
O
\family default
) in the spaces 
\end_layout

\begin_layout Subsection*
Evidence 10:
\end_layout

\begin_layout Standard
Your program design. Include program code for board. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
displayBoard
\family default
 that will display the game 
\family typewriter
board
\family default
 clearly to the players. You should use the board as a parameter in 
\family typewriter
displayBoard
\family default
.
\end_layout

\begin_layout Standard
Write another function 
\family typewriter
displayInstructions
\family default
 to inform players on how to input 
\family typewriter
X
\family default
 and 
\family typewriter
O
\family default
 in the spaces on the game board.
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Your functions 
\family typewriter
displayBoard
\family default
 and 
\family typewriter
displayInstructions
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
getPlayerMove
\family default
 to get players to make their move (by marking 
\family typewriter
X
\family default
 or 
\family typewriter
O
\family default
) on the board. You should include validation on user input and check that the space is not already occupied. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters.
\end_layout

\begin_layout Subsubsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your function 
\family typewriter
getPlayerMove
\family default
. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
checkWin
\family default
 that checks all the conditions for winning a game and returns 
\family typewriter
True
\family default
 if a player has won the game, otherwise return 
\family typewriter
False
\family default
. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters.
\end_layout

\begin_layout Subsection*
Evidence 13:
\end_layout

\begin_layout Standard
Your function 
\family typewriter
checkWin
\family default
. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.5
\end_layout

\begin_layout Standard
Write a 
\family typewriter
main
\family default
 function that makes use of the identifiers and functions from task 3.1 to task 3.4 and allows two human players to play a game of tic-tac-toe.
\end_layout

\begin_layout Standard
The 
\family typewriter
main
\family default
 function should include the following: 
\end_layout

\begin_layout Itemize
give instructions to players on how to input 
\family typewriter
X
\family default
 or 
\family typewriter
O
\family default
 
\end_layout

\begin_layout Itemize
ask whether player 1 or player 2 starts first move 
\end_layout

\begin_layout Itemize
ensure players 1 and 2 take turns to make their move 
\end_layout

\begin_layout Itemize
display the game board after every move made by a player 
\end_layout

\begin_layout Itemize
check for winner 
\end_layout

\begin_layout Itemize
display message on which player has won the game or whether the game ends in a draw 
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
main
\family default
 function. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Run your 
\family typewriter
main
\family default
 function and produce screenshots of 
\series bold
three
\series default
 games where player 1 wins one game, player 2 wins another game, and a drawn game. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A college uses a binary tree structure to store its subjects offered to students.
\end_layout

\begin_layout Standard
The program will use a user-defined type 
\family typewriter
Node
\family default
 for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Subject
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node's value for subject offered
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left pointer for the node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is maintained of all unused nodes which do not form part of the tree. The first available node which is used for a new item is indicated by NextFreePosition. Items in the unused list are linked using their left pointers.
\end_layout

\begin_layout Standard
The binary tree and linked list are implemented using variables as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SubjectTree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The tree data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the root node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreePosition
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the binary tree and linked list after five subjects have been added. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-PJC-2016-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write the program code to declare all the required variables and create the initial linked list which contains all 30 nodes.
\end_layout

\begin_layout Standard
Add statement(s) to initialise the empty tree.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Your program code for task 4.1. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
The following incomplete pseudocode inserts a data value into the binary tree structure.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE InsertBinaryTree(NewItem)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

... ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF tree is empty 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

... ...
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//traverse the tree to find the insert position 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

... ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove = 'X'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PreviousPtr <- CurrentPtr 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem < CurrentPtr item
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//move left
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPtr <- CurrentPtr's left pointer
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove = 'Left' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//move right 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPtr <- CurrentPtr's right pointer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove = 'Right'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL CurrentPtr = NULL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LastMove = 'Left'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

... ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE IF LastMove = 'Right'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

... ...
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

... ... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END PROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Complete the pseudocode and write a module 
\family typewriter
AddSubject
\family default
 to add a subject into the binary tree.
\end_layout

\begin_layout Subsection*
Evidence 17:
\end_layout

\begin_layout Standard
Your 
\family typewriter
AddSubject
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a module 
\family typewriter
Display
\family default
 to display the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreePosition
\family default
 and the contents of 
\family typewriter
SubjectTree
\family default
 in index order.
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
Display
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.4
\end_layout

\begin_layout Standard
Write a module 
\family typewriter
BuildTree
\family default
 to construct a binary tree using the data provided in the data file 
\family typewriter
SUBJECT.TXT
\family default
. Read in all the data from the data file and use the 
\family typewriter
AddSubject
\family default
 module.
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
BuildTree
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Evidence 20:
\end_layout

\begin_layout Standard
Run your program and produce screenshot of contents of binary tree. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
Deleting a node from a tree may change the structure of the tree. To simplify the deletion process, label a node as 
\begin_inset Quotes eld
\end_inset


\family typewriter
deleted
\family default

\begin_inset Quotes erd
\end_inset

 but 
\series bold
do not remove the node
\series default
 from the tree structure. After that, regenerate the entire tree structure.
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write a module 
\family typewriter
LabelDelete
\family default
 that labels a node as 
\begin_inset Quotes eld
\end_inset


\family typewriter
deleted
\family default

\begin_inset Quotes erd
\end_inset

 but do not remove the node from the tree structure.
\end_layout

\begin_layout Subsection*
Evidence 21: 
\end_layout

\begin_layout Standard
Your LabelDelete program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 4.6
\end_layout

\begin_layout Standard
Write program code to regenerate the entire binary tree.
\end_layout

\begin_layout Subsection*
Evidence 22: 
\end_layout

\begin_layout Standard
Your program code to regenerate the binary tree. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 23:
\end_layout

\begin_layout Standard
Display a screenshot of the regenerated binary tree after deleting 
\begin_inset Quotes eld
\end_inset


\family typewriter
Chemistry
\family default

\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset


\family typewriter
History
\family default

\begin_inset Quotes erd
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The PJC clinic has several doctors. When a patient wants to book an appointment with a doctor, the patient rings the doctors' receptionist. The receptionist asks for the following details: 
\end_layout

\begin_layout Itemize
patient name 
\end_layout

\begin_layout Itemize
first line of address 
\end_layout

\begin_layout Itemize
doctor requested 
\end_layout

\begin_layout Standard
The receptionist checks the files to ensure that the patient is registered with the clinic. The receptionist looks to find the requested doctor's free appointments in the appointments book. The receptionist offers the patient a day and a time for the appointment. If this is agreed then the patient's name is written in the space in the appointment book for that day and time.
\end_layout

\begin_layout Standard
At the beginning of every day, the receptionist types an appointment list for each of the doctors for that day. The list contains the appointment times and patients
\begin_inset Quotes ers
\end_inset

 names. When the patient arrives at the doctors' clinic for their appointment, they give their name to the receptionist. The receptionist informs each doctor as their patients arrive.
\end_layout

\begin_layout Standard
The clinic has decided to replace this manual system with an on-line computerised system.
\end_layout

\begin_layout Standard
A 
\series bold
system developer
\series default
 is employed to carry out the task. The first task assigned to the system developer is to write a project proposal. 
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the 
\series bold
Problem Statement
\series default
. [4] 
\end_layout

\begin_layout Enumerate
The system developer has drawn up an initial plan of the work involved: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Stage
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Weeks
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
identify requirements 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
produce design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
write code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
black box testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
acceptance testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
prepare documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
From this data, a Program Evaluation Review Technique (PERT) chart is constructed. The stage is between the nodes in circles. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-PJC-2016-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Complete the PERT chart by writing the stage (A, B, ‚Ä¶) and duration between the nodes. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State the critical path. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the project could be completed. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
For activity D: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iv.1)
\end_layout

\end_inset

state the earliest start time. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iv.2)
\end_layout

\end_inset

state the latest finish time. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Two stages start and end at the same nodes. Re-draw the PERT chart by using an extra dummy stage separating them. Explain the nature and purpose of a dummy stage. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages. For each type of stage give an example from this chart. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Draw a Gantt chart showing all stages and their dependencies.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe any 
\series bold
three
\series default
 key stages (System analysis, System design, System development, Testing, Implementation of computer system, Documentation, Maintenance) of the software development life cycle. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Explain why the problem must be defined accurately before the analyst starts work. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Name two methods the analyst could use to gather information about the existing manual system. Explain how each method would be used to gather information about this manual system. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
When the receptionist types an appointment for a patient, explain why the patient name and first line of address need to be entered. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The following pseudocode algorithm describes one method of finding an arbitrary patient name in an alphabetically ordered array of 
\family typewriter
N
\family default
 unique names.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
SET first to 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
SET last to N 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

SET mid to the integer part of (first + last)/2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF the mid name precedes the wanted name 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN SET first to mid + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SET last to mid ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
UNTIL first > last OR mid name is the wanted name 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
If 142 patients
\begin_inset Quotes ers
\end_inset

 names are stored in the array, and Natasha is the 44th name, state the elements of the array that are examined when searching for Natasha.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
If a search is made for a name that is not in the array, what is the largest number of elements that might need to be examined before one could say that the name is not present? Explain how you arrive at your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Before releasing the software, it is tested using a variety of strategies. Describe the following test strategies: 
\end_layout

\begin_deeper
\begin_layout Enumerate
White box testing 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Black box testing
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are the assistant of the system developer. You have been asked to draw up a plan to provide security within the system you are developing. Describe measures you can take to ensure 
\end_layout

\begin_layout Enumerate
The reliability and integrity of your data 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Physical security
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Errors may occur during data transmission. Two methods of checking for these errors are check sums and parity checks 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a check sum is used to check transmitted data for errors. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Parity bits can be used to check for errors in transmission and may also be used to check and self-correct data in blocks. Explain how parity checks of data blocks can sometimes be used to correct transmission errors automatically.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the differences between using packet switching and circuit switching to transmit a message.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is going to write part of the new system, using an object-oriented programming language, which will store details of patients.
\end_layout

\begin_layout Standard
All patients will be identified by their PATIENT_ID.
\end_layout

\begin_layout Standard
Normal patients will pay cash for their visit but corporate patients will charge into their company account.
\end_layout

\begin_layout Standard
Properties identified type of payments is: 
\end_layout

\begin_layout Itemize
Payment_type 
\end_layout

\begin_layout Enumerate
Draw a diagram that shows how the properties could be distributed amongst a number of classes. Include in your diagram any inheritance between classes. Also indicate some of the methods that would be required. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
In the context of object-oriented programming explain what is meant by: 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation; 
\end_layout

\begin_layout Enumerate
inheritance; 
\end_layout

\begin_layout Enumerate
polymorphism 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An alternative solution for this project is to use cloud computing.
\end_layout

\begin_layout Standard
Discuss briefly the 
\series bold
three
\series default
 services that could be used for the new project. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q5] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The following is a byte stored in a file which contains binary code: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
10011010 
\family default
 
\end_layout

\begin_layout Enumerate
What is the corresponding denary number? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
What is the corresponding hexadecimal number? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
An operating system provides a user interface to a computer system.
\end_layout

\begin_deeper
\begin_layout Standard
Describe two different types of interface that an operating system provides. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Many modern operating systems support Unicode. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is Unicode? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
What are the advantages of Unicode over ASCII? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following shows some data that are stored in a college. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Student no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Student Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programme 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Programme Duration (years) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Module No 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Module Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lecturer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13828 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Elvin Gan 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P302 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M165, M121 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Visual Arts, Networking 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fang, Jason
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13253 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Goh Seng Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M121, M110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Networking, Database 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jason, Kabu
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13423 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yong Kee Le 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P502 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M181, M107, M110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Music, Accounting, Database 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sunny, Honto, Kabu
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13098 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mahesh Babu 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P306 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M121, M110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Networking, Database 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jason, Kabu 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A student is enrolled onto a programme and may take several modules as part of this programme. A module is only delivered by one lecturer. 
\end_layout

\begin_layout Enumerate
These data are in its un-normalised form. Explain the problems associated with it. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Normalise the data and write them in 
\series bold
four
\series default
 tables. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram that shows the relationships between these four tables. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An online order company charges $8 for delivery of packages. If the order value is over $60, the package is small and the customer has a promotion code, the delivery is free. If the order value is over $60 and the package is small, the delivery charge is $2. If the order value is over $60 and the customer has a promotion code, the delivery charge is $2. 
\end_layout

\begin_layout Enumerate
Draw a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Consider the following program in pseudocode, which includes a recursive function that calculates the power of an integer.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
010 PROGRAM 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
020
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
030 FUNCTION Power(Base: INTEGER, Exponent: INTEGER) RETURN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
040 INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
050 
\begin_inset space \qquad{}

\end_inset

IF Exponent = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
060 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
070 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Result <- 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
080 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
090 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Result <- Base * Power(Base, Exponent ‚Äì 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
100 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
110 
\begin_inset space \qquad{}

\end_inset

RETURN Result 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
120 ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
130 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
140
\begin_inset space ~

\end_inset

// main program
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
150 DECLARE Answer: INTEGER, Base: INTEGER, Exponent: INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
160 INPUT Base 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
170 INPUT Exponent 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
180 Answer <- Power(Base, Exponent) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

OUTPUT Answer 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Trace the execution of the function call 
\family typewriter
Power(2,3)
\family default
, showing for each re-entry into the 
\family typewriter
Power
\family default
 function, the values passed to the function and the results returned.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
The program is executed, starting from line 140. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain how the stack content changes during the execution of the program, with input of 2 for 
\family typewriter
Base
\family default
 (line 150), and 3 for 
\family typewriter
Exponent
\family default
 (line 160).
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write a pseudocode for a non-recursive version of the 
\family typewriter
Power
\family default
 function. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State one reason why a non-recursive 
\family typewriter
Power
\family default
 function may be preferred to a recursive one. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2016/P2/Q9] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list is stored in an array of records. One record represents a node and consists of the data and a pointer.
\end_layout

\begin_layout Standard
The diagram shows an implementation of an 
\series bold
ordered linked list
\series default
 before any data is inserted into it. NULL is represented by a value of 0. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
List
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[1] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Start
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[2] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[3] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
NextFree
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[4] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[5] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[6] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[7] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Show the state of the 
\series bold
ordered linked list
\series default
 after 
\series bold
three
\series default
 data items have been added to it in the given order: 
\emph on
Paris
\emph default
, 
\emph on
Tokyo
\emph default
, 
\emph on
Santiago
\emph default
.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Write the algorithm for the procedure to insert a new node into an ordered linked list. Use the identifiers above and include suitable annotations.
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Enumerate
Describe how a stack can be implemented as a linked list. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A role-playing computer game includes a list of items called the inventory. This inventory can be represented using a one-dimensional (1 -D) array or a list structure.
\end_layout

\begin_layout Standard

\family typewriter
INVENTORY.TXT
\family default
 is a text file containing the items from the computer game inventory. Each item type can have many occurrences. For example:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Inventory
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ItemType
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
read the entire contents of 
\family typewriter
INVENTORY.TXT
\family default
 to an appropriate data structure called Inventory 
\end_layout

\begin_layout Itemize
find each item type in this inventory and write these into a second similar data structure called 
\family typewriter
ItemTypes
\family default
 
\end_layout

\begin_layout Itemize
count the number of each item type in the inventory and store this in a third similar data structure called 
\family typewriter
ItemCounts 
\family default
 
\end_layout

\begin_layout Itemize
display the contents of the ItemTypes and ItemCounts data structures using the format given below. 
\end_layout

\begin_layout Standard
Example run of the program:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Inventory
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
The output generated from this input would be:
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ItemType
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Count
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

[14]
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every published book has an international Standard Book Number (ISBN). This ISBN is a 9-digit number plus a check digit which is calculated and added to the end of the number. A weighted-modulus method is used to calculate the check digit.
\end_layout

\begin_layout Standard
This method uses a weighted modulus 11. If the check digit is calculated as 10. it is replaced with the character 'X'. Where the check digit is calculated as 11, it will be replaced with 0.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
184146208 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times10=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times9=72$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times8=32$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times7=7$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times6=24$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6\times5=30$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2\times4=8$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times3=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times2=16$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 199
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $199/11=18$
\end_inset

 remainder 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-1=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 10 is replaced with X:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
ISBN is 184146208
\series bold
X
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
034085045 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times10=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $7\times9=63$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times8=40$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times7=7$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times6=30$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times5=20$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $9\times4=36$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2\times3=6$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6\times2=12$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 154
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $154/11=14$
\end_inset

 remainder 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-0=11$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 11 is replaced with 0:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
ISBN is 034085045
\series bold
0
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
075154926 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times10=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $3\times9=27$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times8=32$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times7=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times6=48$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times5=25$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times4=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times3=12$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times2=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 214
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $214/11=19$
\end_inset

 remainder 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-5=6$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 6 is added to the
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
end of the ISBN: 075154926
\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Study the identifier table and the incomplete recursive algorithm on the opposite page.
\end_layout

\begin_layout Standard
The missing lines in the algorithm are labelled 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
.
\end_layout

\begin_layout Standard
Write the
\series bold
 three
\series default
 missing lines of code. Label each as 
\series bold
A
\series default
, 
\series bold
B
\series default
 or 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
The three missing lines of code. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Number
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The ISBN to be processed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Digit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
lNTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A digit from the iSBN to be processed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Total
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Running total for modulus calculation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NewNumber
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A version of the list string shortened by removing the first character
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckDigit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The calculated check digit value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CalcModulus
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Used to store the result of 
\family typewriter
(Total MOD 11)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Used to store the result of 
\family typewriter
(11 - CalcModulus)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LENGTH(Number) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Digit <- INTEGER(LEFT(Number,1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Total <- Total + (Digit * (LENGTH(Number)+1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNumber <- RIGHT(Number, LENGTH(Number)-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CheckDigit <- .................. A ................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Digit <- INTEGER(LEFT(Number,1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Total <- Total + (Digit 1 (LENGTH(Number)+1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CalcModulus <- Total MOD 11 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CheckValue <- 11 - CalcModulus 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF CheckValue = 11 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN STRING(O) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF CheckValue = 10 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................... B .......................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN STRING(CheckValue) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LENGTH(Number) = 9 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN .................... C .................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN CheckDigit; 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END FUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit(
\begin_inset Quotes qrd
\end_inset

184146208
\begin_inset Quotes qrd
\end_inset

,0)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Write a program to implement the ISBN program using the 
\family typewriter
CalCheckDigit
\family default
 function.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
read the entire contents of the file 
\family typewriter
ISBNPRE.TXT
\family default
 (seven 9-digit lSBNs without check digits) into an appropriate data structure 
\end_layout

\begin_layout Itemize
use the function 
\family typewriter
CalCheckDigit
\family default
 to calculate the result (ISBN with check digit) for each entry in the file 
\end_layout

\begin_layout Itemize
write each result (ISBN with check digit) to the screen. 
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code for Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot of the results of processing the 
\family typewriter
ISBNPRE.TXT
\family default
 file.
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A data structure is required to store 25 nodes. A linked list is maintained of all the nodes. A node contains a data value and two pointers: a left pointer and a right pointer.
\end_layout

\begin_layout Standard
Items in the list are initially linked using their 
\family typewriter
LeftChild
\family default
 pointers.
\end_layout

\begin_layout Standard
Each node ls implemented as an instance of the class 
\family typewriter
ConnectionNode
\family default
. The class ConnectionNode has the following properties: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Connection Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left node pointer 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The structure for the linked list is implemented as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RobotData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY [l : 25] OF ConnectionNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
An array used to store the
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25 nodes.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
of the 
\family typewriter
RobotData
\family default
 array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreeChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
available empty node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The first available node Is indicated by 
\family typewriter
NextFreeChild
\family default
. The initial value of 
\family typewriter
Root
\family default
 is 1 and the initial value of 
\family typewriter
NextFreeChild
\family default
 is 1.
\end_layout

\begin_layout Standard
The diagram shows the empty data structure with the linked list to record the unused nodes. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-1.png
	width 12.5page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to declare the 
\series bold
empty
\series default
 data structure and linked list of 25 unused nodes. Add statement(s) to initiallse the empty data structure.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code for Task 3.1. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
This data structure is used to record the possible routes for a robot to travel from a node A to a node Z. The following data structure illustrates many possible routes, for example, A
\begin_inset Formula $\rightarrow$
\end_inset

D
\begin_inset Formula $\rightarrow$
\end_inset

K
\begin_inset Formula $\rightarrow$
\end_inset

L
\begin_inset Formula $\rightarrow$
\end_inset

M
\begin_inset Formula $\rightarrow$
\end_inset

Z. It is only possible to move to one of two possible nodes; for example, from node A, the only move is to node B or node D. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
This data structure has 15 nodes (A to N and Z) but for future development a maximum of 25 nodes is specified. All nodes are unique.
\end_layout

\begin_layout Standard
The pseudocode on the next page can be used to add a node to the data structure. The procedure 
\family typewriter
AddToRobotData
\family default
 uses the parameters 
\family typewriter
NewDataItem
\family default
, 
\family typewriter
ParentItem
\family default
 and 
\family typewriter
ThisMove
\family default
.
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
ThisMove
\family default
 holds the move made to create this new item (
\begin_inset Quotes els
\end_inset

L' for LeftChild, 
\begin_inset Quotes els
\end_inset

R' for RightChild, 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

 for initial state/root), and the 
\family typewriter
ParentItem
\family default
 parameter holds the value of the parent item which points to this 
\family typewriter
NewDataItem
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
To add node B as shown, the procedure call would be 
\family typewriter
AddToRobotData ('B', 
\begin_inset Quotes els
\end_inset

A', 'L')
\family default
 . The parameters used would be:
\end_layout

\begin_layout Standard

\family typewriter
B
\family default
, the new node
\end_layout

\begin_layout Standard

\family typewriter
A
\family default
, the parent node
\end_layout

\begin_layout Standard

\family typewriter
L
\family default
, the location of the child (which has an index of 2) is recorded in 
\family typewriter
LeftChild
\family default
 of A.
\end_layout

\begin_layout Standard
The following pseudocode (available in PS EUDOCODE_TASK_3_2 . TXT) can be used to add a node to the data structure.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION FindNode(NodeValue) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Found <- FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

CurrentPosition <- Root 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RobotData[CurrentPosition].DataValue = NodeValue THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition <- CurrentPosition + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

UNTIL Found = TRUE OR CurrentPosition > 25 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF CurrentPOSition > 25 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN CurrentPosition 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
PROCEDURE AddToRobotData(NewDataItem, ParentItem, ThisMove) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Root = 1 AND NextFreeChild = 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild <- RobocData[NextFreeChild].LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotDataIRoot].LeftChild <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[Root].DataValue <- NewDataItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// does the parent exist? . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ParentPosition <- FindNode(ParentItem) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RarentPosition > 0 THEN // parent exists 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// does the child exist? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ExistingChild <- FindNode(NewDataItem) ' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ExistingChild > 0 THEN // child exists 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ChildPointer <- ExistingChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ChildPointer <- NextFreeChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild <- RobotDataINextFreeChild}.LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ChildPointer].LeftChild <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ChildPointer].DataValue <- NewDataItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisMove = 'L' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ParentPosition].LeftChild <- ChildPointer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ParentPosition].RightChild <- ChildPointer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\series bold
 
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write code to implement 
\family typewriter
AddToRobotData
\family default
 and 
\family typewriter
FindNode
\family default
 from this pseudocode.
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default
 as a basis for writing your code.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreeChild
\family default
 and the contents of 
\family typewriter
RobotData
\family default
 in index order.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code for Task 3.3.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
The file 
\family typewriter
SEARCHTREE.TXT
\family default
 contains the data for the search tree. Each row of the file contains three comma separated values, for example, the first row contains '
\family typewriter
A
\family default
', '
\family typewriter
0
\family default
' and 'X'. The file is organised as: 
\family typewriter
NewDataltem, ParentItem, ThisMove
\family default

\end_layout

\begin_layout Standard

\family typewriter
NewDataItem, ParentItem, ThisMove
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Formula $\dots$
\end_inset


\family default

\end_layout

\begin_layout Standard

\family typewriter
<End of File>
\family default

\end_layout

\begin_layout Standard
There are a total of 20 lines in the 
\family typewriter
SEARCHTREE.TXT
\family default
 file representing possible routes.
\end_layout

\begin_layout Standard
Write a main program to read the contents of this file and use 
\family typewriter
AddToRobotData
\family default
 and 
\family typewriter
FindNode
\family default
 to insert these routes into 
\family typewriter
RobotData
\family default
. Your program will then call the 
\family typewriter
OutputData
\family default
 procedure.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write a recursive pre-order tree traversal that will display all valid routes from A to Z by following the routes described in 
\family typewriter
RobotData
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code for Task 3.5.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.5.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer program can generate a simple Sudoku puzzle using a 4 x 4 two-dimensional array.
\end_layout

\begin_layout Standard
An example of this puzzle is: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The first step to creating this puzzle is to develop a program to display the 4 x 4 twodimensional array as a grid. This program will display the grid as: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Create a program design that will declare, initialise and display the example puzzle shown. This design will: 
\end_layout

\begin_layout Itemize
make use of top-down design 
\end_layout

\begin_layout Itemize
include the data structure to represent the puzzle as a grid 
\end_layout

\begin_layout Itemize
initialise the grid using the values shown 
\end_layout

\begin_layout Itemize
make use of appropriate procedures and/or functions. 
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Your program design for Task 4.1. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to display the puzzle designed in Task 4.1.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Screenshot of the displayed grid. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
The puzzle is said to be valid if it follows these rules: 
\end_layout

\begin_layout Itemize
It consists of tour quadrants. 
\end_layout

\begin_layout Itemize
The numbers in each quadrant must add up to ten. 
\end_layout

\begin_layout Itemize
Each horizontal and vertical row of the puzzle must also add up to ten. 
\end_layout

\begin_layout Itemize
No number can be repeated in the same row, same column or same quadrant of the puzzle. 
\end_layout

\begin_layout Standard
A good strategy tor creating puzzles is to start with a valid 
\begin_inset Quotes els
\end_inset

base' puzzle and perform transformations on it to create new puzzles.
\end_layout

\begin_layout Standard
You will write program code to create new valid puzzles.
\end_layout

\begin_layout Standard
Each puzzle created will have two randomly selected transformations. from a possible four, performed on it. The following are the four possible transformations that can be carried out. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="30col%">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Transformation
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Explanation 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps two rows in the same quadrants 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-1.png
	width 30page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps two columns in the same quadrants 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-2.png
	width 15page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps the top and bottom quadrant rows entirely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-3.png
	width 30page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps the left and right quadrant columns entirely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-4.png
	width 15page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write additional program code with brief 
\series bold
internal commentary
\series default
 to identify each transformation.
\end_layout

\begin_layout Standard
The program code will: 
\end_layout

\begin_layout Itemize
create a method of selecting. at random, two of the four possible transformations to be applied to the puzzle 
\end_layout

\begin_layout Itemize
call a sub-program for each of the required transformations 
\end_layout

\begin_layout Itemize
randomly select which rows will be transformed for transformations 1 and 2. for example. either the top or bottom two rows (for transformation 1) OR either the left-most or right-most two columns (for transformation 2) respectively 
\end_layout

\begin_layout Itemize
display the puzzle before each transformation is applied and after the final transformation. Before each transformation. it will also display the name of the transformation being carried out.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard

\family typewriter
4321 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1243 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3412 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2134 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Transformation 1: Swaps two rows in the same quadrants 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1243 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4321 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3412 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2134 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Transformation 4: Swaps the left and right quadrant columns entirely 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4312 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2143 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1234 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3421 
\family default
 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Your program code that includes internal commentary.
\begin_inset space \hfill{}

\end_inset

 [14]
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Screenshots of the output that shows each of the four transformations applied. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The principal of a college decides to improve security access. Currently, the staff use keys to enter classrooms and laboratories. One of the principal
\begin_inset Quotes ers
\end_inset

s suggested improvements is to replace the existing locks and keys with a swipe card system. The principal plans to purchase swipe card readers for every room, and staff will be issued with their own swipe card. if a valid card is swiped through a particular reader, the corresponding door will be unlocked.
\end_layout

\begin_layout Standard
Software for controlling the system is required to: 
\end_layout

\begin_layout Itemize
define the rooms that can be entered by each card. The office staff will make any changes. 
\end_layout

\begin_layout Itemize
produce a pop-up screen on the office staff's computer if an unauthorised card is used to attempt an entry into a room. 
\end_layout

\begin_layout Itemize
produce reports. Some of the reports will be confidential and can only be viewed by the principal. 
\end_layout

\begin_layout Standard
A local software company is selected to produce the software. The company assigns a development team to the project. 
\end_layout

\begin_layout Enumerate
A systems analyst from the team makes an initial visit to the college.
\end_layout

\begin_deeper
\begin_layout Standard
State two groups of staff that the systems analyst would need to interview. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
As a result of the analysis carried out. a diagram is used to show entities and data flow. Draw a suitable diagram. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The next stage of system development is software design. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the checks that the team needs to make at the end of this stage. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two methods that could be used to check this design. For each method, identify the members of the development team involved other than the systems analyst. [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
The swipe card system will need to be fully tested. The company carries out white box and black box testing.
\end_layout

\begin_deeper
\begin_layout Standard
Explain 
\series bold
three
\series default
 differences between black box and white box testing. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
User documentation will be produced during the development process.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 sections that should be included in the user guide for this system.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
After the system is implemented, maintenance will be required.
\end_layout

\begin_deeper
\begin_layout Standard
Name and describe 
\series bold
two
\series default
 types of maintenance. For each type, give an example for the swipe card system. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a method that can be used to ensure that only the office staff can change the system and only the principal can view confidential reports. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The principal is considering expanding the use of the swipe card system to record attendance in classes.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
one
\series default
 disadvantage of this proposal and suggest a more reliable method.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A multinational company has many local branches in various parts of the country that are linked using a wide area network (WAN). 
\end_layout

\begin_layout Enumerate
The company's network transfers data using asynchronous data transmission. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State which of the following diagrams represents asynchronous data transmission. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why asynchronous data transmission affects network performance.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard
An employee works from home on her wireless laptop. The following diagram shows the configuration of the employee's home network. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q2-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

This network uses both a switch and a router to transfer data. State which of the pieces of equipment labelled 
\series bold
A
\series default
 and 
\series bold
B
\series default
 is the switch. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 features of a router.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage. for the employee, of working from home.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain what is meant by an object in object-oriented programming. .
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
A student is writing a program to represent people in a university. Tutors, office workers, lecturers and professors are all employed by the university. A professor is a senior lecturer. The university educates both undergraduate and graduate students.
\end_layout

\begin_deeper
\begin_layout Standard
The student
\begin_inset Quotes ers
\end_inset

s program contains a class with the identifier 
\family typewriter
Person
\family default
. Sub-classes share the characteristics of this class.
\end_layout

\begin_layout Standard
Copy and complete the following inheritance diagram by adding sub-classes 
\family typewriter
Professor
\family default
,
\end_layout

\begin_layout Standard

\family typewriter
OfficeWorker
\family default
, 
\family typewriter
Lecturer
\family default
, 
\family typewriter
Undergraduate
\family default
, 
\family typewriter
Staff
\family default
, 
\family typewriter
Graduate
\family default
, 
\family typewriter
Student
\family default
 and 
\family typewriter
Tutor
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q3.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A stack is a data structure that can be implemented in object-oriented programming. The implementation of a stack requires an integer variable and an array. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the purpose of the integer variable in the implementation of a stack class.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the array in the implementation of a stack class.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how to use the stack data structure to compute the following expression: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Formula $\left(\text{A}+\text{B}\right)\times\left(\text{C}+\text{D}\right)$
\end_inset


\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
A local area network (LAN) can be set up as either client-server or peer-to-peer. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State where data are stored on a client-server network. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State where data are stored on a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 benefit of a client-server network over a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 drawback of a client-server network compared to a peer-to-peer network.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A college has five IT rooms. Each room has 20 computers which can only print to a single printer in the room. At busy times in the year, there can be up to 100 students printing their coursework at the same time. 
\begin_inset Quotes els
\end_inset

0
\end_layout

\begin_deeper
\begin_layout Standard
Explain how all these print jobs are controlled and sent to the printer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A 30 megabyte file is transferred over a network to a printer in 5 seconds.
\end_layout

\begin_deeper
\begin_layout Standard
Calculate the transfer rate, in megabits per second, used to transfer this file. Show all of your working. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q5] 
\series default
The following grid shows the initial state of a popular puzzle. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The aim of the puzzle is to fill the whole grid so that every row, every column and every 
\begin_inset Formula $3\times3$
\end_inset

 mini-grid contains a number between 1 and 9. No number should be repeated in any row, column or 3 x 3 minigrid.
\end_layout

\begin_layout Standard
A software company is creating an online version of the puzzle. A programmer is asked to create the puzzle software. 
\end_layout

\begin_layout Enumerate
The programmer decides to use a 2D array to store the puzzle. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Copy and complete the following line of pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
DECLARE Puzzle ARRAY[1 : ...., .... : ....] OF ......................
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The circled value in the diagram above needs to be assigned to the appropriate array element. 
\end_layout

\end_deeper
\begin_layout Enumerate
Copy and complete the following line of pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Puzzle[...., ....] <- ...............................
\family default
 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why a 2D array is more suitable than a single 1D array to represent this puzzle. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The puzzle grid can be saved by writing the array 
\family typewriter
Puzzle
\family default
 to a file.
\end_layout

\begin_deeper
\begin_layout Standard
Design an algorithm, using pseudocode, to write the array to the file. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
During the testing of the puzzle software, several errors are discovered.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 debugging techniques that could be used to locate these errors. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer company has several offices throughout the country, each with several salespersons. A record of the sales made by each salesperson has been set up using a relational database. There is a minimum amount of $150 for each sale.
\end_layout

\begin_layout Standard
The following tables hold the data.
\end_layout

\begin_layout Standard

\family typewriter
CUSTOMER (
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, CustomerEmail, CustomerTelephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
OFFICE (
\family default

\family typewriter

\bar under
OfficeID
\bar default

\family default

\family typewriter
, Address, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALE (
\family default

\family typewriter

\bar under
CustomerID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SalesPersonID*
\bar default

\family default

\family typewriter
, SaleDate, Amount) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALESPERSON (
\family default

\family typewriter

\bar under
SalesPersonID
\bar default

\family default

\family typewriter
, SalespersonName, OfficeID*) 
\family default

\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 underline indicates primary key. An asterisk (*) indicates a foreign key. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-Fl) diagram to represent the data model. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
(b) The following is a section of the data dictionary for the data model. it has three missing entries labelled 
\series bold
A
\series default
, 
\series bold
B 
\series default
and 
\series bold
C
\series default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Table
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Field
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Validation
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CUSTOMER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CustomerID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unique
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CustomerID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SaleData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Amount
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
B
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
State a suitable entry for 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
There is an address field in this database.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why storing the address as a single field is not good database design. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
Each month, a report is produced to show the sales for each salesperson. The following is a report for salesperson, B Chin. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q6.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
To produce the report, the database uses the 
\family typewriter
SaleDate
\family default
 and 
\family typewriter
Amount
\family default
 fields in the 
\family typewriter
SALE
\family default
 table.
\end_layout

\begin_deeper
\begin_layout Standard
Name 
\series bold
four 
\series default
other fields that the database uses to produce this report.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 features of a relational database management system which would be used to calculate and display the total for this salesperson.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2017/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A web log,
\family typewriter
 WEBLOG.txt
\family default
, keeps track of the date and time the server is being accessed, and the client that accessed it. The client is identified by either the host name or internet address. The format of 
\family typewriter
WEBLOG.txt
\family default
 is as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<host name>|<DD/MMM/YYYY:HH:MM:SS> 
\family default
 
\end_layout

\begin_layout Standard
or 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<internet address>|<DD/MMM/YYYY:HH:MM:SS> 
\family default
 
\end_layout

\begin_layout Standard
Below is a sample of 
\family typewriter
WEBLOG.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
199.72.81.55|01/Jul/1995:00:00:01 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
unicomp6.unicomp.net|01/Jul/1995:00:00:06 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
199.120.110.21|01/Jul/1995:00:00:09 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
burger.letters.com|01/Jul/1995:00:00:11
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The client address (host name or internet address) can appear multiple times, depending on how many times it accessed the server. Similarly, the date it accessed the server can be duplicated too because it can access the server many times in a day.
\end_layout

\begin_layout Standard
A summary report, SUMMARY.txt, is to be generated to list the 
\series bold
unique
\series default
 clients (hosts name/internet address) and the corresponding list of 
\series bold
unique
\series default
 dates that it has accessed the server, from the web log, 
\family typewriter
WEBLOG.txt
\family default
.
\end_layout

\begin_layout Standard
Below is a sample of 
\family typewriter
SUMMARY.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
199.72.81.55 01/Jul/1995,03/Jul/1995,04/Jul/1995 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Buger.letters.com 01/Jul/1995,05/Jul/1995
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Computing.com 01/Jul/1995,02/Jul/1995,03/Jul/1995
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
ReadLog()
\family default
 to read 
\family typewriter
WEBLOG.txt
\family default
, using a suitable data structure(s), and prepare the log information to create 
\family typewriter
SUMMARY.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Your 
\family typewriter
ReadLog()
\family default
 procedure code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
ProcessLog()
\family default
 to generate 
\family typewriter
SUMMARY.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 2
\end_layout

\begin_layout Standard
Your 
\family typewriter
ProcessLog()
\family default
 procedure code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Screenshot of 
\family typewriter
SUMMARY.txt
\family default
 after running the program. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Add code to your Task 1.2 program to output to screen the highest number of days the server was accessed by any client, and the corresponding client(s). Below is a sample of screen output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Highest frequency (days): 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Accessed by: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
199.72.81.55
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Computing.com
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code for Task 1.3.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2017/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The files 
\family typewriter
CUPS-SOLD1.txt
\family default
 and 
\family typewriter
CUPS-SOLD2.txt
\family default
 contain the daily total number of cups of coffee sold at a caf√© over a period of 50 days. The task is to read the daily sales from the file and to allow a search for a specific sales figure. You will program two different search algorithms: 
\end_layout

\begin_layout Itemize
Linear Search 
\end_layout

\begin_layout Itemize
Binary Search 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code that repeatedly: 
\end_layout

\begin_layout Itemize
displays a menu with the following options: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1. Read File
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2. Linear Search
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3. Binary Search
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4. End
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure/function depending on the user
\begin_inset Quotes ers
\end_inset

s option. 
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Program code for Task 2.1. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write the program code for a procedure to implement menu option 1.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Program code for menu option 1. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
Options 2 and 3 will perform a search for a specified sales figure and display a message to indicate if it is found or not.
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Write program code as a function to implement the linear search for menu option 2. The function will return 0 if the sales figure is found, or -1 if it is not found.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
Input a sales figure 
\end_layout

\begin_layout Itemize
Use the function 
\family typewriter
LinearSearch
\family default
 
\end_layout

\begin_layout Itemize
Report whether or not this sales figure was found. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
CUPS-SOLD1.txt
\family default
 to test your program code.
\end_layout

\begin_layout Standard
Run the program two times. Use the following inputs: 
\family typewriter
167
\family default
 and 
\family typewriter
405
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8
\end_layout

\begin_layout Itemize
Program code for menu option 2. 
\end_layout

\begin_layout Itemize
Screenshots showing the output from menu option 2. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write program code as a function to implement the binary search for menu option 3. The function will return 
\family typewriter
0
\family default
 if the sales figure is found, or 
\family typewriter
-1
\family default
 if it is not found.
\end_layout

\begin_layout Standard

\series bold
*Hint: Do not use any pre-defined sort function e.g. sort() in your program code.
\series default

\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
Input a sales figure 
\end_layout

\begin_layout Itemize
Use the function 
\family typewriter
BinarySearch
\family default
 
\end_layout

\begin_layout Itemize
Report whether or not this sales figure was found. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
CUPS-SOLD1.txt
\family default
 to test your program code. Run the program two times. Use the following inputs: 
\family typewriter
366
\family default
 and 
\family typewriter
123
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Itemize
Program code for menu option 3. 
\end_layout

\begin_layout Itemize
Screenshots showing the output from menu option 3. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Subsection*
Task 2.5
\end_layout

\begin_layout Standard
Amend your program code for the linear search function so that if the specified sales figure exists, the number of day(s) with this sales figure is also reported.
\end_layout

\begin_layout Standard
Use the file 
\family typewriter
CUPS-SOLD2.txt
\family default
 to test your program.
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
The amended program code for menu option 2. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.6
\end_layout

\begin_layout Standard
Study the contents of 
\family typewriter
CUPS-SOLD2.txt
\family default
 and then devise a set of three test cases with the sales figures to be used for testing the amended code. Evidence 11 A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2017/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An application is to be created to store a Football League table data. The team names are stored in the file 
\family typewriter
TEAMS.txt
\family default
. The results of the football matches are provided in file 
\family typewriter
RESULTS.txt
\family default
.
\end_layout

\begin_layout Standard
Each match data takes up one line, for example: 
\family typewriter
MadUnited 2 Chelsand 1 
\family default

\end_layout

\begin_layout Standard
That is, 
\family typewriter
MadUnited
\family default
 won 
\family typewriter
Chelsand
\family default
, scoring two goals and conceding one goal, or Chelsand lost to Mad United, scoring one goal and conceding two goals.
\end_layout

\begin_layout Standard
The League table that needs to be created has the following information: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="10">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Team
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
P
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
W
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
L
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GF
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GA
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GD
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Points
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MadUnited
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Chelsand
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Lovepool
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\series bold
Legend
\series default
:
\end_layout

\begin_layout Plain Layout

\series bold
P
\series default
 ‚Äì games played
\end_layout

\begin_layout Plain Layout

\series bold
W
\series default
 ‚Äì games won
\end_layout

\begin_layout Plain Layout

\series bold
D
\series default
 ‚Äì games drawn
\end_layout

\begin_layout Plain Layout

\series bold
L
\series default
 ‚Äì games lost
\end_layout

\begin_layout Plain Layout

\series bold
GF
\series default
 ‚Äì goals for (scored against opponents)
\end_layout

\begin_layout Plain Layout

\series bold
GA
\series default
 ‚Äì goals against (goals conceded by team)
\end_layout

\begin_layout Plain Layout

\series bold
GD
\series default
 ‚Äì goal difference, i.e. GD = GF ‚Äì GA
\end_layout

\begin_layout Plain Layout

\series bold
Points
\series default
 ‚Äì computed based on 3 points per win, 1 point per draw and zero points per loss
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
CreateUpdateFile
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
the program reads the 
\series bold
first
\series default
 match results from 
\family typewriter
RESULTS.txt
\family default
 
\end_layout

\begin_layout Itemize
appends to the results of each team to a text file 
\family typewriter
NEWFILE.txt
\family default
 with the following information: team name, result of match (W/D/L), goals for (GF), goals against (GA) 
\end_layout

\begin_layout Itemize
for e.g. the data 
\begin_inset Quotes eld
\end_inset


\family typewriter
MadUnited 2 Chelsand 1
\family default

\begin_inset Quotes erd
\end_inset

 will result in the following two records to be appended to 
\family typewriter
NEWFILE.txt
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
MadUnited,W,2,1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Chelsand,L,1,2
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Your CreateUpdateFile program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Amend your 
\family typewriter
CreateUpdateFile
\family default
 program code from Task 3.1 so that all the match results are read from 
\family typewriter
RESULTS.txt
\family default
, and the 
\family typewriter
NEWFILE.txt
\family default
 updated accordingly.
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Your program code for the amended procedure 
\family typewriter
CreateUpdateFile
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
2 screenshots of 
\family typewriter
NEWFILE.txt
\family default
 showing first 10 and last 10 records. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write program code for a function 
\family typewriter
ComputeTeamStat
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
receives a team name as a parameter 
\end_layout

\begin_layout Itemize
the function searches the file 
\family typewriter
NEWFILE.txt
\family default
 for all occurrences of that team 
\end_layout

\begin_layout Itemize
calculates and outputs the team
\begin_inset Quotes ers
\end_inset

s league table information,
\end_layout

\begin_deeper
\begin_layout Standard
e.g. for team 
\begin_inset Quotes els
\end_inset


\family typewriter
MadUnited
\family default

\begin_inset Quotes ers
\end_inset

, it may output the following: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="10">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Team
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
P
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
W
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
L
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GF
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GA
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
GD
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Points
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MadUnited
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Your 
\family typewriter
ComputeTeamStat
\family default
 program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
A screenshot showing the output for the team 
\family typewriter
Everlong
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
GenerateTable
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
reads the data from files 
\family typewriter
TEAMS.txt
\family default
 and 
\family typewriter
NEWFILE.txt
\family default
 
\end_layout

\begin_layout Itemize
and makes use of the function 
\family typewriter
ComputeTeamStat
\family default
 from Task 3.3 
\end_layout

\begin_layout Itemize
to output the complete league table information ordered by the team with the highest points first. If two or more teams having the same points, team having more goal difference (GD) will be listed first. 
\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
Your 
\family typewriter
GenerateTable
\family default
 program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 18 
\end_layout

\begin_layout Standard
A screenshot showing the output for the complete League table.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2017/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store a dataset of students
\begin_inset Quotes ers
\end_inset

 names and test scores (max size of 20 students) as a binary tree structure. The text file 
\family typewriter
SCORES.txt
\family default
 stores the students
\begin_inset Quotes ers
\end_inset

 names and test scores in the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<Student Name>|<Score> 
\family default
 
\end_layout

\begin_layout Standard
All test scores are integer values in the range 0 to 100 inclusive.
\end_layout

\begin_layout Standard
The program will use a user-defined type 
\family typewriter
Node
\family default
 for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left pointer for the node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The name of the student
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Score
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The score of the student
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is maintained of all the unused nodes which do not form part of the tree. The first available node which is used for a new student is indicated by 
\family typewriter
NextFreePosition
\family default
. Nodes in the unused list are linked using their left pointers.
\end_layout

\begin_layout Standard
The binary tree and linked list are implemented using variables as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ThisTree 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ARRAY[20]: Node 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The tree data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Root 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position of the array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
NextFreePosition 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
INTEGER 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2017-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the binary tree with the students
\begin_inset Quotes ers
\end_inset

 scores 40, 70, 35 and 60 (added in that order) and linked list of unused nodes after the four students
\begin_inset Quotes ers
\end_inset

 scores have been added.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write the program code to declare all the required variables and create the initial linked list which contains all 20 nodes. Add statement(s) to initialize the empty tree.
\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Your program code for Task 4.1. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write a non-recursive procedure 
\family typewriter
AddNodeToTree
\family default
 to add a new node with student
\begin_inset Quotes ers
\end_inset

s name and score into the binary tree structure.
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Your program code for Task 4.2.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreePosition
\family default
 and the contents of 
\family typewriter
ThisTree
\family default
 in index order.
\end_layout

\begin_layout Subsection*
Evidence 21 
\end_layout

\begin_layout Standard
Your program code for Task 4.3.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
construct a binary search tree using the data provided in the text file SCORES.txt by calling procedure 
\family typewriter
AddNodeToTree
\family default
. 
\end_layout

\begin_layout Itemize
Your program will then call procedure 
\family typewriter
OutputData
\family default
. 
\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Your program code for Task 4.4.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 4.4.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.5
\end_layout

\begin_layout Standard
Write a recursive procedure 
\family typewriter
RankList
\family default
 to output students
\begin_inset Quotes ers
\end_inset

 names and scores in descending scores order. Include a call to the procedure from your main program. Evidence 24 Your program code for Task 4.5.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 25 
\end_layout

\begin_layout Standard
Provide a screenshot showing students
\begin_inset Quotes ers
\end_inset

 names and scores in descending scores order. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2017/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The text file 
\family typewriter
TEMPERATURE.txt
\family default
 contains the mean daily temperature from January 1982 to June 2017. Each line of record is in the format 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<year>-<month> <mean daily temperature> 
\family default
 
\end_layout

\begin_layout Standard
For examples, 
\family typewriter
1982-01 29.8
\family default
 and 
\family typewriter
2017-06 31.6
\family default

\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code that will 
\end_layout

\begin_layout Itemize
read the data from the text file, 
\end_layout

\begin_layout Itemize
calculate the average of all the available monthly temperatures by year, by totalling up the temperatures for each month of that year and divided by the number of months, 
\end_layout

\begin_layout Itemize
output the average temperature for that year (from 1982 to 2017), in 3 decimal places. 
\end_layout

\begin_layout Itemize
Use the following format: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Year
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Average temperature
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1982
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
31.442
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1983
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
31.750
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\vdots$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2017
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
31.217 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\family typewriter
 
\family default
 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Program code for Task 1.1.
\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Screenshot of running program.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Sort by temperature and output the average temperature by year, in ascending order of temperature. If temperatures are the same, then display the later year before the earlier year. For example, if year 2017 and 1989 have the same temperature, then display 2017 before 1989.
\end_layout

\begin_layout Subsection*
Evidence 3:
\end_layout

\begin_layout Standard
Program code for Task 1.2. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Screenshot of running program. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2017/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A circular queue is to be implemented with a fixed size array of n elements, indexed from 
\family typewriter
0
\family default
 to 
\family typewriter
(n ‚Äì 1)
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-PJC-2017-P1-Q2-1.png
	width 20page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Following good programming practice, write program code for procedures 
\end_layout

\begin_layout Itemize

\family typewriter
setup_queue
\family default
 to set up circular queue which allows user to input the value of 
\family typewriter
n
\family default
, 
\end_layout

\begin_layout Itemize

\family typewriter
enqueue
\family default
 to add an element to the queue, 
\end_layout

\begin_layout Itemize

\family typewriter
dequeue
\family default
 to remove an element from the queue. 
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Program code for Task 2.1 for 
\family typewriter
setup_queue
\family default
, 
\family typewriter
enqueue
\family default
, 
\family typewriter
dequeue
\family default
. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code for a main procedure to display a menu with these options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1. Set up queue
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2. Add to queue
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3. Remove from queue
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4. Display queue 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5. Exit
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write additional code to implement menu options 1, 2 and 3 using procedures from Task 2.1.
\end_layout

\begin_layout Standard
Also write code to implement 
\end_layout

\begin_layout Itemize
option 4 to display the contents of the queue and its pointers as shown in diagram below, 
\end_layout

\begin_layout Itemize
option 5 to exit program. 
\end_layout

\begin_layout Standard
The diagram shows the result of option 4 to display contents of queue and pointers for 
\family typewriter
n=5
\family default
 with 3 items 
\family typewriter
'fig'
\family default
, 
\family typewriter
'lemon'
\family default
 and 
\family typewriter
'cane'
\family default
 in the queue: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Queue
\family default

\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
fig
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
<- Front pointer
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
lemon
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cane
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
<- Rear pointer
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Number in queue: 3
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 6:
\end_layout

\begin_layout Standard
Program code for Task 2.2 for main procedure, display queue and exit program. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Test run your program from using the following input: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Test run 1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\family typewriter
n = 8
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Add 5 words to queue in order:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Mary', 'had', 'a', 'little', 'lamb'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Display queue
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Test run 2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\family typewriter
n = 3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Add 4 words to queue in order:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'The', 'quick', 'brown', 'fox'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Remove from queue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Display queue
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Screenshots of test runs 1 and 2. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2017/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list of nodes is used to store data for a college. The data include name of student and exam mark.
\end_layout

\begin_layout Standard
The linked list Abstract Data Type (ADT) has commands to create a new linked list, add data items to the list and display the list.
\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
 as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
name : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mark : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
nextPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setName(name : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setMark(mark : INTEGER) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setNextPtr(ptr : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getName() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getMark() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getNextPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

LinkedList
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
nodes : ARRAY OF Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
head : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
addInOrder(name, mark)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
print() 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In the 
\family typewriter
Node
\family default
 class, 
\family typewriter
name
\family default
 and 
\family typewriter
mark
\family default
 store a student
\begin_inset Quotes ers
\end_inset

s name and exam mark respectively, while 
\family typewriter
nextPtr
\family default
 is a pointer to the next node.
\end_layout

\begin_layout Standard
In the 
\family typewriter
LinkedList
\family default
 class, 
\family typewriter
head
\family default
 is a pointer to the first node in the linked list. When the linked list has no data, 
\family typewriter
head
\family default
 will be set to ‚Äì1.
\end_layout

\begin_layout Standard
Data added to the linked list will be stored in alphabetical order of name.
\end_layout

\begin_layout Standard
The print method will output for each node, in array order, the data and pointer of each node. Page 6
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Program code for Task 3.1. 
\begin_inset space \hfill{}

\end_inset

 [20]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write code to create a linked list object in the main program, read from data file 
\family typewriter
COLLEGE.txt
\family default
 and add in all the data items, and print the array contents. The file contains name and mark of each student in the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<name>|<mark>
\family default
 
\end_layout

\begin_layout Standard
Sample record: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Jenny Tan|49
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Program code for Task 3.2. Screenshot of running Task 3.2. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write code for a method 
\family typewriter
countNodes
\family default
 to count the number of nodes used for the data in the linked list.
\end_layout

\begin_layout Subsection*
Evidence 10:
\end_layout

\begin_layout Standard
Program code for Task 3.3 countNodes. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Another method 
\family typewriter
sortByMark
\family default
 is to be added to the 
\family typewriter
LinkedList
\family default
 class to sort the linked list in descending order of exam mark.
\end_layout

\begin_layout Standard
Write program code to implement this method.
\end_layout

\begin_layout Standard
Test your program code by sorting the linked list from Task 3.2 in descending order of mark. Page 7
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Program code for Task 3.4 
\family typewriter
sortByMark
\family default
.
\end_layout

\begin_layout Standard
Screenshot of running Task 3.4 
\family typewriter
sortByMark
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write another method 
\family typewriter
displayByMark
\family default
 to display the list of students in descending order of mark by traversing the sorted linked list from Task 3.4.
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Program code for Task 3.5 
\family typewriter
displayByMark
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2017/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Perform binary addition of positive numbers.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for a function that takes two binary numbers and returns the result after addition of these two binary numbers. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION addBinary(bin1, bin2: STRING) RETURN result: STRING 
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Program code for Task 4.1 
\family typewriter
addBinary
\family default
. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write a main procedure that 
\end_layout

\begin_layout Itemize
repeatedly ask user to input binary numbers until user input 
\begin_inset Quotes els
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes ers
\end_inset

 to exit program; 
\end_layout

\begin_layout Itemize
perform validation of binary numbers; 
\end_layout

\begin_layout Itemize
add these binary numbers using the function 
\family typewriter
addBinary
\family default
; 
\end_layout

\begin_layout Itemize
output result of these addition. 
\end_layout

\begin_layout Standard
Sample output: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enter binary number 1 (XXX to exit) : 1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enter binary number 2 (XXX to exit) : 10
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enter binary number 3 (XXX to exit) : XXX
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Result is 11 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
Program code for Task 4.2 main procedure. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Screenshot of running program with user input of the following six binary numbers in order: 
\family typewriter
1000
\family default
, 
\family typewriter
1010
\family default
, 
\family typewriter
1100
\family default
, 
\family typewriter
0101
\family default
, 
\family typewriter
1111
\family default
, 
\family typewriter
0011
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
These binary numbers can be found in the file 
\family typewriter
BITS.txt
\family default
.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2017/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Results management 
\series default

\end_layout

\begin_layout Standard
For this task, you are required to read the text file 
\begin_inset Quotes eld
\end_inset


\series bold
overall_grades.txt
\series default

\begin_inset Quotes erd
\end_inset

 which contains the subject grades of the first and second semester examination of 50 students.
\end_layout

\begin_layout Standard
The format of the text file is as follow: 
\family typewriter
<name>;<subject1>:<grade1>,<grade2>;<subject2>:<grade1>,<grade 2>;<subject3>:<grade1>,<grade2>,‚Ä¶etc;
\backslash
n 
\family default

\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard

\family typewriter
Rufus Schuck;EL:C,B;CL:C,C;Math:C,E;Bio:B,F; 
\family default

\end_layout

\begin_layout Standard
Student Rufus Schuck takes 4 subjects. They are English (EL), Chinese (CL), Math (Math) and Biology (Bio). His 1st and 2nd semester grades for English is C and B respectively.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write the program code for the function process_data() which reads the text file 
\begin_inset Quotes eld
\end_inset


\series bold
overall_grades.txt
\series default

\begin_inset Quotes erd
\end_inset

 and returns a dictionary which has the following format.
\end_layout

\begin_layout Standard

\family typewriter
{'Rufus Schuck': {'EL': ['C', 'B'], 'CL': ['C', 'C'], 'Math': ['C', 'E'], 'Bio': ['B', 'F']}, ...} 
\family default

\end_layout

\begin_layout Standard
The returned dictionary uses the name of student as key and another dictionary as its return value. This 
\begin_inset Quotes eld
\end_inset

another
\begin_inset Quotes erd
\end_inset

 dictionary then uses the subjects and a list containing the grades of the 1st and 2nd semesters as its key and value respectively.
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
process_data()
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
have_n_improvement(n)
\family default
 which takes in an integer 
\family typewriter
n
\family default
 and returns a list of student names who have improvement in exactly 
\family typewriter
n
\family default
 subject(s). Using the example in Task 1.1, '
\family typewriter
Rufus Schuck
\family default
' shows improvement in only English. So, if 
\family typewriter
n
\family default
 is 1, '
\family typewriter
Rufus Schuck
\family default
' must be included in the student name list.
\end_layout

\begin_layout Subsection*
Evidence 2
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
have_n_improvement(n)
\family default
.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
have_improvement_in_all_subjs()
\family default
 which returns a list of student names who have improvement in all his/her subjects.
\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
The program code for the function have_improvement_in_all_subjs(n).
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
count_combi(combi)
\family default
 which takes a list of subjects 
\family typewriter
combi
\family default
 as input and returns the total number of students who take the subject combination in 
\family typewriter
combi
\family default
. Take note that students who take more subjects than what is indicated in 
\family typewriter
combi
\family default
 are included.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> count_combi(['EL', 'MATH']) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 50 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
count_combi(n)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 1.5
\end_layout

\begin_layout Standard
Using your solution in Task 1.4, find the total number of students who take 
\begin_inset Quotes qld
\end_inset

Chem
\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset

Bio
\begin_inset Quotes qrd
\end_inset

 but not 
\begin_inset Quotes qld
\end_inset

Physics
\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
The program code to find what is required in Task 1.5. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 1.6 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
calculate_GPA(name)
\family default
 which takes a string 
\family typewriter
name
\family default
 as input and calculates the GPA of the student indicated by 
\family typewriter
name
\family default
.
\end_layout

\begin_layout Standard
The points for each grade are as follow:
\end_layout

\begin_layout Standard

\family typewriter
{'A':5, 'B':4, 'C':3, 'D':2, 'E':1, 'F':0} 
\family default

\end_layout

\begin_layout Standard
The 1 st and 2nd semester grades in the data has the same weightages.
\end_layout

\begin_layout Standard
To calculate GPA, 
\end_layout

\begin_layout Itemize
Find the average points achieved of each subject. 
\end_layout

\begin_deeper
\begin_layout Itemize
e.g. if a student gets C and D in 
\begin_inset Quotes qld
\end_inset

CL
\begin_inset Quotes qrd
\end_inset

, his average points for 
\begin_inset Quotes qld
\end_inset

CL
\begin_inset Quotes qrd
\end_inset

 is 3 + 2 = 2.5 
\end_layout

\end_deeper
\begin_layout Itemize
Add up the average points of each subject 
\end_layout

\begin_layout Itemize
Divide the total by the number subjects the student takes 
\end_layout

\begin_deeper
\begin_layout Itemize
e.g. 
\family typewriter
'Claudette Bode': {'EL': ['C', 'D'], 'CL': ['D', 'A'], 'Math': ['A', 'D'], 'Phy': ['A', 'D'], 'Bio': ['D', 'C']}
\family default
, 
\end_layout

\begin_layout Itemize

\family typewriter
[(3 + 2)/2 + (2 + 5)/2 + (5 + 2)/2 + (2 + 5)/2 + (2 + 3)/2]/5 = 3.1
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
GPA for '
\family typewriter
Claudette Bode
\family default
' is 3.1 
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
calculate_GPA(name)
\family default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2017/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Missing phone number digits 
\series default

\end_layout

\begin_layout Standard
Your friend (Mary) made an oversea friend (Jenny) yesterday while she was studying in the regional library. To remain in contact, Jenny gave Marry her phone number and told Mary that it is also a valid 10 digits International Standard Book Number (ISBN).
\end_layout

\begin_layout Standard
After Jenny had left, Mary accidentally punched a few holes on the phone number while she was arranging her notes using the library
\begin_inset Quotes ers
\end_inset

s hole puncher machine. It was too difficult for Mary to recover the lost pieces of paper. So, Mary decided to look for you to recover the missing digits instead. Below is the picture of the paper. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RHVS-2017-P1-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
To recover the missing digits, you need to understand how ISBN-10 works. The steps to check for a valid ISBN-10 is as follow: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Each of the digits of the ISBN-10 is first multiplied by a number in a sequence from 10 to 1 (Take note that the last digit of the ISBN-10 can be 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

 which holds a value of 10). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

All the 10 digits are then added up together. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

If the sum is divisible by 11, it is a valid ISBN-10, else it is invalid. 
\end_layout

\begin_layout Standard
For example, to check if 
\begin_inset Quotes els
\end_inset

997150233X
\begin_inset Quotes ers
\end_inset

 is a valid ISBM-10:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\emph on
Step 1 and 2
\emph default

\end_layout

\begin_layout Plain Layout

\emph on
 
\begin_inset Formula \begin{align*}
 & (9\times10)+(9\times9)+(7\times8)+(1\times7)+(5\times6)+(0\times5)+(2\times4)+(3\times3)+(3\times2)+(\boldsymbol{X}\times1)\\
= & (9\times10)+(9\times9)+(7\times8)+(1\times7)+(5\times6)+(0\times5)+(2\times4)+(3\times3)+(3\times2)+(\boldsymbol{10}\times1)\\
= & 297
\end{align*}
\end_inset


\emph default

\end_layout

\begin_layout Plain Layout

\emph on
Step 3
\emph default

\end_layout

\begin_layout Plain Layout

\emph on
297 is a multiple of 11. Therefore, 
\begin_inset Quotes els
\end_inset

997150233X
\begin_inset Quotes ers
\end_inset

 is a valid ISBN-10. 
\emph default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
is_valid_ISBN10(isbn10)
\family default
 which takes a string 
\family typewriter
isbn10
\family default
 as input and returns 
\family typewriter
True
\family default
 if 
\family typewriter
isdn10
\family default
 is a valid ISBN-10 and 
\family typewriter
False
\family default
 otherwise. You are to validate the input string 
\family typewriter
isbn10
\family default
 and print to terminal the issue related to the 
\family typewriter
isbn10
\family default
 string. The possible issues to be printed to terminal includes: 
\end_layout

\begin_layout Itemize

\family typewriter
ISBN-10 must only have 10 digits. 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
ISBN-10 can only contain numbers and the character 'X'. 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'X' can only be found at the last digit of isbn10. 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Wrong check digit.
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Valid ISBN-10. 
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
is_valid_ISBN10(isbn10)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
possible_ISBN(isbn)
\family default
 which takes a query string 
\family typewriter
isbn10
\family default
 as input and returns a list of possible ISBN-10. The query string 
\family typewriter
isbn10
\family default
 has 3 missing digits replaced with a '
\family typewriter
?
\family default
' and they can be at any positions of the query string.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> possible_ISBN(
\begin_inset Quotes qrd
\end_inset

9971??23?X
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> ['997100237X', '997102232X', '997103235X', '997104238X', '997105230X', '997106233X', '997107236X', '997108239X', '997109231X', '997110234X', '997111237X', '997113232X', '997114235X', '997115238X', '997116230X', '997117233X', '997118236X', '997119239X', '997120231X', '997121234X', '997122237X', '997124232X', '997125235X', '997126238X', '997127230X', '997128233X', '997129236X', '997130239X', '997131231X', '997132234X', '997133237X', '997135232X', '997136235X', '997137238X', '997138230X', '997139233X', '997140236X', '997141239X', '997142231X', '997143234X', '997144237X', '997146232X', '997147235X', '997148238X', '997149230X', '997150233X', '997151236X', '997152239X', '997153231X', '997154234X', '997155237X', '997157232X', '997158235X', '997159238X', '997160230X', '997161233X', '997162236X', '997163239X', '997164231X', '997165234X', '997166237X', '997168232X', '997169235X', '997170238X', '997171230X', '997172233X', '997173236X', '997174239X', '997175231X', '997176234X', '997177237X', '997179232X', '997180235X', '997181238X', '997182230X', '997183233X', '997184236X', '997185239X', '997186231X', '997187234X', '997188237X', '997190232X', '997191235X', '997192238X', '997193230X', '997194233X', '997195236X', '997196239X', '997197231X', '997198234X', '997199237X']
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
The program code for the function 
\family typewriter
possible_ISBN(isbn)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Examine the missing numbers in the paper closely and eliminate impossible digit choices. For example, the three missing digits cannot be 
\begin_inset Quotes els
\end_inset

1
\begin_inset Quotes ers
\end_inset

 as the three missing digits in the paper have round edges at the top. Modify your solution in Task 2.2 and suggest these possible ISBN-10 to Mary.
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
The screenshot of the suggested possible ISBN-10 that you will give to Mary.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write a menu to help other to generate possible ISBN-10. The menu should have the following functions. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Menu
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A) Input a ISBN-10 query string
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B) Display all possible ISBN-10
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C) Quit
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
You should validate user inputs and call for re-entry when an invalid option is given.
\end_layout

\begin_layout Subsection*
Evidence 10
\end_layout

\begin_layout Standard
Program code for the procedure 
\family typewriter
menu()
\family default
.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2017/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Unsorted Linked List
\series default

\end_layout

\begin_layout Standard
The classes Node and LinkedList is partially implemented for you according to the specification given below. The attribute start of class LinkedList stores the first node instance of the linked list. If the linked list has no node, start has the value of None. Functions in bold are not implemented. 
\end_layout

\begin_layout Standard
\align center

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-data : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-next : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+set_data(data)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+get_data()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+set_next(node)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+get_next()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+__str__()
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

LinkedList
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-start : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+set_start(node)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+get_start()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
+insert_data(data)
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
+transfer(linkedlist)
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
+delete_pos(pos)
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+display() 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3
\end_layout

\begin_layout Standard
Implement the following 
\family typewriter
LinkedList
\family default
 class functions according to its specification given: 
\end_layout

\begin_layout Itemize

\family typewriter
+insert_data(data) : 
\family default
This function takes a string 
\family typewriter
data
\family default
 as input and uses its value to create a new 
\family typewriter
Node
\family default
 instance. The new Node instance is then inserted as the first node of the linked list
\family typewriter
.
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
+transfer(llist) :
\family default
 This function takes a 
\family typewriter
LinkedList
\family default
 instance 
\family typewriter
llist
\family default
 as input and transfers all its 
\family typewriter
Node
\family default
 instances in the same order to the 
\family typewriter
LinkedList
\family default
 instance that calls for this function.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
A:'boy'->'man'->'woman'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
B:'girl'->'baby' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> A.transfer(B) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
A: 'boy'->'man'->'woman'->'girl'->'baby'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
B: None
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
+delete_pos(pos) : 
\family default
This function takes in an integer pos as input and deletes the node at position pos. Take note that the first node of the linked list is position 1.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
A:'boy'->'man'->'woman' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> A. delete_pos(2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
A:'boy'->'woman'
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Program code for: 
\end_layout

\begin_layout Itemize

\family typewriter
insert_data(node)
\family default
 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Itemize

\family typewriter
transfer(linkedlist) 
\family default

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Itemize

\family typewriter
delete_pos()
\family default

\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2017/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Sorting Algorithms 
\series default

\end_layout

\begin_layout Standard
The pseudocode procedure below is given a list of integers in random order, the procedure then outputs a sorted list in ascending order.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01. FUNCTION Merge_Sort (ARRAY: arr) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02. 
\begin_inset space \qquad{}

\end_inset

n = SIZE(arr) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03. 
\begin_inset space \qquad{}

\end_inset

IF n < 2: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN arr 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05. 
\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06. 
\begin_inset space \qquad{}

\end_inset

left = Merge_Sort(PARTITION(arr, 0, n DIV 2)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07. 
\begin_inset space \qquad{}

\end_inset

right = Merge_Sort(PARTITION(arr, n DIV 2, n)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08. 
\begin_inset space \qquad{}

\end_inset

RETURN Merge(left, right) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09. END FUNCTION 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11. FUNCTION Merge (ARRAY: left, LIST: right) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12. 
\begin_inset space \qquad{}

\end_inset

DECLARE results: ARRAY[SIZE(left) + SIZE(right)] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13. 
\begin_inset space \qquad{}

\end_inset

DECLARE i, j, index : INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14. 
\begin_inset space \qquad{}

\end_inset

i, j, index = 0, 0, 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15. 
\begin_inset space \qquad{}

\end_inset

WHILE i < SIZE(left) and j < SIZE(right)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF left[i] < right[j]:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

results[index] = left[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = i + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

results[index] = right[j]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j = j + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

index = index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24. 
\begin_inset space \qquad{}

\end_inset

END WHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25. 
\begin_inset space \qquad{}

\end_inset

WHILE i < SIZE(left)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

results[index] = left[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = i + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

index = index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
29. 
\begin_inset space \qquad{}

\end_inset

END WHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
30. 
\begin_inset space \qquad{}

\end_inset

WHILE j < SIZE(right) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
31. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

results[index] = right[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
32. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j = j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
33. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

index = index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
34. 
\begin_inset space \qquad{}

\end_inset

END WHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
35. 
\begin_inset space \qquad{}

\end_inset

RETURN results
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
36. END FUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to implement the given procedure. Execute the function using the following list as the parameter.
\end_layout

\begin_layout Standard

\family typewriter
[1, 15, 2, 4, 3, 9, 7, 10]
\family default

\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Program Code. Screenshot showing the output. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 13
\end_layout

\begin_layout Standard
Analyze and state the time complexity of the algorithm in big 
\begin_inset Formula $O$
\end_inset

 notation.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Bubble sort is a common sorting algorithm, below is an implementation of in-place bubble sort using recursion. There are three missing lines in the pseudocode, indicated as 
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01. PROCEDURE Bubble_Sort (ARRAY: arr, INTEGER: n) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02. 
\begin_inset space \qquad{}

\end_inset

IF _______A_______:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04. 
\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06. 
\begin_inset space \qquad{}

\end_inset

FOR i FROM 0 TO (n-1): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF _______B_______: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp = arr[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

arr[i] = arr[i+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

arr[i+1] = temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11. 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12. 
\begin_inset space \qquad{}

\end_inset

END FOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14. 
\begin_inset space \qquad{}

\end_inset

_______C_______ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15. END PROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Execute the procedure to sort the following list. 
\family typewriter
[1, 15, 2, 4, 3, 9, 7, 10] 
\family default

\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
Complete the missing lines 
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Insert a counting mechanism to count the number of comparisons made, and return the value as an integer. Implement the new recursive bubble sort.
\end_layout

\begin_layout Subsection*
Evidence 15
\end_layout

\begin_layout Standard
Program Code.
\end_layout

\begin_layout Standard
Screenshot showing the output of the sorted list and count value. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Analyze and state the time complexity of the algorithm in big 
\begin_inset Formula $O$
\end_inset

 notation. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Due to the nature of bubble sort, if no swaps are observed in a given iteration, then there is no need for the next iteration. Implement the improved bubble sort. Execute the function to sort the following list.
\end_layout

\begin_layout Standard

\family typewriter
[1, 15, 2, 4, 3, 9, 7, 10]
\family default

\end_layout

\begin_layout Subsection*
Evidence 17
\end_layout

\begin_layout Standard
Program Code. Screenshot showing the output of the sorted list and count value. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2017/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Grocery Store Manager 
\series default

\end_layout

\begin_layout Standard
The grocery shop in the neighborhood ask your help to create an application to manage the grocery store.
\end_layout

\begin_layout Standard
First, you are tasked to work on an object-oriented solution to store all the grocery details. The 
\family typewriter
title
\family default
 of the grocery item, 
\family typewriter
cost
\family default
, 
\family typewriter
price
\family default
 and 
\family typewriter
stock
\family default
 of each grocery is recorded. Besides the normal groceries, the shop identifies three unique types of grocery too, namely: 
\end_layout

\begin_layout Itemize
Electrical Appliance: there is a need to indicate the 
\family typewriter
power
\family default
 of the product to understand its energy consumption rate. 
\end_layout

\begin_layout Itemize
Cigarette: it is important to track the 
\family typewriter
nicotine content
\family default
 of various kinds of cigarette. 
\end_layout

\begin_layout Itemize
Alcohol: there are distinct 
\family typewriter
types
\family default
 of alcohols such as wine or beer. 
\end_layout

\begin_layout Standard
Below is an UML class diagram for your reference.
\end_layout

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2017-P1-Q5-1.png
	width 65page%

\end_inset


\end_layout

\begin_layout Subsection*
Task 5.1
\end_layout

\begin_layout Standard
Implement the classes of 
\family typewriter
Grocery
\family default
, 
\family typewriter
ElectricalAppliance
\family default
, 
\family typewriter
Cigarette
\family default
 and 
\family typewriter
Alcohol
\family default
 with object-oriented programming.
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Program Code for four classes. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 5.2 
\end_layout

\begin_layout Standard
In country S, purchasing all groceries will incur a 7% Goods and Services Tax(GST).
\end_layout

\begin_layout Standard
To promote healthy living, additional tax have been imposed to cigarettes and alcohols: 
\end_layout

\begin_layout Itemize
Cigarette: additional 60% tax 
\end_layout

\begin_layout Itemize
Wines: additional 50% tax 
\end_layout

\begin_layout Itemize
Beers: additional 20% tax 
\end_layout

\begin_layout Standard
For example: 
\emph on
the price of one packet of 
\begin_inset Quotes eld
\end_inset

Yun Yan
\begin_inset Quotes erd
\end_inset

 cigarette is $23.00, the final price can be calculated by: $23.00 x 160% x 107% = $39.38
\emph default

\end_layout

\begin_layout Standard
In addition, to support the 
\begin_inset Quotes eld
\end_inset

save energy movement
\begin_inset Quotes erd
\end_inset

, all electrical appliance with a power less than or equals to 10Watt was set to be sold at 80% of its original price.
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
calculate_final_price()
\family default
 which includes the above mentioned tax and promotion into consideration.
\end_layout

\begin_layout Standard
Implement the 
\family typewriter
__str__()
\family default
 function which returns a string in the following format (You may refer to the 
\family typewriter
test_function_5_1()
\family default
 to understand the formatting):
\end_layout

\begin_layout Standard

\family typewriter
Title | Cost | Price | Stock | Final Price 
\family default

\end_layout

\begin_layout Standard
For example, Yun Yan
\begin_inset Quotes ers
\end_inset

s cost is $16.50, price is set at $23.00, the current stock is 4 and final price is $39.38. The __str__() function should return the following string:
\end_layout

\begin_layout Standard

\family typewriter
Yun Yan | $ 16.50 | $ 23.00 | 4 | $ 39.38
\family default

\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program Code for 
\family typewriter
calculate_final_price()
\family default
 and 
\family typewriter
__str__()
\family default
.
\end_layout

\begin_layout Standard
Screenshot showing output of 
\family typewriter
test_function_5_1()
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 5.3
\end_layout

\begin_layout Standard
Implement a class 
\family typewriter
StoreManager
\family default
 which keep track of a list of grocery items, 
\family typewriter
curr_item_list
\family default
. The 
\family typewriter
StoreManager
\family default
 should have the following class functions: 
\end_layout

\begin_layout Itemize

\family typewriter
sell_item(sold_item)
\family default
 
\family typewriter
sold_item
\family default
 is a tuple containing 2 elements: the 
\family typewriter
title
\family default
 of the item and the 
\family typewriter
quantity
\family default
 sold. You may assume the title of item is always valid and the quantity sold is always smaller than the current stock.
\end_layout

\begin_deeper
\begin_layout Standard
The function should decrease the current stock of the sold items. Upon completion, it should print out a string containing the following information:
\end_layout

\begin_layout Standard

\family typewriter
Title | Unit Price | Quantity Sold | Subtotal
\family default

\end_layout

\begin_layout Standard
The function should return a float containing the 
\family typewriter
sub_total
\family default
 value. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
sell_items(sold_item _list)
\family default
 
\family typewriter
sold_item_list
\family default
 is a list of tuples; each tuple containing the item 
\family typewriter
title
\family default
 and 
\family typewriter
quantity
\family default
 sold.
\end_layout

\begin_deeper
\begin_layout Standard
The function should print out a table displaying information for all sold items in the following format:
\end_layout

\begin_layout Standard

\family typewriter
Title | Unit Price | Quantity Sold | Subtotal
\family default

\end_layout

\begin_layout Standard
The summary should end with a line indicating the overall total value of items sold in this transaction. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
stock_check()
\family default
 When this function is called, it should check the list of all grocery items and print out a summary of items with current stock value below 5. This indicates the need for stocking up these items soon. A summary table should be printed in the following format:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Title | Unit Cost | Quantity Left 
\family default
 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 20 
\end_layout

\begin_layout Standard
Program Code for class functions of StoreManager class: 
\end_layout

\begin_layout Itemize
sell_item 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Itemize
sell_items 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Itemize
stock_check 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
Screenshot showing output of 
\family typewriter
test_function_5_2()
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is required to input and process the number of steps taken by members of a walking club each week. The number of steps taken by each member is an integer in the range 0 to 100000.
\end_layout

\begin_layout Standard
Each week, the 
\begin_inset Quotes eld
\end_inset

Star of the Week
\begin_inset Quotes qrd
\end_inset

 is the member who has taken the greatest number of steps.
\end_layout

\begin_layout Standard
The name and number of steps taken by the 
\series bold
previous
\series default
 week's 
\begin_inset Quotes qld
\end_inset

Star of the Week
\begin_inset Quotes qrd
\end_inset

 are stored in the text file, 
\family typewriter
STAR.TXT
\family default
.
\end_layout

\begin_layout Standard
The program specification is as follows: 
\end_layout

\begin_layout Itemize
Input 
\series bold
up to
\series default
 10 names and the number of steps each has taken. Assume that each number of steps is unique. 
\end_layout

\begin_layout Itemize
Find the walker who has taken the greatest number of steps from this data. 
\end_layout

\begin_layout Itemize
Read the data about the previous 
\begin_inset Quotes eld
\end_inset

Star of the Week
\begin_inset Quotes erd
\end_inset

 from the text file 
\family typewriter
STAR. TXT
\family default
. 
\end_layout

\begin_layout Itemize
Display a message on screen to show the previous star of the week 
\series bold
and
\series default
 the new star of the week, each with their number of steps. For example,
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Last week, Jenny Smith was 'Star of the Week' with 75827 steps taken. 
\family default

\end_layout

\begin_layout Standard

\family typewriter
This week, Vanessa Lim is 'Star of the Week' with 67152 steps taken. 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
Update the text file, 
\family typewriter
STAR.TXT
\family default
, with the details of the new 
\begin_inset Quotes qld
\end_inset

Star of the Week
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code for this task that includes validation of data entered.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
The program needs to be tested with different test cases. Consider carefully, test cases for input of names and steps.
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Copy the table with the following headings. Add other test cases to the table. One type of test case has already been added to the table. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Test case
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Purpose of test data
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Expected results
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yi Ling Aw, 10232 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test the maximum of 10 values 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 values entered and star of
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ryan Batisah, 42231 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
entered into the program. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
the week is Vanessa Lim with
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lee Casmir, 35020 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
67152 steps taken.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Daniel Bennett, 60192 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sarah Heng Chee, 29389 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vanessa Lim, 67152 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Wong Yip, 53231 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rin Xie, 34200 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tin Wee, 49480 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
David Bala, 32010 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Completed table with other test cases added. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Use 
\series bold
three
\series default
 of the test cases in the table, and produce a screenshot for each.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Three screenshots of test cases.
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following algorithm is an implementation of a quick sort that operates on an array 
\family typewriter
Scores
\family default
.
\end_layout

\begin_layout Standard
This algorithm assumes that the first element of an array is the zeroth element. This means that 
\family typewriter
Scores[0]
\family default
 is the first element in the array.
\end_layout

\begin_layout Standard
This pseudocode is available in the file 
\family typewriter
QUICKSORT.TXT
\family default

\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION QuickSort(Scores)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

QuickSortHelper(Scores, 0, LENGTH(Scores) - 1)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Scores
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION QuickSortHelper(Scores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF First < Last
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SplitPoint <- PartitioniScores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

QuickSortHelper(Scores, First, SplitPoint ‚Äî 1)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

QuickSoRtHelper(Scores, SplitPoint + 1, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Scores
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION Partition(Scores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

PivotValue <- ScoresiFirst]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

Lefthark <- First + 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RightMark <- Last
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

Done <- FALSE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE (Done = FALSE)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE LeftMark <= RightMark AND Scores[LeftMark] <= PivotValue
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LeftMark <- LeftMark + 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE Scores[RightMark] >= PivotValue AND RightMark >= LeftMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RightMark <- RightMark ‚Äî 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RightMark < LeftMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Done <- TRUE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <- Scores[LeftMark]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Scores[LeftMark] <- Scores[RightMark]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Scores[RightMark] <- Temp
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDWHILE 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\series bold

\emph on
<swap Scores[First] with Scores[RightMark]>
\emph default

\series default

\family default

\family typewriter
 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN RightMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to implement this algorithm. Ensure that you add the missing code to complete the algorithm. The area of missing code is highlighted as: 
\end_layout

\begin_layout Standard
\align center

\family typewriter

\series bold

\emph on
<swap Scores [First] with Scores [RightMark]>
\emph default

\series default

\family default
 
\end_layout

\begin_layout Standard
Copy the sample data available in the 
\family typewriter
SCORES.TXT
\family default
 file. Paste this into your programming code to set up the data to be sorted.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Add a function to your code to output Scores. Call this function before and after the operation of the quick sort so that the unsorted and sorted data is displayed.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Screenshot showing the unsorted and sorted 
\family typewriter
Scores
\family default
 data.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file,
\family typewriter
 HASHEDDATA.TXT
\family default
, holds details of the names and telephone numbers of 250 people.
\end_layout

\begin_layout Standard
There are a total of 500 lines in the file, and a number of these lines are empty of name and telephone number.
\end_layout

\begin_layout Standard
An index is stored for each line of the file.
\end_layout

\begin_layout Standard
The format of the data in the file is: 
\end_layout

\begin_layout Standard
\align center
<Index>,<PersonName>,<TelephoneNumber> 
\end_layout

\begin_layout Standard
The first 10 lines from the file are shown as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
0, ,
\end_layout

\begin_layout Plain Layout
1, ,
\end_layout

\begin_layout Plain Layout
2, ,
\end_layout

\begin_layout Plain Layout
3, Boon Keng V., 07492 546415
\end_layout

\begin_layout Plain Layout
4, ,
\end_layout

\begin_layout Plain Layout
5, ,
\end_layout

\begin_layout Plain Layout
6, Ahmad Yusof, 07439 778665
\end_layout

\begin_layout Plain Layout
7, Durno Peter, 07662 863518
\end_layout

\begin_layout Plain Layout
8, Batisah Wong, 07362 156265
\end_layout

\begin_layout Plain Layout
9, ,
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The values in the file are separated by the comma character.
\end_layout

\begin_layout Standard
A record structure is used to store a name and telephone number. A data structure of 500 records is needed to store all the names and telephone numbers. Each line in the file is written to a corresponding position in the data structure.
\end_layout

\begin_layout Standard
The records with index six to eight from the data structure are: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="right" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Index
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
PersonName
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
TelephoneNumber
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ahmad Yusof 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07439 778665
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Durno Peter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07662 863518
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Batisah Wong 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07362 156265
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Use program code to create a: 
\end_layout

\begin_layout Itemize
record structure to hold the name and telephone number for one person 
\end_layout

\begin_layout Itemize
data structure, using this record structure to store 500 records. 
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the lines from the file 
\end_layout

\begin_layout Itemize
extract the <Index>, <PersonName> and <TelephoneNumber> values 
\end_layout

\begin_layout Itemize
store these values in the data structure. 
\end_layout

\begin_layout Standard
Create a procedure called 
\family typewriter
DisplayValues
\family default
 that will loop though the data structure and display the index, name and telephone number for every record where the name is present.
\end_layout

\begin_layout Standard
Ensure your procedure uses headings to identify the data displayed.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
A Screenshot showing the output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
A hashing function was used to create the file. The same hashing function can be used to search the data structure for a particular name. The hashing function generates a hash. This is calculated as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Get SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Set HashTotal to 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR each Character in SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Get the ASCII code for Character
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Multiply the ASCII code by the position of Character in SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Add the result to the HashTotal
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Calculate Hash as HashTotal MOD 500
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
RETURN Hash
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Add the program code for the hashing function. Use the following specification: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
FUNCTION GenerateHash(SearchName : STRING) : INTEGER
\family default
 
\end_layout

\begin_layout Standard
The function has a single parameter 
\family typewriter
SearchName
\family default
 and returns an integer value.
\end_layout

\begin_layout Standard
Write additional code for your program to allow you to test the implementation of this function.
\end_layout

\begin_layout Standard
The following test data will assist you.
\end_layout

\begin_layout Standard

\begin_inset space \qquad{}

\end_inset


\begin_inset Quotes eld
\end_inset

Tait Davinder
\begin_inset Quotes erd
\end_inset

 should return a hash of 87
\end_layout

\begin_layout Standard

\begin_inset space \qquad{}

\end_inset


\begin_inset Quotes eld
\end_inset

Anandan Yeo
\begin_inset Quotes qrd
\end_inset

 should return a hash of 156
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
A screenshot (or screenshots) of your program to show the results of the hash calculation for both the given test data values.
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The hash calculated from the 
\family typewriter
SearchName
\family default
 can be used to find a corresponding record in the data structure.
\end_layout

\begin_layout Standard
If the 
\family typewriter
SearchName
\family default
 is not found in the record given by the hash 
\series bold
and
\series default
 the record is not empty: 
\end_layout

\begin_layout Itemize
compare 
\family typewriter
SearchName
\family default
 with the next record 
\end_layout

\begin_layout Itemize
until the 
\family typewriter
SearchName
\family default
 is found or an empty record is found. 
\end_layout

\begin_layout Standard
If an empty record is found then the program will report that the name is 
\begin_inset Quotes eld
\end_inset

NOT FOUND
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
If the record is found, the program will output the index, name and telephone number.
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Add the program code to implement the search as described.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
A screenshot (or screenshots) of your program to show the results of the following searches:
\end_layout

\begin_layout Standard
Search 1: Charlie Love
\end_layout

\begin_layout Standard
Search 2: Chin Tan
\end_layout

\begin_layout Standard
Search 3: John Barrowman
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a computer game, a player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) moves around a maze measuring 10 metres by 11 metres to collect a prize (
\begin_inset Quotes qrd
\end_inset


\family typewriter
P
\family default

\begin_inset Quotes qrd
\end_inset

). The prize is placed at a random position within the maze. The prize position is not where a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

) appears in the maze. An empty position is indicated with a full-stop (
\begin_inset Quotes qrd
\end_inset


\family typewriter
.
\family default

\begin_inset Quotes qrd
\end_inset

).
\end_layout

\begin_layout Standard
The maze is represented on the screen by a rectangular grid. Each square metre of the maze is represented by an x-coordinate and a y-coordinate. The top left square metre of the puzzle display has x = 
\family typewriter
0
\family default
 and y = 
\family typewriter
0
\family default
.
\end_layout

\begin_layout Standard
The player moves left, right, up or down according to a direction entered by the user. The game is turn-based; a user enters the direction, their player moves one position in that direction. lithe direction would place the player on a well, then the player does not move. The maze is displayed after each move. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P1-Q4.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write a program to display the maze as shown. 
\end_layout

\begin_layout Itemize
The maze should be stored in a suitable data structure. 
\end_layout

\begin_layout Itemize
The data structure will allow fixed loop(s) to be used to display the maze. 
\end_layout

\begin_layout Standard
The maze is given in the text file 
\family typewriter
MAZE.TXT
\family default
. You may read in the data from this file or place the data in your program using any suitable method.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
The prize is placed randomly on the maze. It cannot appear in the same grid position as a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

).
\end_layout

\begin_layout Standard
Add to your program code to place the prize at a random position.
\end_layout

\begin_layout Standard
Take a screenshot of the maze with the prize displayed in it.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
A screenshot of the maze as output by your program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
The player is represented by the character 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

. The character starts the game in a central position on the grid, for example, x = 
\family typewriter
4
\family default
 and y = 
\family typewriter
5
\family default
.
\end_layout

\begin_layout Standard
To move the character, the user is prompted for a direction. The following are valid inputs: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Input character
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Action
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

U
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves up
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

D
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves down
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

L
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves left
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves right
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Continue with previous move.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
If no previous move, do nothing
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
If the next position for the player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) is a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

), then the player stays in their current position; this is called collision detection.
\end_layout

\begin_layout Standard
When the player enters the move, a new position for the player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) is calculated and the maze is displayed. The previous position is changed back to a 
\begin_inset Quotes qld
\end_inset

.
\begin_inset Quotes qrd
\end_inset

 when the player has a new position. The moves are repeated until the player is at the same position as the prize.
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Add to your program code to: 
\end_layout

\begin_layout Itemize
place the player on the grid at a central position on the grid 
\end_layout

\begin_layout Itemize
take in and validate a direction 
\end_layout

\begin_layout Itemize
calculate a new position 
\end_layout

\begin_layout Itemize
check this position is not a wall 
\end_layout

\begin_layout Itemize
update the grid so that the previous position of 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 is replaced with a 
\begin_inset Quotes qld
\end_inset

 . 
\begin_inset Quotes qld
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 is located in its new position 
\end_layout

\begin_layout Itemize
continue this until the player is at the same position as the prize. 
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [16]
\end_layout

\begin_layout Standard
When the player and the prize are at the same position, the message 
\begin_inset Quotes eld
\end_inset

Player has reached the prize
\begin_inset Quotes erd
\end_inset

 is displayed and the game ends.
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Add to your program, code to end the game when this condition is met, and display the required message. Produce screenshots to show key elements of your program are functioning.
\end_layout

\begin_layout Standard
The screenshots required are: 
\end_layout

\begin_layout Itemize
entering each direction 
\end_layout

\begin_layout Itemize
player changing position 
\end_layout

\begin_layout Itemize
end of game 
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshots of: 
\end_layout

\begin_layout Itemize
entering each direction 
\end_layout

\begin_layout Itemize
player changing position 
\end_layout

\begin_layout Itemize
end of game (player wins) 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A mobile phone company has an option for Pay As You Go usage. Customers have to purchase credit in advance. The credit is used to pay for texts, calls and data. Customers can buy additional credit at any time.
\end_layout

\begin_layout Standard
The company requires software to allow their Pay As You Go customers to do the following tasks online: 
\end_layout

\begin_layout Itemize
check credit balance 
\end_layout

\begin_layout Itemize
check data usage 
\end_layout

\begin_layout Itemize
check call usage 
\end_layout

\begin_layout Itemize
pay for credit 
\end_layout

\begin_layout Standard
A software company was employed to put together a project team to produce the software. 
\end_layout

\begin_layout Enumerate
State 
\series bold
three
\series default
 members of the project team. Describe the role of each of these members. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The initial phase of the system development cycle required that a specification be created for the system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 techniques that could have been used to gather the information for this specification. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain how each technique would have been used in this project. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The specification is a detailed report.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 sections of this report. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The software could have been designed using different techniques. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Name 
\series bold
and
\series default
 describe 
\series bold
two
\series default
 design techniques that may have been used. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain why it is important for each member of the design team to use the same technique. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
A customer's mobile phone number needs to be validated on entry.
\end_layout

\begin_deeper
\begin_layout Standard
Draw a flowchart to represent an algorithm for this validation. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
(e) The work to implement the new software needs to be managed. The following Program Evaluation and Review Technique (PERT) chart is used as a management tool.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
A
\family default
 ‚Äî Specification
\end_layout

\begin_layout Standard

\family typewriter
B
\family default
 ‚Äî Analysis
\end_layout

\begin_layout Standard

\family typewriter
C
\family default
 ‚Äî Design of software
\end_layout

\begin_layout Standard

\family typewriter
D
\family default
 ‚Äî Design of Interface
\end_layout

\begin_layout Standard

\family typewriter
E
\family default
 ‚Äî Documentation
\end_layout

\begin_layout Standard

\family typewriter
F
\family default
‚Äî Implementation
\end_layout

\begin_layout Standard

\family typewriter
G
\family default
 ‚Äî Testing
\end_layout

\begin_layout Standard

\family typewriter
H
\family default
 ‚Äî Acceptance testing
\end_layout

\begin_layout Standard

\family typewriter
I
\family default
 ‚Äî Hand over to phone company
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the critical path for the given activities 
\family typewriter
A
\family default
 to 
\family typewriter
I
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Calculate the minimum time these activities will take. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
The member of the project team who worked on activity 0 fold the project manager he could not start work until one week after the scheduled start date.
\end_layout

\begin_deeper
\begin_layout Standard
Explain any impact this would have on the completion date of the project.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The software is intended for use on hand-held devices.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 ways that users can keep their data secure on these devices.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
A member of the project team had the task of ensuring that social and ethical issues were considered.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
one
\series default
 example of each of these Issues that this member of the team might have considered. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following algorithm calculates the average mark for a group of students.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR Counter <- 1 TO NumberOfStudents
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Total <- O
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

INPUT Mark
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Total <- Total + Mark
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 Average <- Total / NumberOfStudents
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 OUTPUT Average
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is an error in this algorithm causing an incorrect result. Describe the error and explain the change required to correct this error. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State the name of this type of error.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
The lowest mark in the exam is 0 and the highest is 100. Give an example from each of the appropriate test cases which could be used to test the algorithm. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Name and describe a suitable technique that could be used to manually identify errors in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
A binary tree is as follows: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the in-order sequence. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the pre-order sequence. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A 1D array, 
\family typewriter
Value
\family default
, stores a list of scores as follows: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="16">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
36 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
48 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
58 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
64 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
69 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
74 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
79 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
86 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
92 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
99
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Using a linear search, state how many comparisons will be required to find the score of 64. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following binary search algorithm could be used to search the list of scores.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Lower <- LowestIndex
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 Upper <- HighestIndex
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Middle <- (Lower + Upper) DIV 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

IF SearchItem > Value[Middle]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O6 
\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Lower <- Middle + l
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Upper <- Middle ‚Äî l
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 UNTIL Value[Middle] = SearchItem OR Lower > Upper
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 OUTPUT 
\begin_inset Quotes qld
\end_inset

Score found at position
\begin_inset Quotes qrd
\end_inset

 Middle
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

Score 80 is not in the list.
\end_layout

\begin_deeper
\begin_layout Standard
When searching for this score, state the values that will be examined. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

When searching for a score of 80, this algorithm outputs:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Score found at position 12
\family default

\end_layout

\begin_layout Standard
Describe how the algorithm gives this incorrect output. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iv.
\end_layout

\end_inset

Describe how the algorithm could be changed to give a suitable message if the score is not in the list. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A university allows students to access the university network from home. 
\end_layout

\begin_layout Enumerate
The university server has a firewall.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 ways that a firewall can be used to block unauthorised access to the network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university wishes to restrict access to inappropriate websites from within its network.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 methods that could be used to restrict access to inappropriate websites. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university is concerned about the possible loss of data from their local servers.
\end_layout

\begin_deeper
\begin_layout Standard
Describe a strategy that could be used to prevent data loss. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university has its own intranet.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 benefits that the intranet might provide for students. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The organisers of a diving championship have created software to calculate and show the total score for each diver.
\end_layout

\begin_layout Standard
There are nine judges scoring each dive. The two best scores and the two worst scores are ignored. The other five scores are added together to give the diver
\begin_inset Quotes ers
\end_inset

s total score. 
\end_layout

\begin_layout Enumerate
Write an algorithm to take in the nine scores, delete the best two and the two worst scores, and total the five remaining scores. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
There are 10 divers in the final. The scoreboard shows the order of diving. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Order
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Diver name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Total score
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Daniel Tan 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Parker Lam 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mohamed Noor 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hariz Yazid 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sheryl Xuan 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Karl Lim 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Elaine Ning 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Nadyia Esmadi 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cai Ng 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hamid Mahmood 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The programmers decided to use a 1D array for the scores. They will also use a bubble sort to sort the scores into descending order. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a bubble sort can be used to arrange the scores into a descending or ascending order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
This is the bubble sort algorithm for sorting into descending order:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 WHILE NoSwaps = FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

NoSwaps <- TRUE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

UpperBound <- ListLength
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

FOR Posn <- 0 TO ......
\family default

\family typewriter

\series bold
A
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF List[Posn] < ......
\family default

\family typewriter

\series bold
B
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O7 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// Swap
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O8 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NoSwaps <- ......
\family default

\family typewriter

\series bold
C
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <- List[Posn]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

List[Posn] <- ListiPosn + 1]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

List[Posn + 1] <- ......
\family default

\family typewriter

\series bold
D
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
l3 
\begin_inset space \qquad{}

\end_inset

ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 ENDWHILE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write the pseudocode for 
\family typewriter

\series bold
A
\series default

\family default
, 
\family typewriter

\series bold
B
\series default

\family default
, 
\family typewriter

\series bold
C
\series default

\family default

\series bold
 a
\series default
nd 
\family typewriter

\series bold
D
\series default

\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
During the first round of dives, the sorted scores for five divers are:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
48 
\family default

\end_layout

\begin_layout Standard

\family typewriter
45 
\family default

\end_layout

\begin_layout Standard

\family typewriter
40 
\family default

\end_layout

\begin_layout Standard

\family typewriter
37 
\family default

\end_layout

\begin_layout Standard

\family typewriter
36 
\family default

\end_layout

\begin_layout Standard
The sixth diver scores 42 and the software appends the score to the list as follows:
\end_layout

\begin_layout Standard

\family typewriter
48 
\family default

\end_layout

\begin_layout Standard

\family typewriter
45 
\family default

\end_layout

\begin_layout Standard

\family typewriter
40 
\family default

\end_layout

\begin_layout Standard

\family typewriter
37 
\family default

\end_layout

\begin_layout Standard

\family typewriter
36 
\family default

\end_layout

\begin_layout Standard

\family typewriter
42
\family default
 
\end_layout

\begin_layout Enumerate
State the number of passes needed through the list to return the list to its sorted order. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the bubble sort is efficient in this example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Name another sort method that could have been used in this situation.
\end_layout

\begin_deeper
\begin_layout Standard
Compare the speed of sorting the divers
\begin_inset Quotes ers
\end_inset

 scores in your named method with using the bubble sort. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers want to buy tickets for a diving championship that takes place over three days. There are two sessions of diving each day.
\end_layout

\begin_layout Standard
Customers use a ticket ordering website to buy their tickets. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q6-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the type of user interface that the ticket ordering website uses. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
All ticket sales are stored on a database server in the following tables:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
CUSTOMER(
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, Email, ContactNumber) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
BOOKING(
\family default

\family typewriter

\bar under
BookinoID
\bar default

\family default

\family typewriter
, BookingDate, CustomerID) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SESSION(
\family default

\family typewriter

\bar under
SessionID
\bar default

\family default

\family typewriter
, Date, Time, SessionCost) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
BOOKING_SESSION(
\family default

\family typewriter

\bar under
BookingID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SessionID
\bar default

\family default

\family typewriter
, Quantity)
\family default

\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 is the unique identifier in the 
\family typewriter
CUSTOMER
\family default
 table.
\end_layout

\begin_layout Standard

\family typewriter
BookingID
\family default
 is the unique identifier in the 
\family typewriter
BOOKING
\family default
 table.
\end_layout

\begin_layout Standard

\family typewriter
SessionID
\family default
 is the unique identifier in the 
\family typewriter
SESSION
\family default
 table. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram to represent this data model. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Name the fields that would be used to calculate the customer
\begin_inset Quotes ers
\end_inset

s payment for a session. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Before customers can make an online ticket purchase, they have to fill in a registration form. The details from this form are used to complete the CUSTOMER table. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q6-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Explain how the web server will use server-side script to process this form. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
The organisers of the championship store all the data for the event using cloud storage.
\end_layout

\begin_deeper
\begin_layout Standard
Describe
\series bold
 three
\series default
 economic benefits to the organisers of using cloud-based storage. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
LOG.TXT
\family default
 contains the access log entries of an organisation's website from 0000 to 1800 hours on 1 August 2018.
\end_layout

\begin_layout Standard
The entries have the following format: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\series bold
host
\series default
 (domain name or IP address) making the request. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\series bold
timestamp
\series default
 in the format 
\begin_inset Quotes qld
\end_inset

DAY MON DD HH:MM:SS YYYY
\begin_inset Quotes qrd
\end_inset

, where 
\series bold
DAY
\series default
 is the day of the week, 
\series bold
MON
\series default
 is the name of the month, 
\series bold
DD
\series default
 is the day of the month, 
\series bold
HH:MM:SS
\series default
 is the time of day using a 24-hour clock, and 
\series bold
YYYY
\series default
 is the year. The timezone is -0400. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\series bold
request
\series default
 in quotes. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\series bold
HTTP reply status code
\series default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
5.
\end_layout

\end_inset


\series bold
bytes in the reply
\series default
. 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Determine the top 5 hosts which accessed the website during this period, in descending frequency order.
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Top 5 hosts: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 139.230.35.135 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

187
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 ns2.sharp.co.jp 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

95 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 194.157.109.130 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

62 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 ix-dfw12-08.ix.netcom.com 62 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 piweba1y.prodigy.com 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

55 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 205.163.36.61 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

30
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Determine the host which returned the largest reply size and the largest reply size.
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
slip4086.sirius.com 12345
\family default

\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A media access control (MAC) address is a unique identification code hardwired to and used to identify individual devices on the network, and is often expressed using hexadecimal notation eg. 
\family typewriter
4c:21:d0:15:e3:ea
\family default
.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using top down design, write iterative program code to convert a given MAC address to decimal notation. For MAC address 
\family typewriter
4c:21:d0:15:e3:ea
\family default
, its converted decimal notation will be 
\family typewriter
76:33:208:21:227:234
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 6
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Write recursive program code to convert a given MAC address to decimal notation. Use the same MAC address 
\family typewriter
4c:21:d0:15:e3:ea
\family default
 to test your program code.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code to perform input validation for a MAC address. Test your program with suitable test data.
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Screenshots. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A blockchain is a linked list of blocks where each block has the following structure: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: Block
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
String
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Block data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PrevHash
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
String
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hash of previous block
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CurrHash
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
String
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hash of 
\family typewriter
Data
\family default
 and 
\family typewriter
PrevHash
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Integer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The next block pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The structure of the blockchain is as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: BlockChain
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ChainData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array[1:20] of Block
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
An array used to store the 20 blocks.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Integer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the genesis block.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreeBlock
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Integer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next available empty block.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The initial value of 
\family typewriter
Start
\family default
 is 1 and the initial value of 
\family typewriter
NextFreeBlock
\family default
 is 1.
\end_layout

\begin_layout Standard
The first block of the blockchain is called the genesis block and its 
\family typewriter
PrevHash
\family default
 value is 983.
\end_layout

\begin_layout Standard
The blockchain is used to store the achievement data of students in computing and infocomm programmes. The ensures the integrity and verifiability of students' portfolios which will be useful in internships, higher education and career opportunities.
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to declare and initialise an empty blockchain of 20 unused blocks. Also write the 
\family typewriter
Display
\family default
 method to show all contents of the blockchain.
\end_layout

\begin_layout Subsection*
Evidence 11
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The following hashing algorithm computes the 
\family typewriter
CurrHash
\family default
 value of each block: 
\end_layout

\begin_layout Itemize
Compute the sum of ASCII values for the characters in the achievement data string. 
\end_layout

\begin_layout Itemize
Multiply this sum by the kth prime number, where k is the length of the achievement data string. 
\end_layout

\begin_layout Itemize
Multiply this with the decimal equivalent of the 
\family typewriter
PrevHash
\family default
 value of the current block. 
\end_layout

\begin_layout Itemize
Convert this value to its uppercase hexadecimal equivalent. 
\end_layout

\begin_layout Itemize
Prepend the appropriate number of 
\family typewriter
'F'
\family default
 to this result to form a 23-character resultant string. This will be the current block's 
\family typewriter
CurrHash
\family default
 value. 
\end_layout

\begin_layout Standard
For example, for the achievement data string 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Splash Awards 2018:Robert Goh,Mary Tan,Choo Ah Beng:First 
\family default
 
\end_layout

\begin_layout Standard
Its 
\family typewriter
CurrHash
\family default
 value will be 
\family typewriter
FFFFFFFFFFFFFFF4D32A036
\family default
 (sum of ASCII value * 57th prime number * 
\family typewriter
PrevHash
\family default
 = 4898 * 269 * 983)
\end_layout

\begin_layout Standard
Write program code for a 
\family typewriter
ComputeHash
\family default
 function to calculate the 
\family typewriter
CurrHash
\family default
 value of a block. Verify your function with the following 2 achievement data strings:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Splash Awards 2018:Robert Goh,Mary Tan,Choo Ah Beng:First
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Splash Awards 2018:Lim Ah Huat,Alice Wong,Tan Ah Lian:Honorable Mention
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[18]
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
Screenshot for the 2 achievement data strings. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write program code to insert the data in 
\family typewriter
ACHIEVEMENTS.TXT
\family default
 into the blockchain and display the contents of the updated blockchain.
\end_layout

\begin_layout Subsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 16
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
Lim Ah Huat aspires to save the world by studying computer science in NUS School of Computing. As it is now the toughest course to get admitted to, he hopes to improve his chances of admission by showcasing his achievements in the various computing and infocomm related programmes he has participated in. He claimed that he is a good team player and is a strong self-directed learner with excellent aptitude for Computing.
\end_layout

\begin_layout Standard
How can the university admission panel verify his achievements using the existing blockchain? You should describe briefly in program comments this strategy and implement the associated program code.
\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Another student Tan Ah Seng claimed that he also has computing or infocomm related participation, and changes one of the achievement data string from
\end_layout

\begin_layout Standard

\family typewriter
Splash Awards 2018:Lim Ah Huat,Alice Wong,Tan Ah Lian:Honorable Mention
\family default

\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout Standard

\family typewriter
Splash Awards 2018:Lim Ah Huat,Alice Wong,Tan Ah Seng:Honorable Mention
\family default

\end_layout

\begin_layout Standard
Using program comments, briefly explain the impact to the blockchain. Write program code to refute Mr Tan's claim.
\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 20 
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Vector and matrix manipulation are used extensively in machine learning programs. We will look at how common vector and matrix operations are implemented using first principles
\end_layout

\begin_layout Standard

\series bold
Addition and subtraction
\series default

\end_layout

\begin_layout Standard

\family typewriter
[a,b,c] + [d,e,f] = [a+d,b+e,c+f]
\family default

\end_layout

\begin_layout Standard

\family typewriter
[a,b,c] - [d,e,f] = [a-d,b-e,c-f]
\family default

\end_layout

\begin_layout Standard

\series bold
Scalar multiplication
\series default
 i.e. product of a constant and a vector
\end_layout

\begin_layout Standard

\family typewriter
k * [a,b,c] = [k*a,k*b,k*c]
\family default

\end_layout

\begin_layout Standard

\series bold
Dot product
\series default
 (for 2 vectors of the same dimension)
\end_layout

\begin_layout Standard

\family typewriter
[a,b,c] 
\begin_inset Formula $\cdot$
\end_inset

 [d,e,f] = a*d + b*e + c*f
\family default

\end_layout

\begin_layout Standard

\series bold
Distance
\series default
 (between 2 vectors 
\family typewriter
[a,b,c]
\family default
 and 
\family typewriter
[d,e,f]
\family default
 of the same dimension)
\end_layout

\begin_layout Standard

\begin_inset Formula $\sqrt{\left(\mathtt{a-d}\right)^{2}+\left(\mathtt{b-e}\right)^{2}+\left(\mathtt{c-f}\right)^{2}}$
\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Using OOP techniques, create a class 
\family typewriter
Vector
\family default
 to implement the operations add, subtract, scalar multiplication, dot product and distance.
\end_layout

\begin_layout Standard
Exercise your class methods with the following vectors and constant:
\end_layout

\begin_layout Standard

\family typewriter
v1 = [1,3,5], v2 = [2,4,6], k = 5
\family default

\end_layout

\begin_layout Subsection*
Evidence 21 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Evidence 22
\end_layout

\begin_layout Standard
Screenshots. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
In some situations, it may be necessary to perform operations on vectors of different dimensions eg for a convolution layer in deep learning. The following diagram illustrates this process for a 3-element vector 
\family typewriter
[1,2,3]
\family default
 and a 5-element vector 
\family typewriter
[5,4,3,2,1]
\family default
. The result will be a 3-element vector. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2018-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Write program code to implement the convolution process for vectors. Display the result to the screen.
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 24 
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
An example of the inner product for a matrix (2D array) is as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2018-P1-Q4-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Write program code to implement the convolution process for matrices which uses the dot product for matrices. An example is shown below. Display the result to the screen. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2018-P1-Q4-3.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Evidence 25 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 26
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Singapore Quick Response Code (SGQR) is a single QR code that combines multiple e-payment solutions into one. It is intended to simplify QR e-payments in Singapore for both consumers and merchants.
\end_layout

\begin_layout Standard
Currently, consumers see multiple QR codes at merchant stores promoting various e-payment solutions. This can be confusing for consumers who have to manually find if their preferred e-payment option is accepted. Merchants are also impacted by the aesthetic and logistics constraints of supporting multiple QR codes on their limited display and retail space. With SGQR, consumers will see a single SGQR label that shows all QR payment options that the merchant accepts. For merchants, SGQR will be an infrastructure-light and cheaper way to accept multiple types of e-payments. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2018-P2-Q1.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
Merchants that currently offer QR code payments will have their existing QR codes replaced with a single SGQR label over the next six months. The first phase of SGQR label replacement, starting with merchants in the Central Business District, will be commencing in late September 2018. 
\end_layout

\begin_layout Enumerate
You have been engaged as a project manager to oversee the implementation of SGQR in Dunman High School (DHS) canteen. Produce a project proposal outlining the key activities to make DHS canteen cashless by March 2019. Your proposal should include the essential elements such as problem statement, project management processes and tools (e.g. PERT chart and Gantt chart), roles of team members, etc. 
\begin_inset space \hfill{}

\end_inset

[19] 
\end_layout

\begin_layout Enumerate
Beyond SGQR and in line with the Smart Nation drive, you have also engaged a systems analyst to come up with an online food ordering application to allow students and staff to avoid long queues and streamline the food preparation process using their mobile devices. The school management also wishes to keep track of the situation to provide feedback to the canteen vendors.
\end_layout

\begin_deeper
\begin_layout Standard
Outline the deliverables in the various phases of the software development life cycle (specification, design, development, documentation, implementation, testing/modification and maintenance). Be sure to adapt your answer to the question context. 
\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\end_deeper
\begin_layout Enumerate
Networking is critical in such a project/system. Give an example of where each of the following networking concept is applicable in your project/system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
synchronous and asynchronous data transmission 
\end_layout

\begin_layout Enumerate
simplex, half duplex and full duplex mode of data transmission 
\end_layout

\begin_layout Enumerate
packet switching and circuit switching for data transmission 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
You are also mindful about and is determined to prevent cybersecurity attacks like the recent SingHealth data breach of the personal information of 1.5 million patients. Outline a comprehensive organisational security plan which goes beyond technical controls (user authentication, access levels, antivirus, firewalls) to ensure that both the hardware infrastructure and software applications are well secured against cybersecurity hacks.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Mergesort uses a divide and conquer approach to successively divide a list into half, forming two sublists, until each sublist is of length 1. The sublists are then sorted and merged into larger sublists until they are recombined into a single sorted list. An algorithm for mergesort is given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
procedure mergesort(mergelist)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(mergelist) > 1 then 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid = len(mergelist) div 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

lefthalf = mergelist[:mid]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

righthalf = mergerlist[mid:]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(righthalf)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while i < len(lefthalf) and i < len(righthalf)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if lefthalf[i] < righthalf[j] then
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] = lefthalf[i]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] = righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j = j + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

endif 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k = k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

endwhile 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while i < len(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] = lefthalf[i]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = i + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k = k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

endwhile
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while j < len(righthalf)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] = righthalf[j]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j = j + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k = k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

endwhile
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

endif 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
endprocedure
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The following list of numbers is to be sorted using mergesort:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
mergelist = [5, 3, 2, 7, 9, 1, 3, 8]
\family default

\end_layout

\begin_layout Standard
What are the first two lists to be merged? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a graphical representation of how the above list is first split into halves until each sublist contains zero or one items, and then the sublists are merged to become the sorted list. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Give and justify the time complexity of mergesort. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Compare the space complexities of mergesort and quicksort.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Devise an algorithm to sort a list of words so that the anagrams are grouped together.
\end_layout

\begin_deeper
\begin_layout Standard
For example, if the unsorted list is
\end_layout

\begin_layout Standard
tar, phone, rat
\end_layout

\begin_layout Standard
after sorting we should get
\end_layout

\begin_layout Standard
tar, rat, phone
\end_layout

\begin_layout Standard
since tar and rat are anagrams, they are grouped together.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Devise an algorithm to find the length of the longest palindrome in a string s. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program needs to be written to store and manage product information. The program will have the following functionality: 
\end_layout

\begin_layout Itemize
able to display a list of products in alphabetical order 
\end_layout

\begin_layout Itemize
able to support efficient additions and deletions 
\end_layout

\begin_layout Itemize
able to search for a product efficiently 
\end_layout

\begin_layout Enumerate
Explain why it is better to use a binary search tree (BST) than an ordered array to store and manage product information
\begin_inset space \hfill{}

\end_inset

. [2]
\end_layout

\begin_deeper
\begin_layout Standard
The initial list of products to be stored are: 
\end_layout

\begin_layout Standard
\align center
\noindent
battery, cable, detergent, medicine, soap, towel, yoyo 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw the BST 
\end_layout

\begin_deeper
\begin_layout Enumerate
from the initial list to support efficient seach, addition and deletion 
\end_layout

\begin_layout Enumerate
when new items earphone and eraser have been inserted in that order 
\end_layout

\begin_layout Enumerate
when medicine has been deleted 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the postorder traversal output of the updated BST. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Outline how the BST can be reorganised after a series of additions and deletions to ensure optimal search performance.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A digital media company currently sells electronic books and audio books. Each book has a unique id, title, image and price. An electronic book has a default number of pages while an audio book has a duration. 
\end_layout

\begin_layout Enumerate
Draw a class diagram showing the relationship between the different digital book types. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Using appropriate examples, explain the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation 
\end_layout

\begin_layout Enumerate
inheritance 
\end_layout

\begin_layout Enumerate
polymorphism
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
To improve sales, the company decides to 
\end_layout

\begin_deeper
\begin_layout Enumerate
Offer discounts on selected book items. Discounts on each book may vary from 0 to 50%. 
\end_layout

\begin_layout Enumerate
sell digital movies. Each movie has a duration as well as a rating with possible values G, PG and PG13. 
\end_layout

\begin_layout Enumerate
offer a monthly subscription service with unlimited access to all digital media. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Explain how these changes will affect your design in 
\series bold
part (a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following figure shows the partial contents of an unnormalised relational database table for library book loans by an amateur database administrator. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
CallNo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Title 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Author 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PublisherID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PublisherName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
BorrowerID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
BorrowerName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Email 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LoanDate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A2345 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Superhuman 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Peter Smith 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P0928 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Healthy Global 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X894 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Robert Lim 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
roblim@gmail.com 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20181004
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A1133 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Agile Methodology 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sophia Jones 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P7823 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
CS Books 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X894 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Robert Lim 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
roblim@gmail.com 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20181004
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B5104 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Python Advanced 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zen Wang 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P8246 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Make It Harder 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Y532 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mary Tan 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
maryt@yahoo.com 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20181007
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A2257 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Computer Science 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Berry Mile 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P8246 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Make It Harder 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X451 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ben Neo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
benn@gmail.com 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20181007
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B7513 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alibaba 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jacky Ma 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P3245 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ali Pub 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X451 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ben Neo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
benn@gmail.com 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20181007
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 potential anomalies that can occur with this design. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of normalisation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give the table specification in 
\end_layout

\begin_deeper
\begin_layout Enumerate
1NF 
\end_layout

\begin_layout Enumerate
2NF 
\end_layout

\begin_layout Enumerate
3NF 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw an E-R diagram to represent your normalised design.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
The following figure shows the notification email sent to the borrower upon successful loan of library books.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Oct 4, 2018, 6:52 PM 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From: NLB <helpdesk@nlb.gov.sg> 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To: roblim@gmail.com
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Dear Robert Lim
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Thank you for using NLB's e-notification service through email, a free service available to all library members.
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
This notification service confirms the number of items you have borrowed at the library book borrowing station.
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
You have borrowed 2 item(s) at 18:52 on 4 Oct 2018 at Serangoon Public Library:
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
1. Superhuman 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Due on: 25 October 2018
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
2. Agile Methodology 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Due on: 25 October 2018
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
You may also check your updated account status at http://www.nlb.gov.sg
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Describe how the customised contents of the notification email are generated from the database. You may assume that the default loan period is 21 days.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a treasure island game to be played on the computer.
\end_layout

\begin_layout Standard
The island is a rectangular grid, 30 squares by 10 squares. Each square of the island is represented by an element in a 2D array. The top left square of the island is represented by the array element [0, 0].
\end_layout

\begin_layout Standard
There are 30 squares across and 10 squares down.
\end_layout

\begin_layout Standard
The computer will: 
\end_layout

\begin_layout Itemize
generate three random locations where treasure will be buried 
\end_layout

\begin_layout Itemize
prompt the player for the location of one square where the player choose to dig 
\end_layout

\begin_layout Itemize
display the contents of the array by outputting for each square: 
\end_layout

\begin_deeper
\begin_layout Itemize
'.' for only sand in this square 
\end_layout

\begin_layout Itemize
'T' for treasure still hidden in sand 
\end_layout

\begin_layout Itemize
'X' for a hole dug where treasure was found 
\end_layout

\begin_layout Itemize
'O' for a hole dug where no treasure was found. 
\end_layout

\end_deeper
\begin_layout Standard
Here is an example display after the player has chosen to dig at location [9, 3]:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..................T........... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
...T.......................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
...X..........................
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The game is to be implemented using object oriented programming.
\end_layout

\begin_layout Standard
The programmer has designed the class 
\family typewriter
IslandClass
\family default
. The identifier table for this class is: 
\end_layout

\begin_layout Itemize

\family typewriter
Grid : ARRAY[0:9, 0:29] OF CHAR
\family default
 - 2D array to represent the squares of the island 
\end_layout

\begin_layout Itemize

\family typewriter
Constructor()
\family default
 - instantiates an object of class 
\family typewriter
IslandClass
\family default
 and initialises all squares to sand 
\end_layout

\begin_layout Itemize

\family typewriter
HideTreasure()
\family default
 - generates a pair of random numbers used as the grid location of treasure and marks the square with 
\family typewriter
'T'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
DigHole(Row, Column)
\family default
 - takes as parameter a valid grid location and marks the square with 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
 as appropriate 
\end_layout

\begin_layout Itemize

\family typewriter
GetSquare(Row, Column) : CHAR
\family default
 - takes as parameter a valid grid location and returns the grid value for that square from the 
\family typewriter
IslandClass
\family default
 object 
\end_layout

\begin_layout Itemize

\family typewriter
DisplayGrid()
\family default
 - shows the current grid data. 
\family typewriter
DisplayGrid
\family default
 should make use of the getter method 
\family typewriter
GetSquare
\family default
 of the 
\family typewriter
IslandClass
\family default
 class 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
IslandClass
\family default
 including the 
\family typewriter
Constructor
\family default
, 
\family typewriter
GetSquare
\family default
 and 
\family typewriter
DisplayGrid
\family default
 methods. The code should follow the specification given.
\end_layout

\begin_layout Standard
The value to represent sand should be declared as a constant. Do not attempt to write the methods 
\family typewriter
HideTreasure
\family default
 or 
\family typewriter
DigHole
\family default
 at this stage.
\end_layout

\begin_layout Subsection*
Evidence 1
\end_layout

\begin_layout Standard
Program code for Task 1.1
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
HideTreasure
\family default
 method. Your method should check that the random location generated does not already contain treasure. The value to represent treasure should be declared as a constant.
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Your program code for Task 1.2
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
create an IslandClass object 
\end_layout

\begin_layout Itemize
generate three random locations where treasures will be buried 
\end_layout

\begin_layout Itemize
your program will then call the DisplayGrid method. 
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
The program code for Task 1.3 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 4
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 1.3
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
DigHole
\family default
 method. This method takes two integers as parameters. These parameters form a valid grid location. The location is marked with 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
 as appropriate.
\end_layout

\begin_layout Standard
The values to represent treasure, found treasure and hole should be declared as constants.
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Program code for Task 1.4. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 1.5 
\end_layout

\begin_layout Standard
Add code to the main program in Task 1.3. The program is to: 
\end_layout

\begin_layout Itemize
prompt the player for a location to dig 
\end_layout

\begin_layout Itemize
validate the user input 
\end_layout

\begin_layout Itemize
call the 
\family typewriter
DigHole
\family default
 method and then the 
\family typewriter
DisplayGrid
\family default
 method. 
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
The program code.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.6
\end_layout

\begin_layout Standard
Run the program by inputting a location where: 
\end_layout

\begin_layout Itemize
the treasure is not found 
\end_layout

\begin_layout Itemize
the treasure is found. 
\end_layout

\begin_layout Subsection*
Evidence 7
\end_layout

\begin_layout Standard
Screenshot evidence similar to that shown which shows: 
\end_layout

\begin_layout Itemize
The player has chosen to dig at location [2, 25] where no treasure was found
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
....T......................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.........................O.... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..........T................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..................T........... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The player has chosen to dig at location [5, 3] where treasure was found
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
...............T..............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.........................T.... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
...X.......................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The International Bank Account Number (IBAN) is an international bank account identification standard used in many countries. It uses modulo arithmetic to perform validation. The IBAN consists of up to 34 alphanumeric characters, as follows: country code ‚Äì two letters check digits ‚Äì two digits, and basic bank account number ‚Äì up to 30 alphanumeric characters that are countryspecific An example of an IBAN in the United Kingdom Great Britain which is 22 characters is 
\family typewriter
GB82WEST12345698765432
\family default
 (
\family typewriter
GB
\family default
 - country code, 
\family typewriter
82
\family default
 - check digits)
\end_layout

\begin_layout Standard
The following is the IBAN check digits generation algorithm: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Initialize the two check digits by 
\family typewriter
00
\family default
 (e.g. 
\family typewriter
GB
\family default

\family typewriter

\bar under
00
\bar default

\family default

\family typewriter
WEST12345698765432
\family default
). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Move the four initial characters to the end of the string (e.g. 
\family typewriter
WEST12345698765432GB
\family default

\family typewriter

\bar under
00
\bar default

\family default
). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Replace each alphabet in the string with two digits, using the mapping A = 10, B = 11, C = 12, . . . . . , Z = 35 (i.e. ASCII value of uppercase letters - 55) (e.g. 
\family typewriter

\bar under
32142829
\bar default

\family default

\family typewriter
12345698765432
\family default

\family typewriter

\bar under
1611
\bar default

\family default

\family typewriter
00
\family default
). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset

Convert the string to an integer. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
5.
\end_layout

\end_inset

Calculate the remainder of dividing this number by 97 (e.g. 
\family typewriter
3214282912345698765432161100 mod 97 = 16
\family default
). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
6.
\end_layout

\end_inset

Subtract the remainder from 98 to give the two check digits (e.g. check digits 
\family typewriter
= 98 - 16 = 82
\family default
). If the result is a single digit number, pad it with a leading 0 to make a two-digit number. 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
CheckDigits
\family default
 function using the following specification. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION CheckDigits (IBAN : STRING) : STRING 
\family default
 
\end_layout

\begin_layout Standard
The function has a single string parameter IBAN and returns a two-digit string result. Use the sample data provided in the text file 
\family typewriter
IBANS.txt
\family default
 and paste this into your program code.
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
One screenshot verifying that your program generates the correct check digits for the data in 
\family typewriter
IBANS.txt
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
An IBAN is validated by converting it into an integer and performing a basic mod-97 operation on it. If the IBAN is valid, the remainder equals 1. The algorithm of IBAN validation is as follows: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Move the four initial characters to the end of the string (For the IBAN 
\family typewriter
GB82WEST12345698765432
\family default
 e.g. 
\family typewriter
WEST12345698765432
\family default

\family typewriter

\bar under
GB82
\bar default

\family default
). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Replace each letter in the string with two digits, thereby expanding the string, where A = 10, B = 11, C = 12, . . . . . , Z = 35
\end_layout

\begin_deeper
\begin_layout Standard
(e.g. 
\family typewriter

\bar under
32142829
\bar default

\family default

\family typewriter
12345698765432
\family default

\family typewriter

\bar under
1611
\bar default

\family default

\family typewriter
82
\family default
). 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Interpret the string as a decimal integer and compute the remainder of that number on division by 97
\end_layout

\begin_deeper
\begin_layout Standard
(e.g. 
\family typewriter
3214282912345698765432161182 mod 97 = 1
\family default
). 
\end_layout

\end_deeper
\begin_layout Standard
If the remainder is 1, the check digit test is passed and the IBAN might be valid.
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a Boolean function 
\family typewriter
ValidateIBAN
\family default
 to determine if a given IBAN is valid. This function should have a parameter which allows it to be used for any IBAN.
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Your 
\family typewriter
ValidateIBAN
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
A 
\family typewriter
TRANSACTIONS.txt
\family default
 file contains transaction details of customers of a bank. Each transaction record takes up one line and has three data fields: customer IBAN, transaction mode (
\family typewriter
W
\family default
 - withdrawal or 
\family typewriter
D
\family default
 - deposit) and transaction amount.
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
CheckIBAN
\family default
 to read in the IBANs in 
\family typewriter
TRANSACTIONS.txt
\family default
 and display on the screen: 
\end_layout

\begin_layout Itemize
If an IBAN is valid, the valid IBAN followed by 
\begin_inset Quotes eld
\end_inset


\family typewriter
OK
\family default

\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Itemize
If an IBAN is invalid, the invalid IBAN followed by 
\family typewriter

\begin_inset Quotes eld
\end_inset

Invalid. Expected check digits: ??
\begin_inset Quotes erd
\end_inset


\family default
, where ?? represents the computed check digits. 
\end_layout

\begin_layout Itemize
For an invalid IBAN, update the record in 
\family typewriter
TRANSACTIONS.txt
\family default
 with the expected computed check digits. 
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CheckIBAN
\family default
 program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
One screenshot showing the output and contents of 
\family typewriter
TRANSACTIONS.txt
\family default
 from running the program. [2]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
A master file 
\family typewriter
ACCOUNTS.txt
\family default
 contains the customer IBANs, names and current balances.
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
UpdateBalance
\family default
 to update the current balances of the customers in 
\family typewriter
ACCOUNTS.txt
\family default
 from 
\family typewriter
TRANSACTIONS.txt
\family default
. At the end of the process, your program will output the message:
\end_layout

\begin_layout Standard

\family typewriter
x records updated. 
\family default

\end_layout

\begin_layout Subsection*
Evidence 13
\end_layout

\begin_layout Standard
Your program code for the procedure 
\family typewriter
UpdateBalance
\family default
.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
One screenshot showing the program output and contents of 
\family typewriter
ACCOUNTS.txt
\family default
 from running the program.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list Abstract Data Type (ADT) has the following operations defined: 
\end_layout

\begin_layout Itemize

\family typewriter
Create()
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- creates an empty linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Insert(item, p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts new value, 
\family typewriter
item
\family default
, into linked list so that it is at position 
\family typewriter
p
\family default
 in the linked list. Assume that the linked list contains at least 
\family typewriter
(p - 1)
\family default
 items before the insertion. 
\end_layout

\begin_layout Itemize

\family typewriter
Delete(p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- deletes the item at position 
\family typewriter
p
\family default
 in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Length()
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns the number of items in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns 
\family typewriter
True
\family default
 if linked list is empty; 
\end_layout

\begin_layout Itemize

\family typewriter
IsFull()
\family default
 ‚Äì returns 
\family typewriter
True
\family default
 if linked list is full; 
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that have two parts: the item data and a pointer to the next item in the list. In addition there is a 
\family typewriter
Start
\family default
 pointer which points to the first item in the list.
\end_layout

\begin_layout Standard
The unused nodes are linked and the first unused node is the position where the next new data item is to be stored. Node removed from the linked list should be returned to 
\family typewriter
NextFree
\family default
 list. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename static/img/9597-HCI-2018-P1-Q3-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list after the following sequence of commands have been executed.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Create() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ali', 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Jack', 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ben',2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Delete(1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Jane', 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ken', 3)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Delete(2)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset


\family typewriter
ListNode
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SetName(Name:STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SetPointer(Pointer:INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
GetName():STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
GetPointer():INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset


\family typewriter
LinkedList
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node : ARRAY [1..10] OF ListNode
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start : INTEGER NextFree : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Insert (name: STRING, position: INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Delete (position: INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Length (): INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty(): BOOLEAN
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull() : BOOLEAN
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes. 
\begin_inset space \hfill{}

\end_inset

[18]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
A method 
\family typewriter
Display()
\family default
 is to be added, which displays the value of 
\family typewriter
Start
\family default
, the value of 
\family typewriter
NextFree
\family default
 and the contents of 
\family typewriter
Node
\family default
 array in index order. Write program code to implement this method.
\end_layout

\begin_layout Subsection*
Evidence 16
\end_layout

\begin_layout Standard
Your program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program. Paste the sequence of commands in 
\family typewriter
COMMANDS.txt
\family default
 into your program code. Your program will then call the 
\family typewriter
Display
\family default
 method.
\end_layout

\begin_layout Standard
Execute your program to test it.
\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.3. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
A linear queue is implemented using the 
\family typewriter
LinkedList
\family default
 class as a super class.
\end_layout

\begin_layout Standard
The subclass 
\family typewriter
Queue
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Enqueue(item)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts item at the rear of the queue; 
\end_layout

\begin_layout Itemize

\family typewriter
Dequeue()
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- deletes the item at the front of the queue; 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- displays the contents of the queue using the format given below. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Steven
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\leftarrow$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Celine
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Tom
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ryan
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\leftarrow$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Numbers in queue : 4
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write program code for the subclass 
\family typewriter
Queue
\family default
.
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism in your design.
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Your program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
create a new queue and add the data in the file 
\family typewriter
NAMES.txt
\family default
 to the queue 
\end_layout

\begin_layout Itemize
remove two items from the queue 
\end_layout

\begin_layout Itemize
display final contents of the queue 
\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Your program code for Task 3.5. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.5. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Romans had their own system of number representation which used a sequence of upper case letter characters to represent a number. We shall consider the denary number 1 to 20 only.
\end_layout

\begin_layout Standard
The following letters represent each of the values shown: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Roman Numeral 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
One
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Five
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fifty
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A number is always written with the smallest number of characters, with the letters in sequence starting with the character with the largest value. 
\end_layout

\begin_layout Itemize
For example, 6 is written 
\family typewriter
VI
\family default
 (not 
\family typewriter
IIIIII
\family default
) 
\end_layout

\begin_layout Standard
The exceptions to this sequence are as follows: 
\end_layout

\begin_layout Itemize
one less than 5 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- which is written as 
\family typewriter
IV
\family default
 
\end_layout

\begin_layout Itemize
one less than ten -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- which is written as 
\family typewriter
IX
\family default
 
\end_layout

\begin_layout Itemize
ten less than fifty -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- which is written as 
\family typewriter
XL
\family default
 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code with the following specification: Input a denary integer number in the range 1 to 20 Validate the input Calculate the Roman numeral representation (write this code as a function) Output the Roman number.
\end_layout

\begin_layout Subsection*
Evidence 21 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable tests and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Write additional program code with appropriate data validation for the following specification: 
\end_layout

\begin_layout Itemize
Input two Roman numeral numbers between 1 and 20 
\end_layout

\begin_layout Itemize
Ouput the sum of the numbers as a Roman numeral number. 
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable tests and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 24 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
A local area network can be set up as either client-server or peer-to-peer. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State where data are stored on a client-server network and why? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State where data are stored on a peer-to-peer network and why? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
In your opinion, what is the key benefit of a client-server network over peer-topeer network. Justify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In your opinion, what is the main drawback of a client-server network compared to a peer-to-peer network. Justify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A 60 Megabyte file is transferred over a network to a printer in 10 seconds.
\end_layout

\begin_deeper
\begin_layout Standard
Calculate the transfer rate, in kilobytes per second, used to transfer this file. Show all of your working. [1 MB = 1024 KB] 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how DHCP operates in a network? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Switches and routers are both connecting devices. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What are the purposes of having connecting device in a network?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
What are the differences between them?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What are the characteristics of a voice-user interface? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What are the strengths and weaknesses of a voice-user interface in comparison to a graphical user-interface?
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
One of the 8 golden rules for interface design is the element of consistency. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the importance of consistency in designing a user interface. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Is consistency still important in the newer user-interfaces (eg. voice, gesture)? Why is this so?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Voice User interfaces gaining popularity with the readily availablity of devices like Echo and iphone. What do you think are some of the key design elements that are vital to an effective user experience when using such devices? Explain your answers.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain what is meant by the following terms and give an example for each 
\end_layout

\begin_deeper
\begin_layout Enumerate
Candidate key
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Secondary key 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Foreign key
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The school
\begin_inset Quotes ers
\end_inset

s Robotics club is looking at designing a relational database to keep track of members participation and achievements. Proposed a relational database design for this purpose. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give the table descriptions in shorthand notations. Explain the purpose of all your tables. Highlight the necessary details needed in your design.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
Draw the entity-relationship model for your design.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An apartment block in a city consists of a large number of apartments. Each of the residents of the apartments has their information stored in a file.
\end_layout

\begin_layout Standard
The records in the file are to be sorted into alphabetical order of the resident
\begin_inset Quotes ers
\end_inset

s name. 
\end_layout

\begin_layout Enumerate
Using the following list of names as an example, show how the records can be sorted into alphabetical order using an insertion sort.
\end_layout

\begin_deeper
\begin_layout Standard
GRA, CHR, DAV, SAR, TOM, KAT 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Residents sometimes make requests for maintenance on their apartments. Each request is given a priority number ranging from 1, for failure of the air conditioning, to 10, for a dripping tap. Each request is stored in a linked list in order of priorities. Jobs with equal priority are stored in order of the date that they have been submitted.
\end_layout

\begin_deeper
\begin_layout Standard
Describe an algorithm to insert a new job into the list.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q5] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between an iterative solution and a recursive solution to a problem. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The program 
\family typewriter
RADIX_CONVERT
\family default
, listed below, calls a recursive procedure, OUT. Note that x DIV y gives the integral part of the quotient when x is divided by y, and x MOD y gives the remainder.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Program RADIX_CONVERT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

declare integers a, b
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

input a, b OUT (a, b) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print a, b 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
End RADIX_CONVERT 
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Procedure OUT (x, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

declare integers a, b 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

a = x DIV y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

b = x MOD y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if a > 0 then OUT (a, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print (b) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
End OUT 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Draw a diagram to trace the execution of the program, 
\family typewriter
RADIX_CONVERT
\family default
 with values 46 and 3 as input for 
\family typewriter
a
\family default
 and 
\family typewriter
b
\family default
 respectively. Show clearly the order of call and return, and the change in values of a and b.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Write down, in the correct order, all the values printed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What does 
\family typewriter
RADIX_CONVERT
\family default
 accomplish? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Carrie Car, a car accessories shop wants to sell its products through the internet. A software house has been engaged to supply the computerised solution. The project manager has drawn up a list of activities and their likely duration. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weeks to complete
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write requirement specification 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Produce program design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write module code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Module testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integration testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alpha testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Install software and acceptance testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write end user training guide 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write technical documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
End user training 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sign off final system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The project manager decides to construct a Program Evaluation Review Technique (PERT) chart from this data. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename static/img/9597-HCI-2018-P2-Q6.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Complete the PERT chart. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State the critical path and elapsed time for this project. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the earliest and late start for activity J. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The systems analyst from the team gathered the following requirements: 
\end_layout

\begin_deeper
\begin_layout Itemize
A customer can place an order either by telephone or via the internet 
\end_layout

\begin_layout Itemize
The order will be placed in a file to be dealt with by the warehouse staff 
\end_layout

\begin_layout Itemize
An email acknowledgement of the order will be sent to the customer 
\end_layout

\begin_layout Itemize
After completion of the order the customer details will be stored in a customer file 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
List details of the data stores required, and draw the data flow diagram for the solution.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Various procedures are written. One of the procedures is written to look up the customer record in the customer file. The procedure then adds the value of the current order to the total ordered by the customer this year. This determines whether or not a discount is payable.
\end_layout

\begin_deeper
\begin_layout Standard
Parameters can be passed to a procedure by using pass-by-value or pass-by-reference. Explain the two methods and highlight the difference. Using the scenario above, give an example of each to illustrate the difference. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Besides car accessories, Carrie Car also sells car insurance. Customers can insure their car using one of two methods: 
\end_layout

\begin_deeper
\begin_layout Itemize
Method A: by using the Internet or 
\end_layout

\begin_layout Itemize
Method B: by using the telephone to talk to a sales representative. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Enumerate
For method A, describe how the car registration could be validated. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
For method B, describe how the car registration could be verified. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The rules that are used when deciding whether to offer insurance to customers and whether to offer discounts are as follows: 
\end_layout

\begin_deeper
\begin_layout Itemize
If the customer has been refused insurance by another company and their car is over 10 years old then insurance is refused. 
\end_layout

\begin_layout Itemize
If the customer has been refused insurance by another company and their car is not more than 10 years old then insurance without any discount is available. 
\end_layout

\begin_layout Itemize
If the customer has not been refused insurance by another company and their car is over 10 years old then insurance without any discount is available. 
\end_layout

\begin_layout Itemize
If the customer has not been refused insurance by another company and their car is less than 10 years old and they have made not more than three claims previously then insurance with a discount is available. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table showing all the possible outcomes and results. 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2018/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The elements of an array are numbered 0 to MAX. It is wished to copy all the data items stored in that part of the array between START and FINISH to a different position in the array, the item at START moving to NEWSTART.
\end_layout

\begin_layout Standard
Describe in detail an algorithm to accomplish this. You may assume that no items will be moved beyond the range of the array, but remember that the copying may be in either direction, and that the new position may overlap the old. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers of coffee shops in Singapore use 
\begin_inset Quotes els
\end_inset

codewords
\begin_inset Quotes ers
\end_inset

 to order their drinks. 
\family typewriter
DRINKS.TXT
\family default
 is a text file containing the codewords. Brewed coffee drinks begin with the word 
\begin_inset Quotes els
\end_inset

Kopi
\begin_inset Quotes ers
\end_inset

, while brewed tea drinks begin with the word 
\begin_inset Quotes els
\end_inset

Teh
\begin_inset Quotes ers
\end_inset

. All other drinks are classified as 
\begin_inset Quotes els
\end_inset

Other drinks
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
The task is to read the codewords from the file and display a list according one of the following search criterion: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Brewed coffee 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Brewed tea 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Other drinks 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
read the entire contents of 
\family typewriter
DRINKS.TXT
\family default
 to an appropriate data structure called 
\family typewriter
Drinklist
\family default
 
\end_layout

\begin_layout Itemize
display a menu with the following options: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Menu
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1. Brewed coffee
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2. Brewed tea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3. Other drinks
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
‚Ä¢ generate the list of drinks and the total number of items according the user
\begin_inset Quotes ers
\end_inset

s selection. 
\end_layout

\begin_layout Standard
Example run of the program:
\end_layout

\begin_layout Standard

\series bold
DrinkList
\series default

\end_layout

\begin_layout Standard
Kopi
\end_layout

\begin_layout Standard
Kopi Siew Dai
\end_layout

\begin_layout Standard
Teh O
\end_layout

\begin_layout Standard
Milo Dinosaur
\end_layout

\begin_layout Standard
Clementi
\end_layout

\begin_layout Standard
The output generated from the selection of option 1 would be:
\end_layout

\begin_layout Standard

\series bold
Brewed coffee
\series default

\end_layout

\begin_layout Standard
Kopi
\end_layout

\begin_layout Standard
Kopi Siew Dai
\end_layout

\begin_layout Standard
Total items: 2
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Your program code. Screenshot of the output for the selection of Menu Option 3. 
\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a school, students are identified by student numbers. These numbers are stored in a hash table which uses the hashing function 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Address <- StudentNumber MOD X 
\family default
 
\end_layout

\begin_layout Standard
The hash table is implemented as a one-dimensional array with elements indexed 
\family typewriter
0
\family default
 to
\family typewriter
 (X-1)
\family default
.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Read student numbers from a text file and store them in a hash table. For the purpose of testing the program, 
\family typewriter
X
\family default
 is to be set to the value of 12.
\end_layout

\begin_deeper
\begin_layout Standard
Assume different student numbers will hash to different addresses (no collisions). 
\end_layout

\end_deeper
\begin_layout Itemize
Print out the contents of the hash table in the order in which the elements are stored in the array. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsection*
Evidence 2
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Linear probing is a method to handle collisions. This means that a collision is resolved by searching sequentially from the hashed address for an empty location and storing the student number at this empty location. If the end of the table is reached, the search for an empty location is continued from the start of the table.
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS2.TXT
\family default
 to test your amended program code.
\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
Your amended program code which performs linear probing.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Add code to your Task 2.2 program. The program is to: 
\end_layout

\begin_layout Itemize
Take as input a student number 
\end_layout

\begin_layout Itemize
Search the hash table and output the address (index number) of the hash table where the student number was found. 
\end_layout

\begin_layout Standard
Use KEYS2.TXT to test your program code. Run the program three times. Use the following inputs: 15, 23, 88.
\end_layout

\begin_layout Subsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary tree structure is used to store the names of animals in the Singapore Zoo. Each animal
\begin_inset Quotes ers
\end_inset

s name is unique. The binary tree abstract data type (ADT) has commands to create a new tree, add data items and print the tree.
\end_layout

\begin_layout Standard
The sequence of commands:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CreateTree() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Tiger') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Lemur') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Bat') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Yak') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Ostrich') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Raccoon') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Macaw')
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree('Zebra')
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
would create the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-IJC-2018-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The program to implement the ADT will use the classes Tree and Node designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Tree
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
thisTree : ARRAY of Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
add(newItem)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
print()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
leftPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
rightPtr : INTEGER 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setData(s : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setLeftPtr(x : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setLeftPtr(x : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getData() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getLeftPtr() : INTEGER 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getRightPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The program code will do the following: 
\end_layout

\begin_layout Itemize
Create a new tree, which has: 
\end_layout

\begin_deeper
\begin_layout Itemize
no nodes 
\end_layout

\begin_layout Itemize
the root set to ‚Äì1 
\end_layout

\end_deeper
\begin_layout Itemize
Use the root as a pointer to the first node in the tree 
\end_layout

\begin_layout Itemize
Add a new node to the tree in the appropriate position. The left and right pointers of this node should have the initial value of ‚Äì1. 
\end_layout

\begin_layout Itemize
Use the 
\family typewriter
print()
\family default
 method to output, for each node, in array order: 
\end_layout

\begin_deeper
\begin_layout Itemize
the data item 
\end_layout

\begin_layout Itemize
the left pointer 
\end_layout

\begin_layout Itemize
the right pointer. 
\end_layout

\end_deeper
\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[26]
\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
The program is to be tested. Write a sequence of program statements to: 
\end_layout

\begin_layout Itemize
create a new tree 
\end_layout

\begin_layout Itemize
add the data items as shown in the sequence of commands on the previous page 
\end_layout

\begin_layout Itemize
print the array contents. 
\end_layout

\begin_layout Standard
Execute your program to test it.
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
A method 
\family typewriter
postOrderTraversal()
\family default
 is to be added. This left-to-right post-order traversal outputs the data stored in the child nodes before outputting the data stored in the root node.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
implement this method 
\end_layout

\begin_layout Itemize
Test the program code with the data from Task 3.2. 
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Bowling is a sport in which a 
\begin_inset Quotes els
\end_inset

bowler
\begin_inset Quotes ers
\end_inset

 rolls a bowling ball down a synthetic lane and towards ten pins positioned at the end of the lane. The objective is to score points by knocking down as many pins as possible. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-IJC-2018-P1-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard

\series bold
A bowling game 
\series default

\end_layout

\begin_layout Standard
One game of bowling consists of ten frames. Each frame consists of two chances for the bowler to knock down ten pins.
\end_layout

\begin_layout Standard

\series bold
Strikes and spares 
\series default

\end_layout

\begin_layout Standard
Knocking down all ten pins on the first roll of any frame is called a 
\series bold
strike
\series default
, denoted by 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

 on the score sheet. If a bowler takes two rolls to knock down all ten pins, it is called a 
\series bold
spare
\series default
.
\end_layout

\begin_layout Standard

\series bold
Scoring and bonus scoring
\series default

\end_layout

\begin_layout Standard
Each pin that is knocked down is worth 1 point.
\end_layout

\begin_layout Standard
A strike is worth 10 points plus the number of pins hit on the next two rolls.
\end_layout

\begin_layout Standard
A spare is worth 10 points plus the number of pins hit on the next roll.
\end_layout

\begin_layout Standard
The total score for a game ranges from 0 to 300 points.
\end_layout

\begin_layout Standard

\series bold
The tenth frame 
\series default

\end_layout

\begin_layout Standard
A bowler who strikes or spares the tenth frame will be given one extra roll. The number of pins hit on this roll will be added to the bowler
\begin_inset Quotes ers
\end_inset

s score.
\end_layout

\begin_layout Standard

\series bold
Sample Scores
\series default

\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="11">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Result 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7|
\series bold

\bar under
3
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7|2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9|
\series bold

\bar under
1
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2|3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6|
\series bold

\bar under
4
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7|
\series bold

\bar under
3
\bar default

\series default
|3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cumulative Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
37 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
46 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
66 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
96 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
118 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
133 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
138 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
155 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
168
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="11">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Result 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0|5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8|0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0|5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6|
\series bold

\bar under
4
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0|5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8|1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9|
\series bold

\bar under
1
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5|0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cumulative Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
28 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
33 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
53 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
63 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
68 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
77 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
92 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
97
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="11">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Result 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9|
\series bold

\bar under
1
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0|0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2|2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8|
\series bold

\bar under
2
\bar default

\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold

\bar under
X
\bar default

\series default
|X|X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Frame Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
29 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cumulative Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
60 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
89 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
109 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
129 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
139 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
139 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
143 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
163 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
193
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The following algorithms calculate the total score for a bowling game.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
//Used interchangeably in the code for readability
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ten <- 'X'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Strike <- Ten
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
//Converting the 'X' or 'number' to INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FUNCTION Pins(Throw as STRING)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Throw = Ten THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN INTEGER(Throw)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END FUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
//Recursive Procedure 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FUNCTION Bowling_Score(Throws as STRING)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

//Helper function to keep track of current frame number
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

FUNCTION Bowling_Score_Helper(Throws as STRING, Frame_Num as INTEGER) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//Frame 10 with no bonus 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Frame_Num = 10 AND LENGTH(Throws) = 2 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN SUM(Pins(Throws[0]), Pins(Throws[1])) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//Frame 10 with bonus
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Frame_Num = 10 AND LENGTH(Throws) = 3 THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN SUM(Pins(Throws[0]),Pins(Throws[1]),Pins(Throws[2])) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//A Strike 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Throws[0] = Strike THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Frame_Score <- 10 + SUM(Pins(Throws[1]), Pins(Throws[2]))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Frame_Score + Bowling_Score_Helper(Throws[1:], Frame_Num + 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Frame_Score <- SUM(Pins(Throws[0]), Pins(Throws[1]))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//A Spare
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Frame_Score = 10 THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 10 + Pins(Throws[2]) + Bowling_Score_Helper(Throws[2:], Frame_Num + 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//Frame with no bonus 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Frame_Score + Bowling_Score_Helper(Throws[2:], Frame_Num + 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

END FUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Bowling_Score_Helper(Throws, 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END FUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: The above pseudocode is available in the text file 
\family typewriter
PSEUDOCODE_TASK_4_1.TX
\family default
T but with 
\begin_inset Quotes els
\end_inset


\family typewriter
=
\family default

\begin_inset Quotes ers
\end_inset

 used in place of 
\begin_inset Quotes els
\end_inset

<-
\begin_inset Quotes ers
\end_inset

 shown above.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write a program to calculate a bowling score using the algorithms provided on the previous page.
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Your program code for Task 4.1.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Screenshot of the results of the following function calls: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Bowling_Score('X2815X91X365452X0X')
\family default

\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
Bowling_Score('91739182X90X90X82X')
\family default
 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Draw up a list of 
\family typewriter
three
\family default
 suitable test cases. Complete a table with the following headings: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bowling Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected Output 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Amend your program code to include the handling of the test cases listed in your table.
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
The completed table.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Your amended program code that includes 
\series bold
internal commentary
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Screenshots for each test data run. [3]
\begin_inset space \quad{}

\end_inset


\end_layout

\begin_layout Standard
At the 2018 Singapore Championship, bowlers play a total of six games each in the qualifying round. The eight bowlers with the highest total score qualify for the Masters Competition. You may assume that there are no bowlers with the same total score.
\end_layout

\begin_layout Standard

\family typewriter
SCORES.TXT
\family default
 is a text file containing the register number, country and the scores for six games of twenty bowlers in the qualifying round, with one bowler per line in the format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<Register Number> <Country> <Score 1> <Score 2> ‚Ä¶ <Score 6>
\family default
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
157 MAS XXXXX9091XXX82 90XXXXXXXXXX9 ‚Ä¶ 8172XXXX919191XX8
\family default
 
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
Read the entire contents of 
\family typewriter
SCORES.TXT
\family default
. 
\end_layout

\begin_layout Itemize
Calculate the score of each game for all twenty bowlers, using your code in 
\series bold
Evidence 8
\series default
. You may assume that all the scores in 
\family typewriter
SCORES.TXT
\family default
 are valid scores. 
\end_layout

\begin_layout Itemize
Calculate the total score for each bowler and store this in an appropriate data structure together with the respective 
\family typewriter
Register Number
\family default
 and 
\family typewriter
Country
\family default
. 
\end_layout

\begin_layout Itemize
Use 
\series bold
bubble sort
\series default
 to sort the bowlers according to their total score. 
\end_layout

\begin_layout Itemize
Output the Official Results of the competition. 
\end_layout

\begin_layout Standard
An example of the output should look like this: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Official Results
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Position
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Register Number
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Country
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Total Score
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
175
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SIN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1734
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
299
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SIN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1724
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
.
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
245
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
MAS
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1270
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
The bubble sort code procedure.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
Your program code for Task 4.3.
\end_layout

\begin_layout Standard
Screenshot showing the output.
\begin_inset space \hfill{}

\end_inset

 [11]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Singapore Armed Forces is made up of many men and women who are committed to protect the nation
\begin_inset Quotes ers
\end_inset

s peace and security. The Ministry of Defence (MINDEF) keeps detailed personnel records of all servicemen and servicewomen in a large database housed in the central server at MINDEF Headquarters. Personnel records include career history, salary, military rank, health details, achievements and awards.
\end_layout

\begin_layout Standard
The Human Resource Unit (HR) of MINDEF manages these records regularly through a computerised system. Updates of the personnel
\begin_inset Quotes ers
\end_inset

s records must be done within three working days once HR receives the information from any military unit in MINDEF. Subsequently, administrative officers of the military units in MINDEF will be able to view these records via the intranet.
\end_layout

\begin_layout Standard
The current system has been used for the last fifteen years. MINDEF wishes to replace this system with a new computerised system with enhanced features and a better user interface. A system developer is employed to carry out the task.
\end_layout

\begin_layout Standard
MINDEF has accepted the proposal by the system developer, who will address the following problems with the current system:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Poor database design 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Limited types of reports that can be generated 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Lack of intuitiveness of the user interface 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset

Slow system response time 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
5.
\end_layout

\end_inset

Incompatibility with the current devices
\begin_inset Quotes ers
\end_inset

 operating systems 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
6.
\end_layout

\end_inset

Minimal security protection 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The system developer produces the following Program Evaluation and Review Technique (PERT) chart:
\end_layout

\begin_deeper
\begin_layout Standard
A. Analysis of the solution
\end_layout

\begin_layout Standard
B. Design of the solution
\end_layout

\begin_layout Standard
C. Development of the solution
\end_layout

\begin_layout Standard
D. Documentation of the solution
\end_layout

\begin_layout Standard
E. Implementation of the solution
\end_layout

\begin_layout Standard
F. Testing of the solution
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-IJC-2018-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
From the PERT chart, 
\end_layout

\begin_layout Enumerate
state the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
state the minimum time in which the project can be completed. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
describe and give an example of concurrent activities. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
describe and give an example of dependent activities.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The system developer is required to provide more details in the PERT chart. It is proposed that Activity F should be removed from the chart and three new activities added:
\end_layout

\begin_deeper
\begin_layout Standard
J. Black box testing ‚Äì 2 weeks
\end_layout

\begin_layout Standard
K. White box testing ‚Äì 2 weeks
\end_layout

\begin_layout Standard
L. Beta testing ‚Äì 3 weeks
\end_layout

\begin_layout Standard
Redraw the PERT chart to show the effects of these changes. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a sketch of the Gantt chart to show the information in 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Maintenance will be required after implementing the new system.
\end_layout

\begin_deeper
\begin_layout Standard
Describe two types of maintenance. For each type, give an example for this new system. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
The new system will provide all staff in HR with full access to all personnel records. The administrative officers of the military unit will have only read access to the data. Only designated computers in the MINDEF network are able to access the system.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 ways in which the security of this system can be maintained. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
MINDEF is considering to allow servicemen and servicewomen to update their own personnel records directly into the system via the internet. Describe one security concern and one ethical issue that may arise due to this proposed implementation.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A self-checkout counter of a local supermarket, PriceFare, allows customers to scan and pay for their groceries without the need for a human cashier. The customer interacts directly via the following user interface: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-IJC-2018-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the type of user interface being used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Name 
\series bold
two
\series default
 user input methods for the user interface. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Identify 
\series bold
one
\series default
 feature of the user interface and explain the design consideration involved in the choice of this feature. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Many people confuse the Internet as cloud computing
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain how the Internet and cloud computing are different. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
PriceFare intends to launch an online service in Singapore. Customers can purchase their groceries using a mobile application anywhere in Singapore. The management of PriceFare is deciding between two different types of cloud services for this project ‚Äì Platform as a Service (PaaS) and Infrastructure as a Service (IaaS). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Describe the differences between PaaS and IaaS. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

What should the management of PriceFare consider when choosing between these two types of cloud services? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Give a reason why Software as a Service (SaaS) is not considered by the management of PriceFare. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following table shows a partial list of Unicode characters. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unicode 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Denary Value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0393 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\Gamma$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
915 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Gamma
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0394 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\Delta$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
916 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Delta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $E$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
917 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Epsilon
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0396 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $Z$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
918 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Zeta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0397 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $H$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
919 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Eta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0398 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\Theta$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
920 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Theta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+0399 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $I$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
921 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Iota
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U+039A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $K$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
922 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Greek Capital Letter Kappa
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain why the Unicode encoding system has replaced ASCII.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The Greek capital letter Omega, 
\begin_inset Quotes els
\end_inset


\begin_inset Formula $\Omega$
\end_inset


\begin_inset Quotes ers
\end_inset

, has denary value 937. Write down its corresponding Unicode.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Write down the 16-bit binary value of the Unicode character with Unicode U+0A6C7. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following pseudocode for a sort algorithm is used to sort a list of Greek character names.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR i <- 2 TO ArraySize: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Key Array[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

j <- i-1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

WHILE (j > 0) and (Key < Array[j]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Array[j+1] <- Array[j]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j <- j-1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset

Array[j+1] <- Key
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 ENDFOR
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The sort algorithm is used on 
\family typewriter
Array
\family default
, a list of 5 Greek character names. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Gamma 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Delta 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Epsilon 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zeta 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Eta
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Write down the name of this sort algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Copy and then complete the trace table given below. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="8">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Key
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Gamma
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Delta
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Epsilon
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Zeta
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Eta
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

State the efficiency, in terms of running time, of this sort algorithm if the Greek character names in Array are initially in reverse order. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A large file is to be transmitted between two computers over the internet. 
\end_layout

\begin_layout Enumerate
Explain how packet switching is used to transmit the file over the internet. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
The bytes that make up a packet is checked by the receiving computer. Explain how this can be done for: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
I. 
\end_layout

\end_inset

The individual bytes which make up the packet 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
II.
\end_layout

\end_inset

The collection of bytes which makes up the packet. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
Each packet consists of: 
\end_layout

\begin_layout Itemize
A 3-digit number from 100 to 800 
\end_layout

\begin_layout Itemize
Upper case letters 
\end_layout

\begin_layout Itemize
The <space> character 
\end_layout

\begin_layout Itemize
A start character ($) and an end character ($). 
\end_layout

\begin_layout Standard
An example of a packet is: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
$TBHIKR 565 KUTGW$ 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe 
\series bold
three
\series default
 validation checks that the receiving computer should perform on each packet received. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following security advisory was issued after the recent cyberattack on SingHealth
\begin_inset Quotes ers
\end_inset

s IT system. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-IJC-2018-P2-Q5-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Employees of SingHealth
\begin_inset Quotes ers
\end_inset

s group of hospitals are issued with computing devices, which have access to patients
\begin_inset Quotes ers
\end_inset

 records stored on the SingHealth central server, via the internet. Each employee is also issued with an email account for both internal and external communications. 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 differences between a client-server network and a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_deeper
\begin_layout Standard

\emph on

\begin_inset Quotes eld
\end_inset

‚Ä¶ a simple breach could easily be used as a launchpad to gain access into the network.
\begin_inset Quotes erd
\end_inset


\emph default
 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe how a breach could have happened and how patient records were subsequently accessed. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_deeper
\begin_layout Enumerate
A further notice adds that 
\begin_inset Quotes eld
\end_inset


\emph on
Employees can practice good personal data protection and cybersecurity habits in their place of work.
\emph default

\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 ways that this can be done. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
List 
\series bold
two
\series default
 ways that SingHealth as an organisation can do to ensure the security of their network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[IJC/PRELIM/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Singapore Bowling Federation (SBF) is made up of several affiliate clubs. To participate in a competition, a competitive bowler is required to be enrolled in exactly one affiliate club. A relational database is used by SBF to store data about competition entries and results. Four tables present in the database are 
\family typewriter
CLUB
\family default
, 
\family typewriter
MEMBER
\family default
, 
\family typewriter
COMPETITION
\family default
 and 
\family typewriter
COMPETITION-MEMBER
\family default
. A new row is created in the 
\family typewriter
COMPETITION-MEMBER
\family default
 table whenever a competitive bowler registers for a competition. When the competition results become available, they are added to the appropriate row.
\end_layout

\begin_layout Standard
Each competitive bowler, affiliate club and competition has a unique identification number. 
\end_layout

\begin_layout Enumerate
Explain what a relational database is.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the relationship between the four tables that provide for a fully normalised database design. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Tablename (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2, Attribute3, ‚Ä¶) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write the table descriptions for the four tables. You should include at least 
\series bold
one
\series default
 other attribute in addition to the primary key. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Standard
(d) Give 
\series bold
two
\series default
 examples of data anomaly and describe how they may occur if the database that was designed for SBF was not fully normalised.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A web log, 
\family typewriter
WEBLOG.txt
\family default
, keeps track of the date and time the server is being accessed, as well as the client that accessed it. The client is identified by either the host name or internet address. The format of 
\family typewriter
WEBLOG.txt
\family default
 is as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<host name>|<DD/MMM/YYYY:HH:MM:SS> 
\family default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
or 
\series default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<internet address>|<DD/MMM/YYYY:HH:MM:SS>
\family default
 
\end_layout

\begin_layout Standard
Below is a sample of 
\family typewriter
WEBLOG.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
199.72.81.55|01/Jul/2018:08:00:01 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
jurongjc.moe.edu.sg|01/Jul/2018:09:08:06 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
199.120.110.21|01/Jul/2018:11:30:09 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
trioon.com|01/Jul/2018:11:45:58 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A client address (host name or internet address) can appear in 
\family typewriter
WEBLOG.txt
\family default
 multiple times. Similarly, the date it accessed the server can be duplicated because it can access the server more than once in a day.
\end_layout

\begin_layout Standard
A summary report, 
\family typewriter
SUMMARYREPORT.txt
\family default
, is to be generated to list the unique clients (hosts name/internet address) and their corresponding dates. Below is a sample of 
\family typewriter
SUMMARYREPORT.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
199.72.81.55
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

 01/Jul/2018,03/Jul/2018,04/Jul/2018 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
jurongjc.moe.edu.sg 01/Jul/2018,02/Jul/2018,03/Jul/2018 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
trioon.com 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

01/Jul/2018,05/Jul/2018
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
readLog()
\family default
 to read 
\family typewriter
WEBLOG.txt
\family default
. Use suitable data structure(s), and prepare the log information to create 
\family typewriter
SUMMARYREPORT.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
readLog()
\family default
 procedure code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
processLog()
\family default
 to generate 
\family typewriter
SUMMARYREPORT.txt
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
processLog()
\family default
 procedure code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 3:
\end_layout

\begin_layout Standard
Screenshot of 
\family typewriter
SUMMARYREPORT.txt
\family default
 after running the program.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Add code to your Task 1.2 program to display the highest number of days the server was accessed by any client, and the corresponding client(s). Below is a sample of screen output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> Highest frequency (days): 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> Accessed by: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 199.72.81.55 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> jurongjc.moe.edu.sg 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 4:
\end_layout

\begin_layout Standard
Your program code for 
\series bold
Task 1.3
\series default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 5:
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The data file 
\family typewriter
COUNTRIES.txt
\family default
 contains a list of country names.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to store country names in 
\family typewriter
COUNTRIES.txt
\family default
 into an array, sort them in 
\series bold
descending
\series default
 order using 
\series bold
insertion sort
\series default
 and output the sorted sequence.
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Program code for Task 2.1 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code to store country names in 
\family typewriter
COUNTRIES.txt
\family default
 into an array, sort them in 
\series bold
ascending
\series default
 order using 
\series bold
quicksort
\series default
 and output the sorted sequence. You may use the pseudocode in 
\family typewriter
QUICKSORT.txt
\family default
. Do note the pseudocode is incomplete. You will have to fill in the missing codes 
\family typewriter
A, B, C, D, E, F, G, H
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Program code for 
\series bold
Task 2.2
\series default
 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write additional code to count and display the total number of comparisons made in completing the quicksort process.
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Program code for 
\series bold
Task 2.3
\series default
 to highlight the additional code by using 
\series bold
bold
\series default
 and 
\series bold

\emph on
italics
\emph default

\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 10:
\end_layout

\begin_layout Standard
Screenshot of running Task 2.3.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The class 
\family typewriter
Node
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data : String
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data stored at the node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
left : INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Points to the left child of the node. Implement 0 as NULL value. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
right : INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Points to the right child of the node. Implement 0 as NULL value.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialises an instance of 
\family typewriter
Node
\family default
. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_data(data : String)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modifier method for 
\family typewriter
data
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_data() : String
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accessor method for 
\family typewriter
data
\family default
. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_left(index : INTEGER)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modifier method for 
\family typewriter
left
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_left() : INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accessor method for 
\family typewriter
left
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_right(index : INTEGER)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modifier method for 
\family typewriter
right
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_right() : INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accessor method for 
\family typewriter
right
\family default
.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 11:
\end_layout

\begin_layout Standard
Program code for Task 3.1.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard
The class 
\family typewriter
BinarySearchTree
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Itemize
Properties 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
root : INTEGER
\family default
 Points to the root of binary search tree. Implement 0 as NULL value. 
\end_layout

\begin_layout Itemize

\family typewriter
nodes : ARRAY[31] OF Node
\family default
 The array index starts at 1 and the dataset (i.e.: binary search tree) has a maximum of 31 Node objects. 
\end_layout

\begin_layout Itemize

\family typewriter
nextFree : INTEGER
\family default
 Index for the next unused node. 
\end_layout

\end_deeper
\begin_layout Itemize
Methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Constructor()
\family default
 Initialises the 
\family typewriter
root
\family default
, 
\family typewriter
nextFree
\family default
 and nodes of 
\family typewriter
BinarySearchTree
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
addNode(data : String)
\family default
 Inserts new node into binary search tree.
\end_layout

\begin_deeper
\begin_layout Standard
The 
\family typewriter
data
\family default
 of each parent node is larger than the 
\family typewriter
data
\family default
 of its left child. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
set_root(index : INTEGER)
\family default
 Modifier method for root. 
\end_layout

\begin_layout Itemize

\family typewriter
get_root() : INTEGER
\family default
 Accessor method for root. 
\end_layout

\begin_layout Itemize

\family typewriter
searchNode(item : String) : BOOLEAN
\family default
 Searches if 
\family typewriter
item
\family default
 is stored in one of the nodes of the binary search tree.
\end_layout

\begin_deeper
\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if found and 
\family typewriter
FALSE
\family default
 otherwise. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
inOrderTraversal(root : INTEGER)
\family default
 Displays the 
\family typewriter
data
\family default
 of each 
\family typewriter
node
\family default
 stored in the binary search tree when traversed using an inorder algorithm.
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JJC-2018-P1-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
balance() : BinarySearchTree
\family default
 Traverses the binary search tree to return a new balanced binary search tree. A 
\series bold
recursive
\series default
 algorithm is required. 
\end_layout

\end_deeper
\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
BinarySearchTree
\family default
. You may assume space will not be reused should any node be deleted and the binary search tree will not be full.
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[18]
\end_layout

\begin_layout Standard
The class 
\family typewriter
HashTable
\family default
 has the following properties and methods:
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Write program code for the class HashTable. 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
size : INTEGER
\family default
 Number of items in the hash table array. 
\end_layout

\begin_layout Itemize

\family typewriter
hashTableArray : ARRAY[size] OF BinarySearchTree
\family default
 An array storing 
\family typewriter
BinarySearchTree
\family default
 objects from indices 0 to size -1. 
\end_layout

\end_deeper
\begin_layout Itemize
methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Constructor(size : INTEGER)
\family default
 Initialises the 
\family typewriter
size
\family default
 and 
\family typewriter
hashTableArray
\family default
 of 
\family typewriter
HashTable
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
hash(key : String) : INTEGER
\family default
 A hashing function that calculates the address of the hash table.
\end_layout

\begin_deeper
\begin_layout Standard
Takes 
\family typewriter
key
\family default
, a String, as an argument. The last six characters in 
\family typewriter
key
\family default
 are digits.
\end_layout

\begin_layout Standard

\series bold
Sums each of the first three digits
\series default
, divides the total by 
\family typewriter
size
\family default
 and returns the remainder.
\end_layout

\begin_layout Standard
For example, where 
\family typewriter
size
\family default
 is 5:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
hash(
\begin_inset Quotes eld
\end_inset

111JalanTenteram
\family default

\family typewriter

\series bold
322111
\series default

\family default

\family typewriter

\begin_inset Quotes erd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
hash(
\begin_inset Quotes eld
\end_inset

23PasirRisAve
\family default

\family typewriter

\series bold
4520021
\series default

\family default

\family typewriter

\begin_inset Quotes erd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 2 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Program code for Task 3.3.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard
ACE OF CODERS PTE LTD would like to conduct a lucky draw. Each customer is entitled to submit one entry. All customer data entered is stored in the text file 
\family typewriter
CUSTOMERDATA.txt
\family default
. The format of the text file is as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<CUSTOMER NAME> <CONTACT NUMBER>|<ADDRESS> 
\family default
 
\end_layout

\begin_layout Standard
Below is a sample of 
\family typewriter
CUSTOMERDATA.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Felicia Lee Si Ying 98635610
\family default

\family typewriter

\series bold
|
\series default

\family default

\family typewriter
19JalanTenteram322019 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Yap Chee How 67767515
\family default

\family typewriter

\series bold
|
\series default

\family default

\family typewriter
23TohTuckDrive608023 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Christy Lopez 92233123
\family default

\family typewriter

\series bold
|
\series default

\family default

\family typewriter
507WestCoastRoad120507 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
There will be five lucky draw winners. The company has identified five regions in Singapore and would like to pick one winner from each region. The hashing function from Task 3.3 
\bar under
will categorise an address in one of the five regions
\bar default
.
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Using the classes programmed previously, code a main program that repeatedly: 
\end_layout

\begin_layout Itemize
displays the following menu:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1. Prepare hash table
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2. Generate winners
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3. Search for entry 
\family default

\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure depending on the user
\begin_inset Quotes ers
\end_inset

s choice 
\end_layout

\begin_layout Standard
When implementing the choices, take note of the following: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\series bold
 Prepare hash table
\series default

\end_layout

\begin_deeper
\begin_layout Standard
User inputs suitable size of hash table to be initialised.
\end_layout

\begin_layout Standard
Reads customer data from 
\family typewriter
CUSTOMERDATA.txt
\family default
.
\end_layout

\begin_layout Standard
Uses address as key and customer name, contact number as value.
\end_layout

\begin_layout Standard
Stores the customer names, contact numbers into the hash table. 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\series bold
 Generate winners
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Randomly select one winner from each binary search tree in the hash table.
\end_layout

\begin_layout Standard
Display their names and contact numbers. 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\series bold
Search for entry
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Staff of the company may not enter the lucky draw.
\end_layout

\begin_layout Standard
Displays whether the staff name and contact number entered by user exists in the hash table. 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 3.5
\end_layout

\begin_layout Standard
Run your program. Complete choice 1 before searching the following.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> Sandra Chelvan 92233123 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> Haz Awang 87767888 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> Seah Hon Hui 91144000 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 15:
\end_layout

\begin_layout Standard
Screenshot of running Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Rock Paper Scissors is a well-known hand game played between two players, whom we shall call P1 and P2. For each round, each player simultaneously forms one of three signs with an outstretched hand. Rock (represented by 
\begin_inset Quotes qld
\end_inset

0
\begin_inset Quotes qrd
\end_inset

), scissors (represented by 
\begin_inset Quotes qld
\end_inset

2
\begin_inset Quotes qrd
\end_inset

) and paper (represented by 
\begin_inset Quotes qld
\end_inset

5
\begin_inset Quotes qrd
\end_inset

).
\end_layout

\begin_layout Standard
Program 
\family typewriter
get_round_winner(p1_hand, p2_hand)
\family default
 that decides who wins from the hand signs of P1 and P2. If P1 wins, the function returns 1. If P2 wins, the function returns 2. If the game is a draw, the function returns 0.
\end_layout

\begin_layout Standard
Sample Execution:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
get_round_winner (
\begin_inset Quotes qrd
\end_inset

2
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

5
\begin_inset Quotes qrd
\end_inset

) # scissors vs paper - P1 wins
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_round_winner (
\begin_inset Quotes qrd
\end_inset

2
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

0
\begin_inset Quotes qrd
\end_inset

) # scissors vs rock - P2 wins 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_round_winner (
\begin_inset Quotes qrd
\end_inset

2
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

2
\begin_inset Quotes qrd
\end_inset

) # scissors vs scissors - Draw
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 0
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the function
\family typewriter
 get_round_winner
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Program code for 
\series bold
Task 4.1
\series default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard
P1 and P2 played a game of Rock Paper Scissors over a few rounds. The winner is the player who wins more rounds than he losses. A draw occurs if there is no winner. The hand signs of each player for the game are represented as a string of 
\begin_inset Quotes qld
\end_inset

0
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

2
\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset

5
\begin_inset Quotes qrd
\end_inset

. For example, 
\begin_inset Quotes qld
\end_inset

205
\begin_inset Quotes qrd
\end_inset

 represents playing scissors in the first round, rock in the second, and paper in the third.
\end_layout

\begin_layout Standard
Program 
\family typewriter
get_game_winner(p1_hands, p2_hands)
\family default
 that decides who wins the game from a sequence of hand signs from P1 and P2. If P1 wins, return 1, if P2 wins, return 2, if the game is a draw, return 0. You must use 
\family typewriter
get_round_winner
\family default
. You may assume that 
\family typewriter
p1_hands
\family default
 and 
\family typewriter
p2_hands
\family default
 are strings of the same length containing only 
\begin_inset Quotes qld
\end_inset

0
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

2
\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset

5
\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
Sample Execution:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
get_game_winner (
\begin_inset Quotes qrd
\end_inset


\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\begin_inset Quotes qrd
\end_inset

) #no hand played, game ends in a draw
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_game_winner (
\begin_inset Quotes qrd
\end_inset

205
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

520
\begin_inset Quotes qrd
\end_inset

) #P1 wins all 3 rounds, P1 wins 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_game_winner (
\begin_inset Quotes qrd
\end_inset

22222
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

50505
\begin_inset Quotes qrd
\end_inset

) #P1 wins
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_game_winner (
\begin_inset Quotes qrd
\end_inset

2050
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

0255
\begin_inset Quotes qrd
\end_inset

) #P2 wins 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
get_game_winner (
\begin_inset Quotes qrd
\end_inset

52025
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

52025
\begin_inset Quotes qrd
\end_inset

) #Draw 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> 0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
get_game_winner
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Program code for Task 4.2. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
P1 and P2 would like a more interesting interface where rows and columns display the game played. 
\series bold
Each game has four rounds
\series default
 and the 
\series bold
overall result
\series default
 (
\begin_inset Quotes eld
\end_inset

P1 wins
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

P2 wins
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Draw
\begin_inset Quotes erd
\end_inset

) 
\series bold
will be displayed when the game is over
\series default
.
\end_layout

\begin_layout Standard
Here is a sample screenshot of the first turns taken by player.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Round 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Round Winner
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Player's 1 turn.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Enter Rock (0), Paper (5) or Scissors (2): 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Round 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Round Winner
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

S 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Player's 2 turn.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Enter Rock (0), Paper (5) or Scissors (2): 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Round 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Round Winner
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

S 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

R 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

- 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write program code for the game described. Implement using 
\series bold
modularity
\series default
 and
\series bold
 2D array
\series default
. Include function 
\family typewriter
validate()
\family default
 to ensure the player chooses 
\family typewriter
0
\family default
, 
\family typewriter
2
\family default
 or 
\family typewriter
5
\family default
. Prompt the player to re-enter if input is invalid.
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Program code for Task 4.3.
\begin_inset space \hfill{}

\end_inset

 [10]
\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Design four appropriate test cases for the program. Present them in a table format. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Run your program and produce screenshots for a game which ends in a draw and another game which P1 wins.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
J & J Dental Care has a team of freelance dentists. As there are two dental treatment rooms in the clinic, only two dentists may be on duty each day. The clinic manager finalises the monthly duty roster a week before the new month commences. Every patient has to either call or visit the clinic to book an appointment. The receptionist handling the booking will require the following details: 
\end_layout

\begin_layout Itemize
patient name 
\end_layout

\begin_layout Itemize
postal code 
\end_layout

\begin_layout Itemize
dentist requested (optional) 
\end_layout

\begin_layout Itemize
date requested 
\end_layout

\begin_layout Standard
The receptionist checks the hard copy files to ensure that the patient is registered with the clinic and views the availability in the appointments book. After the dentist, date and time have been finalised, the patient
\begin_inset Quotes ers
\end_inset

s appointment will be recorded in the appointments book.
\end_layout

\begin_layout Standard
At the beginning of each day, the receptionist types an appointment list for each of the dentists working that day. The list contains patients
\begin_inset Quotes ers
\end_inset

 names and their respective timings.
\end_layout

\begin_layout Standard
When patients arrive at the clinic for their appointments, they announce their names to the receptionist and the receptionist will enter the treatment rooms to inform the dentists.
\end_layout

\begin_layout Standard
The clinic has decided to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
A system developer is employed to carry out the project. The first task assigned to the system developer is to write a project proposal. 
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the Problem Statement. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain why the problem must be defined accurately. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe and justify three methods which can be used to determine the requirements for the computerised system.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
As a result of the analysis carried out, a diagram is used to show entities and data flow of the 
\bar under
appointment booking process only
\bar default
. Draw a suitable diagram.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard
The system developer has drawn up an initial plan of the work involved: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Stage
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Weeks
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Produce design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identify requirements 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Implement code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Perform black box testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Perform acceptance testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepare documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
From the work breakdown, a Program Evaluation Review Technique (PERT) chart is constructed. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JJC-2018-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Complete the PERT chart by adding the stages and their respective durations in the correct sequence.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

State the minimum time in which the project could be completed.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

The first activity commences at Week 0. For activity D: 
\end_layout

\begin_deeper
\begin_layout Itemize
state the earliest start time. 
\end_layout

\begin_layout Itemize
state the latest finish time.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Two stages start and end at the same nodes. 
\end_layout

\begin_deeper
\begin_layout Itemize
Re-draw the PERT chart by using an additional dummy stage separating them. 
\end_layout

\begin_layout Itemize
Explain the purpose of the dummy stage. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(j)
\end_layout

\end_inset

List two types of documentation produced for this project. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The computerised system will use a database. In the updated system the dentists will be given a hand-held device, that is networked, to use in their rooms for accessing the patient records. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(k)
\end_layout

\end_inset

Describe two other uses for the hand-held device. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(l)
\end_layout

\end_inset

Describe a possible ethical concern raised by this new system. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(m)
\end_layout

\end_inset

An alternative solution for this project is to use cloud computing. Describe how each of the three types of cloud computing services may be used for the new project. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following are examples of hard copy documents managed by the receptionist at J & J Dental Care.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
Patient name: Mark Lee Xiao Ming
\end_layout

\begin_layout Plain Layout
Patient address: 17 Toh Tuck Road, Singapore 596017
\end_layout

\begin_layout Plain Layout
Contact number: 67767515
\end_layout

\begin_layout Plain Layout
Allergies: None
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Figure 1: Patient Record 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JJC-2018-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Figure 2: Appointments Book 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
Date: 01/09/2018
\end_layout

\begin_layout Plain Layout
Dentist name: Dr Mathu
\end_layout

\begin_layout Plain Layout
09:00: Song Mei Ling
\end_layout

\begin_layout Plain Layout
10:00: Joyce Ng
\end_layout

\begin_layout Plain Layout
‚Ä¶ ‚Ä¶
\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset

 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Figure 3: Appointment List 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
Dentist name: Dr Mathu
\end_layout

\begin_layout Plain Layout
Dentist address: 6 West Coast Drive, Singapore 120006
\end_layout

\begin_layout Plain Layout
Contact number: 98833567
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Figure 4: Dentist Record 
\end_layout

\begin_layout Enumerate
Explain why the patient name and postal code are needed when the receptionist handles an appointment booking for a patient. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain, using two examples, how such a system may compromise data integrity. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe, using an example, how such a system has data redundancy. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Each patient may book a maximum of one appointment per day. A fully normalised database solution to this problem is designed. Draw an E-R diagram that shows these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Hence, write the table descriptions. You may introduce additional attribute(s). Underline the primary keys.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State three fields that require data validation. Suggest a suitable type of check for each field. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following is a byte stored in a file which contains binary code: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
01101001
\family default
 
\end_layout

\begin_layout Enumerate
What is the corresponding denary number? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What is the corresponding octal number?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
An operating system provides a user interface to a computer system. List two types of interface that an operating system provides and state an advantage for each. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Many modern operating systems support Unicode. 
\end_layout

\begin_deeper
\begin_layout Itemize
What is Unicode? 
\end_layout

\begin_layout Itemize
What are two advantages of Unicode over ASCII? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An object-oriented program is being written to store details about clients at a real estate agency.
\end_layout

\begin_layout Standard
Clients can be either sellers or prospective buyers. A class 
\family typewriter
Client
\family default
 has been created and two subclasses, 
\family typewriter
Seller
\family default
 and 
\family typewriter
Buyer
\family default
 are to be developed. A 
\family typewriter
Location
\family default
 class has been created to store details about an address (e.g. postal code, street name and district).
\end_layout

\begin_layout Standard
The 
\family typewriter
Client
\family default
 class has data fields 
\family typewriter
Name
\family default
, 
\family typewriter
Address
\family default
 and 
\family typewriter
DOB
\family default
. Part of the class definition for 
\family typewriter
Client
\family default
 class is:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Client = Class
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// Private 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Name: String
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Address: Location 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DOB: Date
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// Public 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Constructor() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Function GetName(): String 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Function GetDOB(): Date Function
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

GetAddress(): Location 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Procedure SetDetails(String, Location, Date) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
A 
\family typewriter
Buyer
\family default
 has the following additional data fields: 
\end_layout

\begin_layout Itemize

\family typewriter
NoOfBedroomsRequired
\family default
: stores the minimum number of bedrooms that the buyer requires in the property they purchase. 
\end_layout

\begin_layout Itemize

\family typewriter
ParkingSpace
\family default
: stores a value indicating if the buyer requires parking or not. 
\end_layout

\begin_layout Itemize

\family typewriter
AreaDesired
\family default
: the district the buyer is looking to purchase a property in. For example, Jurong is in district 22 while Orchard is in district 9. 
\end_layout

\begin_layout Enumerate
Write the class definition for 
\family typewriter
Buyer
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Hence, illustrate the diagram which exhibits the relationships between all classes as well as inheritance and encapsulation. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Explain why encapsulation is an important feature of object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following shows a message being encrypted using a Caesar cipher. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JJC-2018-P2-Q5-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Decrypt the cipher text 
\begin_inset Quotes qld
\end_inset


\series bold
QXQBTMZF
\series default

\begin_inset Quotes qrd
\end_inset

 using the Caesar cipher with the settings shown in Figure 5. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
In modern terminology, a Vernam cipher is a symmetrical stream cipher in which the plaintext is combined with a random or pseudorandom stream of data (the 
\begin_inset Quotes qld
\end_inset

keystream
\begin_inset Quotes qrd
\end_inset

) of the same length, to generate the cipher text, using the Boolean 
\begin_inset Quotes qld
\end_inset

exclusive or
\begin_inset Quotes qrd
\end_inset

 (XOR) function. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\series bold
XOR
\series default
 B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Using the Vernam cipher method, the plaintext 
\begin_inset Quotes qld
\end_inset

RUN
\begin_inset Quotes qrd
\end_inset

 is to be encrypted. 
\begin_inset Quotes qld
\end_inset

RUN
\begin_inset Quotes qrd
\end_inset

 will be encoded using 8-bit ASCII, according to the following ASCII table. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Letter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII Code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Letter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII Code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Letter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000001 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001010 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010011
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000010 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001011 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
T 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000011 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
U 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010101
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010110
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
W 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010111
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
O 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001111 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01011000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01000111 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01011001
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Q 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010001 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Z 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01011010
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01001001 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
R 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010010 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

The key 
\family typewriter
10111001
\family default
 
\family typewriter
01001101
\family default
 
\family typewriter
01000001
\family default
 will be used to perform the encryption. Perform this encryption. Show your working to derive the cipher text from the plain text. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Both the Caesar and Vernam ciphers are symmetric ciphers. Explain the difference between a symmetric and an asymmetric cipher system. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following diagram shows the physical topology of a typical home Local Area Network (LAN) and its connection to the Internet. The LAN uses the IPv4 protocol.
\end_layout

\begin_layout Standard
Device A is a Wireless Access Point. A range of devices, including laptop computers and mobile phones connect to the network through the Wireless Access Point.
\end_layout

\begin_layout Standard
Device B is a Network Attached Storage device which is a server used to store files that can be accessed by other devices connected to the network. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JJC-2018-P2-Q5-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Identify the two networking devices (C and D). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

The devices that are used within the home have private IP addresses. The Combined Device has both a private IP address and a public IP address. Explain the differences between private and public IP addresses, and why the Combined Device has both.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Describe two methods for ensuring the security of access to the files in Device B. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JJC/PRELIM/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following pseudo-code contains an algorithm called 
\family typewriter
Merge
\family default
 that is called by the 
\family typewriter
MergeSort
\family default
 algorithm.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION MergeSort(L, S, E)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF S < E THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

M <- (S + E) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L1 <- MergeSort(L, S, M) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L2 <- MergeSort(L, M + 1, E) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Merge(L1, L2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Append([], L[S]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
FUNCTION Merge(L1, L2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

L3 <- [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE Len(L1) > 0 AND LEN(L2) > 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF L1[1] < L2[1] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L3 <- Append(L2[1], L3) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L2 <- RemoveFirstItem(L2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L3 <- Append(L1[1], L3) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L1 <- RemoveFirstItem(L1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE Len(L1) > 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L3 <- Append(L1[1], L3) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L1 <- RemoveFirstItem(L1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE Len(L2) > 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L3 <- Append(L2[1], L3)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

L2 <- RemoveFirstItem(L2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN L3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
RemoveFirstItem
\family default
 function takes a list and returns a list that contains all the items in the original list except the first one. For example, if 
\family typewriter
Names
\family default
 is the list [
\begin_inset Quotes qrd
\end_inset


\family typewriter
Gemma
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Richard
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Georgina
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Margaret
\family default

\begin_inset Quotes qrd
\end_inset

] then the function call 
\family typewriter
RemoveFirstItem(Names)
\family default
 will return the list [
\begin_inset Quotes qrd
\end_inset


\family typewriter
Richard
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Georgina
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Margaret
\family default

\begin_inset Quotes qrd
\end_inset

].
\end_layout

\begin_layout Standard
The 
\family typewriter
Len
\family default
 function takes a list and returns the number of items that are in the list. For example, if 
\family typewriter
Names
\family default
 is the list [
\begin_inset Quotes qrd
\end_inset


\family typewriter
Gemma
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Richard
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Georgina
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Margaret
\family default

\begin_inset Quotes qrd
\end_inset

] then the function call 
\family typewriter
Len(Names)
\family default
 will return the value of 4.
\end_layout

\begin_layout Standard
The 
\family typewriter
Append
\family default
 function takes an item and a list and returns a list that has all the items from the original list followed by the item. For example, if 
\family typewriter
Names
\family default
 is the list [
\begin_inset Quotes qrd
\end_inset


\family typewriter
Gemma
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Richard
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Georgina
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Margaret
\family default

\begin_inset Quotes qrd
\end_inset

] then the function call
\family typewriter
 Append(
\begin_inset Quotes qrd
\end_inset

Matt
\begin_inset Quotes qrd
\end_inset

, Names)
\family default
 will return the list [
\begin_inset Quotes qrd
\end_inset


\family typewriter
Gemma
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Richard
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Georgina
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Margaret
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Matt
\family default

\begin_inset Quotes qrd
\end_inset

].
\end_layout

\begin_layout Standard
The first item in the list has an index of 1. 
\end_layout

\begin_layout Enumerate
What is meant by a recursive subroutine? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What is the base case for the subroutine 
\family typewriter
MergeSort
\family default
? 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Complete the following table to show the result of tracing 
\family typewriter
MergeSort
\family default
 with the function call 
\family typewriter
MergeSort(ListToSort, 1, 5)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\family typewriter
ListToSort
\family default
 is the list 
\family typewriter
[6, 3, 4, 8, 5]
\family default
. The first six rows and the call number column have been completed for you. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="18" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Call number
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
S
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
E
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
M
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
List returned
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[6]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[3]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d) 
\end_layout

\end_inset

What is the time complexity for the MergeSort algorithm? 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A Foreign Government Agency is looking for a Tourist Information Management System. The system should be able to cater for the following two requirements: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
a)
\end_layout

\end_inset

Capture and provision of information for migration control propose and other aspects of citizen identification
\end_layout

\begin_deeper
\begin_layout Standard
This is to facilitate the processing of Disembarkation/ Embarkation (D/E) cards collected from visitors at the checkpoints. It also captures visitors
\begin_inset Quotes ers
\end_inset

 arrival data e.g., the number of arrivals by countries of residence, their modes of arrival and demographics (e.g., age and gender). 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
b)
\end_layout

\end_inset

Data Warehouse for analysis
\end_layout

\begin_deeper
\begin_layout Standard
The Data Warehouse has to receive data and code information on Disembarkation/Embarkation cards (D/E cards). Information gathered in this manner is to analyse visitor arrival trends and serve as input to the computation of key performance indicators (Tourism Receipts, TourismSector Value, etc.) 
\end_layout

\end_deeper
\begin_layout Standard
The Agency wishes to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
\noindent
A system developer is employed to carry out the task. The first task assigned to the system developer is to write a project proposal.
\end_layout

\begin_layout Standard
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the Problem Statement.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q10] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A dataset of fruit names is to be stored in a binary search tree.
\end_layout

\begin_layout Standard
The names of the fruits are inserted into the tree in the order shown: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Papaya, Mango, Durian, Strawberry, Orange, Rambutan, Watermelon
\family default
 
\end_layout

\begin_layout Enumerate
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
The binary tree is implemented using these identifiers. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Variable
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RootPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array subscript of the root of tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Fruit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY [1..100] of STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array of fruit names
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY [1..100] of INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array of left pointer values
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY [1..100] of INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array of right pointer values 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Draw a diagram to show the contents of the binary tree in array form and the root pointer variable for the fruits inserted in 
\series bold
(a)
\series default
 above. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

The pseudocode shows an algorithm to search for a particular fruit in the binary tree. Additional variables 
\family typewriter
SearchFruit
\family default
, 
\family typewriter
IsFound
\family default
, and 
\family typewriter
Current
\family default
 are used.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\series bold
INPUT
\series default

\family default

\family typewriter
 SearchFruit 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
IsFound ‚Üê False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Current ‚Üê RootPtr 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
REPEAT
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Subsubsection*

\family typewriter
... ... ...
\family default

\end_layout

\begin_layout Subsubsection*

\family typewriter
... ... ...
\family default

\end_layout

\begin_layout Subsubsection*

\family typewriter
... ... ...
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
UNTIL
\series default

\family default

\family typewriter
 Current = 0 
\family default

\family typewriter

\series bold
OR
\series default

\family default

\family typewriter
 IsFound = 
\family default

\family typewriter

\series bold
TRUE
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
IF
\series default

\family default

\family typewriter
 IsFound = False 
\family default

\family typewriter

\series bold
THEN
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
OUTPUT
\series default

\family default

\family typewriter
 SearchFruit 
\begin_inset Quotes qld
\end_inset

Not found
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
ENDIF
\series default

\family default

\family typewriter
 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Complete the algorithm in the 
\family typewriter

\series bold
REPEAT-UNTIL
\series default

\family default
 loop by writing the missing lines. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q11] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The ASCII encoding system can be used to represent characters on computers. 
\end_layout

\begin_layout Enumerate
The ASCII code in decimal for the numeric character 
\begin_inset Quotes els
\end_inset

1
\begin_inset Quotes ers
\end_inset

 is 49. Using 8 bits, what is the ASCII code for the character 
\begin_inset Quotes els
\end_inset

4
\begin_inset Quotes ers
\end_inset

 in binary? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The ASCII codes for uppercase letters are from 
\family typewriter
01000001
\family default
 for 
\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset

 to 
\family typewriter
01011010
\family default
 for 
\begin_inset Quotes els
\end_inset

Z
\begin_inset Quotes ers
\end_inset

. What is the ASCII code for 
\begin_inset Quotes els
\end_inset

W
\begin_inset Quotes ers
\end_inset

 in binary? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
An alternative encoding system is Unicode. State 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of using ASCII rather than Unicode. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q12] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A fashion shop gives customers a discount on purchases totalling more than $30: 
\end_layout

\begin_layout Itemize
Discount of 5% with a member card 
\end_layout

\begin_layout Itemize
Discount of 5% for purchases totalling more than $200 
\end_layout

\begin_layout Itemize
Discount of 10% with a member card and for purchases totalling more than $200 
\end_layout

\begin_layout Standard
Draw a decision table and simplify it by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q13] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following list of numbers is to be sorted in ascending order. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
98, 12, 23, 8, 74, 30, 62 
\family default
 
\end_layout

\begin_layout Enumerate
Show the list of numbers 
\series bold
after each pass
\series default
 by performing 
\end_layout

\begin_deeper
\begin_layout Enumerate
a bubble sort, 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
an insertion sort. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
By comparing how the bubble and insertion sort work, explain which one is a faster sort. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A Foreign Government Agency is looking for a Tourist Information Management System. The system should be able to cater for the following two requirements: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
a)
\end_layout

\end_inset

Capture and provision of information for migration control propose and other aspects of citizen identification
\end_layout

\begin_deeper
\begin_layout Standard
This is to facilitate the processing of Disembarkation/ Embarkation (D/E) cards collected from visitors at the checkpoints. It also captures visitors
\begin_inset Quotes ers
\end_inset

 arrival data e.g., the number of arrivals by countries of residence, their modes of arrival and demographics (e.g., age and gender). 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
b)
\end_layout

\end_inset

Data Warehouse for analysis
\end_layout

\begin_deeper
\begin_layout Standard
The Data Warehouse has to receive data and code information on Disembarkation/Embarkation cards (D/E cards). Information gathered in this manner is to analyse visitor arrival trends and serve as input to the computation of key performance indicators (Tourism Receipts, TourismSector Value, etc.) 
\end_layout

\end_deeper
\begin_layout Standard
The Agency wishes to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
\noindent
A system developer is employed to carry out the task. The first task assigned to the system developer is to write a project proposal.
\end_layout

\begin_layout Standard
The system developer has drawn up a list of activities and their likely duration. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Weeks to complete
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write requirement specification 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Produce program design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write module code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Module testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integration testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alpha testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Install software and carry out acceptance testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Research and order hardware 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Install delivered hardware 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write technical documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Write user training guide 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Train users on installed hardware and software 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sign off final system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
From this data a GANTT chart is constructed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="28">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Week Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
21 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
24 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
27
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
State the earliest completion date in terms of week number.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
There are problems with the progress of the project: 
\end_layout

\begin_deeper
\begin_layout Itemize
Activity E showed that the code contained major errors. The senior programmer now estimates that: 
\end_layout

\begin_deeper
\begin_layout Itemize
further module coding will require another 2 weeks 
\end_layout

\begin_layout Itemize
further module testing will require another 2 weeks 
\end_layout

\begin_layout Itemize
further integration testing will require another 2 weeks 
\end_layout

\end_deeper
\begin_layout Itemize
The hardware delivery is delayed by 16 weeks 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
A revised GANTT chart is now required
\end_layout

\begin_layout Standard
Copy and complete the chart in the grid below 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="28">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Week Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
21 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
24 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
27
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the new estimated completion date in terms of week number. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
A team was formed for the designing of this project. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Why the team work and the roles of team members working on a computer project are important? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A Foreign Government Agency is looking for a Tourist Information Management System. The system should be able to cater for the following two requirements: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
a)
\end_layout

\end_inset

Capture and provision of information for migration control propose and other aspects of citizen identification
\end_layout

\begin_deeper
\begin_layout Standard
This is to facilitate the processing of Disembarkation/ Embarkation (D/E) cards collected from visitors at the checkpoints. It also captures visitors
\begin_inset Quotes ers
\end_inset

 arrival data e.g., the number of arrivals by countries of residence, their modes of arrival and demographics (e.g., age and gender). 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
b)
\end_layout

\end_inset

Data Warehouse for analysis
\end_layout

\begin_deeper
\begin_layout Standard
The Data Warehouse has to receive data and code information on Disembarkation/Embarkation cards (D/E cards). Information gathered in this manner is to analyse visitor arrival trends and serve as input to the computation of key performance indicators (Tourism Receipts, TourismSector Value, etc.) 
\end_layout

\end_deeper
\begin_layout Standard
The Agency wishes to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
The design for the new system includes the provision of a network of computers in the office with a central file server. Each office staff will have access to a computer to retrieve and update visitors
\begin_inset Quotes ers
\end_inset

 data held on the central file server. Some support staff are allowed to access the data but not change it. In addition the system has an Internet link which allows staff to access the system from outside the office.
\end_layout

\begin_layout Standard
Describe 
\series bold
three
\series default
 ways in which the security of this system can be implemented. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A Foreign Government Agency is looking for a Tourist Information Management System. The system should be able to cater for the following two requirements: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
a)
\end_layout

\end_inset

Capture and provision of information for migration control propose and other aspects of citizen identification
\end_layout

\begin_deeper
\begin_layout Standard
This is to facilitate the processing of Disembarkation/ Embarkation (D/E) cards collected from visitors at the checkpoints. It also captures visitors
\begin_inset Quotes ers
\end_inset

 arrival data e.g., the number of arrivals by countries of residence, their modes of arrival and demographics (e.g., age and gender). 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
b)
\end_layout

\end_inset

Data Warehouse for analysis
\end_layout

\begin_deeper
\begin_layout Standard
The Data Warehouse has to receive data and code information on Disembarkation/Embarkation cards (D/E cards). Information gathered in this manner is to analyse visitor arrival trends and serve as input to the computation of key performance indicators (Tourism Receipts, TourismSector Value, etc.) 
\end_layout

\end_deeper
\begin_layout Standard
The Agency wishes to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
The office staff enters information provided by visitor into the computer system using a graphical user interface. Some of the information required includes: 
\end_layout

\begin_layout Itemize
Passport number 
\end_layout

\begin_layout Itemize
visitor
\begin_inset Quotes ers
\end_inset

s salutation (e.g. Dr., Mr., Ms, Mrs, Mdm‚Ä¶) 
\end_layout

\begin_layout Itemize
visitor name and address 
\end_layout

\begin_layout Itemize
visitor gender (e.g. F or M) 
\end_layout

\begin_layout Itemize
mobile number 
\end_layout

\begin_layout Standard
For this application design a simple screen layout which makes use of appropriate graphical user interface controls. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Top-down design is a technique used to produce solutions to computer system. 
\end_layout

\begin_layout Enumerate
Explain the term top-down design. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain 
\series bold
three
\series default
 advantages of using top-down design to solve complex problems.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain 
\series bold
three
\series default
 techniques that can be used to ensure that program code is understandable and can be easily maintained. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following pseudo-code algorithm describes one method of finding an arbitrary visitor name in an alphabetically ordered array of N unique names.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
set first to 1
\end_layout

\begin_layout Plain Layout
set last to N
\end_layout

\begin_layout Plain Layout
repeat
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
set mid to the integer part of (first + last) /2
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
If the mid name precedes the wanted name then
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default
set first to mid + 1
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
else
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default
set last to mid - 1
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
endif
\end_layout

\begin_layout Plain Layout
until first > last or midth name is the wanted name
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
If 142 names are stored in the array, and JOSEPH is the 44th name, state the elements of the array that are examined when searching for JOSEPH. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
If a search is made for a name that is not in the array, what is the largest number of elements that might need to be examined before one could say that the name is not present? Explain how you arrive at your answer. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Visitors can claim the GST (Goods and Services Tax) before they leave the country. A programmer is going to write part of the computer system using an object-oriented programming (OOP) language, which will store details of claims by visitor either pay by cash or hand phone transfer. The claim receive by hand phone transfer will have a rebate of 0.2%. while claim receive by cash will have to pay 0.5% of service charge and recording the currency exchange rate.
\end_layout

\begin_layout Standard
Properties identified the claims included: 
\end_layout

\begin_layout Itemize
Passport number 
\end_layout

\begin_layout Itemize
Receipt number 
\end_layout

\begin_layout Standard
Type of claims (cash or hand phone transfer) 
\end_layout

\begin_layout Enumerate
Draw a diagram that shows how the properties could be distributed amongst a number of classes. Include in your diagram any inheritance between classes. Also indicate appropriate methods (including one pair of 'get' and 'set' methods for one of the properties) that would be required. One method should demonstrate polymorphism. [6] 
\end_layout

\begin_layout Enumerate
In the context of object-oriented programming explain what is meant by: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Encapsulation and how classes support information hiding and implementation independence. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Inheritance and how it promotes software reuse. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Polymorphism and how it enables code generalisation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Computational thinking and why it is important? 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The system developer recommending cloud computing for the Agency. 
\end_layout

\begin_layout Enumerate
What are the 
\series bold
three
\series default
 different layers of cloud computing? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Discuss the benefits and drawbacks of using the cloud for storing data rather than other methods. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[PJC/PRELIM/9597/2018/P1/Q9] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
PJ Mall plans to create a database to store data on its shops. It rents out shops to tenants who run their business. 
\end_layout

\begin_layout Itemize
Each 
\emph on
tenant
\emph default
 is to provide information on its 
\emph on
company name
\emph default
, 
\emph on
director of company
\emph default
, 
\emph on
company address
\emph default
, 
\emph on
contact number
\emph default
, and 
\emph on
retail type
\emph default
. 
\end_layout

\begin_layout Itemize
There is a 
\emph on
start
\emph default
 and 
\emph on
end
\emph default
 date for every rental. 
\end_layout

\begin_layout Itemize
Each 
\emph on
shop
\emph default
 rented by the tenant consists of one or more unit spaces. 
\end_layout

\begin_layout Itemize
Each unit space is located at a particular 
\emph on
level
\emph default
 and has a
\emph on
 unit number
\emph default
. 
\end_layout

\begin_layout Itemize
There are 3 categories of unit space. Each 
\emph on
category
\emph default
 has its own 
\emph on
size
\emph default
 and 
\emph on
rental rate
\emph default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Category 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Size (square feet) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rental rate ($ per square feet)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Less than 200 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
200 ‚Äì 2000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
More than 2000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Here are some tenants who run their business in PJ mall: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Company Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Level 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unit Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Retail Type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bata 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
03 ‚Äì 04 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Footwear
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Challenger 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
06 ‚Äì 08 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Technology
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Coldwear 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
08 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fashion
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Esprit 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
09 ‚Äì 10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fashion
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Giant 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01 ‚Äì 12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Supermarket
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hi Tea 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Food & Beverage
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
PappaRich 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 ‚Äì 13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Food & Beverage
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\dots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
A solution is to create a relational database which requires a number of tables to store data for this application. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw the E-R diagram showing the tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
A table description can be described as
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName(Attribute1, Attribute2, Attribute3, ‚Ä¶‚Ä¶) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Write table descriptions for the tables in part 
\series bold
(i)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 advantages of using a relational database for storing data on its shops rather than a customised software. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Accumulative Season Scores 
\series default

\end_layout

\begin_layout Standard
For the first task, you are required to read the text file 
\begin_inset Quotes eld
\end_inset


\emph on
T1_gamescore.txt
\emph default

\begin_inset Quotes erd
\end_inset

 which contains the accumulative scores of a group of players from an online game over 12 seasons.
\end_layout

\begin_layout Standard
The format of a line of the text file is as follow: 
\family typewriter
<player1_name>,<class_1>:<ss1>,<ss2>,<ss3>,<ss4>,<ss5>,<ss6>,< ss7>,<ss8>,<ss9>,<ss10>,<ss11>,<ss12>
\backslash
n 
\family default

\end_layout

\begin_layout Standard
E.g.
\end_layout

\begin_layout Standard

\family typewriter
Rufus,priest:4255,17366,22616,31889,49634,58847,78112,86631,94 924,106955,125372,130725 
\family default

\end_layout

\begin_layout Standard
The above line represents the player 
\family typewriter
Rufus
\family default
 plays the class 
\family typewriter
priest
\family default
 and his 12 accumulative seasonal scores are 
\family typewriter
4255, 17366, 22616, 31889, 49634, 58847, 78112, 86631, 94924, 106955, 125372
\family default
 and 
\family typewriter
130725
\family default
 respectively.
\end_layout

\begin_layout Subsection*
Task 1.1 ‚Äì Read the file 
\end_layout

\begin_layout Standard
Implement the procedure readfile. It reads the file 
\begin_inset Quotes eld
\end_inset

T1_gamescore.txt
\begin_inset Quotes erd
\end_inset

 and returns a list of lists as below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> results = readfile() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> results [['Rufus', 'priest', 4255, 13111, 5250, 9273, 17745, 9213, 19265, 8519, 8293, 12031, 18417, 5353], ['Ione Wolfe', 'warrior', 2827, 17757, 3612, 6818, 11772, 9161, 4393, 10469, 10567, 15424, 7307, 10014],‚Ä¶‚Ä¶,['Carola Tegeler', 'rogue', 6407, 14795, 0, 5004, 16084, 14960, 11879, 16545, 10247, 5617, 7345, 0]] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Take note that the returned scores in the lists are not accumulative scores but the actual season scores. It can be computed by:
\end_layout

\begin_layout Standard

\begin_inset Formula $n$
\end_inset

th season score = 
\begin_inset Formula $n$
\end_inset

th ‚Äì 
\begin_inset Formula $(n-1)$
\end_inset

th accumulative season score
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
readfile
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 1.2 ‚Äì Count Class 
\end_layout

\begin_layout Standard
Using the data from 
\begin_inset Quotes eld
\end_inset


\emph on
T1_gamescore.txt
\emph default

\begin_inset Quotes erd
\end_inset

, implement the function 
\family typewriter
count_class
\family default
. It takes in the string 
\family typewriter
clss
\family default
 as parameter and returns an integer which contains the number of players who play the class indicated by 
\family typewriter
clss
\family default
. For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> count_class(
\begin_inset Quotes qrd
\end_inset

warrior
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
57
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
This means that the number of players who play the class warrior is 57. Evidence 2 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
count_class
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
for clss in [
\begin_inset Quotes qrd
\end_inset

warrior
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

mage
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

priest
\begin_inset Quotes qrd
\end_inset

]: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(
\begin_inset Quotes qrd
\end_inset

Number of 
\begin_inset Quotes qld
\end_inset

 + clss + 
\begin_inset Quotes qld
\end_inset

:
\begin_inset Quotes qrd
\end_inset

 + str(count_class(clss))) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.3 ‚Äì Top Class by Season 
\end_layout

\begin_layout Standard
Using the data from 
\begin_inset Quotes eld
\end_inset


\emph on
T1_gamescore.txt
\emph default

\begin_inset Quotes erd
\end_inset

, implement the function 
\family typewriter
top_class_by_season
\family default
. It takes in the integer 
\family typewriter
season
\family default
 as parameter and returns a string which contains the class which holds the highest average score of the season. (Code with the assumption that you do not know how many and what the classes are available in this game.)
\end_layout

\begin_layout Standard
The average score of the season of a class is calculated by summing up all the scores of the players who play the class divided by the total number of players who play the same class.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> top_class_by_season (6) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset Quotes qrd
\end_inset

priest
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 4
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
top_class_by_season
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
for i in range(1, 13): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(
\begin_inset Quotes qrd
\end_inset

Top class in season 
\begin_inset Quotes qld
\end_inset

 + str(i) + 
\begin_inset Quotes qld
\end_inset

:
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(top_class_by_season(i)) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.4 ‚Äì Top n Players by Season 
\end_layout

\begin_layout Standard
Using the data from 
\begin_inset Quotes eld
\end_inset


\emph on
T1_gamescore.txt
\emph default

\begin_inset Quotes erd
\end_inset

, implement the function 
\family typewriter
top_n_players_by_season
\family default
. It takes in the integers 
\family typewriter
n
\family default
 and season as parameters and returns a list of strings which contains names of the top 
\family typewriter
n
\family default
 players.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> top_n_players_by_season(3, 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['bumpkintiger', 'diamondagile', 'milkshakessulky'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> top_n_players_by_season(10, 4) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['Carolann Kintner', 'lewdsterpub', 'fabindustry', 'eggfun', 'fellradial', 'Grazyna Kitzman', 'chapteridentical', 'chubbysourdough', 'palmears', 'leardfluttering'] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
top_n_players_by_season
\family default
.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Screenshot of the list of names of the top 20 players in season 9.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.5 ‚Äì Stagnant Players 
\end_layout

\begin_layout Standard
Using the data from 
\begin_inset Quotes eld
\end_inset


\emph on
T1_gamescore.txt
\emph default

\begin_inset Quotes erd
\end_inset

, implement the function 
\family typewriter
find_stagnant_players
\family default
 which returns a list of strings which contains names of the players who did not play in at least 1 season.
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
find_stagnant_players
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Screenshot of the output of program. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Health Workshops 
\series default

\end_layout

\begin_layout Standard
To promote healthy lifestyle, a local company decided to sponsor its 500 employees up to 3 health workshops of their choice. The company decides to maintain this piece of information using a binary search tree (BST) with each node contains a string called 
\family typewriter
employeeID
\family default
 which is used as the key of the BST, and an array structure called workshops to store the name(s) and cost(s) of the health workshop(s) chosen by the employee.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Implement the BST structure and perform insertion using the 8-character employee ID as key. During the insertion process, the employee
\begin_inset Quotes ers
\end_inset

s respective health workshop(s) information must also be stored in the node. The information of the employees and their chosen workshops can be found in 
\begin_inset Quotes eld
\end_inset


\emph on
T2_healthworkshops.txt
\emph default

\begin_inset Quotes erd
\end_inset

 and its format is as follow:
\end_layout

\begin_layout Standard

\family typewriter
<employeeID>-[<workshopName1>,<cost1> [<workshopName2>,<cost2>] 
\family default

\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard

\family typewriter
5175590R-[Yoga With Yoyo,60][Decoding The Nutrition Label,55] 
\family default

\end_layout

\begin_layout Standard
This means that the employee with 
\family typewriter
employeeID
\family default
 5175590R has chosen 
\begin_inset Quotes eld
\end_inset

Yoga With Yoyo
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Decoding The Nutrition Label
\begin_inset Quotes erd
\end_inset

 workshops and the cost of these 2 workshops are $60 and $55 respectively.
\end_layout

\begin_layout Standard
The BST structure must be able to handle up to 500 nodes. You need to implement the following functions. 
\end_layout

\begin_layout Itemize
Functions 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
createBST()
\family default
 This function creates a BST, reads the file 
\begin_inset Quotes eld
\end_inset


\emph on
T2_workshops.txt
\emph default

\begin_inset Quotes erd
\end_inset

, perform insertion of data and returns a BST structure. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Itemize

\family typewriter
inOrderTraversal()
\family default
 This procedure outputs all employee IDs from the BST in-order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Itemize

\family typewriter
findWorkshopsById (employeeID)
\family default
 This function returns a list of names of all the workshops chosen by the employee with employee ID as 
\family typewriter
employeeID
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Itemize

\family typewriter
findIdsByWorkshop (workshopName)
\family default
 This function returns a list of employee IDs of employees who have chosen the workshop indicated by the string 
\family typewriter
workshopName
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Itemize

\family typewriter
findTotalCost()
\family default
 This function returns the cost of all the workshops chosen by all the employees in the company as an integer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 10
\end_layout

\begin_layout Standard
Program code for Task 2.1. 
\begin_inset space \hfill{}

\end_inset

[24]
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Screenshot the output of the following code. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def test1(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

b1 = createBST() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findTotalCost()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

1001278B
\begin_inset Quotes qrd
\end_inset

)) 
\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

1019563R
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

3161202Y
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

5095845H
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

9965997Y
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findWorkshopsById(
\begin_inset Quotes qrd
\end_inset

9998622F
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findIdsByWorkshop('Diabetes 101')) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findIdsByWorkshop('The Truth About Carbs')) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findIdsByWorkshop('Nutrition Nuts And Bolts'))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(b1.findIdsByWorkshop('Yoga With Yoyo')
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test1() 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a menu which has the following options.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit.
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The validation of the employee ID follows the rules below: 
\end_layout

\begin_layout Itemize
The last of employee ID is the check code. 
\end_layout

\begin_layout Itemize
The algorithm to generate the check code is as follows: 
\end_layout

\begin_deeper
\begin_layout Itemize
Obtain the weighted sum of the 7 digits using the weights <2,7,6,5,4,3,2> 
\end_layout

\begin_layout Itemize
Find the remainder of the weighted sum when divided by 17 
\end_layout

\begin_layout Itemize
Look the check code up in the table below. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="17">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Q 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
R 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
T 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Z
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Below is an example of how the menu works.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
>menu()
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Choose an action: 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
File read. BST created. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Choose an action: 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type a userID: 1001278B
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['Stress Management For Managers: Helping You and Your Team Stress Less'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Choose an action: 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type a workshop name: Yoga With Yoyo 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['1026960S', '1425017Z', '1518324H', '1602033B', '1712684E', '1855773Y', '1914889R', '1918475F', '2131933A', '2174550G', '2448074G', '2544510E', '2570896Z', '2882640B', '3307418R', '4583774N', '4881580J', '5015391T', '5175590R', '6010700R', '6237846Z', '6285730A', '6382864S', '6397129T', '6695719R', '6801170S', '6865739T', '7357796T', '7498335T', '7839365D', '8154005Y', '8958192T', '9023193T', '9038581D', '9540693Y', '9750174Q', '9964906Y'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Choose an action: 4
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1001278B 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1006415N
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
9978729Q 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
9998622F
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Read file to generate BST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Find workshop(s) by user ID.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Find user ID(s) by workshop. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) Display users in order.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Total cost.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6) Quit. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Choose an action: 6
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Quit. 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Program code of 
\family typewriter
menu
\family default
 with full input validations. 
\begin_inset space \hfill{}

\end_inset

 [10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Cards Party
\series default

\end_layout

\begin_layout Standard
A deck of French playing cards is the most common deck of playing cards used today. It includes thirteen ranks of each of the four suits: clubs (
\begin_inset Formula $\clubsuit$
\end_inset

), diamonds (
\begin_inset Formula $\diamondsuit$
\end_inset

), hearts (
\begin_inset Formula $\heartsuit$
\end_inset

) and spades (
\begin_inset Formula $\spadesuit$
\end_inset

). 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="14">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Club
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\begin_inset Formula $\clubsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\begin_inset Formula $\clubsuit$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Diamond
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\begin_inset Formula $\diamondsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\begin_inset Formula $\diamondsuit$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Heart
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\begin_inset Formula $\heartsuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\begin_inset Formula $\heartsuit$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Spade
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\begin_inset Formula $\spadesuit$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In this task, the 
\family typewriter
rank
\family default
 and 
\family typewriter
suits
\family default
 will follow the following order when a comparison is needed. Ranks from smallest to largest (left to right) 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="14">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Ranks from smallest to largest ( left to right )
\series default

\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rank
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Values Represented
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
11
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
12
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
13
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Suits from smallest to largest ( left to right )
\series default

\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Suits
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Club
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Diamond
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Heart
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Spade
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Python Expression
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\begin_inset Quotes qrd
\end_inset


\backslash
u2663
\begin_inset Quotes qrd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\begin_inset Quotes qrd
\end_inset


\backslash
u2662
\begin_inset Quotes qrd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\begin_inset Quotes qrd
\end_inset


\backslash
u2661
\begin_inset Quotes qrd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
u
\begin_inset Quotes qrd
\end_inset


\backslash
u2660
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 ‚Äì Card Class
\end_layout

\begin_layout Standard
Implement the 
\family typewriter
Card
\family default
 class based on the following UML class diagram. The descriptions for some class methods can be found below. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Card
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- suit : string
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- rank_value : int
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ Card(suit:string, rank_value: int)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_suit():string
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_rank_value(): int
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_suit_symbol(): string
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_rank():string
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ __str__(): string
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
Functions and their descriptions:
\series default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_suit_symbol(): string
\family default
 Return the Unicode symbol corresponding to the 
\family typewriter
card
\family default

\begin_inset Quotes ers
\end_inset

s suit. 
\end_layout

\begin_layout Itemize

\family typewriter
get_rank():string
\family default
 Return a string from 
\begin_inset Quotes qld
\end_inset


\family typewriter
A
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
2
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
3
\family default

\begin_inset Quotes qrd
\end_inset

, ‚Ä¶ 
\begin_inset Quotes qld
\end_inset


\family typewriter
10
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
J
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
Q
\family default

\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
K
\family default

\begin_inset Quotes qrd
\end_inset

 corresponding to the 
\family typewriter
card
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
rank_value
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
__str__(): string
\family default
 Return a string with length of 3-character, stating the 
\family typewriter
card
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
rank
\family default
 followed by its 
\family typewriter
suit
\family default
. For example: 
\begin_inset Quotes qld
\end_inset

 
\family typewriter
K
\begin_inset Formula $\spadesuit$
\end_inset


\family default
 
\begin_inset Quotes qld
\end_inset

, 
\begin_inset Quotes qld
\end_inset


\family typewriter
10
\family default

\begin_inset Formula $\heartsuit$
\end_inset


\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

 
\family typewriter
8
\family default

\begin_inset Formula $\clubsuit$
\end_inset


\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Screenshot of the program. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.2 ‚Äì CardList Class 
\end_layout

\begin_layout Standard
Implement the 
\family typewriter
CardList
\family default
 class based on the following UML class diagram. The descriptions for some class methods can be found below. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

CardList
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- cards: list = list()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- rank_value : int
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ CardList()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ add_card(new_card)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_cards(): list
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ get_size(): int
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ shuffle()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ __str__(): string
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
Functions and their descriptions:
\series default
 
\end_layout

\begin_layout Itemize

\family typewriter
add_card(new_card)
\family default
 Add a new 
\family typewriter
card
\family default
 into the current list of 
\family typewriter
cards
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
get_cards(): list
\family default
 Return the current list of 
\family typewriter
cards
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
get_size():int
\family default
 Get the size of the current list of 
\family typewriter
cards
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
shuffle()
\family default
 Shuffle the current list of 
\family typewriter
cards
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
__str__(): string
\family default
 Return a 
\family typewriter
string
\family default
 consisting of each 
\family typewriter
card
\family default
 in the list of 
\family typewriter
cards
\family default
, separated by commas. For example: 
\begin_inset Quotes qld
\end_inset

 
\family typewriter
K
\begin_inset Formula $\spadesuit$
\end_inset

, 9
\begin_inset Formula $\spadesuit$
\end_inset

, 5
\begin_inset Formula $\spadesuit$
\end_inset

, A
\begin_inset Formula $\spadesuit$
\end_inset

, 10
\begin_inset Formula $\heartsuit$
\end_inset

, 6
\begin_inset Formula $\heartsuit$
\end_inset

, 2
\begin_inset Formula $\heartsuit$
\end_inset

, J
\begin_inset Formula $\diamondsuit$
\end_inset

, 7
\begin_inset Formula $\diamondsuit$
\end_inset

, 3
\begin_inset Formula $\diamondsuit$
\end_inset

, Q
\begin_inset Formula $\clubsuit$
\end_inset

, 8
\begin_inset Formula $\clubsuit$
\end_inset

, 4
\begin_inset Formula $\clubsuit$
\end_inset


\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
Screenshot of the program. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 ‚Äì Sort your hand 
\end_layout

\begin_layout Standard
Implement two additional methods in the 
\family typewriter
CardList
\family default
 class based on the descriptions below.
\end_layout

\begin_layout Standard
State the best-case and worst-case time complexity of the two methods.
\end_layout

\begin_layout Standard
Functions and their Descriptions 
\end_layout

\begin_layout Itemize

\family typewriter
sort_by_suit():
\family default
 Sort the current list of 
\family typewriter
cards
\family default
 by suit first, then by rank, in 
\series bold
ascending
\series default
 order. Implement the method by adopting the algorithm of 
\series bold
insertion sort
\series default
. 
\end_layout

\begin_layout Itemize

\family typewriter
sort_by_rank():
\family default
 Sort the current list of 
\family typewriter
cards
\family default
 by rank first, then by suit, in 
\series bold
ascending
\series default
 order. Implement the method by adopting the algorithm of 
\series bold
improved bubble sort
\series default
. 
\end_layout

\begin_layout Subsection*
Evidence 15
\end_layout

\begin_layout Standard
Screenshot of the program.
\end_layout

\begin_layout Standard
Best-case and worst-case time complexity of the two methods.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 3.4 ‚Äì Test Sorting
\end_layout

\begin_layout Standard
Algorithms Implement a function test_sorts()and design 2 test cases. Run each test case against both methods and test if they are implemented correctly.
\end_layout

\begin_layout Standard
Write down the justification of each test case using comments.
\end_layout

\begin_layout Subsection*
Evidence 16
\end_layout

\begin_layout Standard
Screenshot of the program and output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.5 ‚Äì Hand Ranking 
\end_layout

\begin_layout Standard
A hand of five cards can be ranked according to the following categories from low to high.
\end_layout

\begin_layout Standard

\series bold
Names and their Examples 
\series default
 
\end_layout

\begin_layout Itemize
Normal - A normal hand containing five cards not of sequential rank nor of the same suit, such as 
\family typewriter
K
\begin_inset Formula $\heartsuit$
\end_inset

 J
\begin_inset Formula $\heartsuit$
\end_inset

 8
\begin_inset Formula $\clubsuit$
\end_inset

 7
\begin_inset Formula $\diamondsuit$
\end_inset

 4
\family default

\begin_inset Formula $\spadesuit$
\end_inset

. 
\end_layout

\begin_layout Itemize
Straight - A straight hand containing five cards of sequential rank, not all of the same suit, such as 7
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
 6
\begin_inset Formula $\spadesuit$
\end_inset

 5
\begin_inset Formula $\spadesuit$
\end_inset

 4
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
 3
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
. (AKQJ10 is included.) 
\end_layout

\begin_layout Itemize
Flush - A flush hand containing five cards all of the same suit, not all of sequential rank, such as K
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
 10
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
 7
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
 6
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
 4
\family typewriter

\begin_inset Formula $\clubsuit$
\end_inset


\family default
. 
\end_layout

\begin_layout Itemize
Straight Flush - A straight flush is a poker hand containing five cards of sequential rank, all of the same suit, such as Q
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
 J
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
 10
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
 9
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
 8
\family typewriter

\begin_inset Formula $\heartsuit$
\end_inset


\family default
. 
\end_layout

\begin_layout Standard
Implement an function 
\family typewriter
compare_five_cards()
\family default
. The function should take in 2 
\family typewriter
CardList
\family default
 objects, 
\family typewriter
hand1
\family default
 and 
\family typewriter
han
\family default
d2. If both hands have exactly five cards, compare the hands and return a string indicating if the first hand wins, loses, or there is a draw.
\end_layout

\begin_layout Standard
For this task, if both hands fall into the same category, it is not necessary to further compare the value. The comparison result will be deemed as a draw.
\end_layout

\begin_layout Subsection*
Evidence 17
\end_layout

\begin_layout Standard
Screenshot of the program. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Reversi 
\series default

\end_layout

\begin_layout Standard
In this task you will implement part of the board game called Reversi.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
initiate_board
\family default
 which takes in an integer 
\family typewriter
size
\family default
 and returns a 2-dimension list that contains 
\family typewriter
size
\family default
 
\begin_inset Formula $\times$
\end_inset

 
\family typewriter
size
\family default
 
\begin_inset Quotes qld
\end_inset

 
\begin_inset Quotes qld
\end_inset

.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> initiate_board(2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
[[' ', ' '], [' ', ' ']] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> initiate_board(10) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
[[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset

[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']]
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Program code of 
\family typewriter
initiate_board
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Implement the function display_board which takes in a 2-dimension list board and output the playboard following the format below. For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> b1 = [['X', ' ', 'O'], [' ', 'X', ' '], ['O', 'X', 'O']]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> display_board(b1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-0-1-2- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0|X| |O| 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1| |X| | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2|O|X|O| 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> b2 = [[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

X
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

O
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

O
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

X
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

], 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

[
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

,
\begin_inset Quotes qrd
\end_inset

 
\begin_inset Quotes qld
\end_inset

]] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> display_board(b2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-0-1-2-3-4-5-6-7- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0| | | | | | | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1| | | | | | | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2| | | | | | | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3| | | |X|O| | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4| | | |O|X| | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5| | | | | | | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6| | | | | | | | | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
7| | | | | | | | |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program code of 
\family typewriter
display_board
\family default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
reverse
\family default
 which simulates a valid move in the game Reversi.
\end_layout

\begin_layout Standard
It takes in 4 parameters as shown below. 
\end_layout

\begin_layout Itemize

\family typewriter
board
\family default
 ‚Äì a 2-Dimension list that represents the current state of the play board. 
\end_layout

\begin_layout Itemize

\family typewriter
row
\family default
 ‚Äì an integer that represents the row number at which the disc is placed. 
\end_layout

\begin_layout Itemize

\family typewriter
col
\family default
 ‚Äì an integer that represents the column number at which the disc is placed. 
\end_layout

\begin_layout Itemize

\family typewriter
disc
\family default
 ‚Äì a string that takes either the value of 
\begin_inset Quotes qld
\end_inset

X
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

O
\begin_inset Quotes qrd
\end_inset

 which represents black and white of the disc. 
\end_layout

\begin_layout Standard
The function returns 
\family typewriter
True
\family default
 if it is a valid move and then updates 
\family typewriter
board
\family default
 accordingly, otherwise, returns 
\family typewriter
False
\family default
 without updating 
\family typewriter
board
\family default
.
\end_layout

\begin_layout Standard
A valid move refers to, for example, placing a 
\begin_inset Quotes eld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes erd
\end_inset

 disc at a position that there exists at least one straight (horizontal, vertical, or diagonal) occupied line between the new piece and another 
\begin_inset Quotes eld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes erd
\end_inset

 piece, with one or more contiguous 
\begin_inset Quotes eld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes erd
\end_inset

 pieces between them, and vice versa.
\end_layout

\begin_layout Standard

\series bold
Examples 
\series default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2018-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Program code of the iterative version of function 
\family typewriter
reverse
\family default
. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Program code of the recursive version of function 
\family typewriter
reverse
\family default
. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A text file, 
\family typewriter
TIDES.TXT
\family default
. contains the low and high tide information for a coastal location tor each day of a month. Each line contains tab-delimited data that shows the date, the time. whether the tide is high or low and the tide height in metres.
\end_layout

\begin_layout Standard
Each line is in the format: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
YYYY-MM-DD
\backslash
tHH:mm
\backslash
tTIDE
\backslash
tHEIGHT
\backslash
n 
\family default
 
\end_layout

\begin_layout Itemize
The date is in the term YYYY-MM-DD, for example. 2019-08-03 is 3rd August. 2019 
\end_layout

\begin_layout Itemize
The time is in the form HH:mm, for example. 13:47 
\end_layout

\begin_layout Itemize
TIDE is either HIGH or LOW 
\end_layout

\begin_layout Itemize
HEIGHT is a positive number shown to one decimal place 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
t
\family default
 represents the tab character 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
n
\family default
 represents the newline character 
\end_layout

\begin_layout Standard
The text file is stored in ascending order of date and time.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the tide data from a text file 
\end_layout

\begin_layout Itemize
find the highest high tide and print this value 
\end_layout

\begin_layout Itemize
find the lowest low tide and print this value. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
The tidal range is the difference between the heights of successive tides; from a high tide to the following low tide or from a low tide to the following high tide.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
output the largest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Itemize
output the smallest tidal range and the date on which the second tide occurs. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Characters are numerically encoded using ASCII codes. 
\end_layout

\begin_layout Itemize
'A' has the denary value 65; 
\begin_inset Quotes els
\end_inset

B' has the denary value 66 and so on. 
\end_layout

\begin_layout Itemize
'a' has the denary value 97; 'b' has the denary value 98 and so on. 
\end_layout

\begin_layout Standard
The ROT-13 encoding function replaces a letter with the letter that is 13 positions after it in the alphabet. Characters that are not letters remain unchanged. .
\end_layout

\begin_layout Standard
The function wraps around from the end of the alphabet back to the beginning. The case of the coded letter should match the case of the original letter.
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Itemize
'A' is replaced with 'N'; 'a' is replaced with 'n' 
\end_layout

\begin_layout Itemize
'B' is replaced with '0
\begin_inset Quotes els
\end_inset

; 'b' is replaced with 'o' 
\end_layout

\begin_layout Itemize
'Z' is replaced with 'M'; 'z
\begin_inset Quotes els
\end_inset

 is replaced with 'm' 
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code that: 
\end_layout

\begin_layout Itemize
reads a string of characters as input 
\end_layout

\begin_layout Itemize
encodes the string in ROT-13 form 
\end_layout

\begin_layout Itemize
outputs the encoded string. 
\end_layout

\begin_layout Standard
Run the program 
\series bold
three
\series default
 times with the inputs:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
This is a word.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ALL &&&& CAPITALS
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
UpperCamelCase12()
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshots of your outputs. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
A string is encoded using ROT-13. The resulting string is then encoded using ROT-13. The output of the second encoding should be identical to the original string.
\end_layout

\begin_layout Standard
Amend your program code to apply HOT-13 twice, in the method described. Show that the resulting string is identical to the original string.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the output from one of the given inputs. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to implement a to-do list using object-oriented programming (OOP). The list shows tasks that need to be done.
\end_layout

\begin_layout Standard
Each task is given a category and a description.
\end_layout

\begin_layout Standard
The base class will be called 
\family typewriter
ToDo
\family default
 and is designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
category : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
description : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor(c : STRING, d : STRING) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_category(s : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_description(s : STRING) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_category() : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get:_description() : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
summary() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
summary()
\family default
 method returns the category and description as a single string.
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
ToDo
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Tasks should be sorted alphabetically by category. Within each category. tasks should be sorted alphabetically by description.
\end_layout

\begin_layout Standard
A task to be added to the list is compared to the tasks already in the list to determine its correct position in the list. If the list is empty. it is added to the beginning of the list.
\end_layout

\begin_layout Standard
This comparison will use an additional member method, 
\end_layout

\begin_layout Standard
\align center

\family typewriter
compare_with(td : ToDo) : INTEGER 
\family default
 
\end_layout

\begin_layout Standard
This function compares the instance (the item in the list) and the 
\family typewriter
ToDo
\family default
 object passed to it, returning one of three values:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
-1 if the instance is before the given 
\family typewriter
ToDo
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
0 if the two are equal
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
+1 if the instance is after the given 
\family typewriter
ToDo
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
There are four objects defined in the text file 
\family typewriter
TASK3_2.TXT
\family default
.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
implement the 
\family typewriter
compare_with()
\family default
 method 
\end_layout

\begin_layout Itemize
create an empty list of 
\family typewriter
ToDo
\family default
 objects 
\end_layout

\begin_layout Itemize
add each of the four objects in the text file 
\family typewriter
TASK3_2.TXT
\family default
 to its appropriate place in the list 
\end_layout

\begin_layout Itemize
printout the list contents using the 
\family typewriter
summary()
\family default
 method. 
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard
The to-do list can have items with extra information. One such item has a date by which the task should be completed.
\end_layout

\begin_layout Standard
The 
\family typewriter
DatedToDo
\family default
 class inherits from the 
\family typewriter
ToDo
\family default
 class, extending it to have a 
\family typewriter
due_date
\family default
. designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

DatedToDo : ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
due_date : DATE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor(dt : DATE, 0 : STRING, d : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_due_date(d : DATE)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_due_date() : DATE 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
DatedToDo
\family default
 class should extend the 
\family typewriter
compare_with()
\family default
 method to ensure that tasks are ordered by ascending 
\family typewriter
due_date
\family default
, and then by the ordering used by the base 
\family typewriter
compare_with()
\family default
 method. The 
\family typewriter
summary()
\family default
 method should also be extended to return the 
\family typewriter
due_date
\family default
 and the return values of the base 
\family typewriter
summary()
\family default
 method.
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
There are seven objects defined in the text file 
\family typewriter
TASK3_3.TXT
\family default
.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
implement the 
\family typewriter
DatedToDo
\family default
 class, with 
\family typewriter
constructor
\family default
, 
\family typewriter
get_due_date
\family default
 and 
\family typewriter
set_due_date
\family default
 
\end_layout

\begin_layout Itemize
implement the extended 
\family typewriter
compare_with()
\family default
 method 
\end_layout

\begin_layout Itemize
implement the extended 
\family typewriter
summary()
\family default
 method 
\end_layout

\begin_layout Itemize
ensure all seven objects in the text file 
\family typewriter
TASK3_3.TXT
\family default
 are added to the list 
\end_layout

\begin_layout Itemize
print out the list contents using the 
\family typewriter
summary()
\family default
 method. 
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the test run.
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
\noindent
When a task in the to-do list has been completed, it should be removed.
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
There are four completed tasks defined in the text file 
\family typewriter
TASK3_4.TXT
\family default
.
\end_layout

\begin_layout Standard
If any of the four tasks exists in the list, it should be removed.
\end_layout

\begin_layout Standard
Amend your program to: 
\end_layout

\begin_layout Itemize
recreate the list of seven tasks from Task 3.3 
\end_layout

\begin_layout Itemize
check if each of the four completed tasks in the text file 
\family typewriter
TASK3_4.TXT
\family default
 exists in the list and: 
\end_layout

\begin_deeper
\begin_layout Itemize
remove it from the list if it does or 
\end_layout

\begin_layout Itemize
print a warning message it the completed task does not exist 
\end_layout

\end_deeper
\begin_layout Itemize
print out the list after all four objects have been processed. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your amended code.
\end_layout

\begin_layout Standard
Screenshot of the test run.
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stack is used to store characters.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code to implement the stack and the operations specified.
\end_layout

\begin_layout Standard
Your code should allow operations to: 
\end_layout

\begin_layout Itemize
push an item on to the stack 
\end_layout

\begin_layout Itemize
pop an item off the stack 
\end_layout

\begin_layout Itemize
determine the size of the stack. A size of zero indicates that the stack is empty. 
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for the stack.
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
The stack is to be used to identify it an arithmetic expression is balanced.
\end_layout

\begin_layout Standard
An expression is balanced if each opening bracket has a corresponding closing bracket.
\end_layout

\begin_layout Standard
Different pairs of brackets can be used. These are: [], () or {}.
\end_layout

\begin_layout Standard
This is an example of an expression that is balanced.
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

([8-1]/(5*7)) 
\family default

\end_layout

\begin_layout Standard
This is an example of an expression that is not balanced.
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

[(8-1]/(5*7)) 
\family default

\end_layout

\begin_layout Standard
Note the change in the order of the first two open bracket symbols. The first closing bracket should be a closing bracket ')' to match the previous opening bracket 
\begin_inset Quotes els
\end_inset

('.
\end_layout

\begin_layout Standard
Note that an expression is not balanced if the order of the brackets is incorrect, even if there are the same number of opening and closing brackets of each bracket type.
\end_layout

\begin_layout Standard
An expression is checked by iterating over it: 
\end_layout

\begin_layout Itemize
if a non-bracket symbol is found, continue to the next character. 
\end_layout

\begin_layout Itemize
If an opening symbol is found, push it on to the stack and continue to the next character. 
\end_layout

\begin_layout Itemize
If a closing bracket is encountered: 
\end_layout

\begin_deeper
\begin_layout Itemize
If the stack is empty, return an error (because there is no corresponding opening bracket) 
\end_layout

\begin_layout Itemize
else pop the symbol from the top of the stack and compare it to the current closing symbol to see if they make a matching pair 
\end_layout

\begin_layout Itemize
If they do match continue to the next character 
\end_layout

\begin_layout Itemize
else return an error (pairs of brackets must match). 
\end_layout

\end_deeper
\begin_layout Itemize
When the last symbol is encountered: 
\end_layout

\begin_deeper
\begin_layout Itemize
return an error if the stack is not empty (too many opening symbols) 
\end_layout

\begin_layout Itemize
else return a success message. 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Add 
\series bold
five
\series default
 other suitable test cases and a reason for choosing each test case. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Test case
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Reason for choice
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Expected value
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
([8-1]/(5*7))
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Provided 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[(8-1]/(5*7))
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Provided 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
The completed table with all seven test cases and a reason for choosing each test case.
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code that checks expressions using the given algorithm.
\end_layout

\begin_layout Standard
Use all 
\series bold
seven
\series default
 test cases to verify It.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code for the stack.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[19]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Pharmacists working in a group of pharmacies, dispense medicine to patients who present to them a prescription written by a doctor. A new system is to be built to allow a doctor to send prescription data electronically to a pharmacy of the patient's choice. Patients will either collect the medicine, or have the pharmacy deliver it to them.
\end_layout

\begin_layout Standard
A project proposal is written and sent to doctors and pharmacy staff, inviting each to respond within a given time. 
\end_layout

\begin_layout Enumerate
Give a reason why the project proposal is sent to: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Doctors 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Pharmacy staff 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
The responses from the doctors and pharmacy staff are reviewed. Invitations are sent to doctors to find out whether they are willing to take part in a pilot scheme. The project proposal is sent to prospective software developers. Some of the activities involved in the project are listed in the following table. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Label 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration(Weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
B
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal to pharmacy staff 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Discuss all the responses from A and B. and revise the proposal if 2 required 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal to prospective software developers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
E
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Invite doctors to be part of a pilot scheme 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
F
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Request quotations of cost and development time from software developers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
G
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Select a software developer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a Gantt chart for the activities labelled 
\series bold
A
\series default
 to 
\series bold
G
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
State the estimated time taken to complete activities 
\series bold
A
\series default
 to 
\series bold
G
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
In activities 
\series bold
A
\series default
 and 
\series bold
B
\series default
, doctors and pharmacy staff identified ethical and security issues that would need to be addressed. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe one security issue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe one ethical issue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
In activity 
\series bold
F
\series default
, quotations are received from software developers. The lowest cost is from a developer who works alone, but demonstrates a number of successful projects. Other software developers that employ many staff submit more expensive quotations. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain why the group of pharmacies may decide against the single developer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
An analyst from the chosen software developer reviews the current system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Give 
\series bold
four
\series default
 methods available to the analyst to find out how a system operates. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
The analyst proposes that the doctors and pharmacy staff interact with a web-based system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

tate the software that will be needed on the devices used by the doctors and pharmacy staff. other than the operating system. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The alternative to a web-based system would be to write and install purpose-built application software for each computer used by a doctor or member of the pharmacy staff. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 advantages to the software developer of a web-based solution over purpose- built software running on each user's computer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Doctors may wish to write prescriptions when they visit patients in their own home. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Explain 
\series bold
one
\series default
 benefit of a web-based solution in this situation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The computers used by the doctors and pharmacy staff are clients of the server operated by the pharmacy. Some validation is provided by client-side scripting. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Give 
\series bold
two
\series default
 advantages of using this type of scripting. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The new system is designed. coded and tested as a number of modules. A tester performing black-box testing on a module would need its specification. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(j)
\end_layout

\end_inset

Explain why the tester would not need access to the source code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(k)
\end_layout

\end_inset

Explain why someone designing a test strategy for white box testing would need access to the source code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(l)
\end_layout

\end_inset

Alpha testing is performed on the system.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the purpose of alpha testing. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(m)
\end_layout

\end_inset

The group of pharmacies is responsible for the security and integrity of the stored data. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
two 
\series default
methods that could be used to ensure security of the stored data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 methods that could be used to ensure the integrity of the stored data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(n)
\end_layout

\end_inset

The group considers using either the cloud or its own server to store data needed by the proposed system.
\end_layout

\begin_deeper
\begin_layout Standard
Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of storing the data in the cloud. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bakery bakes bread and cakes to sell in its own shop and to other shops throughout a city.
\end_layout

\begin_layout Standard
Its drivers visit every shop each day, delivering that day
\begin_inset Quotes ers
\end_inset

s order and collecting the order for the next day.
\end_layout

\begin_layout Standard
Order forms are pre-printed with the name of each shop and every item that the bakery bakes. The manager of each shop writes onto the form the quantity of each item required. When the drivers return to the bakery. the data from the order forms are collated to give the bakers the total of each item to bake.
\end_layout

\begin_layout Standard
Copies of the order forms are made and used as delivery notes for the next day
\begin_inset Quotes ers
\end_inset

s deliveries. The accounts department use the original order forms to prepare a weekly invoice for each shop.
\end_layout

\begin_layout Standard
The bakery wants the shops to submit their orders online.
\end_layout

\begin_layout Standard
A program is needed to determine the number of each item needed and produce the weekly invoice for each shop.
\end_layout

\begin_layout Standard
The new program will use a relational database with three tables: Product, Shop and Order.
\end_layout

\begin_layout Standard
Each product has a description. price. and a unique product ID number.
\end_layout

\begin_layout Standard
Each shop has a name. an address, telephone number. manager's name, and a unique shop iD number.
\end_layout

\begin_layout Standard
Each order has a product lD, a quantity, a shop ID and a date for delivery. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2, Attribute3, ...) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write table descriptions for the three tables. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard
The bakery can change the price of an item at any time. Validation ensures that the new price is within specified limits and is more likely to be correct. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why this could still result in incorrect weekly invoices, assuming that the new price input is correct. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe changes to the database and draw a modified E-R diagram to ensure correct invoices are created. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is asked to write a program to store names in alphabetical order.
\end_layout

\begin_layout Standard
The program needs to: 
\end_layout

\begin_layout Itemize
add and remove names 
\end_layout

\begin_layout Itemize
search for the presence of a specific name 
\end_layout

\begin_layout Itemize
output all the names in alphabetical order. 
\end_layout

\begin_layout Standard
The programmer considers two options: an array and a linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why an array allows for more efficient searching. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State why this advantage becomes more significant as the number of names becomes much larger. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
one
\series default
 disadvantage of using an 
\series bold
array
\series default
 to store the names in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage of using a 
\series bold
linked list
\series default
 to store the names in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
A third option is to store the names in a binary tree. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain how a binary tree provides some of the advantages of both an array and a linked list when storing sorted data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State why a binary tree may need to be re-created with exactly the same data items. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company operates a multi-storey car park. All parking bays are identified by a letter. indicating the floor. and a number indicating the position of the bay on that floor (for example. C34 indicates bay 34 on floor C).
\end_layout

\begin_layout Standard
The entrance to the car park is controlled by a barrier. Before the barrier lifts to allow a car to enter, the driver must press a button to indicate if they need a standard bay or a special bay.
\end_layout

\begin_layout Standard
Special bay users must present a card to a card reader at the barrier.
\end_layout

\begin_layout Standard
The car park has an additional third type of bay that has a charging point for electric vehicles. The hourly rate for these bays is not the same as standard bays. The cost of using this type of bay additionally depends on the cost of the electricity used. This is monitored by the charging device and stored.
\end_layout

\begin_layout Standard
A camera captures the vehicle registration number. A ticket is printed showing: 
\end_layout

\begin_layout Itemize
current time 
\end_layout

\begin_layout Itemize
vehicle registration number 
\end_layout

\begin_layout Itemize
floor letter 
\end_layout

\begin_layout Itemize
position number of a suitable bay where the car must be parked 
\end_layout

\begin_layout Itemize
the card number for the special bay, if a card had been presented at the barrier. 
\end_layout

\begin_layout Standard
When the driver takes the ticket from the printer. the entrance barrier lifts. Before a car is allowed to leave, the ticket must be presented and a charge paid. The charge is determined by the length of stay and type of bay. The hourly rate for a standard bay is not the same as that for a special bay. As a car approaches the exit barrier a camera captures the vehicle registration. The barrier only lifts if the charge for this vehicle has been paid.
\end_layout

\begin_layout Standard
This system is to be implemented using object-oriented programming (OOP).
\end_layout

\begin_layout Standard
The base class PARKING_BAY has a property to store whether or not a bay is occupied. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
the properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
suitable methods to support the system with at least one getter and one setter method. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Enumerate
Add a class, CAR_PARK. thathas properties to store: 
\end_layout

\begin_deeper
\begin_layout Itemize
a list of all bays 
\end_layout

\begin_layout Itemize
the number of unoccupied bays. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why polymorphism is useful in object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the purpose of making the attributes of an object private. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The function 
\family typewriter
z
\family default
 takes three integer parameters, 
\family typewriter
low
\family default
, 
\family typewriter
high
\family default
, 
\family typewriter
seek
\family default
 and returns an integer value. It operates on the values in the elements of the array 
\family typewriter
A
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION Z(low, high, seek, A) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF low > high THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ‚Äî1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

mid <- low + INT( (high ‚Äî low) /2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

IF seek = A[mid] THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN mid 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF seek < A[mid] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Z(low, mid - 1, seek, A) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Z(mid + 1, high, seek, A) . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what lines 
\family typewriter
10
\family default
 and 
\family typewriter
12
\family default
 tell you about the function. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the purpose for the 
\family typewriter
RETURN
\family default
 statements in lines 
\family typewriter
03
\family default
 and 
\family typewriter
07
\family default
 of function 
\family typewriter
z
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard
The values in each of the eight elements of the array 
\family typewriter
A
\family default
 are: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\series bold
Element
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Value
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
96 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
412 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
500
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Copy and then complete the trace table for the instruction:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
OUTPUT z(0, 7, 103, A)
\family default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Function call 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
low
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
high
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
seek
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
mid
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
A[mid]
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
OUTPUT
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
103
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Function 
\family typewriter
z
\family default
 can return two different types of value.
\end_layout

\begin_deeper
\begin_layout Standard
Explain what these represent. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The number of elements in array 
\family typewriter
A
\family default
 may be very large.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why a programmer might prefer to use an iterative approach rather than the one used in function 
\family typewriter
z
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Data communication networks can use circuit switching or packet switching. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of packet switching over circuit switching. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage of circuit switching over packet switching. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
one
\series default
 reason for using either a parity check or a checksum. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 example of an error that a parity check cannot detect. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Switches and routers are common devices used in networking.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the most significant differences between a switch and a router. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the purpose of a bridge in a network.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
A local area network (LAN) can be set up as either client-server or peer-to-peer.
\end_layout

\begin_deeper
\begin_layout Standard
Give 
\series bold
two
\series default
 advantages in storing shared data on a client-server network rather than on a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
IOI19.TXT
\family default
 stores the scoreboard of the 31st International Olympiad in Informatics (IOI) held in Baku, Azerbaijan from 4 to 11 August 2019. The first line contains the header with contestant's rank, name, team (country), and overall score. The remaining lines contain the corresponding data. IOI 2019 eventually awarded 28 Gold, 54 Silver and 81 Bronze medals. A country typically sends up to 4 contestants to participate in IOI.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Determine the top 3 teams in the competition and display their country names as well as the number of Gold, Silver and Bronze medals attained. Teams which are tied will be ordered by their country names in alphabetical order and will share the same rank.
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
Top 3 teams: 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1 ABC 4G 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2 DEF 3G1S 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2 GHI 3G1S 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4 JKL 2G1S1B 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4 MNO 2G1S1B 
\family default

\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code to prompt a user to enter a team name and display the results of its participants. Participants who did not receive a medal will be denoted with 
\family typewriter
P
\family default
. The program will terminate when a user enters the text string 
\family typewriter
'ZZZ'
\family default
 (without the quotes).
\end_layout

\begin_layout Standard
Sample interaction:
\end_layout

\begin_layout Standard

\family typewriter
Enter team: SGP 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Eu-Shaun Leong G 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Lee Jeffrey Chun Hean S 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Benson Zhan Li Lin B 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Daniel Zhenghao Choo P 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Enter team: ZZZ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Bye 
\family default

\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Dubbed first of its kind globally, the Singapore Quick Response Code (SGQR) is an infrastructure-light technology that will help to simplify QR e-payments in Singapore for both consumers and merchants.
\end_layout

\begin_layout Standard
The SGQR is based on the QR Code Specification for Payment System - Merchant-Presented Mode standard issued by EMVCo, which has the benefits of international interoperability, multi-tenancy of QR schemes and non-sensitive data presented for payments.
\end_layout

\begin_layout Standard
According to the specification, the parsed SGQR text string contains data items, with each data item adhering to the following structure: id, length, value. Two such data items are highlighted in bold in the following diagram: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P1-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Thus for the first data item 
\family typewriter

\series bold
000201
\series default

\family default
, 
\family typewriter
00
\family default
 is the id, 
\family typewriter
02
\family default
 is the length, and 
\family typewriter
01
\family default
 is the value.
\end_layout

\begin_layout Standard
And for the last data item 
\family typewriter

\series bold
630457B3
\series default

\family default
, 
\family typewriter
63
\family default
 is the id, 
\family typewriter
04
\family default
 is the length, and 
\family typewriter
57B3
\family default
 is the value.
\end_layout

\begin_layout Standard
The value 
\family typewriter
57B3
\family default
 is also a hexdecimal number to verify the integrity of the SGQR data.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code to extract the last data item of the SGQR stored in 
\family typewriter
SGQR.TXT
\family default
. For the example above, it will be the data item with id 63 and length 4 i.e. 630457B3.
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a 
\family typewriter
hex2oct
\family default
 function which takes in a hexadecimal number string and returns its equivalent octal number string. For example 
\family typewriter
hex2oct('A')
\family default
 returns 
\family typewriter
'12'
\family default
. You may not use Python's built in 
\family typewriter
int(num, 8)
\family default
, 
\family typewriter
int(num, 16)
\family default
, 
\family typewriter
bin()
\family default
, 
\family typewriter
oct()
\family default
 or 
\family typewriter
hex()
\family default
 functions. Use the hexadecimal number string 
\family typewriter
'4F63A'
\family default
 to to test your program code.
\end_layout

\begin_layout Standard
Hint: One hexadecimal digit can be expressed as four binary digits and one octal digit can be expressed as three binary digits.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Screenshot. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code to perform input validation for a hexadecimal number string. Test your program with suitable test data.
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Screenshots. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
From 2021 onwards, the Primary School Leaving Exam (PSLE) will be scored with wider bands, replacing the current T-scores.
\end_layout

\begin_layout Standard
Each subject will be scored using 8 bands known as Achievement Levels (AL), with AL 1 being the best score and AL 8 being the lowest score. The student
\begin_inset Quotes ers
\end_inset

s PSLE Score will be the sum of the four subject scores. The PSLE Score will range from 4 (best) to 32. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Secondary 1 posting will continue to be based on academic merit, using the PSLE Score.
\end_layout

\begin_layout Standard
Each student will submit a list of 6 schools in order of preference. If two students with the same score are being considered for the last place in a school, the following tie-breakers will be used: 
\end_layout

\begin_layout Itemize
Citizenship - priority given to Singapore Citizens (SC), then Singapore Permanent Residents (PR), then International Students (IS) 
\end_layout

\begin_layout Itemize
Choice order of schools - priority given to the student who indicates a certain school as a higher choice 
\end_layout

\begin_layout Itemize
Computerised balloting 
\end_layout

\begin_layout Standard
The file 
\family typewriter
PSLE21.txt
\family default
 contains the application information of 400 Primary 6 students of a primary school with the following structure:
\end_layout

\begin_layout Standard

\family typewriter
<StudentID>,<EnglishLanguageMark>,<MathematicsMark>,<ScienceMark>,<MotherTongueLangueMark>,<Citizenship>,<SchoolChoice1>,<SchoolChoice2> ,<SchoolChoice3> 
\family default

\end_layout

\begin_layout Standard
You may assume that in this school all students study subjects at the standard level. Also, all of them have made up their mind to only apply to 3 schools of their choice. If a student is unable to get admission to a school of their choice, they will be posted to SchoolD.
\end_layout

\begin_layout Standard
It is decided to process and store the following application information about the student in 4 linked lists. Each linked list pertain to the vacancy positions of the 4 schools. Schools A, B and C have 120, 150 and 80 available places. The data to be stored in each linked list node include: PSLE score, student ID, citizenship and the 3 school choices.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to read in and store the contents of the file 
\family typewriter
PSLE21.txt
\family default
 in a dictionary 
\family typewriter
students
\family default
 with key 
\family typewriter
StudentID
\family default
 and value the computed PSLE score, citizenship and three school choices. Display the first 10 dictionary entries in 
\family typewriter
students
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 11
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Screenshot for first 10 dictionary entries in 
\family typewriter
students
\family default
.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Using OOP where appropriate, write program code to declare and initialise the necessary classes. Insert the 400 students from the 
\family typewriter
students
\family default
 dictionary in Task 3.1 to the appropriate linked lists in your main program driver code.
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[16]
\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
Screenshots for the first 5 entries in each linked list. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Students 
\family typewriter
P351
\family default
 and 
\family typewriter
P365
\family default
 who were previously Singapore Permanent Residents (PR) have successfully become Singapore Citizens (SC). Write the necessary program code to update their citizenship status and new secondary 1 posting order.
\end_layout

\begin_layout Subsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Screenshots. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
Student 
\family typewriter
P286
\family default
 has decided to emigrate to another country with his/her parents. Write the necessary program code to remove him/her from his/her existing allocation and perform the necessary adjustments to fill up the vacancy.
\end_layout

\begin_layout Subsection*
Evidence 17
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Evidence 18 
\end_layout

\begin_layout Standard
Screenshot.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Viola-Jones object detection algorithm, named after two computer vision researchers Paul Viola and Michael Jones, uses integral images to detect the presence of facial features in an image efficiently.
\end_layout

\begin_layout Standard
An integral image (also known as a summed-area table) is the name of both a data structure and an algorithm used to obtain this data structure. It uses a quick and efficient way to calculate the sum of pixel values in a rectangular part of an image.
\end_layout

\begin_layout Standard
In an integral image, the value of each point is the sum of all pixels above and to the left, including the target pixel: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The integral image can be calculated in a single pass over the original image. This reduces summing the pixel intensities within a rectangle into only three operations with four numbers, regardless of rectangle size: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P1-Q4-2.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
The sum of pixels in the rectangle ABCD can be derived from the values of points A, B, C, and D, using the formula 
\begin_inset Formula $D-B-C+A$
\end_inset

. It is easier to understand this formula visually:
\end_layout

\begin_layout Standard
Note that subtracting both B and C means that the area defined with A has been subtracted twice, so we need to add it back again.
\end_layout

\begin_layout Standard
Thus 
\begin_inset Formula $D-B-C+A=113-50-42+20=41$
\end_inset

. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P1-Q4-3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write an 
\family typewriter
integral_image()
\family default
 function which reads in the data from the file 
\family typewriter
IMAGE1.IN
\family default
 into a 2D array and computes and outputs the integral image to a file 
\family typewriter
IMAGE1.OUT
\family default
 using the algorithm described above, and also displays the result of 
\begin_inset Formula $D-B-C+A$
\end_inset

 to the screen.
\end_layout

\begin_layout Subsection*
Evidence 19
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

 [13]
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Screenshots of 
\family typewriter
IMAGE1.OUT
\family default
 and output of 
\begin_inset Formula $D-B-C+A$
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write a 
\family typewriter
magic()
\family default
 function which is a generalisation of your 
\family typewriter
integral_image()
\family default
 function which will work for any 
\begin_inset Formula $m\times n$
\end_inset

 rectangular 2D array and any rectangle ABCD.
\end_layout

\begin_layout Standard
Programmatically randomise your image with suitable values (
\begin_inset Formula $m,n\geq8$
\end_inset

) in 
\family typewriter
IMAGE2.IN
\family default
 and work your magic on this pseudo-randomly generated file to produce 
\family typewriter
IMAGE2.OUT
\family default
 and the updated computed value of 
\begin_inset Formula $D-B-C+A$
\end_inset

.
\end_layout

\begin_layout Subsection*
Evidence 21
\end_layout

\begin_layout Standard
Program code. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Screenshots of 
\family typewriter
IMAGE2.OUT
\family default
 and output of 
\begin_inset Formula $D-B-C+A$
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following Gantt chart shows the key tasks involved in a data science project for a product recommendation engine based on customers' past purchase patterns. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="17" columns="23">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
AID 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Week
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Understand the problem 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Review with team 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Make problem statement 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Define scope of work 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identify suitable algorithms 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Collect data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Clean data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Exploratory data analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Develop use cases 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Present use cases 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Analyse full data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Develop proof of concept 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Get customer approval 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Build final models 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
O 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Deploy models 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sign off 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A project manager often uses both PERT chart and Gantt chart to illustrate and manage a project workflow. 
\end_layout

\begin_layout Enumerate
Give one benefit and one limitation of using a Gantt chart to depict a project workflow?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Construct a PERT chart to depict the project work flow.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
State the critical path and the minimum project completion time. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain and give an example of a dependent activity.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain and give an example of a concurrent activity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Indicate in your PERT chart and justify a suitable dummy activity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give an example to show your understanding of float or slack time.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The project manager needs to include a documentation activity and a cybersecurity activity to the project. Justify the significance of these activities and show how these can be included in your PERT chart. Explain any implications to the critical path and projection completion time. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
The project team would inadvertently have access to some restricted customer purchase information. Give two ethical considerations related to the privacy of data and suggest possible mitigation measures.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The following shows sample interaction snippets of an interactive exploratory data analysis session. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P2-Q1-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-DHS-2019-P2-Q1-2.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the interface used and justify why this is the most appropriate form of user interaction. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
The data analysis team is deciding on whether to perform the analysis online in a cloud infrastructure or to process all data on a local computer. What are two factors to consider in arriving at this decision? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Evaluate the pros and cons of each approach and make a recommendation with reason(s) to the project team. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Given the relationship: bit rate = baud rate * voltage (# bits per signal) 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between baud rate and bit rate. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The following voltage levels expressed in volts are chosen to encode bits:
\end_layout

\begin_deeper
\begin_layout Standard
-6.0, -4.5, -3.0, -1.5, +1.5, +3.0, +4.5, +6.0
\end_layout

\begin_layout Standard
How many bits represent these voltages?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
For the above voltages, write down one possible set of corresponding bit patterns.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
If the baud rate of the line is 900 baud what is the bit rate for the voltage levels?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Given an array of integers, devise an algorithm for a function 
\family typewriter
FindLargest
\family default
 that arranges them in order to return the largest possible integer. For example, given [10, 7, 76, 415], your algorithm should return 77641510.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
Given an array of integers, devise an algorithm for a function 
\family typewriter
MultiplyNotMe
\family default
 that returns a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i. For example, given [1, 2, 3, 4, 5], your algorithm should return [120, 60, 40, 30, 23].
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Given a binary search tree of positive integers, devise an algorithm 
\family typewriter
FindFloorCeiling
\family default
 to find the floor and ceiling of a given positive integer k. The floor Is the highest element in the tree less than or equal to an integer, while the ceiling is the lowest element in the tree greater than or equal to an integer. If either value does not exist, return -1. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Given a sorted array, devise an algorithm 
\family typewriter
MakeBalancedBST
\family default
 to convert it into a height-balanced binary search tree. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Blackjack is a two-player card game whose rules are as follows: 
\end_layout

\begin_layout Itemize
The player and then the dealer are each given two cards. 
\end_layout

\begin_layout Itemize
The player can then 
\begin_inset Quotes qld
\end_inset

hit
\begin_inset Quotes qrd
\end_inset

, or ask for arbitrarily many additional cards, so long as their total does not exceed 21. 
\end_layout

\begin_layout Itemize
The dealer must then hit if their total is 16 or lower, otherwise pass. 
\end_layout

\begin_layout Itemize
Finally, the two compare totals, and the one with the greatest sum not exceeding 21 is the winner. 
\end_layout

\begin_layout Standard
For this problem, cards values are counted as follows: each card between 2 and 10 counts as their face value, face cards count as 10, and aces count as 1. 
\end_layout

\begin_layout Enumerate
Express the above blackjack game flow using a program flowchart. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Given perfect knowledge of the sequence of cards in the deck, devise an efficient algorithm that maximises the player's score (i.e. wins minus losses). 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Enumerate
Evaluate the efficiency of your algorithm for part (b). 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A role playing game (RPG) uses object-oriented programming (OOP) to store its game characters' data. A character, either a hero or a monster, has a name, health, magic points and inventory. Each character also has a 
\family typewriter
take_damage()
\family default
 and a 
\family typewriter
display()
\family default
 method.
\end_layout

\begin_layout Standard
The game also has a special type of character, a dragon, which also has additional data 
\family typewriter
airSpeed
\family default
 and 
\family typewriter
breathType
\family default
. 
\end_layout

\begin_layout Enumerate
Draw a class diagram showing the relationship between the different game characters. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using appropriate examples, explain the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation 
\end_layout

\begin_layout Enumerate
inheritance 
\end_layout

\begin_layout Enumerate
polymorphism 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using suitable examples, explain why OOP is a preferred programming paradigm in game development than a(n) imperative/procedural one. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
BuildingBloCS is Singapore's first/only/largest by Computing students for Computing students and beyond national Computing education outreach programme. In 2019, it comprises a series of workshops, talks, games, projects showcase, programming quizzes, lucky draws and more (media and entertainment very important).
\end_layout

\begin_layout Standard
The organisers would like to apply what they learned in Computing to manage workshop information using a relational database. 
\end_layout

\begin_layout Itemize
Each participant can register for one or more workshops 
\end_layout

\begin_layout Itemize
Each workshop is conducted by one or more instructors 
\end_layout

\begin_layout Itemize
Each workshop is also facilitated by one or more facilitators 
\end_layout

\begin_layout Standard
Due to Personal Data Protection Act (PDPA), it is decided to use an alternative unique identifier as the primary key instead of collecting participants' NRICs/FINs.
\end_layout

\begin_layout Standard
The normalised design requires a number of tables. 
\end_layout

\begin_layout Enumerate
Draw an Entitiy-Relationship (E-R) diagram that shows these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Suggest and justify a suitable primary key candidate other than NRIC/FIN. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName(Attribute1, Attribute2, Attribute3, ‚Ä¶)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Derive the table descriptions for the tables. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
There are some fields with missing or null values. Explain how these arise and how a Database Management System (DBMS) may provide facilities to ensure the information is appropriately managed. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The manager of a private carpark wants to process the daily data of people using the carpark. The carpark is open from 8am to 11pm and the carpark charge is as follows: 
\end_layout

\begin_layout Itemize
Before 5pm: $1.50 per hour or part thereof 
\end_layout

\begin_layout Itemize
After 5pm, $3.00 per entry regardless of the duration 
\end_layout

\begin_layout Standard
However, if a car enters before 5pm and leaves after 5pm, the charge involves both rules. For example, if the car stays in the carpark from 2.45pm to 6.30pm, it is broken down to 2 hours 15 minutes before 5pm and 1 hour 30 minutes after 5pm. Hence the charge will be $1.50 * 3 + $3.00 = $7.50.
\end_layout

\begin_layout Standard
Each day the carpark electronic system generates a file
\family typewriter
 CARPARK.txt
\family default
. Each record in the file has the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<CARPLATE NUMBER>,<START TIME>,<END TIME>
\family default
 
\end_layout

\begin_layout Standard
For example, 
\family typewriter
SLX2315A,0940,1415
\family default
 means that a car with car plate number SLX2315A entered the carpark at 9.40am and left at 2.15pm.
\end_layout

\begin_layout Standard
You are 
\series bold
not
\series default
 allowed to use any built-in functions for time processing.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
Price
\family default
 function using the following specification: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION Price (start: STRING, end: STRING) : FLOAT
\family default
 
\end_layout

\begin_layout Standard
The function has two string parameters 
\family typewriter
start
\family default
, 
\family typewriter
end
\family default
 which refers to the start and end time when the car parked. The function returns the carpark charge as a float.
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a program code to perform the following task for the manager: 
\end_layout

\begin_layout Itemize
Read data from 
\family typewriter
CARPARK.txt 
\family default
 
\end_layout

\begin_layout Itemize
Write all the car plate numbers and corresponding carpark charges to another file 
\family typewriter
CHARGE.txt
\family default
, in the following format: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
<CARPLATE NUMBER>,<CARPARK CHARGE>
\family default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<CARPLATE NUMBER>,<CARPARK CHARGE>
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
Output the total charges for the day 
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
One screenshot showing the program output and contents of 
\family typewriter
CHARGE.txt
\family default
 from running the program.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
When a list of integers has repeated numbers, the searching and sorting algorithms can be different. The task is to perform an insertion sort before a binary search is executed.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write the program code for a procedure to implement insertion sort in ascending order. The input parameter is a list of integers which may have repeated numbers.
\end_layout

\begin_layout Subsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write the program code for a procedure to implement binary search for a targeted integer. The input parameter is an ordered list of integers which may have repeated numbers. The procedure outputs all the indices at which the target appears, or 
\family typewriter
‚àí1
\family default
 if the target is not found.
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
The file 
\family typewriter
NUMBERS.txt
\family default
 contains one integer at each line. Write a program that uses the procedures in previous tasks and performs the following task: 
\end_layout

\begin_layout Itemize
Reads the text file 
\family typewriter
NUMBERS.txt
\family default
, 
\end_layout

\begin_layout Itemize
Perform insertion sort, and outputs the list of integers in a row, 
\end_layout

\begin_layout Itemize
Prompts the user to provide a target to be searched, 
\end_layout

\begin_layout Itemize
Perform a binary search and output an appropriate message 
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
Draw up 
\series bold
three
\series default
 suitable tests and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The examinations department of a school needs to keep long-term records of the overall examination achievements of its students.
\end_layout

\begin_layout Standard
Students at the school have two main choices. Firstly, they can take a variety of subjects and achieve an Academic Diploma. A diploma gives them the opportunity to go to university. Secondly they can achieve a Skills Certificate where they focus on one particular area (such as IT). This gives them the necessary skills to start a career in their chosen area.
\end_layout

\begin_layout Standard
The examinations department decides to store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
StudID
\family default
 is used to uniquely identify a particular student and is six digits. The first four digits represent the year that the student started at the school and the last two digits are used to make the 
\family typewriter
StudID
\family default
 unique e.g. 201804. 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 is the name of the student and is at most 30 characters. 
\end_layout

\begin_layout Itemize

\family typewriter
StudType
\family default
 is the type of student and can have the values 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

 or 
\begin_inset Quotes els
\end_inset

S
\begin_inset Quotes ers
\end_inset

. 
\end_layout

\begin_layout Itemize

\family typewriter
SkillArea
\family default
 is text and gives the area that the student acquired skills in. It can have one of three values: 
\begin_inset Quotes els
\end_inset

IT
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

Business
\begin_inset Quotes ers
\end_inset

 or 
\begin_inset Quotes els
\end_inset

Accountancy
\begin_inset Quotes ers
\end_inset

. 
\end_layout

\begin_layout Itemize

\family typewriter
NoOfSub
\family default
 is the number of subjects studied by those taking the Diploma. 
\end_layout

\begin_layout Itemize

\family typewriter
Result
\family default
 is a single character and is used to indicate the overall grade awarded. For those students who took the Skills Certificate the grades could be Distinction (D), Merit (M), Pass (P) or Fail (F). For those who took the Diploma the grade could be one of the letters A to F. Grade A to E are passes. Grade F is a fail. 
\end_layout

\begin_layout Standard
The program design for a solution to this problem is to be implemented with object-oriented programming with the following three classes: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2019-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Student
\family default
, 
\family typewriter
Diploma
\family default
 and 
\family typewriter
SkillsCert
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8
\end_layout

\begin_layout Standard
Program code for the three classes in Task 3.1. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Assume that a file, 
\family typewriter
STUDENT.txt
\family default
, which contains details of each student, has been created for you. The format of each student record is as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<StudID>|<Name>|<StudType>|<SkillArea>|<NoOfSub>|<Result>
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
SkillArea
\family default
 would have the value 
\begin_inset Quotes els
\end_inset

Diploma
\begin_inset Quotes ers
\end_inset

 if the student is taking a Diploma. 
\end_layout

\begin_layout Itemize

\family typewriter
NoOfSub
\family default
 would have the value 0 for those taking the Skills Certificate. 
\end_layout

\begin_layout Itemize

\family typewriter
Result
\family default
 is left blank initially. 
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a module, 
\family typewriter
ENTER_RESULT
\family default
, which, when called, will ask the user for a particular 
\family typewriter
StudID
\family default
 whose result is to be entered. Using the student ID that has been input, the corresponding student record will be located in 
\family typewriter
STUDENT.txt
\family default
. The student data will be displayed to the user. The user will be allowed to enter the result for the student. The amended record will be stored back in 
\family typewriter
STUDENT.txt
\family default
.
\end_layout

\begin_layout Standard
The student ID and result that have been input should be validated.
\end_layout

\begin_layout Standard
If the 
\family typewriter
StudID
\family default
 does not exist, the user will be given an appropriate message.
\end_layout

\begin_layout Standard

\series bold
You are expected to make use of the classes you designed in Task 3.1
\series default
.
\end_layout

\begin_layout Standard
Run the program 
\series bold
three
\series default
 times. Use the following data input, and produce a screenshot for each. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
StudID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Result
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201701
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201801
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201901
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
M
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 9
\end_layout

\begin_layout Standard
Program code for Task 3.2 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Three screenshots showing the test runs and final contents of 
\family typewriter
STUDENT.txt
\family default
 to show evidence that successful updates have been carried out. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Implement code as specified below.
\end_layout

\begin_layout Standard
A report should be generated and displayed which will list the students whose result has still not been entered into the 
\family typewriter
STUDENT.txt
\family default
 file. The report will list, for each different starting year: 
\end_layout

\begin_layout Itemize

\family typewriter
StudID
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
StudType
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
SkillArea
\family default
 or 
\family typewriter
NoOfSub
\family default
 depending upon the value of 
\family typewriter
StudType
\family default
 
\end_layout

\begin_layout Standard
In addition the number of each student type for each year will also be output.
\end_layout

\begin_layout Standard
A sample output is shown below. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Year: 2017 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201715
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FLoo 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201708
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
BLang 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201710
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
LArms 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
IT
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Diplomas: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Skills: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Year: 2018 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201813
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FJean 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201817
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
ABright 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Diplomas: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Skills: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Year: 2019 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201905
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alfie 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Business
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
201903
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
GKoh 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Diplomas: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Skills: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Program code for Task 3.3. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Screenshot of the output produced.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A game maintains the player IDs and their scores in an ordered linked list. The player with the highest score is stored at the first node while the player with the lowest score is stored at the last node.
\end_layout

\begin_layout Standard
The program to implement the linked list abstract data type will use two classes, 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
.
\end_layout

\begin_layout Standard
The 
\family typewriter
ListNode
\family default
 class has the following properties: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The ID of the player. All IDs are unique and have the format 
\family typewriter
L999
\family default
 where 
\family typewriter
L
\family default
 is any uppercase letter and 
\family typewriter
9
\family default
 is a digit.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Score
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The score of the player.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ptr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer to the next node.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
LinkedList
\family default
 class has the following properties: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[1..20] OF ListNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1-D array stores the nodes that make the ordered linked list. The unused nodes are linked together into a free list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
HeadPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pointer to the first node in the ordered list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FreePtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pointer to the first node in the free list.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The following diagram shows an example of a linked list object. This example list consists of three nodes, linked in descending order of the game scores. The unused nodes are linked to form a free list. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2019-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
Linkedlist
\family default
 to declare all the required variables and create the initial empty linked list which contains all 20 nodes.
\end_layout

\begin_layout Standard
Add statement(s) to initialise the empty ordered linked list.
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Your program code for Task 4.1. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write code to implement a method 
\family typewriter
AddInOrder
\family default
 that will add a new node with player
\begin_inset Quotes ers
\end_inset

s ID and score into the ordered linked list in descending order of the scores. Node added to the ordered linked list should be taken from the free list.
\end_layout

\begin_layout Standard
Assume that all players have different scores.
\end_layout

\begin_layout Subsection*
Evidence 14 
\end_layout

\begin_layout Standard
Your program code for Task 4.2.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputData
\family default
 which displays the value of 
\family typewriter
HeadPtr
\family default
, the value of 
\family typewriter
FreePtr
\family default
 and the contents of 
\family typewriter
Node
\family default
 array in index order.
\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Your program code for Task 4.3.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard
The files 
\family typewriter
SCORES1.txt
\family default
 and 
\family typewriter
SCORES2.txt
\family default
 contain the game data. Each entry has the following format: 
\family typewriter
<Player ID>,<Score>
\family default

\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
Create a linked list object 
\end_layout

\begin_layout Itemize
Read all player data from 
\family typewriter
SCORES1.txt
\family default
 and add them to the linked list by calling procedure 
\family typewriter
AddInOrder
\family default
. 
\end_layout

\begin_layout Itemize
Your program will then call procedure 
\family typewriter
OutputData
\family default
. 
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 4.4 using 
\family typewriter
SCORES1.txt
\family default
 file. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Amend your 
\family typewriter
AddInOrder
\family default
 program code in Task 4.2 so that if two or more players have the same score, they are stored in alphabetical player ID order. Use the file 
\family typewriter
SCORES2.txt
\family default
 to test your program code.
\end_layout

\begin_layout Standard
The following diagram shows an example of an ordered linked list where players 
\family typewriter
C412
\family default
 and 
\family typewriter
B321
\family default
 have the same game score of 
\family typewriter
13
\family default
 points. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2019-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
The amended program code for method 
\family typewriter
AddInOrder
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 4.4 using 
\family typewriter
SCORES2.txt
\family default
 file. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.6 
\end_layout

\begin_layout Standard
A method 
\family typewriter
DisplayByRank
\family default
 is to be added, which outputs all player IDs and their scores stored in the ordered linked list in rank order. If multiple players record the same score, they will have the same rank.
\end_layout

\begin_layout Standard
Below is a sample of screen output: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rank
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Player ID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Score
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F111
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
45
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G333
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
45
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Z333
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
45
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C333
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
38
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B111
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
25
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q333
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
25
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
E333
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
12
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Implement this method 
\end_layout

\begin_layout Itemize
Test the program code with the data from Task 4.5. 
\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program code for Task 4.6. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 4.7 
\end_layout

\begin_layout Standard
Write a recursive 
\family typewriter
ReverseTraversal
\family default
 procedure that will traverse the linked list in reverse order and output players
\begin_inset Quotes ers
\end_inset

 IDs and scores in ascending scores order.
\end_layout

\begin_layout Standard
Include a call to the procedure from your main program.
\end_layout

\begin_layout Standard
Test the program code with the data from Task 4.5.
\end_layout

\begin_layout Subsection*
Evidence 21 
\end_layout

\begin_layout Standard
Your program code for Task 4.7.
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 22
\end_layout

\begin_layout Standard
Screenshot showing the program execution to test the 
\family typewriter
ReverseTraversal
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bookshop wishes to expand its business from a brick and mortar shop to allow for online sales. A software company has been engaged by the bookshop to develop the online sales system. 
\end_layout

\begin_layout Enumerate
The analyst decides to adopt a top-down approach to the design. What are the advantages of using top-down design to solve complex problems?
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
The project manager decides to use some project management tool in the planning of the project. Below is the list of activities along with their required time for completion. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected completion time (day) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Preceded by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E, F, H
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Construct the PERT chart for the activities, indicating the earliest start time and latest start time of each activity. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Which tasks are on the critical path of the Program Evaluation and Review Technique (PERT) chart? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

What is the slack time for Task C and G? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

The person working on Task C tells the project manager he cannot start work until one day after the scheduled starting date. What impact would this have on the completion date of the project? Why?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Task A will be delayed by 2 days for some reason. If the project manager still wants to finish the project within the original time frame, he will need to shorten the time for one or more of the tasks. What steps can he take to reduce the number of days allocated to a task? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

The project manager decides to reduce the time needed for Tasks D and F by one day each. How effective will this reduction be in achieving his aim of maintaining the original finish time for the project? What can he do for it to be more effective?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Produce a Gantt chart based on the above information. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Give 
\series bold
one
\series default
 reason why a Gantt chart may be preferred over a PERT chart.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers can view a catalogue of books and order from its website. Payment is made by the customer forwarding their credit card details, which are processed immediately. Details of the orders are matched against the stock file to check for availability of items before packing lists are produced and sent to the packing department. 
\end_layout

\begin_layout Enumerate
Draw a data flow diagram to explain the flow of data through this system.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
Using examples from your DFD, explain how the diagram helps to inform a database solution for the new computerized system.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 parts of the database design that is not possible from the DFD. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between synchronous and asynchronous data transmission.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe the three modes of data transmission: simplex, half-duplex and full-duplex. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of packet switching over circuit switching.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Sing Airline Company uses a website to provide ticket purchasing services to customers. 
\end_layout

\begin_layout Enumerate
Customers are required to fill up a form with their name, passport number, hand phone number and flight information. Give 
\series bold
two
\series default
 examples of data validation and 
\series bold
one
\series default
 example of data verification for the company to validate the customers
\begin_inset Quotes ers
\end_inset

 data. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain the purpose of using client and server scripting and give 
\series bold
one
\series default
 scripting language for each. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
The company uses a web server to handle the customers
\begin_inset Quotes ers
\end_inset

 orders. Describe 
\series bold
two
\series default
 possible threats that the web server may encounter and suggest 
\series bold
one
\series default
 strategy for each threat. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Due to large amount of information to maintain and protect, the company is planning to use cloud computing to store and access data. Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of using this technology. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The company
\begin_inset Quotes ers
\end_inset

s staff handbook must include rules and regulations for IT staff. Suggest 
\series bold
two
\series default
 code of conduct for the company. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Below is the manner in which the school library will process its overdue list: 
\end_layout

\begin_layout Itemize
If a book is overdue then a reminder letter would normally be sent. 
\end_layout

\begin_layout Itemize
However, if the book is more than 5 days overdue, 2 further checks are made to see whether the reminder should be replaced by a warning letter: 
\end_layout

\begin_deeper
\begin_layout Itemize
If the student has had a previous warning letter the student will not only receive the warning letter but, in addition, a copy will be sent to the parents of the student. 
\end_layout

\begin_layout Itemize
If the student has more than 4 books overdue, but no previous warning letter, the reminder letter is replaced by a warning letter. 
\end_layout

\end_deeper
\begin_layout Enumerate
Create a decision table showing all the possible outcomes and results. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company manages subscriptions to thirty different magazines. Customers can subscribe to receive one or more of the magazines. 
\end_layout

\begin_layout Itemize
Each magazine has a category such as Gardening or Current Affairs. 
\end_layout

\begin_layout Itemize
Each magazine has a subscription rate, which is the cost of subscribing to receive the magazine for 12 months. 
\end_layout

\begin_layout Standard
Details of the subscriptions are to be stored in a flat file.
\end_layout

\begin_layout Standard

\family typewriter
Magazine(MagazineID, MagazineName, Category, SubscriptionRate, CustomerID, StartDate, EndDate, CustomerName, Address, PostCode, TelephoneNumber) 
\family default
 
\end_layout

\begin_layout Enumerate
What is the difference between a flat file and a relational database? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Identify and state 
\series bold
three
\series default
 potential problems with the flat file implementation for the magazine subscriptions. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Improved on the flat file and determine the relations needed in the relational database for the above. Explain the purpose of each relation. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
In what way can your database solve the three problems in 
\series bold
part (b)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Draw the Entity-Relationship diagram between the relations you have in 
\series bold
part (c)
\series default
. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The algebraic expression 
\family typewriter
X = 2 * A + B
\family default
 could be held in a binary tree as: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-HCI-2019-P2-Q7.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
This tree can then be read using the following algorithm:
\end_layout

\begin_layout Standard
process left subtree
\end_layout

\begin_layout Standard
process right subtree
\end_layout

\begin_layout Standard
read root node
\end_layout

\begin_layout Standard
This will give 
\family typewriter
X 2 A * B + =
\family default
 which is the reverse Polish form of the expression. 
\end_layout

\begin_layout Enumerate
Using diagrams to help the explanation, or otherwise, show how a computer can use a stack to evaluate the expression from its reverse Polish form. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The tree in the example could be stored in an array called TREE. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[9] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[8] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[7] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[6] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[5] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[4] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[3] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[2] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[1] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TREE[0] 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
= 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The values in each location in the array are: node value; left pointer; right pointer. Where no left or right pointer exists the rouge value -1 is used. Copy and complete the array for the example. (Note that, since in the example there are only seven nodes, three rows of the array will be unused.) 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a tree similar to the one in the example which would represent the expression: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\family typewriter
Y = 2 * (A + B) ‚Äì (A ^ 2)
\family default
 
\end_layout

\begin_layout Standard
where 
\family typewriter
x ^ y
\family default
 means 
\begin_inset Formula $\mathtt{x^{y}}$
\end_inset

.
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using the algorithm in the example, and your tree, write out the reverse Polish form of the expression in 
\series bold
part
\series default
 (c). 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9597/2019/P2/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Using the following numbers as an example, show how the numbers can be sorted in ascending order using a 
\series bold
quick sort
\series default
. For each pass, show the numbers swapped and the sub lists after splitting. 
\end_layout

\begin_layout Standard
\align center
\noindent
435, 646, 344, 54, 23, 98 
\end_layout

\begin_layout Standard
\align left
\noindent

\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
VISITORS.txt
\family default
 contains the number of visitors to Singapore from 1978 to 2018. Each line of the text file is in the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<year>,<month>,<number_of_visitors> 
\family default
 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to 
\end_layout

\begin_layout Itemize
read the data from the file and store them in an appropriate data structure, 
\end_layout

\begin_layout Itemize
get user input to select the 
\series bold
year(s)
\series default
 to display for 
\series bold
total number of visitors
\series default
, 
\end_layout

\begin_layout Itemize
ensure that user input for
\series bold
 start year
\series default
 and 
\series bold
end year
\series default
 are valid, 
\end_layout

\begin_layout Itemize
display the 
\series bold
year(s)
\series default
 and 
\series bold
number of visitors
\series default
. 
\end_layout

\begin_layout Standard
Sample output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Start year : 1978
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
End year 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

: 1980
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Year Number of visitors 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1978 1234567 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1979 1542384 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1980 1278652 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Test your program with 
\series bold
four
\series default
 relevant test data for user input. Copy the table with the following headings to show your test cases. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of test data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected results 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Completed table with 
\series bold
four
\series default
 test cases.
\end_layout

\begin_layout Standard
Screenshots of running your program with the 
\series bold
four
\series default
 test cases. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The incomplete pseudocode function below takes in an array as input. The array will then be sorted in ascending order and the results will be returned. Note that the start index of the array is 1.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION SomeSort(SomeList : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

FOR Pointer ‚Üê 2 TO NumberOfItems 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ItemToBeInserted ‚Üê SomeList[Pointer] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentItem ‚Üê Pointer ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE(SomeList[CurrentItem]>ItemToBeInserted AND CurrentItem>0) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SomeList[CurrentItem+1] ‚Üê SomeList[CurrentItem] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentItem ‚Üê CurrentItem - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

............... 
\begin_inset Formula $\mathtt{A}$
\end_inset

............... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDFOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN ARRAY
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Complete the missing line and write program code to implement the complete function. Sort the array given in the file 
\family typewriter
NUMBERS.txt
\family default
. You may copy and paste the array into your program code.
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Itemize
Your program code. 
\end_layout

\begin_layout Itemize
Screenshot showing the array before and after running the function.
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a bubble sort function that takes an array, sorts the array and returns the array.
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Your bubble sort function.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Amend your program code in both functions to count and display the number of comparisons made when sorting the array.
\end_layout

\begin_layout Subsection*
Evidence 5 
\end_layout

\begin_layout Itemize
Your amended program code. 
\end_layout

\begin_layout Itemize
Screenshot of running both sorting functions with number of comparisons displayed.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
JP Medical Centre uses a priority queue to register patients who visit for medical attention. Upon registration at the medical centre, each patient will be assigned a priority number according to the urgency in seeking medical care. The urgent cases receive top priority and go directly to the front of the queue, whereas the minor cases are added to the bottom of the queue.
\end_layout

\begin_layout Standard
A priority queue is an extension of queue with the following properties. 
\end_layout

\begin_layout Itemize
Every element has a priority associated with it. Higher priority has a larger number. 
\end_layout

\begin_layout Itemize
An element with high priority leaves the queue before an element with low priority. 
\end_layout

\begin_layout Itemize
If two elements have the same priority, they are served according to their order in the queue, i.e. the earlier element will be served before the later element (FIFO). 
\end_layout

\begin_layout Standard
An example of operations on a priority queue is shown below:
\end_layout

\begin_layout Standard

\series bold
Initial state of priority queue
\series default

\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

jim
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ben
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ken
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

wayne
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

harry
\begin_inset Quotes ers
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{front}}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{rear}}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
Insert 
\begin_inset Quotes els
\end_inset

jenny
\begin_inset Quotes ers
\end_inset

 with priority 3:
\series default
 
\begin_inset Quotes els
\end_inset

jenny
\begin_inset Quotes ers
\end_inset

 joins the priority queue ahead of 
\begin_inset Quotes els
\end_inset

ken
\begin_inset Quotes ers
\end_inset

 who has a priority of 2
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

jim
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ben
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
'
\emph on
jenny
\emph default
' 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ken
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

wayne
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

harry
\begin_inset Quotes ers
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
3
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{front}}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{rear}}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Remove from priority queue: 
\begin_inset Quotes els
\end_inset

jim
\begin_inset Quotes ers
\end_inset

 is removed from front of priority queue
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ben
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
'
\emph on
jenny
\emph default
' 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

ken
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

wayne
\begin_inset Quotes ers
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

harry
\begin_inset Quotes ers
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
3
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{front}}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\boldsymbol{\text{rear}}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A 
\series bold
priority queue
\series default
 abstract data type (ADT) is to be 
\series bold
implemented
\series default
 as 
\series bold
a linked list
\series default
 using object-oriented programming. Two classes 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
 have been identified. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\series bold
Properties
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Priority
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates priority of node. Higher value has higher priority.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pointer to next node in queue.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: PQueue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series default

\family default

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\series bold
Properties
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisPQueue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[10] OF Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The data for the priority queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for front node of queue. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for rear node of queue. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\series bold
Methods
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialise
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Create a new priority queue 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Initialise 
\family typewriter
Front
\family default
 and 
\family typewriter
Rear
\family default
 to -1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
JoinPQueue (NewItem:STRING, Priority:INTEGER)
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Create a new node of Node class.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Assign 
\family typewriter
NewItem
\family default
 and 
\family typewriter
Priority
\family default
 passed as parameters to the 
\family typewriter
Data
\family default
 and 
\family typewriter
Priority
\family default
 attribute of 
\family typewriter
Node
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Assign 
\family typewriter
Node
\family default
 to the 
\family typewriter
PQueue
\family default
 according to the priority of the node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeavePQueue
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Remove 
\family typewriter
Node
\family default
 from 
\family typewriter
PQueue
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¢ Return the 
\family typewriter
data
\family default
 attribute of 
\family typewriter
Node
\family default
. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the elements 
\begin_inset Quotes els
\end_inset

ben
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

jenny
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

ken
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

wayne
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

harry
\begin_inset Quotes ers
\end_inset

 in the priority queue 
\end_layout

\begin_layout Itemize
the unused nodes linked together 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JPJC-2019-P1-Q3-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to 
\end_layout

\begin_layout Itemize
declare all the required identifiers for the 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
 class as specified, including the methods 
\family typewriter
Initialise
\family default
, 
\family typewriter
JoinPQueue
\family default
, 
\family typewriter
LeavePQueue
\family default
, and 
\end_layout

\begin_layout Itemize
create the initial priority queue. 
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[25]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputQueue
\family default
 which displays the value of 
\family typewriter
Front
\family default
, 
\family typewriter
Rear
\family default
, and 
\family typewriter
NextFree
\family default
 and the contents of 
\family typewriter
ThisPQueue
\family default
 in index order.
\end_layout

\begin_layout Subsection*
Evidence 7: 
\end_layout

\begin_layout Itemize
Your program code for 
\family typewriter
OutputPQueue
\family default
. 
\end_layout

\begin_layout Itemize
Screenshot for displaying the initial priority queue. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
Read from file
\family typewriter
 PATIENTS.txt
\family default
 all the data items with its priorities into the priority queue by calling procedure 
\family typewriter
JoinPQueue
\family default
. 
\end_layout

\begin_layout Itemize
Output the priority queue by calling 
\family typewriter
OutputPQueue
\family default
. 
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Itemize
Your program code for task 3.3. 
\end_layout

\begin_layout Itemize
Screenshot showing the output from running program in task 3.3. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
Task 3.4
\end_layout

\begin_layout Standard
Write additional code in your main program that prints a menu with the following options:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
\noindent

\family typewriter
Patient Queue Menu 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1)
\end_layout

\end_inset


\family typewriter
 Add patient to PQueue 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2)
\end_layout

\end_inset


\family typewriter
 Remove patient from PQueue 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3)
\end_layout

\end_inset


\family typewriter
 Display PQueue 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4)
\end_layout

\end_inset


\family typewriter
 Exit program 
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write program code for each option by calling the appropriate methods from the 
\family typewriter
PQueue
\family default
 class.
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Your program code for task 3.4.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Test your main program by doing the following in order and display the priority queue: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
No. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operation 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Donny 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Screenshot for testing your program in task 3.5.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are to write a computer program to test the validity of classic Sudoku puzzles.
\end_layout

\begin_layout Standard
The classic Sudoku puzzle involves a grid of 81 squares. The grid is divided into nine blocks, each containing nine squares. Each of the nine blocks has to contain all the numbers 1 to 9 within its squares. Each number can only appear once in a row, column or block.
\end_layout

\begin_layout Standard
A 
\begin_inset Formula $9\times9$
\end_inset

 classic Sudoku puzzle can be represented using a two-dimensional array. An example of this puzzle is: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JPJC-2019-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The puzzle can be displayed in this way on the computer. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8 2 5 4 7 1 3 9 6
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1 9 4 3 2 6 5 7 8
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3 7 6 9 8 5 2 4 1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5 1 9 7 4 3 8 6 2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6 3 2 5 9 8 4 1 7
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4 8 7 6 1 2 9 3 5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2 6 3 1 5 9 7 8 4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9 4 8 2 6 7 1 5 3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7 5 1 8 3 4 6 2 9
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
\noindent
Write program code for a procedure 
\family typewriter
displayboard
\family default
 that will take a parameter 
\family typewriter
board
\family default
 and display a puzzle declared as a two-dimensional array.
\end_layout

\begin_layout Standard
Copy and paste array 
\family typewriter
puzzle1
\family default
 from the file 
\family typewriter
PUZZLES.txt
\family default
 into your program code.
\end_layout

\begin_layout Standard
Call procedure 
\family typewriter
displayboard
\family default
 to display 
\family typewriter
puzzle1
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Itemize
Your program code for 
\family typewriter
displayboard
\family default
 to display 
\family typewriter
puzzle1
\family default
. 
\end_layout

\begin_layout Itemize
Screenshot of displaying 
\family typewriter
puzzle1
\family default
 as a 
\begin_inset Formula $9\times9$
\end_inset

 Sudoku puzzle.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard
To test the validity of a Sudoku puzzle, each of the rows, columns and blocks can be checked to ensure that each number 1 to 9 only appears once.
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for a function 
\family typewriter
checkRow
\family default
 that will check all the nine rows of the puzzle to ensure that each number 1 to 9 only appears once. The function should take a parameter board and return a Boolean value.
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
checkRow
\family default
.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code for a function 
\family typewriter
checkColumn
\family default
 that will check all the nine columns of the puzzle to ensure that each number 1 to 9 only appears once. The function should take a parameter 
\family typewriter
board
\family default
 and return a Boolean value.
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
checkColumn
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Section*
Task 4.4 
\end_layout

\begin_layout Standard
Write program code for a function 
\family typewriter
checkBlock
\family default
 that will check all the nine blocks of the puzzle to ensure that each number 1 to 9 only appear once. The function should take a parameter board and return a Boolean value.
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
checkBlock
\family default
.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write program code to call the three functions 
\family typewriter
checkrow
\family default
, 
\family typewriter
checkColumn
\family default
, and 
\family typewriter
checkBlock
\family default
 to test the validity of 
\family typewriter
puzzle1
\family default
, 
\family typewriter
puzzle2
\family default
, and 
\family typewriter
puzzle3
\family default
 given in the file 
\family typewriter
PUZZLES.txt
\family default
. Copy and paste these puzzles into your program code. Your program should first display the puzzle before printing statement(s) to show whether the puzzle is valid or not. If invalid, state whether the invalidity is due to the row, column or block.
\end_layout

\begin_layout Subsection*
Evidence 15:
\end_layout

\begin_layout Standard
‚Ä¢ Your program code for task 4.5
\end_layout

\begin_layout Standard
‚Ä¢ Screenshot of running task 4.5
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Furniture retailer XFurniture is currently using a manual, paper-based ordering system.
\end_layout

\begin_layout Standard
The customer visits the show room and informs the salesperson his/her furniture selection. After which, the salesperson asks the filing clerk to locate the relevant paper files that contain all the necessary details of the chosen item in the file cabinet. The files contain the following information of a furniture item: 
\end_layout

\begin_layout Itemize
item code 
\end_layout

\begin_layout Itemize
description of item 
\end_layout

\begin_layout Itemize
price of item 
\end_layout

\begin_layout Itemize
delivery time 
\end_layout

\begin_layout Itemize
details of the supplier 
\end_layout

\begin_layout Standard
The customer pays for the purchase and the salesperson hands the original purchase order, and a duplicate copy to the customer and the filing clerk respectively. At the end of the day, the filing clerk will record the total sales for the day and proceed to order the furniture from the supplier by sending them a purchase order of the consolidated furniture items sold for the day.
\end_layout

\begin_layout Standard
The management of XFurniture decides to replace its current system with a server‚Äìbased ordering system.
\end_layout

\begin_layout Standard
A system developer from an IT consultant firm is employed to carry out the project. The first task is to write a project proposal. 
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists the problems in the current system. Write the Problem Statement. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
The system developer draws up a list of activities that will be required for the completion of the software project: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Estimated Duration (weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Order and deliver the new database system and server 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design and install the network infrastructure 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Order, deliver and install new PCs and printer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
est the database system, server and network 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test the PCs with the server and network 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Copy existing sales data to the new database system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Copy other existing PC software to the new PCs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test all software and database on the new PCs and server 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Train users 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Tasks A, B and C can be undertaken at the same time, but Task A and Task B must be completed before Task D can commence. Tasks C and D must be completed before Task E can begin. Task E must be completed before Tasks F and G can start. Tasks F and G can be undertaken at the same time, but both must be completed before Task H can commence. Task I must follow Task H. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Draw a PERT chart for this project. Provide a node key explaining the layout and contents of the nodes used in your diagram. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Copy and complete the following table with the earliest and latest start times, the earliest and latest finish times, duration, and float time for each task. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Task 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
EST 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LST 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
EFT 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LFT 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Float
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

State the minimum time required for the project to be completed. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Dummy task may be used in PERT chart. What is a dummy task? 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Draw a Gantt chart for the same project tasks, showing each of these tasks, all dependencies, and the duration of each task. Highlight the critical path on the Gantt chart.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A project
\begin_inset Quotes ers
\end_inset

s software development life cycle includes analysis, design, development, testing, implementation, and evaluation stages. 
\end_layout

\begin_layout Enumerate
Describe the following testing strategies that might be carried out during a software development project, and explain how each type of the testing strategy contributes to the overall quality of the project
\begin_inset Quotes ers
\end_inset

s deliverables. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Bottom-up testing. 
\end_layout

\begin_layout Enumerate
Top-down testing. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
State two methods that could be used to implement a newly developed system. Give a reason for each of the method chosen. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Copy
\series default
 and 
\series bold
complete
\series default
 the algorithm for a binary search written in pseudocode shown below. It is given that the data being searched is stored in the array 
\family typewriter
SearchData[63]
\family default
, and the item of data being searched is stored in the variable 
\family typewriter
SearchItem
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
X <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Low <- 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
High <- ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
WHILE (High >= Low) AND (‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Middle INT((High + Low)/2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF SearchData[Middle] = SearchItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

X <- Middle 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF SearchData[Middle] < SearchItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Low <- Middle + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF SearchData[Middle] > SearchItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDWHILE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the maximum number of comparisons that are required to find an item which is present in 
\family typewriter
SearchData
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
You will change the binary search algorithm to a recursive algorithm and write the equivalent program code in the form of a procedure. Name the recursive procedure 
\family typewriter
BinarySearch
\family default
. Use the following variables: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Variable
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SearchData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[63] : INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
global array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SearchItem
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
global variable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
global variable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Low
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
High
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
global variable
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Middle
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
local variable
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write pseudocode or program code for the recursive procedure 
\family typewriter
BinarySearch
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Object-oriented programming is used to store and process data for a company
\begin_inset Quotes ers
\end_inset

s payroll. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JPJC-2019-P2-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
With reference to the class diagram shown above, explain: 
\end_layout

\begin_deeper
\begin_layout Enumerate
data encapsulation, and how classes support information hiding and implementation independence. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
inheritance, and how it promotes software reusability. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
With reference to 
\series bold
Question 1
\series default
, a server‚Äìbased ordering system will be implemented in XFurniture.
\end_layout

\begin_layout Standard
Local Area Network (LAN) will be used for the staff and customers. 
\end_layout

\begin_layout Enumerate
Explain the meaning of a protocol for communication within the LAN. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the purposes of switches and routers in a network. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain the differences between using packet switching and circuit switching in the transmission of a message. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
The LAN is connected to the Internet. Discuss the social and ethical effects of allowing staff to have unrestricted access to the Internet. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Customers are now able to order furniture online after logging in to the XFurniture online system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why authentication techniques are necessary. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain 
\series bold
two
\series default
 methods for ensuring security of a network application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A security policy is a formalised statement that defines how security will be implemented within XFurniture. Explain why staff members are required to know the need for privacy and integrity of data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why XFurniture has chosen to implement their server‚Äìbased ordering system over the intranet. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
An alternative to a server‚Äìbased ordering system is to subscribe the services of cloud computing. State the 
\series bold
three
\series default
 services provided by cloud computing, and explain how they can benefit XFurniture. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A reservation form used for booking JP Hotel rooms is shown: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JPJC-2019-P2-Q6-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
There are three room types available and the room rates are higher for arrival on Fridays and Saturdays. A normalised database solution is designed to store data for the hotel using a number of tables. 
\end_layout

\begin_layout Enumerate
Draw an E-R diagram that shows these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using standard notation, write the table descriptions of the tables in part 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard
To book a room in JP Hotel, the guest can fill in the hotel reservation form with details specified on the form. After the form is submitted, the credit card number and its expiration date are validated. The guest will be notified with a message if the credit card number is invalid. If the credit card number is valid, details of the guests will be stored in a file. The room type requested by the guest will then be checked for availability. If room type requested by guest is available, a confirmation letter will be sent to the guest. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw a data flow diagram for the hotel reservation system. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A hotel room accommodates two guests and also includes breakfast for two. The hotel allows for an additional guest to stay in a room booked for two guests at a charge of $80. An extra bed may be requested for the additional guest at a charge of $20. Breakfast can also be provided for the additional guest at $20. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q7] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Computers use character codes that can be represented by ASCII and Unicode. Explain the differences between these two character encoding systems. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Given that 
\series bold
two
\series default
 bytes are used to represent a positive integer, what is the denary number that corresponds to the 
\series bold
two
\series default
 successive bytes below? 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
10010101 00110011
\family default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset space \hfill{}

\end_inset


\family typewriter
 
\family default
[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What is the hexadecimal number of the 
\series bold
two
\series default
 bytes in 
\series bold
(b)
\series default
? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An Abstract Data Type (ADT) is a type (or class) for objects whose behavior is defined by a set of value and a set of operations.
\end_layout

\begin_layout Standard
A linked list ADT has the following operations defined: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
i. 
\end_layout

\end_inset


\family typewriter
Create(x)
\family default
 ‚Äì creates an empty linked list 
\family typewriter
x
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset


\family typewriter
Insert(x,item,i)
\family default
 ‚Äì inserts new value, 
\family typewriter
item
\family default
, into linked list 
\family typewriter
x
\family default
 so that it is at position 
\family typewriter
i
\family default
 in the linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset


\family typewriter
Delete(x,i)
\family default
 ‚Äì deletes the 
\family typewriter
item
\family default
 at position 
\family typewriter
i
\family default
 in the linked list 
\family typewriter
x
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iv.
\end_layout

\end_inset


\family typewriter
Read(x,i)
\family default
 ‚Äì returns the 
\family typewriter
item
\family default
 at position 
\family typewriter
i
\family default
 in the linked list 
\family typewriter
x
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
v.
\end_layout

\end_inset


\family typewriter
Length(x)
\family default
 ‚Äì returns the number of items in the linked list 
\family typewriter
x
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
vi.
\end_layout

\end_inset


\family typewriter
IsEmptyList(x)
\family default
 ‚Äì returns true if linked list 
\family typewriter
x
\family default
 is empty. 
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that has 
\series bold
two
\series default
 parts: the 
\series bold
data
\series default
 and a 
\series bold
pointer to the next item
\series default
 in the linked list. In addition, there is a Start pointer which points to the first node in the list. 
\end_layout

\begin_layout Enumerate
Assume a node with the following structure: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-JPJC-2019-P2-Q8-1.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
Complete the algorithm to implement the 'Delete' operation: 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE Delete (x, i) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Length(x) = 0 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................................A.................................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF i = 1 THEN // situation 1: delete the 1st node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................................B.................................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE // situation 2 : delete middle node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous <- NULL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current <- Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR n <- 1 TO (i ‚Äì 1) STEP 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................................C.................................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................................D.................................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT n 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................................E.................................... // make the deletion 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Show how the following operations for an ADT called QUEUE using the linked list ADT operations can be implemented. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create new queue. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Add item to a queue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Delete item from a queue. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9597/2019/P2/Q9] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary search tree is stored as an array of records. Each record represents a node and consists of the data and a left pointer and a right pointer. After a number of records are inserted, the tree is as shown.
\end_layout

\begin_layout Standard
The array is called 
\family typewriter
BinaryTree
\family default
.
\end_layout

\begin_layout Standard
The notation 
\family typewriter
BinaryTree[Root].Data
\family default
 will access the data at root node. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
BinaryTree
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftPtr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightPtr
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Jay
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Gel
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ken
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ace
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pan
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Max
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\family typewriter
 
\family default
 
\end_layout

\begin_layout Enumerate
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Complete the algorithm to find a node in a binary search tree. This function will return a pointer to node.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION FindNode(SearchItem) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

TempPtr <- Root 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE TempPtr <> NULL AND ............A............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ............B............ THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TempPtr <- BinaryTree[TempPtr].LeftPtr 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

............C............ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

............D............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Write an algorithm for a pre-order traversal of the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The number of rainy days for each year and month is stored in the file 
\family typewriter
RAINFALL.txt
\family default
. The first line of the file contains the heading description for the data. Each line of data is stored in the format 
\family typewriter
YYYY-MM,99
\family default
 where 
\family typewriter
YYYY
\family default
 is the year, 
\family typewriter
MM
\family default
 is the month and 
\family typewriter
99
\family default
 is the number of days. Thus '
\family typewriter
1982- 01,10
\family default
' means there were 10 rainy days in the month of January, 1982.
\end_layout

\begin_layout Standard
You are required to write a program to: 
\end_layout

\begin_layout Itemize
Read the data in the file. 
\end_layout

\begin_layout Itemize
Calculate the total number of rainy days for each year by adding all the months
\begin_inset Quotes ers
\end_inset

 rainy days for that year. 
\end_layout

\begin_layout Itemize
Create a new file 
\family typewriter
RAINFALLYEAR.txt
\family default
. 
\end_layout

\begin_layout Itemize
Write the heading description in the first line as 
\begin_inset Quotes qld
\end_inset

Year,Rainy Days
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Itemize
For each subsequent line, write to the file in the format 
\family typewriter
YYYY,999
\family default
 where 
\family typewriter
YYYY
\family default
 is the year and 
\family typewriter
999
\family default
 is the total number of rainy days (up to 3 digits) for that year. 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for this task.
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
ShowMenu
\family default
 to display the following menu: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Query total rainy days in any year
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 Query by year the month of highest rainy days 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
 -1 to Exit
\family default
 
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Implement a program that displays 
\family typewriter
ShowMenu
\family default
 and asks the user for their choice. Create functions 
\family typewriter
Query1
\family default
 and 
\family typewriter
Query2
\family default
 which corresponds to the menu selection option 
\family typewriter
1
\family default
 and 
\family typewriter
2
\family default
 respectively. When option 
\family typewriter
1
\family default
 is selected, 
\family typewriter
Query1
\family default
 should run and ask the user to input the year. 
\family typewriter
Query1
\family default
 will return the total number of rainy days or a suitable message if data for that year is not available.
\end_layout

\begin_layout Standard
When option 
\family typewriter
2
\family default
 is selected, 
\family typewriter
Query2
\family default
 should execute and ask the user for the year. 
\family typewriter
Query2
\family default
 will return the month with the highest number of rainy days in that year in words (e.g. January, August, or December) or a suitable message if data for that year is not available.
\end_layout

\begin_layout Standard
For both 
\family typewriter
Query1
\family default
 and 
\family typewriter
Query2
\family default
, appropriate validation of the user input for year should be done. The program will display 
\family typewriter
ShowMenu
\family default
 after each valid query until option 
\family typewriter
3
\family default
 is selected.
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Design 3 test data which tests the functionality of your program.
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following is the algorithm for a recursive insertion sort on an array of size 
\begin_inset Formula $n$
\end_inset

. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Base Case: If array size is 1 or smaller, return. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Recursively sort first n ‚Äì 1 elements. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Insert last element at its correct position in sorted array. 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for this algorithm to implement a recursive insertion sort function. Use the sample array data available from text file 
\family typewriter
COUNTRIES.txt
\family default
 and paste this into your programming code. Your program should display the sorted items with each item shown per line.
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Amend your code to display the insertion process done during each recursive call. Each recursive call should display a line as follows:
\end_layout

\begin_layout Standard

\family typewriter
Element at position n is being inserted in position j 
\family default

\end_layout

\begin_layout Standard
Replace 
\family typewriter
n
\family default
 and 
\family typewriter
j
\family default
 to show the actual index value.
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Your amended program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 7:
\end_layout

\begin_layout Standard
One screenshot of the output. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Create a binary tree Abstract Data Type (ADT) with commands to create a new tree, insert data items to the tree and print the tree.
\end_layout

\begin_layout Standard
The sequence of commands 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Create a new tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (15) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (10) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (20) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (8) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (12) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (18) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (25)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
would create the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-NYJC-2019-P1-Q3-1.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes Tree and Node designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ToDo
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
add(newItem)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
printTreeInOrder()
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
key : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
left : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
right : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
insert(key : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[16]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Itemize
Write program code for a procedure 
\family typewriter
CreateTreefromArray
\family default
 that accepts an array of unsorted unique integers passed in via a parameter. 
\end_layout

\begin_layout Itemize
The procedure will read each integer in the array and construct a binary tree using your classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
. 
\end_layout

\begin_layout Itemize
Call 
\family typewriter
printTreeInOrder
\family default
 to display the output (numbers shown will always be sorted). 
\end_layout

\begin_layout Itemize
Test your program by copying the input data found in 
\family typewriter
BST.txt
\family default
 into your code. 
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CreateTreefromArray
\family default
 program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
A screenshot of the output. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
A binary tree created from keys that are in ascending order will result in an unbalanced binary tree.
\end_layout

\begin_layout Standard
For instance, the sequence of commands 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Create a new tree 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (8) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (10) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (12) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (15)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (18) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (20)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Add to tree (25)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
will result in a tree that looks as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-NYJC-2019-P1-Q3-2.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
Amend procedure 
\family typewriter
CreateTreefromArray
\family default
 so that the created tree from any input array of integers will be balanced where the number of items on the left and right subtree will roughly be divided equally (Hint: input array must first be sorted).
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Your amended program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Create a function 
\family typewriter
FindKthSmallest
\family default
 that returns the 
\begin_inset Formula $k$
\end_inset

th smallest element in your binary tree. If 
\begin_inset Formula $k=5$
\end_inset

 the 
\begin_inset Formula $k$
\end_inset

th smallest element will be 18. Your function should not need to use extra space (e.g. creating a new array) to solve the problem other than using a temp variable(s).
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
FindKthSmallest
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 13:
\end_layout

\begin_layout Standard
Produce a screenshot showing the retrieval of the 5th smallest element from the tree created earlier. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
To encrypt a message, a keyword cipher is used. It is a form of monoalphabetic substitution where a keyword is used as the key. The key is used to determine the letter matchings of the cipher alphabet to the plain alphabet. Repeating letters in the key is removed. For instance, if the key used is 
\family typewriter
'SECRET'
\family default
, the cipher alphabet generated will be as follows:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="27">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Plain text: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
E
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
H
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
I
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
M
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
N
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
P
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
S
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
U
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
V
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Z
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Cipher Alphabet: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
S
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
E
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
H
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
I
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
M
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
N
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
P
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
U
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
V
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Z
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
After the key
\begin_inset Quotes ers
\end_inset

s unique letters is used up, the rest of the ciphertext letters are used in alphabetical order, excluding those already used in the key. Thus, to encode the word 
\begin_inset Quotes els
\end_inset


\family typewriter
Attack
\family default

\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset


\family typewriter
A
\family default

\begin_inset Quotes ers
\end_inset

 is replaced with 
\family typewriter
'S'
\family default
, 
\family typewriter
't'
\family default
 is replaced with 
\family typewriter
'Q'
\family default
, and so on giving the encrypted word as 
\family typewriter
'SQQSCH'
\family default
.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for a function to generate an array of the cipher alphabet given a key. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
FUNCTION Cipher (NewAlphabet : ARRAY, Key : STRING) 
\family default
 
\end_layout

\begin_layout Standard
The function has two parameters and returns the 
\family typewriter
NewAlphabet
\family default
 array with the correct cipher alphabet based on the 
\family typewriter
Key
\family default
 parameter.
\end_layout

\begin_layout Subsection*
Evidence 14:
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write driver code that asks the user to enter a key that contains only letters, calls function Cipher and displays the cipher alphabet (all in uppercase) in one line. Do appropriate data validation on the input key.
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Design three suitable test cases and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Develop your program further to display the following menu: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Encode a message 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Decode a message 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

-1 to Quit 
\end_layout

\begin_layout Standard
Implement the menu options to allow a line of text to be encoded or decoded. For each option, ask for the cipher key and the message that is to be encoded or decoded. Test your program with the key 
\family typewriter
'TOPSECRET'
\family default
 and the message 
\family typewriter
'I will score A for Computing
\family default
'.
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Screenshot(s) showing your output. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Frequency analysis is a common method used by code breakers to break monoalphabetic substitution ciphers. The first step is to analyse the coded message and construct a frequency table of all the letters appearing in the coded message.
\end_layout

\begin_layout Standard
Write a program that reads the content from the file 
\family typewriter
INTERCEPT.txt
\family default
. The text in this file contains a coded message. Construct a frequency table (ignore punctuation marks) as follows using a suitable data structure:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="27">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Ciphertext Letter: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
B
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
C
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
E
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
H
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
I
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
J
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
M
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
N
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
P
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Q
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
S
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
U
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
V
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Z
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Frequency: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\cdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Your program will then display the table sorted by descending order showing the most used letter and its frequency first followed by the next highest and so on.
\end_layout

\begin_layout Standard
Partial sample output:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Ciphertext Letter: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
S
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
O
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Formula $\cdots$
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Frequency: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
88
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
85
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
67
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Database management systems are aimed at solving a number of problems associated with traditional file-based systems. Describe three such problems and explain how they are solved by database management systems. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
A national car hire company uses a relational database. Cars are available for hire from a large number of depots around the country. Two entities (or records) are CARS-FOR-HIRE and DEPOTS. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Suggest four attributes (or fields) associated with the entity CARS-FOR-HIRE. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Draw a diagram showing the relationship between the entities CARS-FOR-HIRE and DEPOTS. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State one other entity which is related to either or both of the original entities. Describe the relationship(s). Suggest an attribute for this entity. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stack is to be implemented using an array of 20 elements. 
\end_layout

\begin_layout Enumerate
Describe an algorithm to remove an item from a stack and place it in a variable 
\family typewriter
x
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
With the aid of examples, explain what nested functions or nested subroutines are. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain with the aid of diagrams or otherwise, how a stack can be used by the operating system to process 
\begin_inset Quotes eld
\end_inset

nested functions
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

nested subroutines
\begin_inset Quotes erd
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Outline the data attributes and member functions for a class stack abstract data type. You need not go into details as to how they will be implemented. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A large national electrical appliances company maintains an extensive inventory of appliances for sale in a country. The company has twelve specialised retail stores targeting the needs of different market segments. Six of these stores are housed in a large mall in the capital, but the other six are in different cities in the country.
\end_layout

\begin_layout Standard
The six stores in the capital are linked using a LAN, while the other six are linked via a WAN. 
\end_layout

\begin_layout Enumerate
Explain the difference between a LAN and a WAN. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Wireless technology has become more popular in recent years. Describe two reasons why the company will not replace its LAN network with a wireless one. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Discuss two security threats faced by the company
\begin_inset Quotes ers
\end_inset

s LAN and measures that can be put in place to reduce these threats. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Standard
The company is thinking of allowing all its sales personnel access to this inventory. It can store this data on an intranet or cloud storage. Discuss the relative merits and demerits of these two options. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company has decided to offer an in-house credit system by issuing privileged customers an in-house credit-card which allows customers to charge their purchases from the stores to the card, up to the customers
\begin_inset Quotes ers
\end_inset

 credit limits. 
\end_layout

\begin_layout Enumerate
During a sales promotion, the store offers a discount of 15% if a customer
\begin_inset Quotes ers
\end_inset

s total purchase is greater or equal to $200 but less than $500. A discount of 20% is given if the customer
\begin_inset Quotes ers
\end_inset

s total purchase is greater or equal to $500. For customers who had exceeded their credit limits, the supervisor
\begin_inset Quotes ers
\end_inset

s approval is required. Create a decision table or tree to represent the above conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
In order to protect the privacy of data, many countries have passed legislation to address this issue. Describe any 3 features of the Personal Data Protection Act in Singapore that aims to do this. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
When a customer orders goods over the phone, the cashier will record the order in an order form containing the items ordered and quantity, customer address, delivery date and time and the amount payable. A copy of this form will be given to the storeman who will pick the goods and generate a delivery order (DO). The DO will be given to the delivery man who will deliver the goods. The customer on collecting the goods will sign on the DO and return a signed copy to the delivery man. On his return, the delivery man will give the DO to the accounts department who will generate an invoice. Invoices are kept in a file until the next day where they will be mailed to the customers. 
\end_layout

\begin_layout Enumerate
Draw a data flow diagram of the above processes.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Enumerate
Goods in the warehouse are divided into 2 main categories ‚Äì Kitchen appliances (e.g. kettle, toasters and ovens) and Entertainment products (e.g. LCD television, mp3 players and gaming consoles). Each item has an item name, description, unit price and quantity on hand. Kitchen appliances have an item weight, packing volume and colour. Entertainment products have a serial number, country of manufacture and recommended retail price. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram of the above showing inheritance, their private attributes and public methods.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate
What is the purpose of a public method?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
What is the difference between a class and an object?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
In relation to the diagram in part (b), explain the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Encapsulation; 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Inheritance;
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Data hiding; 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Polymorphism. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list ADT with the following incomplete specification is given as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LList
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
head : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
addNode(s : Node)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
findmiddle(l : llist)-> INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
nextPtr : Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setData(s : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setnextPtr(x : Node)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getData(): INTEGER 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain the main difference between an array and a linked list data structure.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Using pseudo code, write an algorithm to implement 
\family typewriter
findmiddle
\family default
 that will return the data in the middle of the linked list in one pass. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate
State two applications of a linked list. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State two other common methods (including parameters) that should be included in the 
\family typewriter
LList
\family default
 specification.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
CID3 Team Grouping
\series default

\end_layout

\begin_layout Standard
In this question, you will help the CID3 students in forming CID3 groups for their projects.
\end_layout

\begin_layout Standard
In 
\begin_inset Quotes eld
\end_inset


\family typewriter
student_cid.txt
\family default

\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
There are three fields on each line which indicates 
\family typewriter
name
\family default
, 
\family typewriter
role
\family default
 and 
\family typewriter
gender
\family default
 of 50 cid3 students. The fields are separated by 
\begin_inset Quotes els
\end_inset

;
\begin_inset Quotes ers
\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Rufus Schuck;Coder;F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ione Wolfe;Dealer;F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hillary Curl;Coder;M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
‚Ä¶ 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
read_data(filename)
\family default
 which takes 
\family typewriter
filename
\family default
 as a string and returns a 2-dimension list that follows the format as shown in the example below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
[['Rufus Schuck', 'Coder', 'F'], ['Ione Wolfe', 'Dealer', 'F'], ['Hillary Curl', 'Coder', 'M'],‚Ä¶] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
read_data
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
gender_count(cid_student_lst, is_female)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 and a boolean 
\family typewriter
is_female
\family default
 as inputs and returns the number of female students in 
\family typewriter
cid_student_lst
\family default
 if 
\family typewriter
is_female
\family default
 is 
\family typewriter
True
\family default
, otherwise return the number of male students. 
\family typewriter
cid_student_lst
\family default
 is the list obtained in 
\series bold
Task 1.1
\series default
.
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
gender_count
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Screenshot of the output of the following:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(gender_count(cid_student_lst, True)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(gender_count(cid_student_lst, False))
\family default

\begin_inset space \hfill{}

\end_inset


\family typewriter
 
\family default
[1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Implement the procedure 
\family typewriter
role_statistics(cid_student_lst)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and output the number of students for each role in the following format. (There are more than 5 types of roles.)
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> role_statistics(cid_student_lst) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Role 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Number 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Coder 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

11 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Dealer 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

13 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Designer 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Empathizer 
\begin_inset space ~

\end_inset

14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Maker 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

12 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Take note that the roles and numbers shown above is just an example.
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
role_statistics
\family default
.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot of the output of the following:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
role_statistics(cid_student_lst)
\family default

\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
form_random_group(cid_student_lst)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and returns a list consists of 5 student names. This list of students forms a group and must consist of one coder, one maker, one dealer, one empathizer and one designer. The student picked for each role must be random. If there is not sufficient roles or students to form a group, return an empty list.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> form_random_group(cid_student_lst) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['Fredricka Gormley', 'Jalisa Stoudemire', 'Laverna Halpern', 'Chadwick Griffin', 'Abdul Boland'] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Fredricka Gormley is a coder 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Jalisa Stoudemire is a dealer
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Laverna Halpern is a designer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Chadwick Griffin is an empathizer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Abdul Boland is a maker
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
form_random_group
\family default
.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Screenshot of the output of the following:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
for i in range(3): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(form_random_group(cid_student_lst))
\family default
 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.5 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
remove_students
\family default
 which takes 
\family typewriter
cid_student_lst
\family default
 and 
\family typewriter
one_cid_group
\family default
 as inputs where 
\family typewriter
cid_studnet_lst
\family default
 is the list obtained from 
\series bold
task 1.1
\series default
 and 
\family typewriter
one_cid_group
\family default
 is the list of 5 student names obtained from task 1.4. The function removes 5 records in 
\family typewriter
cid_student_lst
\family default
 specified by the student names in 
\family typewriter
one_cid_group
\family default
 and returns the removed records in a list. For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> one_cid_group = form_random_group(cid_student_lst) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> one_cid_group ['Rufus Schuck', 'Kathlene Collar', 'Luanne Lett', 'Phyliss Rolen', 'Tobias Kimmer'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> remove_students(cid_student_lst, one_cid_group) [['Rufus Schuck', 'Coder', 'F'], ['Kathlene Collar', 'Empathizer', 'M'], ['Luanne Lett', 'Dealer', 'F'], ['Phyliss Rolen', 'Maker', 'M'], ['Tobias Kimmer', 'Designer', 'F']
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> len(cid_student_lst) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
After 
\family typewriter
remove_students(cid_student_lst, one_cid_group)
\family default
 is executed 
\family typewriter
cid_student_lst
\family default
 should not contain any records with students name 
\family typewriter
Fredricka Gormley
\family default
, 
\family typewriter
Jalisa Stoudemire
\family default
, 
\family typewriter
Laverna Halpern
\family default
, 
\family typewriter
Chadwick Griffin
\family default
 and 
\family typewriter
Abdul Boland
\family default
. Since the 5 names are removed. 
\family typewriter
cid_student_lst
\family default
 should now have 45 records.
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
remove_students
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def test_15(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(
\begin_inset Quotes qrd
\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-Task 1.5-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

cid_student_lst = read_data(
\begin_inset Quotes qrd
\end_inset

student_cid.txt
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

one_cid_group = form_random_group(cid_student_lst) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

removed_records = remove_students(cid_student_lst, one_cid_group) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(
\begin_inset Quotes qrd
\end_inset

removed records
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for removed_record in removed_records: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(removed_record) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(
\begin_inset Quotes qrd
\end_inset

remaining records
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for cid_student in cid_student_lst: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(cid_student) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_15()
\family default
 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.6 
\end_layout

\begin_layout Standard
Using your solutions in task 1.1, 1.4 and 1.5, write a procedure 
\family typewriter
form_max_cid_group
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and write to a file named 
\begin_inset Quotes eld
\end_inset


\family typewriter
result.txt
\family default

\begin_inset Quotes erd
\end_inset

 the suggested maximum number of CID3 groups that can be formed from 
\family typewriter
cid_student_lst
\family default
. The content in 
\begin_inset Quotes qld
\end_inset


\family typewriter
result.txt
\family default

\begin_inset Quotes qrd
\end_inset

 should also include the group number and its group members. For example, the content of 
\begin_inset Quotes qld
\end_inset


\family typewriter
result.txt
\family default

\begin_inset Quotes qrd
\end_inset

 can be:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Group 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Rufus Schuck Coder F
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Lashawna Meals Dealer M
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Phyliss Rolen Maker M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Laverna Halpern Designer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Apryl Soileau Empathizer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Claudette Bode Maker F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Angle Linck Coder F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Grazyna Kitzman Designer M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Virgilio Britt Dealer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Dannette Raasch Empathizer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Carolann Kintner Designer M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ola Markell Empathizer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Jaye Galle Maker F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Lanita Sciortino Coder M
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Joella Wessner Dealer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hertha Dossantos Dealer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Chadwick Griffin Empathizer M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Fredricka Gormley Coder F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Marcella Daigneault Designer F
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Farah Quon Maker F
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group 4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hillary Curl Coder M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Elvia Dubrey Designer F
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Terrence Shannon Empathizer M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Luanne Lett Dealer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
See Borne Maker F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group 5 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Toney Mcnab Coder M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Jalisa Stoudemire Dealer M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Abdul Boland Maker M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Russell Gillison Designer F 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Reiko Stack Empathizer F
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
form_max_cid_group
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Screenshot of the content of 
\begin_inset Quotes qld
\end_inset


\family typewriter
result.txt
\family default

\begin_inset Quotes qrd
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
EAN-13 
\series default

\end_layout

\begin_layout Standard
EAN-13 (European Article Number) barcode a standard describing a barcode symbology and numbering system used in global trade to identify a specific retail product type, in a specific packaging configuration, from a specific manufacturer.
\end_layout

\begin_layout Standard
EAN check digits are calculated by summing each of the odd position numbers multiplied by 3 and then by adding the sum of the even position numbers.
\end_layout

\begin_layout Standard
Numbers are examined going from right to left, so the first odd position is the last digit in the code. The final digit of the result is subtracted from 10 to calculate the check digit.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
EAN(first 12 digits) = 
\family default

\family typewriter

\series bold
4
\series default

\family default

\family typewriter
0
\family default

\family typewriter

\series bold
0
\series default

\family default

\family typewriter
6
\family default

\family typewriter

\series bold
3
\series default

\family default

\family typewriter
8
\family default

\family typewriter

\series bold
1
\series default

\family default

\family typewriter
3
\family default

\family typewriter

\series bold
3
\series default

\family default

\family typewriter
3
\family default

\family typewriter

\series bold
9
\series default

\family default

\family typewriter
3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Even digits 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 4 + 0 + 3 + 1 + 3 + 9 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 20 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Odd digits x 3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= (0 + 6 + 8 + 3 + 3 + 3) x 3 = 69 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 20 + 69 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 89 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Check digit 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 10 ‚Äì 9 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

= 1 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, the valid EAN number is 
\family typewriter
4006381333931
\family default
.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Implement the 
\series bold

\emph on
iterative
\emph default

\series default
 function 
\family typewriter
EAN
\family default
 that takes in a string 
\family typewriter
ean12
\family default
 which is the first 12 characters of a valid EAN number and returns the full valid EAN with the check digit in string.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> EAN(
\begin_inset Quotes qrd
\end_inset

400638133393
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset Quotes qrd
\end_inset

4006381333931
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> EAN(
\begin_inset Quotes qrd
\end_inset

590123412345
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset Quotes qrd
\end_inset

5901234123457
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
EAN
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

400638133393
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

590123412345
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

950110153000
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

007567816412
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

123456789123
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN(
\begin_inset Quotes qrd
\end_inset

563643712973
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
EAN_rec
\family default
 which is the recursive version of task 2.1.
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
EAN_rec
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
generate_n_random_EAN(n)
\family default
 that takes an integer 
\family typewriter
n
\family default
 as input and return a list that contains n random valid EAN numbers in string.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> generate_n_random_EAN(5)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['9399783016850', '7126497037138', '7859230985143', '4663965860605', '0075678464126']
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
generate_n_random_EAN
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\family typewriter
print(generate_n_random_EAN(5))
\family default

\end_layout

\begin_layout Subsection*
Task 2.4
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
quick_sort_10_EAN()
\family default
 that performs quicksort on 10 randomly generated valid EANs and returns the sorted list of EANs in string.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> quick_sort_10_EAN() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
['0777557883249', '1830930669218', '1932904647625', '3257925382651', '6272017045297', '6715598129708', '7248472619815', '7660010013945', '9810395262430', '9870932286909'] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
quick_sort_10_EAN
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\family typewriter
print(quick_sort_10_EAN())
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Minimum Heap 
\series default

\end_layout

\begin_layout Standard
A minimal heap is a binary tree that always maintains the smallest data item at its root node. In this question, the 
\family typewriter
class minHeap
\family default
 is implemented using a 1D array with each child node index calculated using the following formula.
\end_layout

\begin_layout Standard

\family typewriter
left_child_ptr = node_ptr x 2 + 1
\family default

\end_layout

\begin_layout Standard

\family typewriter
right_child_ptr = node_ptr x 2 + 2 
\family default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
class minHeap attributes
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Description
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
count (INTEGER)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
It stores the number of data item currently in 
\family typewriter
minHeap
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
size (INTEGER)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
It stores the maximum number of data item 
\family typewriter
minHeap
\family default
 can take.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
tree (ARRAY OF INTEGER)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
It is a 1D array that stores the data items as nodes in 
\family typewriter
minHeap
\family default
. If a data item doesn
\begin_inset Quotes ers
\end_inset

t exist, it is represented by -1. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
The pseudo-code of the class procedure 
\family typewriter
add(newItem)
\family default
 is given in file 
\begin_inset Quotes eld
\end_inset


\family typewriter
task31.txt
\family default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Use it to implement the class procedure 
\family typewriter
add
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE add(newItem) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF minHeap is not full THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

tree[count] <- newItem
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr_ptr <- count 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

parent_ptr <- QUOTIENT((curr_ptr - 1) DIV 2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SWAP (tree[parent_ptr], tree[curr_ptr]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr_ptr <- parent_ptr 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

parent_ptr <- QUOTIENT((curr_ptr - 1) DIV 2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL curr_ptr EQUAL TO 0 OR tree[parent_ptr]<= newItem
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

INCREMENT count BY 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

Heap is full. Cannot add.
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END PROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
add
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The class function 
\family typewriter
remove_minimum
\family default
 is implemented for you in file 
\begin_inset Quotes eld
\end_inset


\family typewriter
T3.py
\family default

\begin_inset Quotes erd
\end_inset

. This function removes the data item at the root node of the minimum heap and returns the data item. Your task is to implement the class function 
\family typewriter
sort
\family default
 which returns a list consists of all the data items stored in the minimum heap in increasing order. Take note that after 
\family typewriter
sort
\family default
 is executed, the minimum heap becomes empty.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def test(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

test_value = [58, 36, 3, 9, 87]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

h1 = minHeap(5) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for value in test_value: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

h1.add(value) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(h1.sort())
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> test () 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
[3, 9, 36, 58, 87] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Evidence 20
\end_layout

\begin_layout Standard
Program code for the class function 
\family typewriter
sort
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 21
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def test_32(n): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

test_value = random.sample(range(1,100), n)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

h1 = minHeap(n)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for value in test_value:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

h1.add(value)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(h1.sort())
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

task 3.2
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

1st run
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

2nd run
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

3rd run
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Implement the class procedure 
\family typewriter
display_all_paths
\family default
 which displays all paths from the root of minimum heap to all its leaves. 
\emph on
Hint: The minimum heap in this question is implemented using a complete binary tree. This means that the 
\emph default

\family typewriter
tree
\family default

\emph on
 array indices from 
\emph default

\family typewriter
0
\family default

\emph on
 to 
\emph default

\family typewriter
count-1
\family default

\emph on
 contain all the data items of the minimum heap
\emph default
.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def test_33(n):
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

test_value = random.sample(range(1,100), n) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

h1 = minHeap(n)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for value in test_value: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

h1.add(value) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

h1. display_all_paths() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> test_33(10) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 21 40 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 21 29 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 34 94 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 49 96 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 49 69 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
display_all_paths
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

task 3.3
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

1st run
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(5)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

2nd run
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(10)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(
\begin_inset Quotes qrd
\end_inset

3rd run
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(15) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Begemed 
\series default

\end_layout

\begin_layout Standard
Begemed is a casual game which is played on ruled grids. The player is required to swap a gem in one of the four possible directions, namely 
\begin_inset Quotes eld
\end_inset

up
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

down
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

left
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

right
\begin_inset Quotes erd
\end_inset

; after the swap, if a row or a column of 3 or more gems are formed, it
\begin_inset Quotes ers
\end_inset

s considered a valid move and the connected gems will be destroyed. Otherwise, it
\begin_inset Quotes ers
\end_inset

s considered an invalid move. Note that diagonal directions are not counted.
\end_layout

\begin_layout Standard
Below are some examples of the game demonstrated in a 
\begin_inset Formula $5\times5$
\end_inset

 grid. The letters 
\begin_inset Quotes qld
\end_inset

d
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

s
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

t
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

r
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

e
\begin_inset Quotes qrd
\end_inset

 represents Diamond, Sapphire, Topaz, Ruby, Emerald respectively. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2019-P1-Q4-1.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Standard
Some other valid swaps are: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2019-P1-Q4-2.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2019-P1-Q4-3.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2019-P1-Q4-4.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Standard
You are tasked to create a text-based interactive 
\begin_inset Quotes eld
\end_inset

Begemed
\begin_inset Quotes erd
\end_inset

 game in the following tasks.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Implement 
\family typewriter
Begemed
\family default
 class according to the UML class diagram and attributes/methods specifications given. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Board
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- board: list 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ Board(size: int)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ new_game(board: list) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ check_connection(row: int, col: int): boolean 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ find_valid_moves(row: int, col: int): list
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
+ display(hint: boolean=False)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Attribute
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Specification
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
board: list
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
board
\family default
 is a 2-dimensional 
\family typewriter
list
\family default
 hosting the gems inside each grid. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Methods and its specification. 
\end_layout

\begin_layout Itemize

\family typewriter
Board(n: int) : n
\family default
 is the size used to define the dimension of the 
\family typewriter
board
\family default
. The board should be initialized to a (
\begin_inset Formula $n\times n$
\end_inset

) 2- dimensional list filled with string 
\begin_inset Quotes eld
\end_inset

_
\begin_inset Quotes erd
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Itemize

\family typewriter
new_game(new_board : list): new_game
\family default
 takes in a 
\family typewriter
list
\family default
 named 
\family typewriter
new_board
\family default
 and assign it to the class attribute 
\family typewriter
board
\family default
. The following list is provided in the python template file.
\end_layout

\begin_deeper
\begin_layout Standard
t
\family typewriter
est_board = [ ['r', 'r', 'd', 'e', 'd'], ['s', 'd', 'r', 'd', 't'], ['d', 'd', 'r', 's', 'd'], ['e', 'r', 't', 'r', 'r'], ['t', 'e', 'e', 's', 'd']] 
\family default

\end_layout

\begin_layout Standard

\emph on
This method is just a temporary solution which help you in initial coding and debugging. In a later task, there will be further instructions to update its implementation.
\emph default
 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
check_connection( row: int, col: int): boolean : check_connection
\family default
 takes in the 
\family typewriter
row
\family default
 and 
\family typewriter
col
\family default
 value of a particular gem, then check if there is a connection of 3 or more gems of the same type in its horizontal or vertical direction. Return 
\family typewriter
True
\family default
 if such a connection is found, and 
\family typewriter
False
\family default
 otherwise. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsection*
Evidence 24 
\end_layout

\begin_layout Standard
Program code of class Board and class methods up to 
\family typewriter
check_conection
\family default
. [11]
\end_layout

\begin_layout Standard
Methods and its specification. 
\end_layout

\begin_layout Itemize

\family typewriter
find_valid_moves( row: int, col: int): list
\family default
 : 
\family typewriter
find_valid_moves
\family default
 takes in the 
\family typewriter
row
\family default
 and 
\family typewriter
col
\family default
 value of a particular gem, then attempt to swap in the four directions (up, down, left, right). If there is a new connection of 3 or more gems of the same type formed, record as a valid movement.
\end_layout

\begin_deeper
\begin_layout Standard
Return a 
\family typewriter
list
\family default
 containing all valid movements. An empty 
\family typewriter
list
\family default
 is to be returned if no valid movement is found.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | r | t | r | r | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\family typewriter
find_valid_moves(0, 2)
\family default
 is called, the function should return 
\family typewriter
['d', 'l']
\family default
 because when down swap or left swap is performed on gem at 
\family typewriter
(0, 2)
\family default
, a new connection of 3 or more gems of the same type will be formed. [5] 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
display(hint: Boolean=False)
\family default
 : 
\family typewriter
display
\family default
 will print out the 
\family typewriter
board
\family default
 according to the sample format given. Take note that the 
\family typewriter
size
\family default
 of the board can be changed and hence the grid outline should be dynamically adjusted according to its 
\family typewriter
size
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | r | t | r | r |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
hint
\family default
 is an optional argument with a default value of 
\family typewriter
False
\family default
. If 
\family typewriter
hint
\family default
 is set to be 
\family typewriter
True
\family default
, the gems with valid moves should be highlighted by using the 
\series bold
uppercase
\series default
 letters, and the valid moves for the 
\series bold
coordinates
\series default
 and 
\series bold
directions
\series default
 should be displayed too.
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
(0, 1) ['r']
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(0, 2) ['d', 'l']
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(1, 2) ['u'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(1, 3) ['u', 'r']
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(2, 2) ['d'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 0) ['d'] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 1) ['r']
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 3) ['l'] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | 
\family default

\family typewriter

\series bold

\bar under
R
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
D
\bar default

\series default

\family default

\family typewriter
 | e | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | 
\family default

\family typewriter

\series bold

\bar under
R
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
D
\bar default

\series default

\family default

\family typewriter
 | t |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | 
\family default

\family typewriter

\series bold

\bar under
R
\bar default

\series default

\family default

\family typewriter
 | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | 
\family default

\family typewriter

\series bold

\bar under
E
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
R
\bar default

\series default

\family default

\family typewriter
 | t | 
\family default

\family typewriter

\series bold

\bar under
R
\bar default

\series default

\family default

\family typewriter
 | r |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 25 
\end_layout

\begin_layout Standard
Program code of class method 
\family typewriter
find_valid_moves
\family default
 and 
\family typewriter
display
\family default
. 
\begin_inset space \hfill{}

\end_inset

[14]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a texted based menu which has the following options. Validation of the user input is needed.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Choose an option below: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Validate Move 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Toggle Hint Mode
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3) Move the Gem!
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4) New Game
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5) Exit 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The descriptions for the options can be found below.
\end_layout

\begin_layout Standard
Options and its descriptions. 
\end_layout

\begin_layout Itemize

\family typewriter
Validate Move
\family default
 : Ask user to input a set of 
\family typewriter
row
\family default
, 
\family typewriter
col
\family default
 and 
\family typewriter
direction
\family default
. Check and feedback if this swap is valid. 
\end_layout

\begin_layout Itemize

\family typewriter
Toggle Hint Mode
\family default
 : For every new game, the 
\family typewriter
hint
\family default
 mode by default should be 
\family typewriter
off
\family default
. Use this option to toggle the 
\family typewriter
on
\family default
 and 
\family typewriter
off
\family default
 state of hint mode.
\end_layout

\begin_deeper
\begin_layout Standard
If 
\family typewriter
hint
\family default
 mode is 
\family typewriter
on
\family default
, the menu interface should automatically highlight the gems with valid moves and print out a list of the coordinates together with its valid movement directions. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Move the Gem! :
\family default
 Move a gem in a chosen direction.
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Note that the related class method will only be implemented in the 
\emph default

\series bold

\emph on
next task
\emph default

\series default

\emph on
. For the current menu, you only need to take in user input for 
\emph default

\family typewriter
row
\family default

\emph on
, 
\emph default

\family typewriter
col
\family default

\emph on
 and 
\emph default

\family typewriter
direction
\family default

\emph on
, but no further action needs to be taken. 
\emph default
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
New Game
\family default
 : Start a new game and reset 
\family typewriter
hint
\family default
 mode to be off.
\end_layout

\begin_deeper
\begin_layout Standard
For this task, you may just initialize the new game using the 
\family typewriter
test_board
\family default
 given. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Exit
\family default
 : Exit program. 
\end_layout

\begin_layout Subsection*
Evidence 26
\end_layout

\begin_layout Standard
Program code of menu implementation. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Update the class Begemed with the following methods. Note that this task is time consuming and only worth 
\series bold
2 marks
\series default
.
\end_layout

\begin_layout Standard
Methods and its specification. 
\end_layout

\begin_layout Itemize

\family typewriter
new_game(n: int)
\family default
 : 
\family typewriter
new_game
\family default
 will now take in a size of 
\family typewriter
n
\family default
 and randomly generate a 
\family typewriter

\begin_inset Formula $\mathtt{n}\times\mathtt{n}$
\end_inset


\family default
 board of gems. The newly generated gems should not have any connection of 3 or more gems with the same type. 
\end_layout

\begin_layout Itemize

\family typewriter
move_gem(row: int, col: int, direction: string)
\family default
 
\family typewriter
move_gem
\family default
 should take in a gem position and direction. If the swap is a valid move, detect any newly formed connection of 3 or more gems with the same type and cancel them.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | 
\family default

\family typewriter

\series bold

\bar under
r
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
t
\bar default

\series default

\family default

\family typewriter
 | r | r |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout
Swap 
\begin_inset Quotes qld
\end_inset

r
\begin_inset Quotes qrd
\end_inset

 at (3, 1) with 
\begin_inset Quotes qld
\end_inset

t
\begin_inset Quotes qrd
\end_inset

 at (3, 2)
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | _ | d | t |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | _ | s | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | _ | _ | _ | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+
\family default

\end_layout

\begin_layout Plain Layout
Gems connected with 3 or more of the same type are cancelled. 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After the gems are being cancelled, those gems on top of the current gems should 
\begin_inset Quotes eld
\end_inset

fall
\begin_inset Quotes erd
\end_inset

 down.
\end_layout

\begin_layout Standard
New gems will be randomly generated to fill up the board.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | _ | _ | _ | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | _ | 
\family default

\family typewriter

\series bold

\bar under
e
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
d
\bar default

\series default

\family default

\family typewriter
 |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | _ | 
\family default

\family typewriter

\series bold

\bar under
d
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
t
\bar default

\series default

\family default

\family typewriter
 |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | 
\family default

\family typewriter

\series bold

\bar under
d
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
s
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
d
\bar default

\series default

\family default

\family typewriter
 |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout
Gems on top of the cancelled gem 
\begin_inset Quotes eld
\end_inset

falls
\begin_inset Quotes erd
\end_inset

 down
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

0
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

1
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

3
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | 
\family default

\family typewriter

\series bold

\bar under
r
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
s
\bar default

\series default

\family default

\family typewriter
 | 
\family default

\family typewriter

\series bold

\bar under
s
\bar default

\series default

\family default

\family typewriter
 |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | 
\family default

\family typewriter

\series bold

\bar under
t
\bar default

\series default

\family default

\family typewriter
 | e | d | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | 
\family default

\family typewriter

\series bold

\bar under
t
\bar default

\series default

\family default

\family typewriter
 | d | t | 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | d | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-+ 
\family default

\end_layout

\begin_layout Plain Layout
New gems are generated 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Check if there are more connections of 3 or more gems of the same type are formed, if found repeat the above cancel and refill steps. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
menu
\family default
 Adjust the menu to accommodate these new changes. 
\end_layout

\begin_layout Subsection*
Evidence 27 
\end_layout

\begin_layout Standard
Program code of above mentioned changes. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Vending machine 
\end_layout

\begin_layout Enumerate
Draw a data flow diagram for a vending machine system that allows user to buy drinks using coins and seller to refill stock. 
\emph on
Note: You are to decide on the processes to be included in the DFD on your own
\emph default
. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Draw a flow chart on the steps in dispensing a drink by the vending machine. Your flow chart should include various situations faced by the system e.g. not enough cash, drinks chosen out of stock etc. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Driverless car 
\end_layout

\begin_layout Enumerate
State one ethical and one social issue of using driverless car. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A simplified decision making on the behavior of a driverless car is as follow. 
\end_layout

\begin_deeper
\begin_layout Itemize
When a pedestrian is sensed 10m ahead, the driverless car 
\series bold
must
\series default
 apply emergency break if its current speed is more than 20 km/hr. Otherwise, it should slow down gently. 
\end_layout

\begin_layout Itemize
In other situations, when red light is sensed 20m ahead, the driverless car should slow down gently regardless of its speed. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Draw a reduced decision table for the scenario above. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A project manager uses the PERT chart to manage a software project. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-RVHS-2019-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Duration (week)
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Specification 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Installation of datastore servers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Development 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unit Testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
System testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Conversion of existing data files to new format 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
UAT 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain the significance of the dotted line. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Draw a Gantt chart based on the above information.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State the impact on the project if activity F duration is cut by 3 weeks.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
State the purpose of the project proposal.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State 2 important topics in the project proposal. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A user-defined linked list has the following operations.
\end_layout

\begin_layout Standard
Operations and its descriptions 
\end_layout

\begin_layout Itemize

\family typewriter
create()
\family default
 : This function creates an empty linked list.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard

\family typewriter
lst1 = create()
\family default

\end_layout

\begin_layout Standard
A linked list is created and referenced by 
\family typewriter
lst1
\family default
. 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
insert(llst,data)
\family default
 : This procedure always adds 
\family typewriter
data
\family default
 as a node at the head of the linked list
\end_layout

\begin_deeper
\begin_layout Standard
For example
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B'->'C'->'D'->'E'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
insert(lst1, 'Z')
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'Z'->'A'->'B'->'C'->'D'->'E'
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
split(llst,pos)
\family default
 The function breaks the linked list at position 
\family typewriter
pos
\family default
 and returns the cut half as a new linked list.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B'->'C'->'D'->'E'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst2 = split(lst1, 2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: 'C'->'D'->'E'
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
join(llst1,llist2)
\family default
 This function joins 2 linked lists as one.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
lst1: 'C'->'B' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: 'A'->'D'->'E
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
join(lst1, lst2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'C'->'B'->'A'->'D'->'E' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: Empty
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Using the provided operations of the linked list, write, in pseudo-code an algorithm that could be used to implement the 
\family typewriter
swap
\family default
 operation. 
\emph on
Hint: you don
\begin_inset Quotes ers
\end_inset

t have to use all the operations provided
\emph default
.
\end_layout

\begin_layout Standard
Operations and its description 
\end_layout

\begin_layout Itemize

\family typewriter
swap(llst,pos)
\family default
 : This procedure swaps the data at positions 
\family typewriter
pos
\family default
 and 
\family typewriter
pos + 1
\family default

\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
lst1:'A'->'B'->'C'->'D'->'E' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
swap(lst1,3)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
lst1:'A'->'B'->'D'->'C'->'E'
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
You can assume that the operations executed are always valid. For example, if there is no 5th node, 
\family typewriter
swap(lst1,4)
\family default
 will not be called. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Computer Network 
\end_layout

\begin_layout Enumerate
Explain how the switch forwards data packet to destinated device. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the function of a router.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain with an example what a client server network is.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe the differences between PaaS and IaaS.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State 2 data verification methods.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain what packet switching is.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the connection mode that the walkie-talkie (push to talk) is working on.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the difference between synchronous and asynchronous data transmission. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State and explain a method to protect data in transit.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State and explain a method to protect data at rest.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A sort procedure is implemented in Python is follow.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def sort(sort_lst, unsort_lst):
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(unsort_lst) > 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

item = unsort_lst[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while i < len(sort_lst) and item < sort_lst[i]: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i += 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return sort(sort_lst[:i]+[item,]+sort_lst[i:], unsort_lst[1:])
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return sort_lst
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the name of the above sorting algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
The below statement is executed.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> sort([], [9,1,8,2,3,7,5])
\family default

\end_layout

\begin_layout Standard
Using the table below, trace the items in 
\family typewriter
sort_lst
\family default
 and 
\family typewriter
unsort_lst
\family default
 in each recursive call. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
#
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
sort_lst
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
unsort_lst
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[9,1,8,2,3,7,5]
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the time complexity of the sort procedure above. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 A sleepy teacher implemented an inefficient binary search function as follow. The function is supposed to return True if target is found in the list inc_sort_lst and False otherwise.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 def binSearch(target, inc_sort_lst):
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 if len(inc_sort_lst) == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

return False
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 if len(inc_sort_lst) == 1: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

return True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 n = len(inc_sort_lst)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 first_half = inc_sort_lst[:n//2] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 second_half = inc_sort_lst[n//2:] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 if target > first_half[-1]: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

return binSearch(target, second_half) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

return binSearch(target, first_half)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain the bug in his code with examples. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Explain how you can correct the bug without changing the code from line 06 onwards.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Explain why the binary search performed is inefficient.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Run length encoding (RLE) is a very simple form of lossless data compression which runs on sequences having same value occurring many consecutive times and it encodes the sequence to store only a single value and its count. For example, 
\begin_inset Quotes eld
\end_inset

111111000
\begin_inset Quotes erd
\end_inset

 can be converted to 
\begin_inset Quotes eld
\end_inset

6130
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Below is a draft attempt of implementing this algorithm.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE RLECompress(s: STRING): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

DECLARE comp_str: STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

DECLARE count, i: INT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

comp_str = 
\begin_inset Quotes qld
\end_inset


\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

count, i = 0, 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(s): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

count = 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(s) - 1 and s[i] == s[i+1]:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

count += 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i += 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END WHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

comp_str += count + s[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset

END WHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}

\end_inset

RETURN comp_str 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 END PROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The compiler reported an error at line 15. Identity the type of error, state its definition and suggest how it can be fixed.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
After the above error has been corrected, a successful compilation produces executable code. However, when the code was executed, it failed to complete. Identity another type of error, state its definition and suggest how it can be fixed. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
Assuming all errors have been identified and corrected.
\end_layout

\begin_layout Standard
The following steps are taken to encode English alphabets: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Convert alphabet to hexadecimal ASCII value 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Convert the hexadecimal number to binary number 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Encode the binary number using RLE algorithm 
\end_layout

\begin_layout Standard
For example, the alphabet 
\begin_inset Quotes eld
\end_inset

A
\begin_inset Quotes erd
\end_inset

 has a hexadecimal ASCII value of 
\begin_inset Quotes eld
\end_inset

41
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State the definition of ASCII.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State the encoded RLE string for letter 
\begin_inset Quotes eld
\end_inset

A
\begin_inset Quotes erd
\end_inset

.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

State and explain with example one potential limitation of RLE encoding when compressing long binary strings. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The school library currently stores their data in flat files. These files contain information about students, books and their loaning details.
\end_layout

\begin_layout Standard
Using examples from the school
\begin_inset Quotes ers
\end_inset

s flat files to illustrate your answers. 
\end_layout

\begin_layout Enumerate
Explain how data inconsistency could arise.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why data privacy could be a potential concern.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain the definition of Primary Key in a relational database. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
A book can be borrowed by any student, and a student can borrow any book. Students need to fill up a loaning record form each time he/she wants to borrow a book. A student is entitled to borrow up to 5 books each time using the same loaning record form.
\end_layout

\begin_layout Standard
The decision has been made to create a relational database for the library loaning system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Identify the necessary tables and draw an E-R diagram to show the relationships between these tables. [4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

For each table specify the attributes (fields) required and state suitable primary keys and foreign key relationships. State necessary legends if you are using symbols to represent the primary and foreign keys. [7] 
\end_layout

\begin_layout Standard
The following table is generated for students
\begin_inset Quotes ers
\end_inset

 reference regarding their loaning details.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student Name:
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Xiao Ming 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Class: 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19J08
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Book Name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Author
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Loan Date
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Due Date
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A Brief History of Time 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stephen Hawking 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
05 Aug 2019 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 Aug 2019
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Spider Man Comics 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stan Lee 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
29 Aug 2019 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20 Sep 2019
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

To create the report 
\family typewriter
StudentName
\family default
 and 
\family typewriter
StudentClass
\family default
 are used. Name other fields that the database uses to produce this report.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Beside the database design, you are also in charge of creating an online loaning form. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Design and draw a webpage layout for the auto loaning interface for the new system. Identify and briefly explain your design considerations for the various features which aid users to input valid data entries. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Some students use their handphones to snap photos of tables and charts from the books they borrowed and use them for their research projects. Explain what potential issues may arise and suggest alternate ways which students can adopt.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9597/2019/P2/Q9] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The school library has in store different kinds of items which students can loan out. Information about items are stored and recorded, such as 
\family typewriter
title
\family default
, 
\family typewriter
description
\family default
, and 
\family typewriter
damaged
\family default
, which is a Boolean value indicating if the item has any form of physical damage.
\end_layout

\begin_layout Standard
For books in the library, additional information such as the 
\family typewriter
author
\family default
, 
\family typewriter
publisher
\family default
, 
\family typewriter
ISBN
\family default
 are recorded.
\end_layout

\begin_layout Standard
Digital media resources are also available for students
\begin_inset Quotes ers
\end_inset

 reference. Information such as 
\family typewriter
storage media
\family default
, 
\family typewriter
file size
\family default
 and
\family typewriter
 playback time
\family default
 are stored.
\end_layout

\begin_layout Standard
You are engaged by the school to design an Object-Oriented Programming solution to manage these items. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\family typewriter
Item
\family default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-classes 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
the properties required 
\end_layout

\begin_layout Itemize
appropriate methods, including 
\series bold
constructor
\series default
 methods, and at least 
\series bold
one
\series default
 pair of 
\begin_inset Quotes els
\end_inset


\series bold
get
\series default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\series bold
set
\series default

\begin_inset Quotes ers
\end_inset

 methods for one of the properties. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using the above example, explain the meaning of the term 
\series bold
Polymorphism
\series default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Using the above example, explain the meaning of the term 
\series bold
Encapsulation
\series default
.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The school also provides a series of past year examination papers for the students
\begin_inset Quotes ers
\end_inset

 loaning and reference. State how this would affect the 
\series bold
class
\series default
, 
\series bold
properties
\series default
 and 
\series bold
methods
\series default
 in the current example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
According to some researches done on children below the age of 16, it was found that the height of a boy, measured in centimetres (cm), should lie within the normal range with: 
\end_layout

\begin_layout Standard
\align center
\noindent
minimum height = 5.3 √ó Age + 71 
\end_layout

\begin_layout Standard
\align center
\noindent
maximum height = 6.2 √ó Age + 87 
\end_layout

\begin_layout Standard
The text file HEIGHTDATA.TXT contains 20 entries of the data in the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent
<Name>, <Age>, <Height> 
\end_layout

\begin_layout Subsection*
Task 1.1: 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the entire contents of 
\family typewriter
HEIGHTDATA.TXT
\family default
. 
\end_layout

\begin_layout Itemize
determine if the boy
\begin_inset Quotes ers
\end_inset

s height lies within the normal range. 
\end_layout

\begin_layout Itemize
display the contents using the format given below 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
Example run of the program:
\end_layout

\begin_layout Plain Layout

\series bold
Input File: 
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ali,6,105 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bob,10,145 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Charlie,15,185
\family default
 
\end_layout

\end_inset


\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
The output generated from the input file would be:
\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
Name 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Age Height Within normal range 
\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ali 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

6 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

105 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Yes
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bob 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

10 
\begin_inset space ~

\end_inset

145 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Yes 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Charlie 15 
\begin_inset space ~

\end_inset

185 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

No
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1.1: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 1.2: 
\end_layout

\begin_layout Standard
Screenshot of the output.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
During data entry, some of the data may have been wrongly entered with transposition errors. In the case of Charlie
\begin_inset Quotes ers
\end_inset

s, his height should have been 158 cm but was wrongly transposed and entered as 185 cm.
\end_layout

\begin_layout Subsection*
Task 1.2: 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
determine the correct height for those entries outside the normal range. 
\end_layout

\begin_layout Itemize
display the amended contents using the format given below. 
\end_layout

\begin_layout Standard
In cases where there are more than one possible or no possible height, print 
\begin_inset Quotes els
\end_inset

Re-enter data
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
Example run of the program:
\end_layout

\begin_layout Plain Layout

\series bold
Input File:
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ali,6,105
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bob,10,145 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Charlie,15,185 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ethan,7,131 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Rick,13,415 
\family default

\end_layout

\end_inset


\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
The output generated from the input file would be:
\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold
Name 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Age Height Corrected Height
\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Charlie 15 
\begin_inset space ~

\end_inset

185 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

158
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ethan 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

7 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

131 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

113 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Rick 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

13 
\begin_inset space ~

\end_inset

415 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Re-enter data
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Example run of the program:
\end_layout

\begin_layout Subsection*
Evidence 1.3: 
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Evidence 1.4: 
\end_layout

\begin_layout Standard
Screenshot of the output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Oxford English Dictionary, published in 1989, contains 171,476 words. Instead of doing a linear search whenever we want to find a word, it is more efficient to perform a binary search.
\end_layout

\begin_layout Subsection*
Evidence 2.1: 
\end_layout

\begin_layout Standard
Describe the binary search algorithm. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.1: 
\end_layout

\begin_layout Standard
Write a program 
\family typewriter
BinarySearch(lst, item)
\family default
 to search for an item in the list 
\family typewriter
lst
\family default
 using the binary search algorithm.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
import the sorted list of words, given in the file 
\family typewriter
1000WORDS.TXT
\family default
, into a simple array 
\family typewriter
dataset
\family default
. 
\end_layout

\begin_layout Itemize
report whether or not the item is found in the list. If found, output the index position and the list of words examined by the program during the binary search. 
\end_layout

\begin_layout Subsection*
Evidence 2.2:
\end_layout

\begin_layout Standard
Your program code and the screenshot for the following searches: 
\end_layout

\begin_layout Itemize

\family typewriter
BinarySearch(dataset, 
\begin_inset Quotes qld
\end_inset

WORD
\begin_inset Quotes qrd
\end_inset

) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
BinarySearch(dataset, 
\begin_inset Quotes qld
\end_inset

WORDA
\begin_inset Quotes qrd
\end_inset

) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
BinarySearch(dataset, 
\begin_inset Quotes qld
\end_inset

TRADE
\begin_inset Quotes qrd
\end_inset

)
\family default
 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
If we want to find all the words that start with 
\begin_inset Quotes eld
\end_inset

TR
\begin_inset Quotes erd
\end_inset

, we can perform a partial word search on the given dataset. The search will return a word list as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
['TRACK', 'TRADE', 'TRAIN', 'TRAVEL', 'TREE', 'TRIANGLE', 'TRIP', 'TROUBLE', 'TRUCK', 'TRUE', 'TRY']
\family default
 
\end_layout

\begin_layout Standard
Using the program written in Task 2.1 to perform a binary search for the word 
\begin_inset Quotes eld
\end_inset


\family typewriter
TR
\family default

\begin_inset Quotes erd
\end_inset

; the first word starting with 
\begin_inset Quotes eld
\end_inset


\family typewriter
TR
\family default

\begin_inset Quotes erd
\end_inset

 should be 
\begin_inset Quotes eld
\end_inset


\family typewriter
TRADE
\family default

\begin_inset Quotes erd
\end_inset

 found at index 
\family typewriter
889
\family default
. We can now perform a linear search near index 
\family typewriter
889
\family default
 for all the words starting with 
\begin_inset Quotes eld
\end_inset


\family typewriter
TR
\family default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection*
Task 2.2: 
\end_layout

\begin_layout Standard
Modify the code 
\family typewriter
BinarySearch(lst, item)
\family default
 written in Task 2.1.
\end_layout

\begin_layout Standard
Your program will: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

perform a partial search for the word in the list 
\family typewriter
lst
\family default
 starting with the given letter(s), item 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

perform a linear search near the index found in step (1) to return a list of words starting with the given letter(s) 
\end_layout

\begin_layout Subsection*
Evidence 2.3: 
\end_layout

\begin_layout Standard
Your program code and the screenshot for the following searches: 
\end_layout

\begin_layout Itemize

\family typewriter
BinarySearch(dataset, 
\begin_inset Quotes qld
\end_inset

TR
\begin_inset Quotes qrd
\end_inset

)
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
BinarySearch(dataset, 
\begin_inset Quotes qld
\end_inset

RE
\begin_inset Quotes qrd
\end_inset

)
\family default

\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An 
\family typewriter
ExpressionTree
\family default
 data structure is required to store 20 nodes. A linked list is maintained of all the nodes. A node contains a data value and two pointers: a left pointer and a right pointer. Items in the list are initially linked using their 
\family typewriter
LeftChild
\family default
 pointers.
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Node
\family default
 has the following properties: Class: Node Attributes Identifier Data Type Description DataValue STRING The node data LeftChild INTEGER The left node pointer RightChild INTEGER The right node pointer
\end_layout

\begin_layout Standard
The 
\family typewriter
ExpressionTree
\family default
 class is implemented as follows: Class: ExpressionTree Attributes Identifier Data Type Description Tree ARRAY[1:20] OF Node The tree data, initialised as a linked list Fringe ARRAY: INTEGER A list to store the index of nodes traversed Root INTEGER Index for the root position of the Tree array NextFreeChild INTEGER Index for the next unused node
\end_layout

\begin_layout Standard
The index of the first available node is indicated by 
\family typewriter
NextFreeChild
\family default
. The initial value of 
\family typewriter
Root
\family default
 is 0 and the initial value of 
\family typewriter
NextFreeChild
\family default
 is 0. The 
\family typewriter
Fringe
\family default
 is initialised as an empty list and it will be used for node insertion to store the index for the nodes traversed.
\end_layout

\begin_layout Standard
The diagram shows the 
\family typewriter
Tree
\family default
 array with the linked list to record the unused nodes. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-YIJC-2019-P1-Q3-1.png
	width 15page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write a program code to define the 
\family typewriter
Node
\family default
 and 
\family typewriter
ExpressionTree
\family default
 classes.
\end_layout

\begin_layout Subsection*
Evidence 3.1
\end_layout

\begin_layout Standard
Your program code for Task 3.1. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
The task is to store the tokens of a binary arithmetic expression in the data structure instantiated from the 
\family typewriter
ExpressionTree
\family default
 class.
\end_layout

\begin_layout Standard
An arithmetic expression is a sequence of tokens that follows prescribed rules. A token may be either an operand or an operator.
\end_layout

\begin_layout Standard
A binary arithmetic operation using the standard arithmetic operators, 
\family typewriter
+ - * /
\family default
 , may be in the form of operand-operator-operand. For example, 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
2 + 3 
\family default
 
\end_layout

\begin_layout Standard
where 
\family typewriter
2
\family default
 and 
\family typewriter
3
\family default
 are operands, 
\family typewriter
+
\family default
 is an operator. This expression will evaluate to a value of 
\family typewriter
5
\family default
.
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
IsOperator(s)
\family default
 that takes in a string 
\family typewriter
s
\family default
, and returns 
\family typewriter
True
\family default
 if it is a standard arithmetic operator and returns 
\family typewriter
False
\family default
 if otherwise.
\end_layout

\begin_layout Subsection*
Evidence 3.2 
\end_layout

\begin_layout Standard
Your program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
An expression tree is a binary tree with the following properties: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Each leaf is an 
\emph on
operand
\emph default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

The root and internal nodes are 
\emph on
operators
\emph default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Subtrees are sub-expressions, with the root being an 
\emph on
operator
\emph default
. 
\end_layout

\begin_layout Standard
The following shows a series of commands to create and insert values into the data structure to create an expression tree.
\end_layout

\begin_layout Standard

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CreateNewExpTree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

+
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

*
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

4
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

2
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

/
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

3
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
InsertToExpTree(
\begin_inset Quotes qrd
\end_inset

1
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The figure below shows the expression tree obtained and its 
\series bold
infix
\series default
 expression obtained by an in-order traversal.
\end_layout

\begin_layout Standard
This expression will evaluate to 
\family typewriter
10
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-YIJC-2019-P1-Q3-2.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
The following pseudocode (available in 
\family typewriter
PSEUDOCODE_TASK_3_3.TXT
\family default
) can be used to add a node to the expression tree.
\end_layout

\begin_layout Standard

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "88col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE Insert(NewToken)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF NextFreeChild = -1 THEN // check if tree is full 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 'Tree is Full'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// tree is not full, safe to insert new token 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF NextFreeChild = 0 THEN // inserting into empty Tree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Tree[Root].DataValue NewToken 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Tree[Root].LeftChild Tree[Root].LeftChild -1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// inserting into tree with existing 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// starting with Root 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current 0 // index of the current node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous -1 // index of previous node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNode Tree[NextFreeChild] // declare new node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNode.DataValue NewToken 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// Finding the node at which the NewNode can be inserted 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE Current <> -1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrNode Tree[Current] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF IsOperator(CurrNode.DataValue) THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// check if CurrNode contains an operator 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF CurrNode.LeftChild = -1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// if LeftChild is empty, insert here 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrNode.LeftChild NextFreeChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild NewNode.LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNode.LeftChild -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current -1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELIF CurrNode.RightChild = -1 THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// if RightChild is empty, insert here 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrNode.RightChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild NextFreeChild ‚Üê NewNode.LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNode.LeftChild -1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELIF IsOperator(Tree[CurrNode.LeftChild].DataValue) THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// if LeftChild is an operator, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse leftchild subtree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current CurrNode.LeftChild
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Fringe.APPEND(Previous)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELIF IsOperator(Tree[CurrNode.RightChild].DataValue)THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// if RightChild is an operator, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse rightchild subtree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous Current
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current CurrNode.RightChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Fringe.APPEND(Previous) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE // traverse right subtree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous Fringe.POP(-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current Tree[Previous].RightChild
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE // no place to insert
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 
\begin_inset Quotes qld
\end_inset

Cannot be inserted
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a code to implement the 
\family typewriter
Insert
\family default
 method for the 
\family typewriter
ExpressionTree
\family default
 class from this pseudocode.
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_3.TXT
\family default
 as a basis for writing your code.
\end_layout

\begin_layout Subsection*
Evidence 3.3 
\end_layout

\begin_layout Standard
Your program code for Task 3.3. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 3.4: 
\end_layout

\begin_layout Standard
Write a code for the 
\family typewriter
Display
\family default
 method for the 
\family typewriter
ExpressionTree
\family default
 class which displays the contents of 
\family typewriter
Tree
\family default
 in index order.
\end_layout

\begin_layout Subsection*
Evidence 3.4 
\end_layout

\begin_layout Standard
Your program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write a sequence of program statements to: 
\end_layout

\begin_layout Itemize
create an expression tree 
\end_layout

\begin_layout Itemize
add the data items based on the sequence of commands given 
\end_layout

\begin_layout Itemize
display the array contents 
\end_layout

\begin_layout Subsection*
Evidence 3.5 
\end_layout

\begin_layout Standard
Your program code for Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 3.6 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 3.6 
\end_layout

\begin_layout Standard
The infix notation can be obtained by performing an in-order traversal in the expression tree.
\end_layout

\begin_layout Standard
Write a code for the 
\family typewriter
infix
\family default
 method for the 
\family typewriter
ExpressionTree
\family default
 class to generate the infix notation for a complete expression tree.
\end_layout

\begin_layout Subsection*
Evidence 3.7 
\end_layout

\begin_layout Standard
Your program code for Task 3.6. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 3.8 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.6. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsection*
Task 3.7 
\end_layout

\begin_layout Standard
Write a code for the 
\family typewriter
calculate
\family default
 method to evaluate and return the numerical answer for the expression, rounded off to 2 decimal places.
\end_layout

\begin_layout Subsection*
Evidence 3.9 
\end_layout

\begin_layout Standard
Your program code for Task 3.7. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 3.10 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.7. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Minesweeper is a type of single-player puzzle game in which the player continuously selects a cell in a square grid. Each cell contains either a bomb or a value showing the number of bombs in the neighbouring cell. (Neighbouring cells are those adjacent horizontally, vertically or diagonally.)
\end_layout

\begin_layout Standard
If the player selects a cell that is a bomb, it 
\begin_inset Quotes els
\end_inset

explodes
\begin_inset Quotes ers
\end_inset

 and he loses the game. The number of cells the player has selected without exploding a bomb will be the player
\begin_inset Quotes ers
\end_inset

s score.
\end_layout

\begin_layout Standard
You are required to write a program code to generate a minesweeper grid, randomly position the bombs and populate all the other cells with the values indicating the number of bombs in the neighbouring cells. Without revealing the minesweeper grid to the player, the program should prompt the player to select the cells one by one. His score will be the number of cells opened before hitting a bomb. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "25col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
X 2 1 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 3 X 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 2 X 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 1 2 X 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 4.1: 
\end_layout

\begin_layout Standard
Write a program code to generate and display an empty square grid of size 
\begin_inset Formula $n$
\end_inset

, ie 
\begin_inset Formula $n$
\end_inset

 rows by 
\begin_inset Formula $n$
\end_inset

 columns. The minesweeper grid for 
\begin_inset Formula $n=5$
\end_inset

 is as shown below: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "25col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
0 0 0 0 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 0 0 0 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 0 0 0 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 0 0 0 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 0 0 0 0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Your code should use a suitable data structure and fixed loop(s) to display the grid.
\end_layout

\begin_layout Subsection*
Evidence 4.1: 
\end_layout

\begin_layout Standard
Your program code and screenshot of an empty grid of size 5.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.2: 
\end_layout

\begin_layout Standard
Write a program code to randomly place a bomb, represented by 
\begin_inset Quotes qld
\end_inset

X
\begin_inset Quotes qrd
\end_inset

, within the grid. Populate all the neighbouring cells by increasing their values to 1 to indicate the presence of this one bomb in the neighbourhood.
\end_layout

\begin_layout Subsection*
Evidence 4.2: 
\end_layout

\begin_layout Standard
Your program code and two different screenshots of the grid (
\begin_inset Formula $n=5$
\end_inset

). 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.3: 
\end_layout

\begin_layout Standard
Modify the code written in Task 4.2 to randomly place two bombs within the grid. Populate all the neighbouring cells with the correct values to indicate the presence of the bombs in the neighbourhood.
\end_layout

\begin_layout Subsection*
Evidence 4.3: 
\end_layout

\begin_layout Standard
Your program code and the screenshot of the grid (
\begin_inset Formula $n=5$
\end_inset

) with 2 bombs.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.4: 
\end_layout

\begin_layout Standard
Modify the code written in Task 4.3 to generate 
\begin_inset Formula $k$
\end_inset

 numbers of bombs within a grid of size 
\begin_inset Formula $n$
\end_inset

 and correctly display all the values in the neighbouring cells surrounding the bombs.
\end_layout

\begin_layout Subsection*
Evidence 4.4: 
\end_layout

\begin_layout Standard
Your program code and the screenshots of the minesweeper grids for the following levels of difficulty. 
\end_layout

\begin_layout Itemize
Beginner (grid size 
\begin_inset Formula $n=5$
\end_inset

; no. of bombs 
\begin_inset Formula $k=3$
\end_inset

) 
\end_layout

\begin_layout Itemize
Intermediate (grid size 
\begin_inset Formula $n=6$
\end_inset

; no. of bombs 
\begin_inset Formula $k=8$
\end_inset

) 
\end_layout

\begin_layout Itemize
Expert (grid size 
\begin_inset Formula $n=8$
\end_inset

; no. of bombs 
\begin_inset Formula $k=20$
\end_inset

) [8] 
\end_layout

\begin_layout Subsection*
Task 4.5: 
\end_layout

\begin_layout Standard
Write a program code to play the minesweeper game. Your code will: 
\end_layout

\begin_layout Itemize
prompt the player to select the level of difficulty 
\end_layout

\begin_layout Itemize
generate the Minesweeper grid 
\end_layout

\begin_layout Itemize
display a 
\begin_inset Quotes eld
\end_inset

blank
\begin_inset Quotes erd
\end_inset

 grid with 
\begin_inset Quotes els
\end_inset

-
\begin_inset Quotes ers
\end_inset

 for each of the cell prompt the player to input the coordinates of a cell he wishes to open 
\end_layout

\begin_deeper
\begin_layout Itemize
If the opened cell is a bomb (
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

), declare 
\begin_inset Quotes eld
\end_inset

Game Over!
\begin_inset Quotes erd
\end_inset

, show the grid and display the player
\begin_inset Quotes ers
\end_inset

s score. 
\end_layout

\begin_layout Itemize
If the opened cell is not a bomb, show the updated grid with the opened cell, increase the player
\begin_inset Quotes ers
\end_inset

s score by 1 and continue with the game. 
\end_layout

\end_deeper
\begin_layout Itemize
declare 
\begin_inset Quotes eld
\end_inset

You have Won!
\begin_inset Quotes erd
\end_inset

 when the player has opened all the possible cells and display the player
\begin_inset Quotes ers
\end_inset

s score.
\end_layout

\begin_deeper
\begin_layout Standard
[Sample screenshot of a typical game]:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Enter your cell you want to open:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
X (1 to 5) : 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Y (1 to 5) : 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
_ _ _ _ _
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
_ _ 1 _ _
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 _ _ _ _
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
_ _ 1 _ _
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
_ _ _ _ _
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Your score is : 3
\family default

\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Enter your cell you want to open:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
X (1 to 5) : 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Y (1 to 5) : 4
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
X 1 1 1 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 1 1 X 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 0 1 1 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 1 1 1 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 1 X 1 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Game over! You've hit the bomb at : (2,4).
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Your score is : 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Do you want to try again?
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 4.5:
\end_layout

\begin_layout Standard
Your program code and a screenshot of a game. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A food delivery app offers promotions to customers based on their usage pattern.
\end_layout

\begin_layout Standard
First time customers would receive a $5 discount on their first purchase. If a customer has spent at least $1000 on the app in the last 3 months, the app would upgrade the customer to Gold status and offer 10% discount on all orders.
\end_layout

\begin_layout Standard
Gold status customers who have been inactive for 1 month would be offered an additional 5% discount on top of the existing 10% discount. Customers who have made their first purchase and have been inactive for 1 month would receive a $5 discount instead. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies from the decision table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive function 
\family typewriter
Binomial
\family default
 has two parameters, 
\family typewriter
N
\family default
 and 
\family typewriter
R
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Binomial(N, R : INTEGERS) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF R = 0 OR R = N 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ‚Üê 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ‚Üê Binomial(N ‚Äì 1, R) + Binomial(N ‚Äì 1, R ‚Äì 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Answer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by a recursive function, and identify the line number that makes 
\family typewriter
Binomial
\family default
 recursive. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
An example of a trace tree diagram showing the recursive function call 
\family typewriter
Binomial(3,1)
\family default
 is shown. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2020-P1-Q2.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
Use the above example to create a trace tree diagram for the recursive function call 
\family typewriter
Binomial(3,2)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Give values of N and R which would cause the function to enter infinite recursion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The function 
\family typewriter
Evaluate
\family default
 is designed to evaluate a polynomial at a given value of 
\begin_inset Formula $x$
\end_inset

. The polynomial is stored as a queue of coefficients in descending powers of x.
\end_layout

\begin_layout Standard
For example, the polynomial 
\begin_inset Formula $5x^{3}-2x^{2}+3x-1$
\end_inset

 is given as the queue 
\begin_inset Formula $[5,\lyxmathsym{\textendash}2,3,\lyxmathsym{\textendash}1]$
\end_inset

, where 5 is at the head of the queue.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Evaluate(X : INTEGER, Coeffs : QUEUE) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ‚Üê Answer + DEQUEUE Coeffs 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ‚Üê Answer * X 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL Coeffs IS EMPTY 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Answer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Draw a trace table to determine the output of the function 
\family typewriter
Evaluate
\family default
 for 
\family typewriter
X = 2
\family default
 and 
\family typewriter
Coeffs = [5, ‚Äì2, 3, ‚Äì1]
\family default
, as described above. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe the error in the function 
\family typewriter
Evaluate
\family default
 as it is currently written. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Rewrite the pseudo-code above so that 
\family typewriter
Evaluate
\family default
 returns the correct value of the polynomial at a given value of 
\family typewriter
x
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
During Home-Based Learning, many lessons were carried out over the Internet. 
\end_layout

\begin_layout Enumerate
For lessons carried out by video conferencing, tools by external companies such as Zoom or Google Meet were used.
\end_layout

\begin_deeper
\begin_layout Standard
Give one example of an ethical consideration companies such as Zoom or Google should take into account in this situation. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Many lesson resources and homework submissions were carried out via file uploads. Describe how a file can be uploaded from a student
\begin_inset Quotes ers
\end_inset

s computer to a cloud drive by packet switching.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
For a Mother Tongue lesson, a teacher created a webpage in a non-English language. Some students who accessed the webpage saw random characters instead of the content intended by the teacher. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the relevance of communications protocols in this context. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe how Unicode might address some of these problems.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A printing shop offers printing services to its customers. When a printing order is sent to the shop, the following information is recorded down: 
\end_layout

\begin_layout Itemize
Date of order 
\end_layout

\begin_layout Itemize
Name of customer 
\end_layout

\begin_layout Itemize
Number of copies 
\end_layout

\begin_layout Itemize
Colour, or black and white, printing 
\end_layout

\begin_layout Itemize
Whether express printing is required 
\end_layout

\begin_layout Standard
The printing shop accepts three types of orders, leaflets, books and posters.
\end_layout

\begin_layout Standard
Customers printing leaflets or books need to indicate if they require single side or double side printing.
\end_layout

\begin_layout Standard
In addition, for books, the type of cover (hard cover or soft cover) would need to be recorded.
\end_layout

\begin_layout Standard
Leaflets and books are available in three sizes (A3, A4 or A5), while posters are only available in a fixed size of A2.
\end_layout

\begin_layout Standard
For poster printing, customers have a choice of either glossy or matte finishing.
\end_layout

\begin_layout Standard
The total charge to user is determined by the specifications of the order and the formula is unique for each type of order.
\end_layout

\begin_layout Standard
This system is to be implemented using object-oriented programming (OOP). 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
Any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
The properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
Suitable methods to support the system with at least one getter and setter 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The base class is 
\family typewriter
BASIC_ORDER
\family default
. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the purpose of inheritance in object-oriented programing. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a computer game, players
\begin_inset Quotes ers
\end_inset

 names and scores are stored in a binary search tree, in increasing order of score.
\end_layout

\begin_layout Standard
The binary search tree has its data inserted in the following order:
\end_layout

\begin_layout Standard
Ryan 18
\end_layout

\begin_layout Standard
Bella 25
\end_layout

\begin_layout Standard
Joshua 27
\end_layout

\begin_layout Standard
Shane 20
\end_layout

\begin_layout Standard
Jasmine 17
\end_layout

\begin_layout Standard
Alexis 21
\end_layout

\begin_layout Standard
Leslie 15 
\end_layout

\begin_layout Enumerate
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The binary search tree is implemented using the two dimensional array shown below. Copy and fill in the entries in the array. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Left Pointer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Right Pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
To delete a node from a binary tree, the following cases are considered: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Case 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has no children 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Node is removed from tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has one child 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Node is replaced with its child
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has two children
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Call the node to be deleted 
\begin_inset Formula $D$
\end_inset

. Do not delete
\begin_inset Formula $D$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Look for the node 
\begin_inset Formula $E$
\end_inset

 that comes after 
\begin_inset Formula $D$
\end_inset

 in an in-order traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Copy the data 
\begin_inset Formula $E$
\end_inset

 into 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Delete 
\begin_inset Formula $E$
\end_inset

 using one of the previous two cases.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Draw the tree at each step after the following players are deleted, one after another: 
\end_layout

\begin_layout Enumerate
Joshua 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Jasmine
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Ryan 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The program has a feature which allows the user to enter an integer. The program then returns a list of players whose score is greater than that integer. Describe how the program can create this list using the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q7] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The following is the pseudocode for an in-place quicksort algorithm for sorting in ascending order.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Partition(L, R : INTEGERS, MyList : LIST) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Pivot ‚Üê MyList[R] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF MyList[j] > Pivot 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
A
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp ‚Üê MyList[j] 11 MyList[j] ‚Üê MyList[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
B
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL j = R 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MyList[R] ‚Üê MyList[i] // swap elements with index i and R 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MyList[i] ‚Üê Pivot 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
C
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}

\end_inset

PROCEDURE Quicksort(L, R : INTEGERS, MyList : LIST) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF 
\family default

\family typewriter

\series bold
D
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PivotPos = Partition(R, L, MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CALL Quicksort(L, PivotPos - 1, MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
E
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}

\end_inset

ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write pseudo-code to replace 
\family typewriter

\series bold
A
\series default

\family default
, 
\family typewriter

\series bold
B
\series default

\family default
, 
\family typewriter

\series bold
C
\series default

\family default
, 
\family typewriter

\series bold
D
\series default

\family default
 and 
\family typewriter

\series bold
E
\series default

\family default
 in the above algorithm. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
State the time complexity of the algorithm in the above pseudo-code. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State and explain when the worst case scenario (for running time) for quicksort arises in the above algorithm. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Another programmer suggested insertion sort would be more efficient during the worst case scenario in (iii).
\end_layout

\begin_deeper
\begin_layout Standard
State and explain if insertion sort is indeed more efficient in this instance. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A program needs to store an array of names and scores in a two dimensional array and perform the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
Output the names and scores in alphabetical order. 
\end_layout

\begin_layout Itemize
Check for the presence of a particular name 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The data to be stored in the array is as follows:
\end_layout

\begin_layout Standard
Peter 68
\end_layout

\begin_layout Standard
Mary 70
\end_layout

\begin_layout Standard
Kelvin 48
\end_layout

\begin_layout Standard
Casper 44
\end_layout

\begin_layout Standard
Luther 76 
\end_layout

\begin_layout Enumerate
Draw a flowchart to represent a linear search algorithm that returns the score of a particular name. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Instead of storing the data in an array, it is suggested that the names could be stored in a hash table instead.
\end_layout

\begin_deeper
\begin_layout Standard
With reference to the requirements of the program, suggest one advantage and one disadvantage of storing the names in a hash table instead of an array. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
(iii) An array can be used to create the hash table data structure. Describe the process of inserting the above data into a hash table. You may assume there will be no collisions. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is tasked to write a program to store the examination scores of students in the entire school. For each student, the database would need to store the following data: name, form class, subject class, subject, score and subject teacher. 
\end_layout

\begin_layout Enumerate
Suggest a suitable data type for each of the following fields: 
\end_layout

\begin_deeper
\begin_layout Itemize
Name 
\end_layout

\begin_layout Itemize
Class 
\end_layout

\begin_layout Itemize
Score 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The programmer is considering storing this data in either a relational or non-relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State three key differences between the two types of databases. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State and explain which database system the programmer should choose. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A healthcare group would like to store patient data in a relational database. When a patient visits the clinic, the clinic will record the following information: 
\end_layout

\begin_layout Itemize
Date and time of visit 
\end_layout

\begin_layout Itemize
Name of attending doctor and his NRIC 
\end_layout

\begin_layout Itemize
Patient name and NRIC number 
\end_layout

\begin_layout Standard
After the doctor has attended to the patient, the patient would be given a prescription. The prescription would record the medication which the patient is supposed to take. Each prescription, which consists of at least one medicine, would have its own unique identification number. Each medicine would have a unique identification number, name and price.
\end_layout

\begin_layout Standard
The data is stored in a relational database with five tables: 
\family typewriter
Patient
\family default
, 
\family typewriter
Doctor
\family default
, 
\family typewriter
Appointment
\family default
, 
\family typewriter
Prescription
\family default
 and 
\family typewriter
Medicine
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw the Entity-Relationship (E-R) diagram to show the tables in third normal form (3NF) and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A table description can be written as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (Attribute1, Attribute2, Attribute3, ‚Ä¶)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline.
\end_layout

\begin_layout Standard
Using the information provided, write table descriptions for the tables you identified in part (c). 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a program to implement a role-playing computer game using Object-Oriented Programming (OOP).
\end_layout

\begin_layout Standard
The players have to collect food items. A food item has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
value : INTEGER
\family default
 
\end_layout

\begin_layout Standard
and the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_value()
\family default
 
\end_layout

\begin_layout Standard
A player takes on the role of a person. A person has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
health : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
strength : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\family default
 
\end_layout

\begin_layout Standard
and the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_health() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_strength() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
eat(food)
\family default
 adds the value of the food to the strength. The code should display the player
\begin_inset Quotes ers
\end_inset

s new strength. 
\end_layout

\begin_layout Itemize

\family typewriter
attack(opponent)
\family default
 
\end_layout

\begin_layout Standard
For the 
\family typewriter
attack
\family default
 method, 
\family typewriter
opponent
\family default
 is another person. 
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to attack and there is no change to 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the attack is successful and 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
r
\family default
. 
\end_layout

\begin_deeper
\begin_layout Itemize
If opponent
\begin_inset Quotes ers
\end_inset

s health is now negative, then opponent has been defeated. 
\end_layout

\end_deeper
\begin_layout Itemize
The player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is decreased by r. 
\end_layout

\begin_layout Standard
There are two subclasses of the 
\family typewriter
Person
\family default
 class ‚Äì 
\family typewriter
Healer
\family default
 and the 
\family typewriter
Warrior
\family default
.
\end_layout

\begin_layout Standard
Healer has one additional method: 
\end_layout

\begin_layout Itemize

\family typewriter
heal(patient)
\family default
 
\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset


\end_layout

\begin_layout Standard
For the 
\family typewriter
heal
\family default
 method, 
\family typewriter
patient
\family default
 is another person. 
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to heal and there is no change to 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the healing is successful and 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is increased by 
\family typewriter
r
\family default
, up to a maximum of 
\family typewriter
100
\family default
. 
\end_layout

\begin_layout Standard

\family typewriter
Warrior
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
attack
\family default
 method is twice as effective, meaning that if the player has enough strength to attack, 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
2*r
\family default
, while the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is decreased by 
\family typewriter
r
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Food
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Person
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
attack
\family default
, including the new value of opponent
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Use appropriate inheritance to write program code to define the class 
\family typewriter
Healer
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
heal
\family default
, including the new value of 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.4
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism to write program code to define the class 
\family typewriter
Warrior
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
Test your code with the following steps in order: 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Food
\family default
 item with name 
\family typewriter
'Cheese'
\family default
 and value 
\family typewriter
10
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Warrior
\family default
 with 
\family typewriter
name
\family default
 
\family typewriter
'Sam'
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Healer
\family default
 with name 
\family typewriter
'Alex'
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Person
\family default
 with name 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Jan'
\family default
 attacks 
\family typewriter
'Sam'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 attacks 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Alex'
\family default
 heals 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 eats 
\family typewriter
'Cheese'
\family default
. 
\end_layout

\begin_layout Standard
Download your program code and output for Task 1 as 
\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard consists of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 grid of small squares. For this task, the squares are numbered using a coordinate system as a tuple of two integers. The first integer is the column number, starting from 
\family typewriter
1
\family default
 at the left, and the second integer is the row number, starting from 
\family typewriter
1
\family default
 at the bottom.
\end_layout

\begin_layout Standard
A chess knight is a piece that occupies a square, and can then move to another square according to one of the following rules: 
\end_layout

\begin_layout Itemize
moving two squares horizontally and then one square vertically in either direction, or 
\end_layout

\begin_layout Itemize
moving two squares vertically and then one square horizontally in either direction. 
\end_layout

\begin_layout Standard
See the diagram below for examples. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2020-P2-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(2,1)
\family default
 can move to 
\family typewriter
(1,3)
\family default
, 
\family typewriter
(3,3)
\family default
 or 
\family typewriter
(4,2)
\family default
.
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(6,7)
\family default
 can move to 
\family typewriter
(4,6)
\family default
, 
\family typewriter
(4,8)
\family default
, 
\family typewriter
(5,5)
\family default
, 
\family typewriter
(7,5)
\family default
, 
\family typewriter
(8,6)
\family default
 or 
\family typewriter
(8,8)
\family default
.
\end_layout

\begin_layout Standard
Only the starting and ending squares of the knight
\begin_inset Quotes ers
\end_inset

s move are counted as being visited by the knight, and not the squares that the knight passes over while moving.
\end_layout

\begin_layout Standard
A knight
\begin_inset Quotes ers
\end_inset

s tour is a sequence of moves that a chess knight makes on a chessboard, so that it visits every square of the chessboard exactly once. It does not need to return to its starting square.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
For a given value of 
\family typewriter
n
\family default
 and a list of squares, write program code to determine if the list is a knight
\begin_inset Quotes ers
\end_inset

s tour of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
Test your code using the values
\family typewriter
 
\begin_inset Formula $\mathtt{n=7}$
\end_inset


\family default
 and the list of squares given in the files: 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2TOUR.txt
\family default
, which is a valid tour; 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2NOTOUR.txt
\family default
, which is not a valid tour. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
An algorithm to generate a knight
\begin_inset Quotes ers
\end_inset

s tour needs to keep track of the squares already visited, so that the knight does not visit them a second time during the tour.
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Suppose the knight is currently on square square, and a list of squares already visited by the knight is given in 
\family typewriter
lis
\family default
.
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
available(square,lis)
\family default
 that returns a list of squares which the knight can visit on its next move from 
\family typewriter
square
\family default
, and are not currently in 
\family typewriter
lis
\family default
. These are the squares available to the knight as it tries to complete the tour.
\end_layout

\begin_layout Standard
The output should be given in lexicographic order, that is, with the column numbers in ascending order, and, among the squares with the same column number, with the row numbers in ascending order. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
The knight starts at 
\family typewriter
(1,1)
\family default
, the bottom left square, of an 
\begin_inset Formula $8\mathtt{\times}8$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
From each square, the knight moves to the available square from which it has the smallest number of available squares after that. If there is a tie, the square which comes first in lexicographic order is chosen.
\end_layout

\begin_layout Standard
Write program code to generate the knight
\begin_inset Quotes ers
\end_inset

s tour as a list of squares in the order they are visited.
\end_layout

\begin_layout Standard
Download your program code and output for Task 2 as 
\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A text file 
\family typewriter
INVENTORY.txt
\family default
 contains the inventory data for a certain electronics store. Each line in the file contains tab-delimited data that shows the product name, product type, purchase price, selling price and quantity available.
\end_layout

\begin_layout Standard
Each line is in the format
\end_layout

\begin_layout Standard

\family typewriter
Name
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\family default

\end_layout

\begin_layout Standard
where 
\family typewriter

\backslash
t
\family default
 represents the tab character.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Read the inventory data from the text file; 
\end_layout

\begin_layout Itemize
Find the average selling price of products belonging to the 
\family typewriter
Laptop
\family default
 product type and display this value; 
\end_layout

\begin_layout Itemize
Count the number of products in each product type and store it in appropriate data structure called 
\family typewriter
TypeCount
\family default
; 
\end_layout

\begin_layout Itemize
Display the product type with the greatest number of products. If there is a tie, display all of the product types with the greatest number of products. 
\end_layout

\begin_layout Standard
Download your program code and output for Task 3.1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_1_<your name>_<centre number>_<index number>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The profit margin of each product can be calculated by the following equation: 
\end_layout

\begin_layout Standard
\align center
\noindent
Profit margin = selling price ‚Äì purchase price. 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Calculate and display the total profit the store could make if all products are sold; 
\end_layout

\begin_layout Itemize
Sort the inventory data using a Merge sort algorithm in descending order of profit margin; 
\end_layout

\begin_layout Itemize
Display the sorted inventory data in the format given below. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Product 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Product Type 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Profit Margin 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThinkingPad 14
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Computer 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
300 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Bapple 8 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Phone 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
450
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Download your program code and output for Task 3.2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_2_<your name>_<centre number>_<index number>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
A store manager decided to make some changes to 
\family typewriter
INVENTORY.txt
\family default
 and saved it as 
\family typewriter
INVENTORY_SERIAL.txt
\family default
. Each line in the updated file contains tab-delimited data that shows the serial number, product name, product type, purchase price, selling price and quantity available.
\end_layout

\begin_layout Standard
Each line is in the format:
\end_layout

\begin_layout Standard

\family typewriter
Serial_No
\backslash
tName
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\family default

\end_layout

\begin_layout Standard
where 
\family typewriter

\backslash
t
\family default
 represents the tab character.
\end_layout

\begin_layout Standard
Write program code to insert the data from 
\family typewriter
INVENTORY_SERIAL.txt
\family default
 into a NoSQL database 
\family typewriter
OUTLETS
\family default
 under the collection 
\family typewriter
GEM
\family default
.
\end_layout

\begin_layout Standard
Download your program code for Task 3.3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
The database administrator wants to validate that the store manager did not make any errors when he edited the text file. Write program code to check that the database conforms to the below specifications: 
\end_layout

\begin_layout Itemize

\family typewriter
Serial_No
\family default
 consists of one digit followed by two letters, followed by one digit (e.g. 
\family typewriter
1AB7
\family default
); 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 consists of only letters, digits and spaces; 
\end_layout

\begin_layout Itemize

\family typewriter
Quantity
\family default
 is a positive integer. 
\end_layout

\begin_layout Standard
Any document that has an error should be removed from the database. You may assume data fields not specified above are error free. Display the documents that were removed.
\end_layout

\begin_layout Standard
Download your program code for Task 3.4 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_4_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company keeps records of the employees working for it. The following are the information stored in the company
\begin_inset Quotes ers
\end_inset

s database: 
\end_layout

\begin_layout Itemize

\family typewriter
Employee_name
\family default
 ‚Äì name of the employee 
\end_layout

\begin_layout Itemize

\family typewriter
Employee_ID
\family default
 ‚Äì unique ID number allocated to each employee 
\end_layout

\begin_layout Itemize

\family typewriter
Job_type
\family default
 ‚Äì type of job the employee is employed for (
\family typewriter
'Sales'
\family default
 or 
\family typewriter
'Tech_support
\family default
') 
\end_layout

\begin_layout Itemize

\family typewriter
Date_of_employment
\family default
 ‚Äì date the employee joined the company 
\end_layout

\begin_layout Itemize

\family typewriter
Service_status
\family default
 ‚Äì whether the employee is still in service (
\family typewriter
'True'
\family default
 means the employee is still in the company, 
\family typewriter
'False'
\family default
 means the employee has left the company) 
\end_layout

\begin_layout Standard
For sales employees, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Total_sales
\family default
 ‚Äì the amount of sales in dollars made by the employee 
\end_layout

\begin_layout Standard
For tech support employees, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Bugs_resolved
\family default
 ‚Äì the total number of bugs the employee has resolved 
\end_layout

\begin_layout Standard
The database is expected to be normalised and stored in three different tables:
\end_layout

\begin_layout Standard

\family typewriter
Employee 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Sales 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Tech_support
\family default

\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
records.db
\family default
 with the three tables. Primary keys and foreign keys should be defined where appropriate.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
SALES.txt
\family default
 and 
\family typewriter
TECH_SUPPORT.txt
\family default
 contain information regarding the sales and tech support employees respectively. The information should be inserted into the database.
\end_layout

\begin_layout Standard
For 
\family typewriter
SALES.txt
\family default
, information is given in the following order:
\end_layout

\begin_layout Standard

\family typewriter
Employee_ID
\family default
, 
\family typewriter
Employee_name
\family default
, 
\family typewriter
Date_of_Employment
\family default
, 
\family typewriter
Service_status
\family default
, 
\family typewriter
Total_Sales
\family default

\end_layout

\begin_layout Standard
For 
\family typewriter
TECH_SUPPORT.txt
\family default
, information is given in the following order:
\end_layout

\begin_layout Standard

\family typewriter
Employee_ID
\family default
, 
\family typewriter
Employee_name
\family default
, 
\family typewriter
Date_of_Employment
\family default
, 
\family typewriter
Service_status
\family default
, 
\family typewriter
Bugs_resolved
\family default

\end_layout

\begin_layout Standard
Write a python program to insert all information from the two files into the 
\family typewriter
records
\family default
 database, 
\family typewriter
records.db
\family default
. Run the program.
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
The company wants to filter the employees by 
\family typewriter
Service_status
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
Service_status
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display either 
\end_layout

\begin_deeper
\begin_layout Itemize
an ordered list of employees that are still in service, or 
\end_layout

\begin_layout Itemize
an ordered list of employees that are no longer in service, 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
depending on the 
\family typewriter
Service_status
\family default
 string entered by the user. 
\end_layout

\end_deeper
\begin_layout Standard
The list should be sorted in alphabetical order.
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\end_layout

\begin_layout Standard
Run the web application. Save the output of the program when 
\family typewriter
'TRUE'
\family default
 is entered as the 
\family typewriter
Service_status
\family default
 as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html
\family default
. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A software company is writing a program for a vehicle hire business. Both cars and vans are available for hire.
\end_layout

\begin_layout Standard
For all vehicles, the data that will be stored include:
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Vehicle Registration Number (VRN)
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Model
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Total distance travelled (km)
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Date hired
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Date of return
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Cost per day
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Available for hire 
\end_layout

\begin_layout Standard
For cars. the additional data stored include:
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Number of seats
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Fuel type (petrol, diesel. electric. hybrid) 
\end_layout

\begin_layout Standard
For vans. the additional data stored include:
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Load volume (
\begin_inset Formula $\text{m}^{3}$
\end_inset

)
\end_layout

\begin_layout Standard
\paragraph_spacing single

\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Maximum load (kg) 
\end_layout

\begin_layout Standard
The odometer in the vehicle displays the total distance the vehicle has travelled since manufacture.
\end_layout

\begin_layout Standard
When a vehicle is hired: 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
total distance travelled is set to the odometer's value 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
date hired is set to the current date 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
return date is set to the date the vehicle is expected to be returned 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
available for hire is set to 
\family typewriter
FALSE
\family default
. 
\end_layout

\begin_layout Standard
When a vehicle is returned: 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
hire cost is returned as the cost per day multiplied by the number of days the vehicle was hired 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
total distance travelled is set to the odometer value 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
date returned is set to the current date 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
available for hire is set to 
\family typewriter
TRUE
\family default
. 
\end_layout

\begin_layout Standard
Object-oriented programming will be used to model vehicles. 
\end_layout

\begin_layout Enumerate
Draw a class diagram that shows the following for the situation described above. 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing single
the superclass 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
any subclasses 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
inheritance 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
properties 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
appropriate methods 
\begin_inset space \hfill{}

\end_inset

 [12] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of a superciass. Give an example of a superciass from the vehicle hire example. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Objects provide encapsulation of properties and methods. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset

State the purposes of encapsulation. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The business wants to change the way the hire cost is calculated for a car. As well as charging per day, an additional charge of $0.05 is to be made per km travelled during this hire. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(d)
\series default

\end_layout

\end_inset

Suggest a change to the class diagram to enable the new charging scheme to be used for cars. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(e)
\series default

\end_layout

\end_inset

State the purpose of polymorphism. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Quicksort is an algorithm to arrange data items into ascending or descending order. The algorithm selects a pivot from the data set. The data set is divided into two subsets around the pivot. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the ideal pivot for the quicksort algorithm to execute most efficiently. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the difficulty in locating this ideal pivot. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
Sometimes the item in the first or last position in the data set is used as the pivot. An alternative is to pick the pivot at random.
\end_layout

\begin_layout Standard
A given data set is largely sorted. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(b)
\series default

\end_layout

\end_inset

Explain what advantage random selection has over selecting the item in the first or last position. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset

Explain why a programmer might choose to use an insertion sort rather than quicksort in this situation. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary search tree is implemented using an array, 
\family typewriter
b_tree
\family default
. Each element of the array comprises three parts: 
\family typewriter
l_ptr
\family default
 and 
\family typewriter
r_ptr
\family default
 are of data type integer and 
\family typewriter
data_item
\family default
 is of data type char. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
l_ptr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data_item
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
r_ptr
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The root of the binary search tree is stored in an integer variable, 
\family typewriter
root
\family default
. The contents of 
\family typewriter
b_tree
\family default
 is shown below. 
\begin_inset Formula $-1$
\end_inset

 represents the null pointer. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
l_ptr
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data_item
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
r_ptr
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
+ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $3$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\star$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $-1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 
\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $3$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary search tree represented by the array 
\family typewriter
b_tree
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
State the index of a leaf node in 
\family typewriter
b_tree
\family default
.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard
A procedure, 
\family typewriter
P
\family default
, uses recursion.
\end_layout

\begin_layout Standard

\begin_inset Float algorithm
placement H
wide false
sideways false
status open


\begin_layout Standard

\family typewriter
01 PROCEDURE P (Index: INTEGER)
\family default

\end_layout

\begin_layout Standard

\family typewriter
02 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

IF b_tree[Index].l_ptr <> -1 THEN
\family default

\end_layout

\begin_layout Standard

\family typewriter
03 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P(b_tree[lndex].1_pt.r)
\family default

\end_layout

\begin_layout Standard

\family typewriter
04 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Standard

\family typewriter
05 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

IF b_tree[Index].r_ptr <> ‚Äî1 THEN
\family default

\end_layout

\begin_layout Standard

\family typewriter
O6 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

P(b_tree[lndex].r_ptr)
\family default

\end_layout

\begin_layout Standard

\family typewriter
07 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Standard

\family typewriter
08 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

OUTPUT b_tree[Index].data_item
\family default

\end_layout

\begin_layout Standard

\family typewriter
09 ENDPROCEDURE
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by 
\series bold
recursion
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the line numbers that indicate procedure 
\family typewriter
P
\family default
 is recursive. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the significance of lines 
\family typewriter
02
\family default
 and 
\family typewriter
05
\family default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
Procedure 
\family typewriter
P
\family default
 is called with the parameter value of 1. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(d)
\series default

\end_layout

\end_inset

Copy and then complete the trace table for procedure 
\family typewriter
P
\family default
 showing the values of 
\family typewriter
Index
\family default
 and the output. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(e)
\series default

\end_layout

\end_inset

Explain the use of a stack when the recursive procedure 
\family typewriter
P
\family default
 executes. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(f)
\series default

\end_layout

\end_inset

Identify the type of tree traversal that procedure 
\family typewriter
P
\family default
 performs. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
A 1-dimensional array is used to hold a queue. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(g)
\series default

\end_layout

\end_inset

Explain the concept of a queue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
Queues can be either linear or circular. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(h)
\series default

\end_layout

\end_inset

State 
\series bold
two
\series default
 differences between a circular queue and a linear queue.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer on LAN A wants to send data to a computer on a remote LAN B.
\end_layout

\begin_layout Standard
The internet is used to provide a data path between the two LANs. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 ways that a particular device can be identified on a LAN. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 reasons why LANs need communication protocols. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
IP is the protocol used to transfer packets of data between hosts and routers on the intemet.
\end_layout

\begin_layout Standard
The intemet is a packet-switched network. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(b)
\series default

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the term 
\series bold
packet-switching
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe a disadvantage of packet-switching and how the problem can be handled. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State how a packet-switched network can cope with a broken cable on part of the network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
When using a web browser. most users do not know the IP address of the server hosting the desired web page. So users enter the domain name instead. which the browser sends to a local domain name server (DNS). 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset

Describe the actions that would be carried out by the local DNS on receiving this request.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(d)
\series default

\end_layout

\end_inset

State the security feature that can be used as a precautionary measure when sensitive data is sent across a network in each of the following situations: 
\end_layout

\begin_deeper
\begin_layout Enumerate
No one other than the intended recipient of the message should be able to read it.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
The intended recipient must be confident that the message is from the identified sender. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Validation and verification are used in data entry. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the purpose of verification. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 method of verification. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard
The use of check digits is one validation technique. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(b)
\series default

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the purpose of validation. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State 
\series bold
three
\series default
 other validation techniques. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Name 
\series bold
two
\series default
 types of error that check digits usually detect. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
A check digit is to be added to the end of 02757 using Modulus 11. The weight of each digit, starting with the first digit (0) is 6, 5, 4, 3, 2. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset

Showing your working. determine the check digit for 02757. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(d)
\series default

\end_layout

\end_inset

Give 
\series bold
two
\series default
 reasons why the data type of a field storing 02757 with a Modulus 11 check digit should be a string rather than an integer. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A college is designing a database to store data about: 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
students 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
courses 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
subjects 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
teachers 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
classrooms. 
\end_layout

\begin_layout Standard
The designers are told that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
each student takes four courses 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
each teacher delivers all their lessons in one room 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
each room may be used by more than one teacher 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
each teacher may teach more than one course 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
a course can only be taught by one teacher 
\end_layout

\begin_layout Itemize
\paragraph_spacing single
a subject may be taught by more than one teacher. 
\end_layout

\begin_layout Standard
A first attempt is represented by the following table:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="8">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student ID
\series default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
First Name
\series default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Last Name
\series default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Course
\series default
 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subject
\series default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Room
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Number
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Joe 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Smith 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Geography 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
334 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mansoor 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
926 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Maths 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
451 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yang 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
882 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Physics 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
628 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
425 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Computing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
329 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
James 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muhammad 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hilmi 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Geography 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
334 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mansoor 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
927 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Maths 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
723 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Morris 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Physics 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
534 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weston 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
586 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
French 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
271 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Dubois 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sumiko 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Chong 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
425 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Computing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
329 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
James 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
882 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Physics 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
628 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Geography 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
334 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mansoor 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
586 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
French 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
271 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Dubois 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain why this table is not in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy.
\end_layout

\begin_layout Standard
Student
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
First Name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Last Name
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Joe 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Smith
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muhammad 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hilmi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sumiko 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Chong
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Course
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Course ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subject
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher Name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Room Number
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Geography 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
334 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mansoor 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
926 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Maths 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
451 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yang 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
882 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Physics 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
628 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
425 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Computing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
329 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
James 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
927 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Maths 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
723 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Morris 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Physics 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
534 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weston 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
586 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
French 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
271 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Dubois 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
16
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
IsTaking
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="13" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Course ID
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
926
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
882
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1279 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
425
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
927
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
883
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1395 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
586
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
425
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
882
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
934
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2883 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
586
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(b)
\series default

\end_layout

\end_inset

Give suitable primary keys for each of the following three tables. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Student 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Course 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
lsTaking 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(c)
\series default

\end_layout

\end_inset

Create an entity-relationship (ER) diagram showing the degree of all relations. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(d)
\series default

\end_layout

\end_inset

Explain why table Course is not in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(e)
\series default

\end_layout

\end_inset

A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (Attributel, Attribute2, Attribute3 , ...) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline. Write table descriptions for the required tables in the database so they are in third nennai form (3NF). 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(e)
\series default

\end_layout

\end_inset

Explain the reasons for reducing data redundancy in a relational database. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard

\series bold
(f)
\series default

\end_layout

\end_inset

Write an SQL query to output the subjects, teacher names and room numbers for the courses taken by the student with Student ID of 1395.
\end_layout

\begin_deeper
\begin_layout Standard
The output is to be in alphabetical order of subject. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\paragraph_spacing onehalf

\series bold
[ALVL/9569/2020/P2/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The task is to implement a hashing function using the modulus function and ASCII codes.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The hash is implemented with the following pseudocode, acting on a string 
\family typewriter
string_value
\family default
, which returns an integer, 
\family typewriter
h
\family default
, representing the hash.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
h 
\begin_inset Formula $\leftarrow$
\end_inset

 0
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
FOR i 
\begin_inset Formula $\leftarrow$
\end_inset

 0 TO length(string_value)-1
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter

\begin_inset space \quad{}

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

val 
\begin_inset Formula $\leftarrow$
\end_inset

 33 * (ASCII value of string_value[i])
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter

\begin_inset space \quad{}

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

h 
\begin_inset Formula $\leftarrow$
\end_inset

 (h+val) % 1024
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
NEXT i
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
RETURN h
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For each of the sub-tasks, add a comment statement at the beginning of the code, using the hash symbol '#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="77text%">
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
# Task 1.1
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
Program code
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special=">{\raggedright}p{0.77\textwidth}">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output :
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function 
\family typewriter
task1_1(string_value)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes a string value 
\family typewriter
string_value
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
implements the hash algorithm to produce an integer value 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns that integer value. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Test your function using the following 
\series bold
three
\series default
 calls: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_1('Hello')
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_1('Hallo')
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_1('Hullo')
\family default

\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Strings are often combined with an original value (known as the seed) before their hash is calculated. This makes it harder to use reverse engineering to retrieve the original string.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function task1_2(seed, string_value) that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes two string values seed and string_value 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
concatenates these two string values together 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
uses the function in Task 1.1 to return the hash generated for the concatenated value. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Test your function with the following three calls: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_2('seed-one','Hello')
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_2('seed-two','Hello')
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
task1_2('seed-three','Hello')
\family default

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Save your Jupyter Notebook for Task 1. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\paragraph_spacing onehalf

\series bold
[ALVL/9569/2020/P2/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The task is to: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
generate a list of random integers 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
write this list to a file 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
read the list from the file 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
sort the list using a merge sort 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
write the sorted list to a second file. 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol '#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="77text%">
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
# Task 2.1
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
Program code
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special=">{\raggedright}p{0.77\textwidth}">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output :
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function 
\family typewriter
task2_1 (filename, quantity, maximum)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
accepts three parameters: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
filename
\family default
, a string representing the name of a file 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
quantity,
\family default
 an integer representing the number of random integers ot generate 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
maximum
\family default
, representing the largest value that a random integer can take 
\end_layout

\end_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
generates 
\family typewriter
quantity
\family default
 random numbers between 0 and 
\family typewriter
maximum
\family default
 (inclusive) 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
writes those values, on per line, to a file named 
\family typewriter
filename
\family default
.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Generate 1000 random numbers between 0 and 5000 (inclusive) and save them to a file called
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
randomnumbers_<your name>_<centre number>_<index number>.txt
\family default

\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function 
\family typewriter
task2_2(list_of_integers)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes a list of integers, 
\family typewriter
list_of_integers
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
sorts them into ascending order using merge sort 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns to the sorted list
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Use the list
\family typewriter
 [56,25,4,98,0,18,4,5,7,0]
\family default
 to test your function.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example, the condition
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
task2_2([56,25,4,98,0,18,4,5,7,0])==[0,0,4,4,5,7,18,25,56,98]
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
should return 
\family typewriter
True
\family default
.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function 
\family typewriter
task2_3(filename_in, filename_out)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
accepts two parameters: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
filename_in
\family default
 represents the input file name 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
filename_out
\family default
 represents the output file name 
\end_layout

\end_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
reads the integers from the input file 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
uses your 
\family typewriter
task2_2
\family default
 function to sort the integers 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
writes the integers to the output file.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The function should read the random numbers from
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
randomnumbers_<your name>_<centre number>_<index number>.txt
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
and then write the sorted integers to
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
sortednumbers_<your name>_<centre number>_<index number>.txt
\family default

\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Save your Jupyter Notebook for Task 2. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\paragraph_spacing onehalf

\series bold
[ALVL/9569/2020/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK3_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The task is to write a function that takes a sequence of characters that represents a quantity of data and unit, and translates this quantity to a different unit.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The basic unit of data is the byte (B): 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A kilobyte (KB) is 
\begin_inset Formula $10^{3}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A megabyte (MB) is 
\begin_inset Formula $10^{6}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A gigabyte (GB) is 
\begin_inset Formula $10^{9}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A terabyte (TB) is 
\begin_inset Formula $10^{12}$
\end_inset

 bytes 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example, 8KB has 8000 bytes.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol '#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="77text%">
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
# Task 3.1
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\emph on
Program code
\emph default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special=">{\raggedright}p{0.77\textwidth}">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output :
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a function called 
\family typewriter
task3_1 (quantity_of_data)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes a string, 
\family typewriter
quantity_of_data
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
tests that the given string is a sequence of digits followed by one of the four approved units shown above (KB, MB, GB, TB). 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns and displayes either: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
the actual number of bytes represented by the input string
\begin_inset Newline newline
\end_inset

 or 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
the error message, 
\family typewriter

\begin_inset Quotes eld
\end_inset

invalid data
\begin_inset Quotes erd
\end_inset


\family default
.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Test the function fully with suitable test data, including all four approved units.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example,
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
task3_1(
\begin_inset Quotes eld
\end_inset

8KB
\begin_inset Quotes erd
\end_inset

)
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
should return and display 
\family typewriter
8000
\family default
.
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Companion units are also defined in terms of powers of 2. These have similar abbreviations, as shown: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A kibibyte (KiB) is 
\begin_inset Formula $2^{10}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A mebibyte (MiB) is 
\begin_inset Formula $2^{20}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A gibibyte (GiB) is 
\begin_inset Formula $2^{30}$
\end_inset

 bytes 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
A tebibyte (TiB) is 
\begin_inset Formula $2^{40}$
\end_inset

 bytes 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a second function 
\family typewriter
task3_2(quantity_of_data)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes a string, 
\family typewriter
quantity_of_data
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
tests that the given string is a sequence of digits followed by one of the eight approved units (KB, KiB, MB, MiB, GB, GiB, TB, TiB) 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
the number of bytes represented by the input string
\begin_inset Newline newline
\end_inset

 or 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
the error message, 
\begin_inset Quotes eld
\end_inset


\family typewriter
invalid data
\family default

\begin_inset Quotes erd
\end_inset


\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Test the function fully with suitable test data, including all eight approved units.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example,
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
task3_2('2MiB')
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
should return and display 
\family typewriter
20197152
\family default
.
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write a third function, 
\family typewriter
task3_3(quantity_of_data, target_unit)
\family default
 that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
takes two strings, 
\family typewriter
quantity_of_data
\family default
 and 
\family typewriter
target_unit
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
tests that 
\family typewriter
target_unit
\family default
 is one of the eight approved units from task 3.2 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
uses your function 
\family typewriter
task3_2
\family default
 to generate the actual number of bytes represented by 
\family typewriter
quantity_of_data
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
converts the generated number of bytes in 
\family typewriter
target_unit
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
the 
\family typewriter
quantity_of_data
\family default
 in terms of the 
\family typewriter
target_unit
\family default
 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
the error message, 
\begin_inset Quotes eld
\end_inset

invalid data
\begin_inset Quotes erd
\end_inset


\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Test the function with three suitable set of values.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example,
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
task3_3(
\begin_inset Quotes eld
\end_inset

512MiB
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

GiB
\begin_inset Quotes erd
\end_inset

)
\family default

\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
should return and display 0.5
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\paragraph_spacing onehalf

\series bold
[ALVL/9569/2020/P2/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
A school has usd a text file to store data collected about people who work at the school and students who attend the school. People who have a teaching role at the school are referred to as 'staff'. The school decides to transfer this information into a database.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
A web page will then be used to summarise the data. Different information will be visible on the web page, depending on the type of person displayed. 
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Create an SQL file called 
\family typewriter
TASK4_1_<your name>_<center number>_<index number>.sql
\family default
 to show the SQL code to create database 
\family typewriter
school.db
\family default
 with the single table, 
\family typewriter
People
\family default
.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The table will have the following fields of the given SQLite types: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
PersonID
\family default
 - primary key, an auto-incremented integer 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
FullName
\family default
 - the full name of the person, text 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
DateOfBirth
\family default
 - the person's date of birth, text 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
ScreenName
\family default
 - the person's screen name, text 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
IsAdult
\family default
 - a Boolean using 0 for False adn 1 for True, integer. 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Save your SQL code as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_1_<your name>_<center number>_<index number>.sql
\family default

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The school wants to use the Python programming language and object-oriented programming to help publish the database content on a web page.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The class 
\family typewriter
Person
\family default
 will store the following data: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
full_name
\family default
 - stored as a string 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
date_of_birth
\family default
 - initiliased with a string with the format YYYY-MM‚ÄìDD 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The class has two methods defined on it: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
is_adult()
\family default
 - returns a Boolean value to indicate whether the person is an adult or not. It: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
subtracts the year of the 
\family typewriter
date_of_birth
\family default
 from the year of today's date 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
returns True if the result is greater than 18, otherwise returns False. 
\end_layout

\end_deeper
\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
screen_name()
\family default
 - returns a string which creates an identifier to be used as a screen name, which should be construted as follows: 
\end_layout

\begin_deeper
\begin_layout Itemize
\paragraph_spacing onehalf
the full name with all spaces and punctuation removed 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
followed by the two-digit month of their birth 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
then the two-digit day of their birth. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
For example, John Tan, born on the 
\begin_inset Formula $1^{\text{st}}$
\end_inset

 of June 2000 (
\begin_inset Quotes eld
\end_inset


\family typewriter
2000-06-01
\family default

\begin_inset Quotes erd
\end_inset

), would have the screen name 
\begin_inset Quotes eld
\end_inset


\family typewriter
JohnTan0601
\family default

\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Save your program code as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The 
\family typewriter
Staff
\family default
 class inherits from 
\family typewriter
Person
\family default
, such that: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
screen_name()
\family default
 should be the name followed by 
\begin_inset Quotes eld
\end_inset


\family typewriter
Staff
\family default

\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf

\family typewriter
is_adult()
\family default
 always returns True. 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The 
\family typewriter
Student
\family default
 class inherits from 
\family typewriter
Person
\family default
, such that the 
\family typewriter
is_adult()
\family default
 method always returns False.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Add your program code to
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
The text file, 
\family typewriter
people.txt
\family default
, contains data items for a number of people. Each data item is separated by a comma, with each person's data on a new line as follows: 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
full name 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
date of birth in the form YYYY-MM-DD 
\end_layout

\begin_layout Itemize
\paragraph_spacing onehalf
a string indicating whether the person is 
\begin_inset Quotes eld
\end_inset


\family typewriter
Staff
\family default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\family typewriter
Student
\family default

\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset


\family typewriter
Person
\family default

\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write program code to read in the information from the text file, 
\family typewriter
people.txt
\family default
, creating instance of the appropriate class for each person (either 
\family typewriter
Staff
\family default
, 
\family typewriter
Student
\family default
 or 
\family typewriter
Person
\family default
).
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Write program code to insert all information from the file into the 
\family typewriter
school.db
\family default
 database.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Run the program.
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent
Add your program code to
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
The screen names of the people in the text file, 
\family typewriter
people.txt
\family default
, are to be displayed in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that enables the list of people to be displayed.
\end_layout

\begin_layout Standard
For each record the web page should include the: 
\end_layout

\begin_layout Itemize
full name 
\end_layout

\begin_layout Itemize
screen name 
\end_layout

\begin_layout Itemize
identity as student, staff or person. 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py
\family default
 
\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
\noindent

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.html
\family default

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Given an array of numbers 
\family typewriter
A
\family default
, count the minimum number of 'bubble sort' swaps (swap between pair of consecutive items) needed to sort the array in ascending order.
\end_layout

\begin_layout Standard
For example, if 
\family typewriter
A = [3, 2, 1, 4]
\family default
, we need 3 'bubble sort' swaps to sort A in ascending order i.e.
\end_layout

\begin_layout Standard

\family typewriter
swap(3, 2)
\family default
 to get 
\family typewriter
[
\family default

\family typewriter

\bar under
2, 3
\bar default

\family default

\family typewriter
, 1, 4] 
\family default

\end_layout

\begin_layout Standard

\family typewriter
swap(3, 1)
\family default
 to get 
\family typewriter
[2, 
\family default

\family typewriter

\bar under
1, 3
\bar default

\family default

\family typewriter
, 4]
\family default

\end_layout

\begin_layout Standard

\family typewriter
swap(1, 2)
\family default
 to get 
\family typewriter
[
\family default

\family typewriter

\bar under
1, 2
\bar default

\family default

\family typewriter
, 3, 4]
\family default
 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n^{2})$
\end_inset

 algorithm using bubble sort to count the number of 'bubble sort' swaps. 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n\log n)$
\end_inset

 algorithm to count the number of 'bubble sort' swaps. 
\end_layout

\begin_layout Standard
You should also explain why each algorithm has its efficiency. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Would you expect insertion sort to perform better or worse than bubble sort in (a)? Explain your answer with respect to the number of comparisons needed using the above example.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Why is quick sort not a suitable algorithm in part (b)? Illustrate your answer with a suitable example. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You have been tasked to use a suitable data structure to manage the preliminary exam results of students in Dunman High School. Each student is identified by its centre and index numbers, each of which is 4-digit. For example, Lim Ah Seng's identification number is 30420188. A typical range of students' identification numbers are from 30420001 to 30420450, since each graduating cohort will have about 450 students.
\end_layout

\begin_layout Standard
The preliminary examination details to be stored are as follows: 
\end_layout

\begin_layout Itemize
Subject code (4-digit) eg 9569 
\end_layout

\begin_layout Itemize
Subject name eg H2 Computing 
\end_layout

\begin_layout Itemize
Subject grade (1-character eg 'A') You may assume that each student will have a valid subject grade in the range of ['A', 'B', 'C', 'D', 'E', 'S', 'U', 'T', '0'], where 'T' stands for terminated and '0' stands for absent. 
\end_layout

\begin_layout Standard
Using suitable examples, evaluate the pros and cons using each of the following data structure to store the required information: 
\end_layout

\begin_layout Enumerate
dictionary 
\end_layout

\begin_layout Enumerate
hash table 
\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The information in Question 2 will also be stored in a relational database. 
\end_layout

\begin_layout Enumerate
Why is a relational database model more suitable than a NoSQL database model for storing the required information? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Produce the specification for the tables. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Using examples in this context, explain the significance of the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
1NF
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
2NF
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
3NF 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What is the relationship between the data structures in Question 2 and a relational database? 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following diagram shows the contents with some data inserted. 
\end_layout

\begin_layout Enumerate
State two possible insertion orders of data to this BST.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Generalise how data can be inserted to produce a balanced BST.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
The BST is to be implemented using a 1D array T. Write pseudocode to show how data can be represented in T with suitable initial values for an empty BST. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to insert to this BST. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to check if T is a BST. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Convert the recursive algorithm in part (e) to an iterative one using a suitable data structure which you should name and justify. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the items in T that are within a given range [a, b] inclusive in ascending order.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the contents of the leaves of T in descending order.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Despite its memory overhead, why is recursion often used in BSTs? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Why is recursion less often used in linked lists?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A student came up with the following Python program to implement a linked list data structure:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

class Node: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

def __init__(self, data): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

self.data = data 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

self.link = None 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset

def insert(data): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

global head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if head == None: # empty linked list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

head = Node(data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: # insert to front 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_node = Node(data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_node.link = head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

head = new_node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

def display(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

global head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr = head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while curr: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(curr.data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr = curr.link 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}

\end_inset

# main 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}

\end_inset

head = None 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Ali
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Tom
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Mary
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27
\begin_inset space \qquad{}

\end_inset

display() 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
What will be the output of line 27?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Comment on the programming paradigms used and identify any potential pitfalls in the above program.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Why is OOP appropriate in the implementation of data structures such as linked lists?
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The above program maintains an unordered linked list. Devise an algorithm to insert to an ordered linked list.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
A linked list can be ordered or unordered. Draw a UML class diagram to illustrate the concepts of encapsulation, inheritance and polymorphism.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
Explain how polymorphism is applied to the 
\family typewriter
insert()
\family default
 rather than the 
\family typewriter
display()
\family default
 method in this context.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
On 14 September 2020, it was reported that GrabCar was fined S$10,000 for a 4th user data privacy violation. The Personal Data Protection Commission (PDPC) said the update risked the personal data of 21,541 drivers and passengers, including profile pictures, names and vehicle plate numbers.
\end_layout

\begin_layout Standard
GrabCar rolled back the app to the previous version within about 40 minutes and took other remedial action, PDPC said.
\end_layout

\begin_layout Standard
On Aug 30, 2019, GrabCar notified the PDPC that profile data of 5,651 GrabHitch drivers was exposed to the risk of unauthorised access by other GrabHitch drivers for a 
\begin_inset Quotes qld
\end_inset

short period of time on the same day
\begin_inset Quotes qrd
\end_inset

 through the Grab app.
\end_layout

\begin_layout Standard
Grab's investigations traced the cause of the breach to a deployment of an update to the app on the same day. The purpose of the update was to address a potential vulnerability discovered within the Grab app.
\end_layout

\begin_layout Standard
In PDPC's findings, the application programming interface URL which allowed GrabHitch drivers to access their data, had contained a 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 portion that could potentially be manipulated to allow access to other drivers' data. According to GrabCar, there was no evidence that this vulnerability was exploited.
\end_layout

\begin_layout Standard
To fix the vulnerability, the update removed the 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 from the URL, which shortened it to a hard-coded 
\begin_inset Quotes qld
\end_inset

users/profile
\begin_inset Quotes qrd
\end_inset

. However, it failed to take into account the URL-based caching mechanism in the app, which was configured to refresh every 10 seconds.
\end_layout

\begin_layout Standard
The mechanism served cached content in response to data requests, so as to reduce the load of direct access to GrabCar's database.
\end_layout

\begin_layout Standard
With the update, all URLs in the Grab app ended with 
\begin_inset Quotes qld
\end_inset

users/profile
\begin_inset Quotes qrd
\end_inset

. Without the 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 in the URL, which directed data requests to the correct GrabHitch driver's accounts, the caching mechanism could no longer differentiate between drivers.
\end_layout

\begin_layout Standard
Thus, the mechanism provided the same data to all GrabHitch drivers for 10 seconds before new data was retrieved from GrabCar's database and cached for the next 10 seconds.
\end_layout

\begin_layout Standard
PDPC said GrabCar did not put in place 
\begin_inset Quotes qld
\end_inset

sufficiently robust processes
\begin_inset Quotes qrd
\end_inset

 to manage changes to its IT system that may put personal data it was processing at risk.
\end_layout

\begin_layout Standard

\begin_inset Quotes qld
\end_inset

This was a particularly grave error given that this is the second time the (GrabCar) is making a similar mistake, albeit with respect to a different system,
\begin_inset Quotes qrd
\end_inset

 he said.
\end_layout

\begin_layout Standard
In a statement in response to Reuters' query, Grab said: 
\begin_inset Quotes qld
\end_inset

To prevent a recurrence, we have since introduced more robust processes, especially pertaining to our IT environment testing, along with updated governance procedures and an architecture review of our legacy application and source codes.
\begin_inset Quotes qrd
\end_inset


\end_layout

\begin_layout Standard
In 2019, GrabCar was ordered to pay a financial penalty of S$16,000 after it sent out more than 120,000 marketing emails to customers containing the name and mobile phone number of another customer.
\end_layout

\begin_layout Standard
The PDPC had found that GrabCar 
\begin_inset Quotes eld
\end_inset

failed to make reasonable security arrangements
\begin_inset Quotes erd
\end_inset

 to detect the errors in their database when sending out the emails.
\end_layout

\begin_layout Standard
Source: Reuters/CNA/lk
\end_layout

\begin_layout Standard
Adapted from https://www.channelnewsasia.com/news/business/grab-car-hitch-pdpc-personal-data-risk-fin e-13108144 
\end_layout

\begin_layout Enumerate
For each of the following, suggest two ways in which the data leaks could have been exploited by a malicious hacker with reference to 
\end_layout

\begin_deeper
\begin_layout Enumerate
profile pictures, names and vehicle plate numbers of drivers and passengers
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
name and mobile phone number of customers 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What could have caused 
\end_layout

\begin_deeper
\begin_layout Enumerate
the URL related data leak? 
\end_layout

\begin_layout Enumerate
the marketing emails related data leak? 
\end_layout

\begin_layout Enumerate
the repeated data leaks? 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
You should provide a balance of technical and human related reasons. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
How can Grab ensure and assure PDPC that sufficiently robust processes have been put in place? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
On 28 June 2020, nearly 10,000 TraceTogether tokens were distributed to vulnerable seniors. The TraceTogether token supplements the TraceTogether mobile app by extending contact tracing to groups in the community who do not have smart phones and those whose phones do not work well with the TraceTogether app.
\end_layout

\begin_layout Standard
The TraceTogether token is designed to capture proximity data based on Bluetooth signals. Every five minutes, it scans to detect other TraceTogether users on the token or the app. The more 'hits' between two TraceTogether users, the more likely they are in close proximity for an extended period of time. Proximity can be estimated by the strength of the Bluetooth signal. The closer users are to one another, the stronger the signal and vice versa.
\end_layout

\begin_layout Standard
There are only four types of data contained in the token: 
\end_layout

\begin_layout Itemize
user's randomised ID 
\end_layout

\begin_layout Itemize
randomised ID of any other user in proximity 
\end_layout

\begin_layout Itemize
Bluetooth signal measured using RSSI* 
\end_layout

\begin_layout Itemize
timestamp of the encounter. 
\end_layout

\begin_layout Standard
*Received Signal Strength Indicator (RSSI) is a measure of the power level at the receiver. A more negative number indicates a device is further away. For example, a value of -20 to -30 indicates a device is close while a value of -120 indicates it is near the limit of detection.
\end_layout

\begin_layout Standard
It is important to note that these IDs do not refer to NRIC number, but randomised and anonymised IDs linked to a personal identifier like a mobile number. Also, no data is extracted unless a user has tested positive for COVID-19. From there, MOH has a special software key that can unlock the device and reveal the data for use in contact tracing.
\end_layout

\begin_layout Standard
A senior is tested positive for COVID-19 and MOH needs to perform contact tracing. With the user's permission, data from its TraceTogether token is retrieved and extracted to the file 
\family typewriter
TOKEN.txt
\family default
 and has the following structure:
\end_layout

\begin_layout Standard

\family typewriter
UserRandomisedID, OtherRandomisedID, RSSI, Timestamp
\family default

\end_layout

\begin_layout Standard
Timestamp is in the format YYYY-MM-DD HH:MM:SS.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Prolonged exposure is currently defined as being in close contact for at least 15 minutes within a single session. For simplicity, you may assume close contact as a Bluetooth signal strength of greater than or equal to -30. Generate the list of close contacts' randomised IDs which MOH needs to perform contact tracing. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Another 3 seniors with randomised ID 75348257, 45174591 and 02548147 have also been tested as COVD-19 positive. Write a Boolean function 
\family typewriter
is_close_contact(rid1, rid2)
\family default
 to determine if they are close contacts of 57345286. If yes, your function should also return the date(s) they are under prolonged exposure with each other, the start and end times as well as the total time in hours and minutes they are in close contact. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Write a program that sorts a list of student last names, but the sort only uses the first two letters of the name. Nothing else in the name is used for sorting. However, if two names have the same first two letters, they should stay in the same order as in the input (this is known as a 'stable sort'). Sorting is case sensitive based on ASCII order (with uppercase letters sorting before lowercase letters i.e. A<B<‚Ä¶<Z<a<b<‚Ä¶<z).
\end_layout

\begin_layout Subsubsection*
Input 
\end_layout

\begin_layout Standard
The input file 
\family typewriter
LASTNAMES.txt
\family default
 consists of a sequence of up to 500 test cases. Each case starts with a line containing an integer 
\begin_inset Formula $1\le n\leq200$
\end_inset

. After this follow 
\begin_inset Formula $n$
\end_inset

 last names made up of only letters (a‚Äìz, lowercase or uppercase), one name per line. Names have between 2 and 20 letters. Input ends when 
\begin_inset Formula $n=0$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Output 
\end_layout

\begin_layout Standard
For each case, print the last names in sort-of-sorted order, one per line. Print a blank line between cases.
\end_layout

\begin_layout Subsubsection*
Sample Input 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mozart 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Beethoven 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bach 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hilbert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Godel
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Poincare 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ramanujan 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pochhammmer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Sample Output 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Bach 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Beethoven 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mozart 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Godel 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hilbert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Poincare 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pochhammmer
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ramanujan 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You should make use of an appropriate data structure and one or more suitable sorting algorithms from the syllabus. Indicate as comments your choice of how you have adapted them or your case for designing and implementing your own. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school needs a web application for teachers to use during English lessons to record and view students' marks for weekly in-class presentations.
\end_layout

\begin_layout Standard
The teacher should be required to login and should only be able to input and view any information for students of the classes they teach.
\end_layout

\begin_layout Standard
The maximum score per presentation is 100. Each English lesson is always taught by the same teacher, each English lesson would only have one teacher, and each class would only have one English lesson per day.
\end_layout

\begin_layout Standard
In a training session conducted for teachers, a demo version of the app would be prepopulated with demo data as shown in the following table. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher's username 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher's password 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Index number of student 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student's class 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Date of presentation 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Marks obtained
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_raj 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cr53aYJP 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S306 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
95
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_james 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8orjqiZc 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S301 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
60
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mdm_rahayu 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7iqndCjW
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S302 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35.5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_james 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8orjqiZc 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
11 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S304 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200325
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
60
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
You have been tasked to create this web application. The data file 
\family typewriter
DEMOAPP.txt
\family default
 contains the demo data.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create the user interface using HTML and CSS for the application. The fields should include: 
\end_layout

\begin_layout Itemize
TeacherUsername 
\end_layout

\begin_layout Itemize
TeacherPassword 
\end_layout

\begin_layout Itemize
StudentIndex 
\end_layout

\begin_layout Itemize
Class 
\end_layout

\begin_layout Itemize
PresentationDate 
\end_layout

\begin_layout Itemize
Marks The information should be presented in a tabular form. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Create a normalised relational database scheme for this application. Provide the SQL statements for the creation of the tables. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Populate the table(s) with the demo data described above. Provide SQL statements for the insertion of the records in 
\family typewriter
task3.sql
\family default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Provide the processing logic in 
\family typewriter
app.py
\family default
 and the associated template file(s). 
\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Using SQL or otherwise, determine and display the total marks scored by each class to the appropriate template file. 
\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A dental clinic wishes to manage its patients' information using a NoSQL database.
\end_layout

\begin_layout Standard
There are 2 rooms in the clinic: Room 1 and Room 2.
\end_layout

\begin_layout Standard
There are 3 dentists in the clinic: Doctor 1, Doctor 2, Doctor 3.
\end_layout

\begin_layout Standard
Information about the patients is stored in the data file PATIENTS.txt in the following format:
\end_layout

\begin_layout Standard

\family typewriter
PatientID,Name,Appointment Date,Appointment Start Time,Doctor Assigned,Room Number,Amount Charged 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
PatientID
\family default
 is an integer 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 is made up of letters and space only 
\end_layout

\begin_layout Itemize

\family typewriter
Appointment Date
\family default
 is in DDMMYYYY format 
\end_layout

\begin_layout Itemize

\family typewriter
Appointment Start
\family default
 Time is HHMM in 24-hour format 
\end_layout

\begin_layout Itemize

\family typewriter
Doctor Assigned
\family default
 is either Doctor 1, Doctor 2 or Doctor 3 
\end_layout

\begin_layout Itemize

\family typewriter
Room Number
\family default
 is either Room 1 or Room 2 
\end_layout

\begin_layout Itemize

\family typewriter
Amount Charged
\family default
 is a float to 2 decimal places 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to convert and import the data from 
\family typewriter
PATIENTS.txt
\family default
 into a MongoDB database Clinic under the collection 
\family typewriter
Patient
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code to allow the Admin Clerk to add new patients by requesting for the following information: 
\end_layout

\begin_layout Itemize
New patient's Name 
\end_layout

\begin_layout Itemize
Appointment Date in DDMMYYYY format 
\end_layout

\begin_layout Itemize
Appointment Start Time in 24-hour HHMM format 
\end_layout

\begin_layout Itemize
Doctor to be Assigned 
\end_layout

\begin_layout Standard
The program should automatically assign a 
\family typewriter
PatientID
\family default
. Your program should perform the necessary validation for each field. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
The Admin Clerk wants to know if there are issues with appointments. Write program code to output appointments clashes and double bookings. If an appointment clash occurs, reschedule the latter appointment to the nearest available appointment on the same date. If a double booking occurs, delete the latter duplicate booking. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write program code for the Admin Clerk to determine the top 3 paying patients. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
The Admin Clerk realised that there are patients with the same name. Write program code to identify patients with the same names and output their 
\family typewriter
PatientID
\family default
s. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 characteristics of client-server network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of client-server network compared to peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Briefly explain how Domain Name Server (DNS) works. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the DHCP server
\begin_inset Quotes ers
\end_inset

s process to allocate an IP address to a client. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Computing technology was adopted worldwide during the recent pandemic. 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 positive and 
\series bold
one
\series default
 negative impact you have observed.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The national task force sets a code of conduct for all computing professionals working on contact tracing, data analysis, etc. Describe two rules that you would expect to be included. For each of your rules, give an example of the unethical behaviour it is designed to prevent. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Using real-life examples, explain the terms data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe how data is transmitted in a packet switching network, and give two advantages of packet switching over circuit switching network.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain the purpose of layering in TCP/IP model. List the layers in order and describe each layer
\begin_inset Quotes ers
\end_inset

s major function. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The ASCII code in denary for the character 
\begin_inset Quotes els
\end_inset


\family typewriter
1
\family default

\begin_inset Quotes ers
\end_inset

 is 
\family typewriter
49
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Using 7 bits, express the ASCII code for the character 
\begin_inset Quotes els
\end_inset


\family typewriter
4
\family default

\begin_inset Quotes ers
\end_inset

 in binary.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Express the character 
\begin_inset Quotes els
\end_inset


\family typewriter
4
\family default

\begin_inset Quotes ers
\end_inset

 as a hexadecimal number. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Convert 
\family typewriter
4B1
\family default
 hexadecimal number to a binary number stored as two bytes. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In a restaurant, every membership account number is made up of five digits followed by a letter e.g. 
\family typewriter
36514C
\family default
 where the letter is a modulus-eleven check digit for the account number. Each digit is weighted, with the first digit having a weight of 
\family typewriter
7
\family default
 and each subsequent digit decreases its weight by 
\family typewriter
1
\family default
. Valid check digits are in the range of letter C to letter M, with C corresponding to the value of 1, D corresponds to 2 and so on. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the purpose of including a check digit at the end of each membership account number? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Write, in 
\series bold
pseudocode
\series default
, an algorithm which checks whether a membership account number is valid. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using your algorithm, determine whether a person with the account number 
\family typewriter
47938K
\family default
 is a member of the restaurant. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q5] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Run-length encoding is a simple data compression technique that can be effective when repeated values occur at adjacent positions within a string. Compression is achieved by replacing groups of repeated values with one copy of the value, followed by the number of times the value should be repeated. For example, 
\begin_inset Quotes eld
\end_inset


\family typewriter
AAAAABBBAAAB
\family default

\begin_inset Quotes erd
\end_inset

 would be compressed as 
\begin_inset Quotes eld
\end_inset


\family typewriter
A5B3A3B1
\family default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
Write, in 
\series bold
pseudocode
\series default
, a function that implements the run-length compression technique described above. The function will take a string argument and return the run-length compressed string. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using 
\series bold
pseudocode
\series default
, write a detailed algorithm for a function which will take two string values, called 
\family typewriter
P
\family default
 and 
\family typewriter
Q
\family default
, and will search the string value 
\family typewriter
P
\family default
 for the first occurrence of the string value 
\family typewriter
Q
\family default
 within it. The value returned is the start position of the first occurrence of 
\family typewriter
Q
\family default
 in 
\family typewriter
P
\family default
, or zero if there is no occurrence. Assume the string index starts at 1. For example, if 
\family typewriter
P
\family default
 is '
\family typewriter
bananas
\family default
' and Q is '
\family typewriter
na
\family default
' then the function would give the result 3, because '
\family typewriter
na
\family default
' first occurs in '
\family typewriter
bananas
\family default
' starting at character position three. [6] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q6] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 key characteristics of a recursive function, and when is it suitable to be used. [3] 
\end_layout

\begin_layout Enumerate
The procedure 
\family typewriter
MoveTower(n,i,j)
\family default
 shown below simulates the movement of moving 
\family typewriter
n
\family default
 discs from peg 
\family typewriter
i
\family default
 to peg 
\family typewriter
j
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE MoveTower(n, i, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF n = 1 OUTPUT (
\begin_inset Quotes qrd
\end_inset

Move disc from peg
\begin_inset Quotes qrd
\end_inset

, i, 
\begin_inset Quotes qld
\end_inset

to peg
\begin_inset Quotes qrd
\end_inset

, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MoveTower(n-1, i, 6-i-j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT (
\begin_inset Quotes qrd
\end_inset

Move disc from peg
\begin_inset Quotes qrd
\end_inset

, i, 
\begin_inset Quotes qld
\end_inset

to peg
\begin_inset Quotes qrd
\end_inset

, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MoveTower(n-1, 6-i-j, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Dry-run the procedure and show the output that is produced when the task is to move 3 discs from peg 1 to peg 3. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Assuming a stack is used for passing parameters to the procedure, show also the contents of the stack, excluding the return address, after each of the first 
\series bold
five
\series default
 procedure calls. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate
If a procedure is to be able to call itself recursively, it is usual for the values of any variables used in the procedure to be held in a stack rather than in fixed storage. Why is this? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list ADT has the following operations defined: 
\end_layout

\begin_layout Itemize

\family typewriter
Create(x) 
\family default
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- creates an empty linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Insert(x,item,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts new value, 
\family typewriter
item
\family default
, into linked list 
\family typewriter
x
\family default
 so that it is at position 
\family typewriter
p
\family default
 in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Delete(x,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- deletes the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Read(x,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Length(x)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns the number of items in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmptyList(x)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns 
\family typewriter
True
\family default
 if linked list 
\family typewriter
x
\family default
 is empty, otherwise returns 
\family typewriter
False
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear(x)
\family default
 ‚Äì empties the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that have two parts: the item data and a pointer to the next item in the list. In addition, there is a 
\family typewriter
Start
\family default
 pointer which points to the first item in the list. 
\end_layout

\begin_layout Enumerate
Write algorithms that could be used to implement the 
\begin_inset Quotes els
\end_inset


\family typewriter
Delete
\family default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\family typewriter
Insert
\family default

\begin_inset Quotes ers
\end_inset

 operation. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
A stack ADT has the following operations: 
\end_layout

\begin_layout Itemize

\family typewriter
Create()
\family default
 - creates a new stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Push(item)
\family default
 - adds 
\family typewriter
item
\family default
 onto the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Pop()
\family default
 - deletes and returns item from the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 ‚Äì if the stack is empty returns True, otherwise False; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear()
\family default
 ‚Äì removes all items in the stack; 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Show how to implement 
\begin_inset Quotes els
\end_inset


\family typewriter
Create
\family default

\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset


\family typewriter
Push
\family default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\family typewriter
Pop
\family default

\begin_inset Quotes ers
\end_inset

 operation using the list ADT operations.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The stack implementation above is used to implement the undo/redo mechanism of a text editor.
\end_layout

\begin_layout Standard
An Undo stack is used to keep the edit history of the editor and the Redo stack is used to keep the history of the undo operations. The content of the text editor is stored as a string in the Undo stack and Redo stack.
\end_layout

\begin_layout Standard
When an undo is invoked, the Undo stack is popped and the content is pushed into the Redo Stack. When a redo is invoked, the Redo stack is popped and the content is pushed into the Undo Stack. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Using the stack ADT operations, show how to implement the following functions which return the contents. Assume that 
\family typewriter
undoStack
\family default
 and 
\family typewriter
redoStack
\family default
 are created. 
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
FUNCTION Undo() RETURNS STRING
\family default
 
\end_layout

\begin_layout Enumerate

\family typewriter
FUNCTION Redo() RETURNS STRING
\family default

\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
S-Cut offers haircut service at a price based on age group at 60 outlets located around Singapore. S-Cut has engaged you to develop an application that runs on kiosk stationed at their outlets. The application uses a relational database to store the data. Customers need to register as a regular member with their name, contact number and price. They can purchase a haircut service using the kiosks provided. The service record should contain date of service, member information and the outlet information. Based on the requirements given above, design the database that consists of 3 tables: Member, Outlet and ServiceRecord. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the tables in third normal form (3NF) and their relationships between them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName( 
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ‚Ä¶) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. Using the information given, write table descriptions for the tables you have identified in part 
\series bold
(a)(i)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
To attract more customers, some outlets offer 20% discount on Saturday and Sunday. Write the table description with the changes to the database to capture the change in price per haircut on Saturday and Sunday. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
S-Cut offers platinum membership which entice members to additional benefits. Platinum member needs to credit $100 to their account which entitles them to 12 sessions of haircut services, in addition they will receive a birthday gift on their birthday month. To ensure greater productivity in development of the membership system, object oriented design is used. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram for member class(es) which exhibit the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
Suitable classes with appropriate properties and methods 
\end_layout

\begin_layout Itemize
Inheritance 
\end_layout

\begin_layout Itemize
Polymorphism 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the term 
\series bold
encapsulation
\series default
 and how it is applied in your design in (c)(i). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the term 
\series bold
polymorphism
\series default
 and how it is applied in your design in (c)(i). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
An alternative way to develop an application that runs on the kiosk would be a web-based application. State 
\series bold
two
\series default
 differences between a native application and a web-based application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
S-Cut collects data from the customer, describe 
\series bold
two
\series default
 data protection obligations on how S-Cut must comply with the Personal Data Protection Act (PDPA). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
COVID19.TXT
\family default
 stores the cumulative total number of confirmed covid-19 cases in Singapore from 14 April 2020 till 15 May 2020.
\end_layout

\begin_layout Standard
A sample record is:
\end_layout

\begin_layout Standard

\family typewriter
1704
\family default
, 
\family typewriter
5050 
\family default

\end_layout

\begin_layout Standard
This means that as of 17 April 2020, a cumulative total of 5050 confirmed covid-19 cases were reported.
\end_layout

\begin_layout Standard
The task is to determine the dates with the highest and lowest number of the confirmed new covid-19 cases in Singapore and the longest ascending streak during the period.
\end_layout

\begin_layout Standard
Note: You cannot use the built-in 
\family typewriter
sort()
\family default
, 
\family typewriter
min()
\family default
 and 
\family typewriter
max()
\family default
 functions.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the data from the text file 
\end_layout

\begin_layout Itemize
calculate the number of new covid-19 cases per day (from 15 April 2020 to 15 May 2020) 
\end_layout

\begin_layout Itemize
output the dates with the highest and lowest numbers of new covid-19 cases, excluding the first day on 14 April 2020. 
\end_layout

\begin_layout Itemize
If more than one dates exists with the highest/lowest number of new covid-19 cases, all dates are reported. 
\end_layout

\begin_layout Subsubsection*
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
Highest # cases (1426) is on 20 April 2020 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Lowest # cases (447) is on 15 April 2020, 2 May 2020
\family default
 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Determine the ascending streak of new covid-19 cases 
\end_layout

\begin_layout Itemize
output the longest ascending streak of new cases across the period from 15 April 2020 to 15 May 2020 inclusive. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="18" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cumulative Total Cases 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New Cases 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1404 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3252 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1504 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3699 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
447 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1604 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4427 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
728 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1704 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5050 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
623 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1804 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5992 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
942 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1904 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6588 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
596 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18205 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
657 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18778 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
573 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19410 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
632 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20198 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
788 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20939 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
741 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1205 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
24671 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
884 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25346 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
675 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1405 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26098 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
752 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1505 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26891 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
793 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection*
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
Longest ascending streak is 3 days
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
COUNTRY1.TXT
\family default
 stores a list of country names.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using the country name, a hash address is calculated from a hashing function as follows: 
\end_layout

\begin_layout Itemize
the ASCII code is calculated for each character (in lowercase) within the country name 
\end_layout

\begin_layout Itemize
the total of ASCII values is calculated 
\end_layout

\begin_layout Itemize
the total is divided by 30 and the remainder is the hash address for this country 
\end_layout

\begin_layout Standard
For example, the hash address for 
\family typewriter
Brazil
\family default
 is 14
\end_layout

\begin_layout Standard
Write program code for the hashing function using the following specification
\end_layout

\begin_layout Standard

\family typewriter
FUNCTION HashKey (Country: STRING): INTEGER 
\family default

\end_layout

\begin_layout Standard
This function has a single parameter 
\family typewriter
Country
\family default
 and returns the hash address as an integer. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
The hash table is implemented as a list with 30 elements. Elements are written to and read from the hash table using the above hash function with the country name as the input parameter.
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
Read all country names from 
\family typewriter
COUNTRY1.TXT
\family default
 
\end_layout

\begin_layout Itemize
Use the function 
\family typewriter
HashKey
\family default
 to calculate the hash address for each country 
\end_layout

\begin_layout Itemize
Store each country name in the hash table 
\end_layout

\begin_layout Standard
You must ensure that when a collision occurs, your program design will deal with this situation by searching sequentially from the calculated hash address for an empty location and storing the country name at this empty location. The program will generate an error message if the hash table is full. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code for a procedure SearchCountry using the following specification
\end_layout

\begin_layout Standard

\family typewriter
PROCEDURE SearchCountry (Country: STRING, HashTable: LIST)
\family default

\end_layout

\begin_layout Standard
This procedure has two parameters, 
\family typewriter
Country
\family default
 and 
\family typewriter
HashTable
\family default
, and does the following: 
\end_layout

\begin_layout Itemize
Calculate the hash address for the country 
\end_layout

\begin_layout Itemize
Locate the country name in the hash table 
\end_layout

\begin_layout Itemize
Report whether or not this country name was found. If found, also output the address of the hash table where the country was found. 
\end_layout

\begin_layout Standard
You must ensure that your program can deal with collision when searching. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Devise a set of 
\series bold
three
\series default
 test cases with the country to be used. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
The file 
\family typewriter
COUNTRY2.TXT
\family default
 stores a list of countries with their corresponding numbers of confirmed cases and death cases of COVID19 pandemic on May 16, 2020.
\end_layout

\begin_layout Standard
Each record has the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<country>,<no. of confirmed cases>,<no. of death case> 
\family default
 
\end_layout

\begin_layout Standard
A sample record is 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Brazil, 233142, 15633 
\family default
 
\end_layout

\begin_layout Standard
Death rate for each country is calculated as the number of death cases / the number of confirmed cases. This rate is output as a percentage to 1 decimal place. For the example above, the death rate of Brazil is 
\begin_inset Formula $15633/233142=6.7\%$
\end_inset

.
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
Read the data from 
\family typewriter
COUNTRY2.TXT 
\family default
 
\end_layout

\begin_layout Itemize
Implement 
\series bold
bubble sort
\series default
 to arrange the countries from highest to lowest death rate 
\end_layout

\begin_layout Itemize
Generate a text file 
\family typewriter
RATE.TXT
\family default
 to display the list of countries and their death rate. Each record has the format 
\family typewriter
<country>, <death rate>
\family default
. 
\end_layout

\begin_layout Standard
If two countries have the same death rate, their order in the list does not matter. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bakery currently keeps records on paper of all its products it sells in the shop. It decided to trial a database to manage its products. It is expected that the database should be normalized. The following information of the bakery is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
ProductCode
\family default
 ‚Äì Unique code of the item 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 ‚Äì Name of the item 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 ‚Äì The type of product ‚Äì 
\family typewriter
'Cake'
\family default
, 
\family typewriter
'Loaf'
\family default
, 
\family typewriter
'Bun'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Location
\family default
 ‚Äì The location at which the product is made ‚Äì 
\family typewriter
'North'
\family default
, 
\family typewriter
'South'
\family default
, 
\family typewriter
'East'
\family default
, 
\family typewriter
'West'
\family default
 Kitchen 
\end_layout

\begin_layout Itemize

\family typewriter
Price
\family default
 ‚Äì The selling price of the product 
\end_layout

\begin_layout Standard
For cakes, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
ServingSize
\family default
 ‚Äì the estimated number of servings per cake 
\end_layout

\begin_layout Itemize

\family typewriter
Shape
\family default
 ‚Äì Shape of the cake ‚Äì 
\family typewriter
'Square'
\family default
, 
\family typewriter
'Circle'
\family default
, 
\family typewriter
'Roll'
\family default
 
\end_layout

\begin_layout Standard
For loaves, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Weight
\family default
 ‚Äì weight of loaf in gram 
\end_layout

\begin_layout Standard
For buns, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
PiecesPerPackage
\family default
 ‚Äì number of pieces per package 
\end_layout

\begin_layout Standard
The information is to be stored in four different tables:
\end_layout

\begin_layout Standard

\family typewriter
Product 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cake 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Loaf 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Bun
\family default

\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create a SQL file named 
\family typewriter
Task3_1_<your_name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
bakery.db
\family default
 with the four tables. The table, 
\family typewriter
Product
\family default
, must use the 
\family typewriter
ProductCode
\family default
 as its 
\series bold
primary key
\series default
. The other tables must refer to the 
\family typewriter
ProductCode
\family default
 as a 
\series bold
foreign key
\series default
.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task3_1_<your_name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
CAKES.TXT
\family default
, 
\family typewriter
LOAVES.TXT
\family default
 and 
\family typewriter
BUNS.TXT
\family default
 contain information about the bakery
\begin_inset Quotes ers
\end_inset

s cakes, loaves and buns respectively for insertion into the bakery database. Each row in the three files is a comma-separated list of information about a single product.
\end_layout

\begin_layout Standard
For 
\family typewriter
CAKES.TXT
\family default
, the information about each cake is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, ServingSize, Shape 
\family default
 
\end_layout

\begin_layout Standard
For 
\family typewriter
LOAVES.TXT
\family default
, the information about each loaf is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, Weight 
\family default
 
\end_layout

\begin_layout Standard
For 
\family typewriter
BUNS.TXT
\family default
, the information about each bun is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, PiecesPerPackage
\family default
 
\end_layout

\begin_layout Standard
Write a Python program to insert all information from the three files into the bakery database, bakery.db. Run the program.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task3_2_<your_name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write SQL code to show the 
\family typewriter
ProductCode
\family default
, 
\family typewriter
Name
\family default
, 
\family typewriter
Location
\family default
, 
\family typewriter
Price
\family default
 and the 
\family typewriter
ServingSize
\family default
 of each cake with 
\family typewriter
'Circle'
\family default
 Shape. Run the query.
\end_layout

\begin_layout Standard
Save this code as
\end_layout

\begin_layout Standard

\family typewriter
Task3_3_<your_name>_<centre number>_<index number>.sql 
\family default

\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
The bakery wants to filter the products by 
\family typewriter
Location
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
Location
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display a table tabulating the details of the product based on the 
\family typewriter
Location
\family default
 in ascending order of 
\family typewriter
Price
\family default
. The table will display the following columns: 
\family typewriter
Name
\family default
, 
\family typewriter
Type
\family default
, 
\family typewriter
Price
\family default
. 
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
Task3_4_<your_name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files/sub-folders as needed in a folder named Task3_4_<your_name>_<centre number>_<index number>
\end_layout

\begin_layout Standard
Run the web application. Save the output of the program when 
\family typewriter
'North'
\family default
 is entered as the 
\family typewriter
Location
\family default
 as
\end_layout

\begin_layout Standard

\family typewriter
Task3_4_<your_name>_<centre number>_<index number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a program to manipulate different data structures using Object-Oriented Programming.
\end_layout

\begin_layout Standard
The superclass, 
\family typewriter
LinkedStructure
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize
A linear linked list of data items held in an 
\series bold
array
\series default
 of size 10. Array index starts at 1. 
\end_layout

\begin_layout Itemize
Head pointer, pointing to the first element in the linked list 
\end_layout

\begin_layout Itemize
Tail pointer, pointing to the last element in the linked list 
\end_layout

\begin_layout Itemize
Free pointer, pointing to the first element in the free list 
\end_layout

\begin_layout Standard
The diagram shows the linked structure after four items have been added and the unused nodes are linked together. 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\end_layout

\begin_layout Standard
This superclass has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Initialise()
\family default
 method sets up an empty linked list. Should link all nodes to form the free list. Initialise values for head pointer, tail pointer and free pointer 
\end_layout

\begin_layout Itemize

\family typewriter
Add(item)
\family default
 appends the parameter into its correct 
\series bold
alphabetical
\series default
 order in the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
Remove(item)
\family default
 removes the parameter from the ordered linked list 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 displays the data items in the linked list in alphabetical order 
\end_layout

\begin_layout Itemize

\family typewriter
PrintStructure()
\family default
 displays the current state of all pointers and the array contents in index order 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 tests for empty linked list 
\end_layout

\begin_layout Itemize

\family typewriter
IsFull()
\family default
 tests for no unused nodes 
\end_layout

\begin_layout Standard
The superclass is used to implement a linear queue.
\end_layout

\begin_layout Standard
The subclass 
\family typewriter
Queue
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Add(item)
\family default
 appends the parameter to the queue and overrides the 
\family typewriter
LinkedStructure
\family default
 add method . 
\end_layout

\begin_layout Itemize

\family typewriter
Remove()
\family default
 returns and removes the next item in the queue 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 method should display the queue contents in order (e.g. the earliest added item first) and should override the 
\family typewriter
LinkedStructure
\family default
 display method. 
\end_layout

\begin_layout Standard
Each method updates its appropriate pointers, and produces suitable errors (or returns different values) to indicate if the actions are not possible, e.g. if the structure is empty.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the superclass 
\family typewriter
LinkedStructure
\family default
. 
\begin_inset space \hfill{}

\end_inset

[20]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
create a 
\family typewriter
LinkedStructure
\family default
 object 
\end_layout

\begin_layout Itemize
add the following three data items in the order shown to the ordered linked list 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
Japan, Singapore, China 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
output all pointers and array contents using the 
\family typewriter
PrintStructure()
\family default
 method after adding the items 
\end_layout

\begin_layout Itemize
output the current contents of the linked list using the 
\family typewriter
Display()
\family default
 method 
\end_layout

\begin_layout Itemize
remove two data items 
\family typewriter
China
\family default
, 
\family typewriter
Japan
\family default
 in that order from the linked list 
\end_layout

\begin_layout Itemize
output all pointers and array contents using the 
\family typewriter
PrintStructure()
\family default
 method after the removal of the items. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code for the subclass 
\family typewriter
Queue
\family default
.
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism in your designs. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.4
\end_layout

\begin_layout Standard
The file 
\family typewriter
QUEUE.TXT
\family default
 stores data to test your program.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
create a new queue and add the data in the file QUEUE.TXT to the queue 
\end_layout

\begin_layout Itemize
output the current contents of the queue 
\end_layout

\begin_layout Itemize
remove and output two items from the queue 
\end_layout

\begin_layout Itemize
output all pointers and the array contents of the queue after the removal of the items. 
\end_layout

\begin_layout Standard
All outputs should have appropriate messages to indicate what they are showing. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A one-dimensional array 
\family typewriter
X
\family default
 will be used to record the timings of the participating teams racing in a 200 metres dragon boat race event. Five dragon boat teams will compete in the event, and the timing (in seconds) of each team will be captured as records in 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timing, seconds 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
58.61 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
48.54 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
59.32 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.78
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A segment of the pseudocode to perform bubble sort is given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Line 1: 
\begin_inset space \qquad{}

\end_inset

flag <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 2: 
\begin_inset space \qquad{}

\end_inset

WHILE flag = TRUE DO 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 3: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

flag <- FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 4: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR i = 1 to N //N is the size of array X 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 5: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF X[i] > X[i+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 6: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 7: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SWAP(X[i], X[i+1])//swaps value of items 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 8: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

flag <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 9: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 10: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT i 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 11: 
\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\end_inset

An error is detected in the pseudocode above. 
\end_layout

\begin_layout Enumerate
Identify the error by stating the line number, and the type of error.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\series bold
Without
\series default
 changing the order and the types of constructs used, rectify the error in 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Using the race timings of the dragon boat event given above, use a trace table to illustrate that the amended algorithm works. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe the worst case scenario, and state the worst case time complexity for performing the bubble sort using the algorithm given above. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In the worst case scenario, state the total number of comparisons made by the bubble sort algorithm if 10 lanes are used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q10] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program written using object-oriented programming has 
\family typewriter
point
\family default
, 
\family typewriter
circle
\family default
, and 
\family typewriter
cone
\family default
 as its defined classes. The following diagram below shows the attributes and methods of the class 
\family typewriter
point
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
point 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Properties: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROTECTED: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
x-value: REAL 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
y-value: REAL 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PUBLIC: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor() 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getCoordinates(): TUPLE 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setCoordinates(x, y: REAL)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw an inheritance diagram for 
\series bold
all
\series default
 the 
\series bold
three
\series default
 classes defined in the program. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain the differences between 
\end_layout

\begin_deeper
\begin_layout Enumerate
private and protected attributes/ methods of a class, 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
an object and a class. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q11] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A clinic manages patients
\begin_inset Quotes ers
\end_inset

 medical and financial records through an Internet-based information management portal. Due to several security incidents related to unintended disclosure of patients
\begin_inset Quotes ers
\end_inset

 information, the clinic
\begin_inset Quotes ers
\end_inset

s management has decided to migrate the portal to a local area network (LAN) that consists only 
\series bold
four
\series default
 computers and 
\series bold
one
\series default
 printer. Information of patients
\begin_inset Quotes ers
\end_inset

 medical and financial records can only be accessed by authorised staff on one of the four computers. 
\end_layout

\begin_layout Enumerate
Describe the meaning of the term local area network (LAN). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why ring networks today rarely use physical layout of a ring? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the functions of a multi-station access unit used in a Token Ring network. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe how token passing enables a computer to send data to the printer in this Token Ring network. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every sales transaction made in JPJC supermarket is stored as a record in a serial file for auditing purposes. At the end of each day, a copy of the daily serial file, sorted by transaction amount in descending order will be archived into the main database. 
\end_layout

\begin_layout Enumerate
State what is meant by a serial file? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain how an archive file is different from a backup file, and describe how a backup file for sales transactions can be created for JPJC supermarket.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Merge sort algorithm is used to arrange the sales transaction records by ordering them in descending order of transaction amounts. The algorithm will first read all the daily unsorted sales transactions into 
\family typewriter
A
\family default
, a fixed size array of records with index starting from 1. Then, 
\family typewriter
mergesort
\family default
 will be applied to sort 
\family typewriter
A
\family default
. The pseudocode for 
\family typewriter
mergesort
\family default
 is given below,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE mergesort(A: ARRAY of RECORDS, x, y: INTEGERS)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF x < y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

m x + ((y - x) DIV 2) //DIV performs integer division 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(A, x, m) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(A, m + 1, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

merge(A, x, m, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
//-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-main program-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
mergesort(A, x, y) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given that array 
\family typewriter
A = [39.10, 17.50, 35.40, 42.68, 8.90, 35.40]
\family default
, and 
\family typewriter
merge(A, x, m, y)
\family default
 will sort and combine elements of 
\family typewriter
A[x:m]
\family default
, and 
\family typewriter
A[m+1:y]
\family default
 into 
\family typewriter
A[x:y]
\family default
 in descending order. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State the values of 
\family typewriter
x
\family default
, and 
\family typewriter
y
\family default
 when 
\family typewriter
mergesort
\family default
 is called in the main program.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State the total number of times 
\family typewriter
mergesort
\family default
 and 
\family typewriter
merge
\family default
 are called in the entire program.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The following diagram shows an incomplete trace tree diagram of the array of sales transaction records represented by its sales amount. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Draw and complete the trace tree diagram above by applying merge sort to the unsorted array of records A. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

The time complexity for merge sort is 
\begin_inset Formula $O(N\log_{2}N)$
\end_inset

. Explain why this time complexity is applicable to the best, average and worst case scenarios.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a recursive algorithm? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the difference between an iterative algorithm and a recursive algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Design a recursive algorithm 
\family typewriter
SumOfCubes(n)
\family default
 using pseudocode, that returns the integer value of series 
\begin_inset Formula \[
1^{3}+2^{3}+3^{3}+\ldots+(n-1)^{3}+n^{3},
\]
\end_inset

where 
\begin_inset Formula $n=1,2,3,\ldots$
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain what will happen when the value of 
\family typewriter
n 
\family default
gets too large. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The elections department of a town wishes to store the records of its voters in a linked list. The stored records are first ordered by the voter
\begin_inset Quotes ers
\end_inset

s age (in years), followed by voter
\begin_inset Quotes ers
\end_inset

s name in alphabetical order. The voters list is maintained with the record of the youngest voter at the start of the list. 
\end_layout

\begin_layout Enumerate
Explain why the sequence of nodes in a linked list does not always reflect how the data is stored in the memory of the computer. [2] 
\begin_inset space \quad{}

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Age
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Name
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Link
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Tim Tan
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
23
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Annie Hao
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
45
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Bob Boon
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Lester Moh
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
b
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
5
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
18
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ari Bello
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
c
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
52
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Helen How
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
7
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
23
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Cindy Ku
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
d
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
8
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
55
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Charles Chu
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
9
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
53
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Mimi Lee
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
e
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
10
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
40
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Jenny Tsai
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
f
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Head
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
g
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Free
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Two linked lists are kept to manage the actual data, and the free spaces. When a new item is added, a node is taken from the head of the free space list, and when a node is deleted, the deleted node will be returned to the tail of the free space list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Given that 
\family typewriter
Ari Bello
\family default
 is the youngest voter, state the values of 
\family typewriter
a
\family default
, 
\family typewriter
b
\family default
, 
\family typewriter
c
\family default
, 
\family typewriter
d
\family default
, 
\family typewriter
e
\family default
, 
\family typewriter
f
\family default
, and 
\family typewriter
g
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw the 
\series bold
linked list diagram
\series default
 to show its state right after each of the following successive operations: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Insert 
\family typewriter
18
\family default
 years old, 
\family typewriter
Ahmad Ali
\family default
. 
\end_layout

\begin_layout Enumerate
Delete 
\family typewriter
23
\family default
 years old, 
\family typewriter
Cindy Ku
\family default
. 
\end_layout

\begin_layout Enumerate
Insert 
\family typewriter
37
\family default
 years old, 
\family typewriter
Tania Tan
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of using a linked list over a static array. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The stack is a first in last out data structure where the items are inserted to and deleted from the top of the stack. The items of the stack are globally stored in a fixed length array 
\family typewriter
S
\family default
 of size 20. A stack pointer 
\family typewriter
sp
\family default
 points to the top item in the stack, and is initialised to 0. The three basic methods of the stack are: 
\end_layout

\begin_layout Itemize

\family typewriter
PUSH(X) //inserts X as new item on the top of STACK S 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
POP() 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

//removes and returns item at the top of STACK S. 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
PEEK() 
\begin_inset space ~

\end_inset

//returns value of the item on top of STACK S without removing it. 
\family default
 
\end_layout

\begin_layout Enumerate
Write the pseudocode for the algorithms 
\family typewriter
PUSH(X)
\family default
, 
\family typewriter
POP()
\family default
, and 
\family typewriter
PEEK()
\family default
.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
The precedence order of the operators from highest to lowest is as follows: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Parenthesis 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 '^' 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
'*'
\family default
 or 
\family typewriter
'/'
\family default
 with equivalent level of priority 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 '+'
\family default
 or 
\family typewriter
'-'
\family default
 with equivalent level of priority 
\end_layout

\begin_layout Standard
The pseudocode below shows a stack-based function 
\family typewriter
InfixToPostfix
\family default
 that converts and returns an input expression represented in infix notation to its postfix form.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION InfixToPostfix(infix: STRING) RETURNS postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Scan through infix expression one token at a time from leftmost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Initialise empty STACK S 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Initialise empty STRING postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR token read from infix item by item 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CASE of token: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

operand : postfix <- postfix + token
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

'(' : PUSH(token) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

')' : REPEAT postfix <- postfix + POP() UNTIL POP() = '(' operator:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE S not empty 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF token = '(' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

BREAK 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF PEEK() is higher or equal precedence than token THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

postfix <- postfix + POP() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PUSH(token) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END CASE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

NEXT token 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

postfix <- postfix + POP() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

UNTIL S is empty 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Complete the trace table given below for 
\family typewriter
InfixToPostfix(
\begin_inset Quotes qrd
\end_inset

A/(B-C)*D^E
\begin_inset Quotes qrd
\end_inset

)
\family default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
token 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Description 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING postfix 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Stack, S
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Appends to postfix 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
empty
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/ 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Push to S 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
( 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Push to S 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/,(
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
‚Ä¶ 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Show, with the aid of diagrams, how the computer uses a stack to directly evaluate the value of the postfix expression 
\family typewriter
895-/12+*4-
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Traversal was performed on the binary tree given below. 
\end_layout

\begin_layout Enumerate
List the nodes, in the order, that are visited for, 
\end_layout

\begin_deeper
\begin_layout Enumerate
in-order traversal, 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
pre-order traversal, and 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
post-order traversal.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A binary search tree is considered as an ordered binary tree where the key values of nodes in the left sub-tree are less than the value of its parent (root) node's key, and key values of nodes in the right sub-tree are greater than the value of its parent (root) node
\begin_inset Quotes ers
\end_inset

s key. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a recursive algorithm can be used to locate a node with key value 
\family typewriter
search_key
\family default
 by returning 
\family typewriter
TRUE
\family default
 when 
\family typewriter
search_key
\family default
 is found, and 
\family typewriter
FALSE
\family default
 otherwise. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 advantage of using binary search tree as data structure over linked list, and describe a situation that would negate this advantage.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Car owners who wish to purchase or renew their insurance policy with XYZ Motor Insurance are required to accumulate not more than 6 demerit points in their driving records. Under this demerit points system, a driver who clocks up more than 20 demerit points will have his/her driving license revoked, thus denying the person from driving and from purchasing any vehicle insurance. Drivers who have not made any insurance claims for the past 3 years can get 2 demerit points off, and current employees of XYZ Motor Insurance can get 1 demerit point deducted. In addition, drivers awarded with certificate of merit can get 1 demerit point off as well. XYZ Motor Insurance only allows drivers to receive a maximum deduction of 3 demerit points per year. Draw a decision table to reflect the eligibility of car owners who wish to purchase or renew a car insurance policy with XYZ Motor Insurance. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company currently uses a computerised flat file to keep track of the monthly claims submitted by its employee, and has decided to use a relational database to store and manage the claims submitted by the employees instead. The following table shows the details of the computerised flat file.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Claims ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Item Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staff ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staff Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Department 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Amount
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2818 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Phone charger 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P212 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
John Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Production 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$53.23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3291 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Car Transport 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S281 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Chan, Molly 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sales 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$31.40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3998 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Meal, Lunch 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
O323 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Omar Hairi 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operations 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$7.20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4820 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
AAA Batteries 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E493 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muthu K. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Engineering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$10.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6322 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hard Drive 3TB 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A550 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jervois F. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accounts 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$27.99
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7384 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Medical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M438 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zudin B Ali 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Marketing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$48.00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
State and justify 
\series bold
one
\series default
 reason made by the company to migrate its claims information from the existing flat file system to a relational database management system. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 other fields which would be useful for the company to capture. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Given that the every claim is associated with one item, write the table descriptions of the relational database in 
\series bold
first normal form
\series default
 and 
\series bold
second normal form
\series default
. You are to include the fields in 
\series bold
(b)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q9] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the denary value of hexadecimal ABCD? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
An integer variable of size 4 bytes is used to keep track of the number of commuters who travel to work from Jurong bus interchange. State the maximum number of commuters this variable can keep track. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Jurong Pioneer Primary School uses buses to transport students to school. There are six bus routes labelled 
\family typewriter
A
\family default
 to 
\family typewriter
F
\family default
. A survey was conducted to analyse the punctuality statistics of these buses over a four-week period.
\end_layout

\begin_layout Standard
The data from the survey is stored in the file 
\family typewriter
SURVEY.TXT
\family default
. The format of the data in the file is: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<Day>,<A>,<B>,<C>,<D>,<E>,<F>
\family default
 
\end_layout

\begin_layout Standard
Positive numbers represent minutes early, negative numbers represent minutes late and 0 represents the bus having been on time.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write the program code that: 
\end_layout

\begin_layout Itemize
reads the entire contents of 
\family typewriter
SURVEY.TXT
\family default
 into an appropriate data structure called 
\family typewriter
Records
\family default
, and 
\end_layout

\begin_layout Itemize
displays the contents of 
\family typewriter
Records
\family default
 in neat columns. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Extend your program so that the following statistics for the four-week period may be calculated and output: 
\end_layout

\begin_layout Itemize
the number of late arrivals for each bus route, 
\end_layout

\begin_layout Itemize
the average number of minutes late for each bus route, using only data from days on which it was late, and 
\end_layout

\begin_layout Itemize
the bus route(s) with the highest number of days late. 
\end_layout

\begin_layout Standard
All the results should be displayed with appropriate annotation. The following is an example run of the program: 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsection*
Task 1.3
\end_layout

\begin_layout Standard
Additional code is to be written for the user to input a specific day, for example: 
\family typewriter
Fri3
\family default
, to be used for the analysis of data. Find and display how many buses were late on this day and for each late bus, display the route label and how late the bus was on this day.
\end_layout

\begin_layout Standard
Test your code using the following test data:
\end_layout

\begin_layout Standard

\family typewriter
Tue1
\family default

\end_layout

\begin_layout Standard

\family typewriter
Thu2
\family default

\end_layout

\begin_layout Standard
Download your program code for Task 1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your class>_<your name>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In linear queue data structure, elements are inserted until the queue becomes full. However, after the queue becomes full, new elements cannot be inserted until all the existing elements are removed from the queue. Although there are empty spaces in the queue, they remain unused. This is a disadvantage of a linear queue.
\end_layout

\begin_layout Standard
After inserting all the elements into a linear queue: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

John
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Amy
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Chetan
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Xin Xin
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Evan
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Front}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Rear}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Linear queue is still considered full after elements have been dequeued: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

John
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Amy
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Chetan
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Xin Xin
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Evan
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Front}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Rear}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
To overcome this disadvantage, a circular queue data structure may be implemented. The next element added to the queue will be stored at index 0 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Queue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Items
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[0:4] OF STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stores the elements of queue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of the first item added to the queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of the last item added to the queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Instantiates a 
\family typewriter
Queue
\family default
 object.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is empty and 
\family typewriter
FALSE
\family default
 otherwise.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is full and 
\family typewriter
FALSE
\family default
 otherwise.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enqueue(STRING)
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Inserts a new item to the queue. Displays a suitable message if the queue is full.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dequeue():STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns the item removed from the queue or 
\begin_inset Quotes eld
\end_inset


\family typewriter
NONE
\family default

\begin_inset Quotes erd
\end_inset

 if the queue is empty.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Outputs items from the front to the rear of the queue.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
CircularQueue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Instantiates a 
\family typewriter
CircularQueue
\family default
 object.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is full and 
\family typewriter
FALSE
\family default
 otherwise.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enqueue(STRING)
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Inserts a new item to the queue. Displays a suitable message if the queue is full.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dequeue():STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns the item removed from the queue or 
\begin_inset Quotes eld
\end_inset


\family typewriter
NONE
\family default

\begin_inset Quotes erd
\end_inset

 if the queue is empty.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Outputs items from the front to the rear of the queue.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Implement the classes 
\family typewriter
Queue
\family default
 and 
\family typewriter
CircularQueue
\family default
 with object-oriented programming. The first item added to an empty queue is stored at index 0. The attributes of each object is reinitialised when the queue becomes empty.
\begin_inset space \hfill{}

\end_inset

 [20]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
There are two printers in the General Office. One of the printers implements a linear queue while the other implements a circular queue.
\end_layout

\begin_layout Standard
Write the code to instantiate a 
\family typewriter
Queue
\family default
 object and a 
\family typewriter
CircularQueue
\family default
 object. Test your code, on both queues, using the following steps: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
i.
\end_layout

\end_inset

Enqueue five users in the order given in the diagram. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

Dequeue twice. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

Enqueue 
\begin_inset Quotes eld
\end_inset

Mohan
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iv.
\end_layout

\end_inset

Display the queue. 
\end_layout

\begin_layout Standard
Download your program code for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your class>_<your name>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The library in Jurong Pioneer Primary School uses a hybrid data structure to keep track of its inventory. Each record in the hash table stores a simple list 
\family typewriter
[<Category>, <Binary Search Tree object>]
\family default
. Each node in the Binary Search Tree (BST) stores the ISBN number and title of a book. The nodes in each BST share the same book category and are sorted, in ascending order, according to their ISBN numbers.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write the object-oriented code for the 
\family typewriter
BST
\family default
 and 
\family typewriter
BSTNode
\family default
 classes described above. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
A checksum is applied to determine the Hash Value for each 
\family typewriter
<Category>
\family default
, where the ASCII value of each character in the title is multiplied by its position in the 
\family typewriter
<Category>
\family default
 string (starting from left to right), and then summed.
\end_layout

\begin_layout Standard
For example, given the category 
\begin_inset Quotes eld
\end_inset

classics
\begin_inset Quotes erd
\end_inset

, the summed value would thus be: 
\begin_inset Formula $99\times1+108\times2+97\times3+115\times4+115\times5+105\times6+99\times7+115\times8=3884$
\end_inset

.
\end_layout

\begin_layout Standard

\begin_inset Formula $(3884\mod19)+1=9$
\end_inset


\end_layout

\begin_layout Standard
A weighted modulus 19 operation is then applied and 1 is added to the remainder to determine the final Hash Value.
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write the code for the function 
\family typewriter
CalcHash(my_string)
\family default
, which takes in a string argument and returns its resultant Hash Value. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write the code to declare and initialise 
\family typewriter
HashTable
\family default
, an empty hash table array that may store up to 19 records. [2]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard

\family typewriter
CATEGORIES.TXT
\family default
 is a text file containing the book categories. Read the entire contents of 
\family typewriter
CATEGORIES.TXT
\family default
 and update the records in the hash table. Collisions are handled using 
\series bold
linear probing
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\family typewriter
BOOKS.TXT
\family default
 holds the details of books in the library. The format of the data in the file is: 
\family typewriter
<Category>
\family default
,
\family typewriter
 <ISBN>
\family default
,
\family typewriter
 <Title>
\family default
.
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the lines from the file, 
\end_layout

\begin_layout Itemize
extract the 
\family typewriter
<Category>
\family default
, 
\family typewriter
<ISBN>
\family default
 and 
\family typewriter
<Title>
\family default
 values, and 
\end_layout

\begin_layout Itemize
add each book to the BST of its category. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsection*
Task 3.6 
\end_layout

\begin_layout Standard
Write the code to display the ISBN and title of each book belonging to 
\family typewriter

\begin_inset Quotes eld
\end_inset

classics
\begin_inset Quotes erd
\end_inset


\family default
 category. The output is sorted according to the ISBN numbers. Ensure your output uses headings to identify the data displayed.
\end_layout

\begin_layout Standard
Download your program code for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your class>_<your name>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer company has several offices throughout Singapore, each with several salespersons. Each salesperson is assigned to one office only. A record of the sales made by each salesperson has been set up using a relational database.
\end_layout

\begin_layout Standard
The following tables hold the data:
\end_layout

\begin_layout Standard

\family typewriter
CUSTOMER (
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, Email, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
OFFICE (
\family default

\family typewriter

\bar under
OfficeID
\bar default

\family default

\family typewriter
, PostalCode, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALE (
\family default

\family typewriter

\bar under
SalesPersonID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
CustomerID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SaleDate
\bar default

\family default

\family typewriter
, Amount) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALESPERSON (
\family default

\family typewriter

\bar under
SalesPersonID
\bar default

\family default

\family typewriter
, SalesPersonName, OfficeID*) 
\family default

\end_layout

\begin_layout Standard

\series bold
Note
\series default
: Underlined field indicates primary key. Asterisk (*) indicates a foreign key.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write the SQL code to create the four tables in the database named 
\family typewriter
computercompany.db
\family default
.
\end_layout

\begin_layout Standard
Save the SQL file as 
\family typewriter
TASK4_1_<your class>_<your name>.sql
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
CUSTOMER.CSV
\family default
, 
\family typewriter
OFFICE.CSV
\family default
, 
\family typewriter
SALE.CSV
\family default
 and 
\family typewriter
SALESPERSON.CSV
\family default
 contain information exported by their spreadsheets files. Write Python code to migrate them to the database.
\end_layout

\begin_layout Standard
Save your Python code as 
\family typewriter
TASK4_2_<your class>_<your name>.py
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write SQL code to show the 
\family typewriter
SaleDate
\family default
, 
\family typewriter
SalesPersonName
\family default
, 
\family typewriter
CustomerName
\family default
 and 
\family typewriter
Amount
\family default
 of all sale transactions performed at the office with ID 
\family typewriter
1
\family default
.
\end_layout

\begin_layout Standard
Save the SQL file as 
\family typewriter
TASK4_3_<your class>_<your name>.sql
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
A report is produced to show the top salesperson in each office each month.
\end_layout

\begin_layout Standard
Write Python code to: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
i.
\end_layout

\end_inset

generate a web form that allows a user to enter the month (
\family typewriter
1
\family default
 to 
\family typewriter
12
\family default
) and year, 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

use the data submitted by the web form to query the database, and 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

return a HTML page with the report displayed. 
\end_layout

\begin_layout Standard
The following is a sample report for March, 2020. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Top Performers in March 2020
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Office ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Salesperson
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Total Amount S$
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Low Kok Kheong 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7880
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Mindy Tan 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6935
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Monish Chandr 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10700
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Save your Python program as 
\family typewriter
TASK4_4_<your class>_<your name>.py
\family default
 with any additional files/ sub-folders as needed in a zipped folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_<your class>_<your name>.zip
\family default
.
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Deploy the web app on your local host and enter the following data: 
\end_layout

\begin_layout Enumerate
month ‚Äì 
\family typewriter
8
\family default
, and 
\end_layout

\begin_layout Enumerate
year ‚Äì 
\family typewriter
2020
\family default
. 
\end_layout

\begin_layout Standard
Save the screenshot of table generated as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_5_<your class>_<your name>.jpg
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Figure 1
\series default
 shows ten numbers stored in an array 
\family typewriter
L
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="10">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Figure 1
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[10]
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
34
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
27
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
63
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
56
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
16
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The numbers in 
\family typewriter
L
\family default
 are to be sorted.
\end_layout

\begin_layout Standard

\series bold
Figure 2
\series default
 shows an 
\series bold
incomplete
\series default
 structure chart that has been created while developing a solution to the problem of sorting the numbers in 
\family typewriter
L
\family default
.
\end_layout

\begin_layout Standard
The constant 
\family typewriter
MAX
\family default
 has been used to represent the size of the array. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 2
\series default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the goal of this problem. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
How should the curved arrow 
\series bold
(a)
\series default
 in 
\series bold
Figure 2
\series default
 be labelled? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What should be written in box 
\series bold
(b)
\series default
 in 
\series bold
Figure 2
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What should be written in box
\series bold
 (c)
\series default
 in 
\series bold
Figure 2
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
A new Bubble Sort routine is developed using the structure chart shown in 
\series bold
Figure 2
\series default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

What value will be in 
\family typewriter
L[1] 
\family default
when this Bubble Sort routine has finished executing on the array 
\family typewriter
L
\family default
 shown in 
\series bold
Figure 1
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

A Bubble Sort routine, based on the structure chart in 
\series bold
Figure 2
\series default
, always completes 
\family typewriter
MAX - 1
\family default
 passes through the array. Often, this number of passes is not required, as the contents of the array will be sorted after fewer passes have been made. If a pass is made through the array during which no swaps need to be made, then the array has been sorted.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the changes that need to be made to the Bubble Sort routine so that it will only complete the minimum number of passes through the array that are needed to fully sort the contents of the array. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The Bubble Sort routine can also be implemented using recursion. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Define what is meant by a recursive function. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Using pseudocode, write a recursive Bubble Sort routine.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain a disadvantage of a recursive Bubble Sort function over an iterative one.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Name and describe another recursive sort algorithm. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In Morse code, each letter of the alphabet is represented by a unique combination of dots and dashes. Study the following table carefully: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Letter
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Morse Code
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
. -
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dot dash
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . . .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dot dot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . - .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dash dot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . . .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dot
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A binary tree is used to represent this coding system. Each node, except the root node, contains a letter of the alphabet. The position of each letter in the tree is determined by its Morse code. Moving from one node to another down the tree is done by traversing either a left branch or a right branch. A left branch corresponds to a . (dot) and a right branch corresponds to a ‚Äì (dash).
\end_layout

\begin_layout Standard
The first three levels of the tree are shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
What are the Morse codes for the letters N and Y? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Draw a diagram of the binary tree which clearly shows the position of the letters D, C and B in the tree.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why this binary tree representation is not the most suitable data structure for performing English to Morse code conversion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe a better alternative and explain how the Morse code of a letter could be found. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The algorithm represented using pseudo-code in 
\series bold
Figure 3
\series default
 describes a method to convert two hexadecimal numbers into decimal. The subroutine 
\family typewriter
ToDecimal
\family default
 used in
\series bold
 Figure 3
\series default
 is shown in 
\series bold
Figure 4
\series default
 and the built-in subroutine 
\family typewriter
ASCII
\family default
 is explained in 
\series bold
Table 1
\series default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 3
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FOR Count <- 1 TO 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

INPUT HexString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Number <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

FOR EACH HexDigit IN HexString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- ToDecimal(HexDigit) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Number <- Number * 16 + Value 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDFOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

OUTPUT Number 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFOR
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
FOR EACH
\family default
 command steps through each character in a string working from left to right. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 4
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
SUBROUTINE ToDecimal(HexDigit)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF HexDigit = 
\begin_inset Quotes qld
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

B
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 11
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

C
\begin_inset Quotes qrd
\end_inset

 THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 12
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

D
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 13
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit * 
\begin_inset Quotes qld
\end_inset

E
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 14
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDlgit = 
\begin_inset Quotes qld
\end_inset

F
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 15
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit IN (
\begin_inset Quotes qrd
\end_inset

0
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

l
\begin_inset Quotes qrd
\end_inset

, ..., 
\begin_inset Quotes qld
\end_inset

9
\begin_inset Quotes qrd
\end_inset

] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- ASCII(HexDigit) - 48
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- -1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDSUBROUTINE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Table 1
\series default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Subroutine used in Figure 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII(Char) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the ASCII code or the chal passed as a parameter. Example: 
\family typewriter
ASCII (
\begin_inset Quotes qrd
\end_inset

l
\begin_inset Quotes qrd
\end_inset

)
\family default
 returns 
\family typewriter
49
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Copy and complete the following table by hand-tracing the algorithm in Figure 3. Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
A2
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
1G
\family default

\begin_inset Quotes qrd
\end_inset

 as input strings. You may not need to use all the rows. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Count
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
HexString
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Number
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
HexDigit
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Value
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Output
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how the algorithm in Figure 3 has attempted to deal with the conversion of 
\begin_inset Quotes qld
\end_inset


\family typewriter
1G
\family default

\begin_inset Quotes qrd
\end_inset

 into decimal and why this method is not fully effective. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Other than a trace table, describe two other debugging methods a programmer can use to find bugs in his code. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Company X sells merchandise to wholesale and retail outlets. Wholesale customers receive a two percent discount on all orders. The company also encourages both wholesale and retail customers to pay cash on delivery by offering a two percent discount for this method of payment. Another two percent discount is given on orders of 50 or more units. Discounts can be stacked for each order. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Write pseudo-code to implement a function 
\family typewriter
ComputeDiscount
\family default
 that takes in the appropriate parameters and returns the message 
\begin_inset Quotes eld
\end_inset


\family typewriter
Discount rate is X%
\family default

\begin_inset Quotes erd
\end_inset

 where 
\family typewriter
X
\family default
 is the calculated discount. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Draw a system flowchart of your pseudo-code in 
\series bold
(b)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Athletes, who are members of teams, compete in running events, which are held at fixtures throughout the year. For example, athlete 15 might compete in the Girls
\begin_inset Quotes ers
\end_inset

 1500m Under 18 race in the fixture at National Stadium on 12 September 2020.
\end_layout

\begin_layout Standard
A relational database is used to store the details of which athletes enter each event at each fixture. The relations used in the database are shown in 
\series bold
Figure 5
\series default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 5
\series default
 
\end_layout

\begin_layout Standard

\family typewriter
Athlete(
\family default

\family typewriter

\bar under
AthleteID
\bar default

\family default

\family typewriter
, Surname, Forename, DateOfBirth, Gender, TeamName) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventType(
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
, Gender, Distance, AgeGroup) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Fixture(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, FixtureDate, LocationName) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventAtFixture(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventEntry(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
AthleteID
\bar default

\family default

\family typewriter
) 
\family default
 
\end_layout

\begin_layout Itemize
Each 
\family typewriter
Athlete
\family default
, 
\family typewriter
EventType
\family default
 and 
\family typewriter
Fixture
\family default
 is identified by a unique identity number, for example 
\family typewriter
AthleteID
\family default
 for athletes. 
\end_layout

\begin_layout Itemize
An 
\family typewriter
EventType
\family default
 is a type of event, such as Boys
\begin_inset Quotes ers
\end_inset

 100m Under 15 race. 
\end_layout

\begin_layout Itemize
If an athlete wants to take part in an event at a particular fixture, then an entry is created in the 
\family typewriter
EventEntry
\family default
 relation to represent this. 
\end_layout

\begin_layout Standard

\series bold
Figure 6
\series default
 shows an incomplete entity-relationship diagram for part of the database. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 6
\series default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Copy and draw lines on 
\series bold
Figure 6
\series default
 to show the degree of any 
\series bold
three
\series default
 relationships that exist between the four entities shown. [3] 
\end_layout

\begin_layout Enumerate
The following SQL statement is intended to make a table to represent the Athlete relation. The statement contains some errors. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\series bold
Figure 7
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CREATE TABLE Athlete ( 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

PRIMARY KEY AthleteID, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(50) Surname, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(30) Forename, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DATE DateOfBirth, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(6) Gender, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(30) TeamName 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You may assume that all of the data types used in 
\series bold
Figure 7
\series default
 are valid and the field lengths are appropriate. State 
\series bold
two
\series default
 errors that have been made. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
State two reasons why database designs, such as this one, are usually normalised. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A list is to be produced of the names of all athletes who are competing in the fixture that is taking place on 17/09/20. The list must include the 
\family typewriter
Surname
\family default
, 
\family typewriter
Forename
\family default
 and 
\family typewriter
DateOfBirth
\family default
 of these athletes and no other details. The list should be presented in alphabetical order by Surname. With reference to the database design shown in Figure 3, write an SQL query to produce the list. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
An IT consultant is suggesting changing to the use of a NoSQL database instead. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe two advantages that a NoSQL database have over a SQL database. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain with reasons if you agree or disagree with making the change. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Computers connected to the Internet use the TCP/IP suite of protocols for data transmission. 
\end_layout

\begin_layout Enumerate
What is a protocol? [1] 
\end_layout

\begin_layout Enumerate
The TCP/IP stack is divided into four layers. One of these is the application layer protocol. 
\series bold
Table 1
\series default
 shows four different scenarios that all use the TCP/IP protocol. Complete 
\series bold
Table 1
\series default
 by writing the name of the particular 
\series bold
application layer protocol
\series default
 that would be used to transfer data during each operation. You must give a different answer in each case. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\series bold
Table 2
\series default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Operation
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Application Layer Protocol 
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(i)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Managing a server remotely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(ii)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Retrieving e-mail from an e-mail server 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(iii)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Viewing a sports news web page using a web browser 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(iv)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accessing your online bank account using a web browser 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
A student uses the following URL to download a copy of a previous year
\begin_inset Quotes ers
\end_inset

s Computing exam paper.
\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Formula $\mathtt{\underset{A}{\underbrace{https}}://\underset{B}{\underbrace{www.nanyang.moe.sg}}\underset{C}{\underbrace{/gce/computing/2019H2Computing2.pdf}}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Describe the 
\series bold
three
\series default
 labelled parts (
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
) of this URL.. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State the top-level domain part in the URL. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
To access the exam paper, the student
\begin_inset Quotes ers
\end_inset

s computer might need to make use of a Domain Name System (DNS) query which is transmitted to a DNS server. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the role of a DNS server? . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In some circumstances the student
\begin_inset Quotes ers
\end_inset

s computer will not need to contact a remote DNS server to access a resource. Describe 
\family typewriter
two
\family default
 situations when a DNS query will 
\family typewriter
not
\family default
 be sent to a remote DNS server. . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
In the process of requesting a web page, a browser will generate an HTTP GET request. 
\end_layout

\begin_deeper
\begin_layout Enumerate
In which layer of the TCP/IP stack is the browser operating? . 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the student
\begin_inset Quotes ers
\end_inset

s computer might need to make several HTTP GET requests to display one web page. . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The HTTP GET requests are being sent to port 80 on the remote machine. The browser has been allocated a 
\series bold
client port number
\series default
. What is meant by a client port number?. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Below is a numbered list of the names of some of the legislation that applies in situations where computers are used:
\end_layout

\begin_layout Standard
1. Copyright, Designs and Patents Act
\end_layout

\begin_layout Standard
2. Computer Misuse Act
\end_layout

\begin_layout Standard
3. Regulation of Investigatory Powers Act
\end_layout

\begin_layout Standard
4. Health and Safety Regulations 5. Data Protection Act
\end_layout

\begin_layout Standard
For each of the situations given below, identify the relevant legislation which is being followed. Write the number that corresponds to the appropriate legislation in each situation. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Marcus wanted an MP3 of a recent song so he went to an online music store. After paying he was able to immediately download the purchased song. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
A new workstation is installed in an office and an assessment is performed regarding the lighting for the workstation and the positioning of the desk, monitor and chair. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Mr Smith hands over his 50-character encryption key in response to a request from the authorities investigating a fraud case. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
The operators of a number of multi-storey car parks have installed systems to scan and recognise number plates. The system is used at both the entrance and exit of the car parks so that the arrival and leaving times can be recorded.
\end_layout

\begin_deeper
\begin_layout Standard
Customers can set up an account so that money is automatically debited when their car number plate is recognised as the car leaves the car park. Customers who do not have an account can use their mobile phones to pay the car parking fees by sending a text message to a specified number with their number plate details and length of stay.
\end_layout

\begin_layout Standard
As these car parks are based around Singapore, the company also collects location specific data. 
\end_layout

\begin_layout Enumerate
The company will need to follow the Data Protection Act as they will be storing personal data. What is meant by personal data? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Why might the storing of number plate details, mobile phone numbers and location specific data be a concern for privacy campaigners? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain with specific examples why a code of conduct for computing professionals is necessary. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to implement a hash table to retrieve data about waste disposal in Singapore.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol '
\family typewriter
#
\family default
', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The file 
\family typewriter
waste.csv
\family default
 contains the following fields in each line:
\end_layout

\begin_layout Standard

\family typewriter
Year ‚Äì 
\begin_inset Quotes eld
\end_inset

YYYY
\begin_inset Quotes erd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Waste Disposed Of ‚Äì 
\begin_inset Quotes eld
\end_inset

Numeric
\begin_inset Quotes erd
\end_inset

 (Million Tons) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Waste Recycled ‚Äì 
\begin_inset Quotes eld
\end_inset

Numeric
\begin_inset Quotes erd
\end_inset

 (Million Tons) 
\family default

\end_layout

\begin_layout Standard
The first line of the file contains the headings.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write a program to: 
\end_layout

\begin_layout Itemize
read data from 
\family typewriter
waste.csv
\family default
 
\end_layout

\begin_layout Itemize
into a hash table of size 20 
\end_layout

\begin_layout Itemize
by creating a function 
\family typewriter
GetKeyAddress(Year)
\family default
 to generate the hash address 
\end_layout

\begin_layout Itemize
and directly inserting the data into the correct location in the hash table 
\end_layout

\begin_layout Itemize
taking care of any potential collisions using any suitable methods 
\end_layout

\begin_layout Standard
Display the contents of the hash table showing the data from the first slot to the last slot. 
\begin_inset space \hfill{}

\end_inset

[14]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Create a menu with the following options: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Get Waste Disposed and Recycled by year 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 Display year(s) where Recycled waste > Waste disposed 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
 Return Average waste disposed between two years 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 -1 to Exit 
\family default
 
\end_layout

\begin_layout Itemize
implement the functions for each menu choice. 
\end_layout

\begin_layout Itemize
use only direct access to retrieve data for options 1 and 3. 
\end_layout

\begin_layout Itemize
option 1 and 3 requires asking users to input in the year(s). 
\end_layout

\begin_layout Itemize
validate the user input. 
\end_layout

\begin_layout Itemize
test option 1 with the year 2007 and show the output. 
\end_layout

\begin_layout Itemize
test option 3 with the range 2002 to 2008 and show the output. 
\end_layout

\begin_layout Itemize
show the output for option 2. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
Save your program code and output for Task 1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your name>.ipynb 
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school library stores the following data in a file named 
\family typewriter
story.csv
\family default
:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Field
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Format
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
book_title 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text subject 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
author_name 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
published 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

YYYY
\begin_inset Quotes ers
\end_inset

 (year) 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Merge sort is an efficient sorting algorithm which falls under divide and conquer paradigm and produces a stable sort. It operates by dividing a large array into two smaller subarrays and then recursively sorting the subarrays.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol '
\family typewriter
#
\family default
', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read data from 
\family typewriter
story.csv
\family default
 into an array of records. 
\end_layout

\begin_layout Itemize
ask user to input in which field to sort the records by. 
\end_layout

\begin_layout Itemize
validate that the choice must be 
\family typewriter

\begin_inset Quotes els
\end_inset

B
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

S
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset


\family default
, or 
\family typewriter

\begin_inset Quotes els
\end_inset

P
\begin_inset Quotes ers
\end_inset


\family default
 representing 
\family typewriter
book_title
\family default
, 
\family typewriter
subject
\family default
, 
\family typewriter
author_name
\family default
 and 
\family typewriter
published
\family default
 fields. 
\end_layout

\begin_layout Itemize
implement a 
\family typewriter
MergeSort(ArrayData, Sortby)
\family default
 function that takes in two parameters, 
\family typewriter
ArrayData
\family default
 (array of records) and 
\family typewriter
Sortby
\family default
, and sorts the records in ascending order according to the specified field. 
\family typewriter
MergeSort(ArrayData, Sortby)
\family default
 will return the sorted 
\family typewriter
ArrayData
\family default
 using a mergesort algorithm to do the sorting. 
\end_layout

\begin_layout Itemize
display 
\family typewriter
ArrayData
\family default
. 
\end_layout

\begin_layout Itemize
test your program twice and show your output for sorting by 
\family typewriter
subject
\family default
 and by 
\family typewriter
author_name
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [12] 
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
implement a 
\family typewriter
QuickSort(ArrayData)
\family default
 function that uses the quicksort algorithm to sort the 
\family typewriter
ArrayData
\family default
 by 
\family typewriter
book_title
\family default
 in descending order. 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Standard
Design 2 test cases to test your QuickSort(ArrayData) function and explain the purpose of the test data. Show the output of your test cases. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Save your program code and output for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are to create a song playlist using a doubly linked list implemented using Object-Oriented Programming (OOP). The doubly linked list data structure is a linked list made up of nodes with two pointers pointing to the next and previous element. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A doubly linked list allows traversal of nodes in both direction which is not possible in a singly linked list. For example, a user can go forward or backwards to play the next or previous song.
\end_layout

\begin_layout Standard
The 
\family typewriter
node
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
title (str) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
prev (node) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
next (node)
\family default
 
\end_layout

\begin_layout Standard
The class, 
\family typewriter
SongPlaylist
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize
a doubly linked list of 
\family typewriter
node
\family default
 objects. 
\end_layout

\begin_layout Itemize

\family typewriter
head
\family default
 pointer, pointing to the first 
\family typewriter
node
\family default
 in the doubly linked list. 
\end_layout

\begin_layout Standard
The class 
\family typewriter
SongPlaylist
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
insert(SongPlaylist, title: str)
\family default
 adds a song title at the beginning of the list. 
\end_layout

\begin_layout Itemize

\family typewriter
insertafter(SongPlaylist, searchtitle: str, newtitle: str)
\family default
 adds a song title after 
\family typewriter
searchtitle
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
display(SongPlaylist)
\family default
 outputs out the playlist. 
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol '#', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define classes to implement the song playlist. The figures below show the links that must be updated for the insert and insertafter methods:
\end_layout

\begin_layout Standard
Inserting at the beginning of the list 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Inserting after a given node 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent

\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
The program has the following menu: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Create New Song Playlist 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 Add a song in front 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
 Add a song after 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 Display Playlist 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
5.
\end_layout

\end_inset


\family typewriter
 -1 to End 
\family default
 
\end_layout

\begin_layout Standard
Option 1 will prompt the user to enter the name of the new playlist.
\end_layout

\begin_layout Standard
Option 2 will prompt the user to enter the song title and the name of the playlist.
\end_layout

\begin_layout Standard
Option 3 will prompt the user to enter the name of the playlist, existing song title, and the new song title to be inserted after the existing song title.
\end_layout

\begin_layout Standard
Option 4 will prompt the user to enter the name of the playlist to be displayed and output accordingly.
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
display the main menu. 
\end_layout

\begin_layout Itemize
input the choice by the user. 
\end_layout

\begin_layout Itemize
run the appropriate code to carry out the task for the choice made. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Test your program by creating a new playlist called 
\family typewriter
MJ
\family default
 and add in the following titles in order: 
\family typewriter

\begin_inset Quotes eld
\end_inset

Heal the World
\begin_inset Quotes erd
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes eld
\end_inset

Thriller
\begin_inset Quotes erd
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes eld
\end_inset

Beat It
\begin_inset Quotes erd
\end_inset


\family default
. Show your output by displaying the playlist.
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Extend your program by writing a function 
\family typewriter
insertionSort(Playlist)
\family default
 that will sort the song titles in ascending order.
\end_layout

\begin_layout Standard
The algorithm for this 
\family typewriter
insertionSort
\family default
 is given below: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1)
\end_layout

\end_inset

Create an empty 
\family typewriter
sorted
\family default
 doubly linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2)
\end_layout

\end_inset

Traverse the given doubly linked list, do following for every node. - Insert current node in sorted way in 
\family typewriter
sorted
\family default
 doubly linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3)
\end_layout

\end_inset

Change head of given linked list to head of 
\family typewriter
sorted
\family default
 list. 
\end_layout

\begin_layout Standard
Write program code to implement 
\family typewriter
insertionSort(Playlist)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Save your program code and output for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school wants to create a database to allow students to register for different enrichment activities that will be held on the school
\begin_inset Quotes ers
\end_inset

s Enrichment Day. An enrichment activity falls under one of three categories ‚Äì Arts, Cultural, and Sports.
\end_layout

\begin_layout Standard
It is expected that the database should be normalised.
\end_layout

\begin_layout Standard
When a student registers for an activity, the following information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
StudentID
\family default
 - unique 6-digit register number of the student. 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 - type of activity (
\family typewriter
'A
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

C
\begin_inset Quotes ers
\end_inset


\family default
 or 
\family typewriter
'S'
\family default
). 
\end_layout

\begin_layout Itemize

\family typewriter
Venue
\family default
 - where the activity will be held. 
\end_layout

\begin_layout Itemize

\family typewriter
Session
\family default
 - whether the activity is conducted in the morning or afternoon (
\family typewriter
'AM'
\family default
 means the morning session, and 
\family typewriter
'PM'
\family default
 means the afternoon session). 
\end_layout

\begin_layout Standard
For the Arts category, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Performance
\family default
 ‚Äì 
\begin_inset Quotes eld
\end_inset


\family typewriter
True
\family default

\begin_inset Quotes erd
\end_inset

 for performance arts, 
\begin_inset Quotes eld
\end_inset


\family typewriter
False
\family default

\begin_inset Quotes erd
\end_inset

 for visual arts. 
\end_layout

\begin_layout Standard
For Cultural, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Race
\family default
 ‚Äì which race the culture belongs to. 
\end_layout

\begin_layout Standard
For Sports, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Contact
\family default
 ‚Äì 
\begin_inset Quotes eld
\end_inset

C
\begin_inset Quotes erd
\end_inset

 to denote contact sports, 
\begin_inset Quotes eld
\end_inset

NC
\begin_inset Quotes erd
\end_inset

 to denote non-contact sports. 
\end_layout

\begin_layout Itemize

\family typewriter
Cost
\family default
 - the amount of money in dollars (not more than $50) the student must pay the instructor. 
\end_layout

\begin_layout Standard
The information is to be stored in four different tables:
\end_layout

\begin_layout Standard

\family typewriter
Registration 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Arts
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cultural 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Sports 
\family default

\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called
\family typewriter
 TASK4_l_<your name>.sql
\family default
 to show the SQL code to create the database
\family typewriter
 register.db
\family default
 with the four tables. The table, 
\family typewriter
Registration
\family default
, must use 
\family typewriter
StudentID
\family default
 as its 
\series bold
primary key
\series default
. The other tables must refer to the 
\family typewriter
StudentID
\family default
 as a 
\series bold
foreign key
\series default
.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>.sql
\family default

\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The school wants to allow students to register over the internet. The form design for the webpage is shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
accepts the input from the web form (assume input is keyed in correctly) 
\end_layout

\begin_layout Itemize
updates the registration details into 
\family typewriter
register.db
\family default
 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display a table tabulating the 
\family typewriter
StudentID
\family default
 and 
\family typewriter
Type
\family default
 of activity registered for the morning session. 
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>.py
\family default
 with any additional files / sub-folders as needed in a folder named 
\family typewriter
TASK4_2_<your name>
\family default
 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Test your web application by entering the following records via the form
\begin_inset Quotes ers
\end_inset

s submit button:
\end_layout

\begin_layout Standard

\family typewriter
192701, A, Hall, AM, True 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192703, A, MPR, PM, False 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192723, S, Field, AM, C, 20 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192803, C, 5-56, AM, Malay 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192820, S, 5-60, PM, NC, 15 
\family default

\end_layout

\begin_layout Standard

\family typewriter
193005, C, LT4, PM, Chinese 
\family default

\end_layout

\begin_layout Standard

\family typewriter
193006, C, LT4, PM, Chinese
\family default

\end_layout

\begin_layout Standard
Save the output of the program when the user clicks on the 
\begin_inset Quotes eld
\end_inset

Generate Report
\begin_inset Quotes erd
\end_inset

 button as 
\family typewriter
TASK4_3_<your name>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write SQL code to count the number of different races for the cultural activities. Run this query.
\end_layout

\begin_layout Standard
Save this code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A list of data items is stored in a hash table using an array 
\family typewriter
Values
\family default
. The following pseudocode describes an algorithm for searching the table using the hashing function 
\family typewriter
Hash
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Index <- Hash(Key) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 WHILE Values[Index] <> Key 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

Index <- Index + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 Return Values[Index] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the situations when 
\begin_inset Quotes qld
\end_inset


\family typewriter
Values[Index] <> Key
\begin_inset Quotes qrd
\end_inset


\family default
 in line 
\family typewriter
02
\family default
 will be 
\family typewriter
True
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
describe the two problems with this algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Without writing any program code, describe the modifications required to overcome each of the problems stated in (b). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An array 
\family typewriter
seq
\family default
 contains a list of sorted data items except the last element. 
\family typewriter
[1,2,5,8,9,6]
\family default
 is an example of such an array.
\end_layout

\begin_layout Standard
The function 
\family typewriter
sortInner
\family default
 takes two parameters, the array 
\family typewriter
seq
\family default
 and the index position 
\family typewriter
j
\family default
 of the last element, and returns the mutated array 
\family typewriter
seq
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def sortInner(seq, j): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if j == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return seq 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if seq[j] <= seq[j-1]: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

seq[j], seq[j-1] = seq[j-1], seq[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return sortInner(seq, j-1)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by a recursive function.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe what happens when the function 
\family typewriter
sortInner([1,2,5,8,9,6],5)
\family default
 is executed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Write a recursive function 
\family typewriter
insertionSort
\family default
 for the Insertion Sort algorithm by using the given function 
\family typewriter
sortInner(seq,j
\family default
).
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain whether the Insertion Sort algorithm in 
\series bold
(c)
\series default
 is performing an 
\begin_inset Quotes qld
\end_inset

in-place
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

non in-place
\begin_inset Quotes qrd
\end_inset

 sorting and whether it is stable or unstable.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
State and explain the efficiencies of the Insertion Sort algorithm in 
\series bold
(c)
\series default
 in the worst case scenario, using the Big-O notation for the time complexity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A wildlife information application is being developed to store and display information about birds. The application uses a binary search tree to store the name of the bird. 
\end_layout

\begin_layout Enumerate
The binary search tree has its data inserted in the following order.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Magpie 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cockatiel 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Jay 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Pigeon 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Mynah 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Crow 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Albatross 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Quail 
\family default

\end_layout

\begin_layout Standard
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The binary search tree in part 
\series bold
(a)
\series default
 can be implemented using object-oriented programming that involves the use of two pointers and an array. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the purpose of the two pointers in the implementation of the binary search tree class. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the array in the implementation of the binary search tree class. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
List the nodes, in order, that are visited for an in-order traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the property exhibited by the list of items produced in part (c)(i). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe an algorithm, using pseudocode, which uses a stack to perform an in- order traversal for the tree 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\emph on
HoLi Tea
\emph default
 is a popular chain selling a wide variety of bubble tea. Each drink is categorised by the flavor (e.g. brown sugar, peppermint, lemon ‚Ä¶), the type of tea leaves used (e.g. green tea, red tea, black tea ‚Ä¶), the pearl options (e.g. black pearl, white pearl, or no pearl) and the price.
\end_layout

\begin_layout Standard
There are two variants of bubble tea: Milk Tea and Fruit Tea. Each milk tea has a specific type of milk used (e.g. fresh milk, condensed milk) and some milk tea come with pudding. Some fruit tea include cultured milk.
\end_layout

\begin_layout Standard
The owner of HoLi Tea intends to use object-oriented programming language to store and process the information on the types of drink in the self-ordering web application system.
\end_layout

\begin_layout Standard
The base class 
\family typewriter
BUBBLE_TEA
\family default
 has a method to display the properties of the bubble tea. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a UML class diagram showing:
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_deeper
\begin_layout Itemize
any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
the properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
suitable methods to support the system with at least one getter and one setter method 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why polymorphism is useful in object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\emph on
HoLi Tea
\emph default
 has a loyalty programme to reward their regular customers. Members are entitled to a 20% discount for their purchases and a free drink on their birthday. To pay tribute to the frontline workers during the COVID-19 pandemic, all frontline workers are entitled to a 20% discount for their purchases, and those who are also members will receive a free drink on any day. 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
YI restaurant serves a variety of local dishes at reasonable prices and plans to provide food delivery services to its customers via a web application. A customer places an online order and an employee will be assigned by the system to deliver the order to the customer. The customer can choose to pay online when ordering or make cash payment upon delivery. Customers can choose more than one dish in the same online order and each order has a unique ID.
\end_layout

\begin_layout Standard
At the time of ordering, the application records the following data: 
\end_layout

\begin_layout Itemize
Customer name, delivery address and email, if the customer has not placed an online order before 
\end_layout

\begin_layout Itemize
Customer ID 
\end_layout

\begin_layout Itemize
Order date 
\end_layout

\begin_layout Itemize
Order time 
\end_layout

\begin_layout Itemize
Payment mode 
\end_layout

\begin_layout Itemize
Dish and quantity 
\end_layout

\begin_layout Standard
The following shows an example of the order receipt which will be sent to the customer
\begin_inset Quotes ers
\end_inset

s email address. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The restaurant assigns a unique ID to each employee and maintains its employees
\begin_inset Quotes ers
\end_inset

 information, such as their name, contact number and bank account number. The restaurant keeps a record of the employees
\begin_inset Quotes ers
\end_inset

 delivery assignments, the date and time when the order is successfully delivered to the customer. 
\end_layout

\begin_layout Enumerate
The company wants to model this application using a relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the customers
\begin_inset Quotes ers
\end_inset

 food order: 
\family typewriter
CUSTOMER
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
FOOD
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the employees
\begin_inset Quotes ers
\end_inset

 delivery assignment: 
\family typewriter
EMPLOYEE
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
ASSIGNMENT
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw the overall Entity-Relationship (E-R) diagram showing the five tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3,...)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Foreign keys are indicated using an asterisk or dashed underline.
\end_layout

\begin_layout Standard
Write table descriptions for the five tables.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a method to protect data from loss or corruption.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain how Singapore
\begin_inset Quotes ers
\end_inset

s Personal Data Protection Act (PDPA) protects the personal data of the customers and employees stored in the database. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the impact of such food delivery applications on the society and economy.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
With an increase in demand for food delivery, the restaurant wishes to enhance the food delivery services to cater to the larger volume of orders and to include more features in the application such as real time location tracking of the food order and customers
\begin_inset Quotes ers
\end_inset

 review of the dishes, yet ensuring that the application maintains fast performance. The restaurant is now considering using a NoSQL DBMS instead of a relational database.
\end_layout

\begin_deeper
\begin_layout Standard
State and explain 
\series bold
two
\series default
 reasons why NoSQL DBMS may be more suitable for the proposed scenario.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A Web Developer is designing an online Sales portal for a company. The customer needs to submit an online form to register before ordering through the portal. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q6.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two validation checks that the above form should perform for the customer's inputs.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe, with a specific example, how the customer's inputs are being verified. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The web developer intends to use CAPTCHA for the above form 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q6-2.png
	width 30page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain what this added feature helps to verify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the required server scripting to process the customer's input on his email address and password. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe the differences between a web application and a native application. Explain how the developer should decide between designing a web or a native application.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The College
\begin_inset Quotes ers
\end_inset

s local area network (LAN) is connected to the MOE Headquarter
\begin_inset Quotes ers
\end_inset

s LAN over the internet. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q7.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A staff in the college, Alan, sends an email to Charles who works in the MOE Headquarter. 
\end_layout

\begin_layout Enumerate
The following questions should take reference from the above network diagram. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the function of the Domain Name System (DNS) server.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how the router identifies that the MOE's Mail server is residing in another network.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe in detail how Alan's email is delivered and kept in the MOE's Mail server.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe how Charles eventually receive Alan
\begin_inset Quotes ers
\end_inset

s email.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Charles forwards Alan
\begin_inset Quotes ers
\end_inset

s email to his colleague, David. Describe how David could receive the email even when he is away from the office. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a Battleship game, a player fires missiles within a region measuring 6 metres by 6 metres, represented with full-stops (
\begin_inset Quotes qrd
\end_inset

.
\begin_inset Quotes qrd
\end_inset

), to sink the ships. Each ship is represented by 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

. The region is represented on the screen by a rectangular grid. Each square metre of the region is represented by an x-coordinate and a y-coordinate. The top left square metre of the region display has 
\family typewriter
x = 0
\family default
 and 
\family typewriter
y = 0
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
In one of the games, three ships were positioned in the region as given in the text file 
\family typewriter
GAME.TXT
\family default
. Write a program to read in the data from this file, store it in a suitable data structure and display on the screen as shown.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
X X X . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. X X X . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
During the game, the player cannot see the ships in the region.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write program code to allow the player to fire 5 missiles targeting at specific locations, one at a time after observing each outcome. The player will input an x-coordinate and y-coordinate for each targeted location.
\end_layout

\begin_layout Standard
If the missile strikes any part of a ship, the damaged square metre will be represented with an 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

, otherwise an 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent it has missed. A sunken ship will be represented by 
\begin_inset Quotes qld
\end_inset


\family typewriter
SSS
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
one missile which missed the ship
\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
O . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
another missile which struck the ship
\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
O . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. S . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program code should also display the positions of all the ships at the end of the game.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
O . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
S S S . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. X X S . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
Download your program code and output for Task 1.1 and 1.2 as
\end_layout

\begin_layout Standard

\family typewriter
Task1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Write server and client program for this asymmetric Battleship game where a server display the region and the player (the client) selects the target locations for his missiles. After firing each missile, the server returns an updated display for the region indicating a strike or a miss. Once the player fires his last missile, the server will display the positions of all the ships, together with the damages and misses, and both the client and server quit the game. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
Download your server and client program code for Task 1.3 as
\end_layout

\begin_layout Standard

\family typewriter
Task1_server_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task1_client_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
SONG.TXT
\family default
 contains the lyrics of the song, Count on me Singapore. The task is to read every word from the file, store it in a suitable data structure, sort the words and perform searches based on word and count.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the words from the file and store them in a suitable data structure, 
\end_layout

\begin_layout Itemize
sort the words in alphabetical order using 
\series bold
quick sort
\series default
, 
\end_layout

\begin_layout Itemize
write each word and their number of occurrence in a text file, WORDCOUNT.TXT, where the next word is on a new line. [12] 
\end_layout

\begin_layout Standard
A sample of the 
\family typewriter
WORDCOUNT.TXT
\family default
 for the first 5 lines is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
a 5 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
achieve 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
air 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
all 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
and 9
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the words and counts from the 
\family typewriter
WORDCOUNT.TX
\family default
T file 
\end_layout

\begin_layout Itemize
allow the user to select the following options:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1. Search for a word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2. Search for word(s) based on count
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3. Quit program
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
take in user input for the word or the count 
\end_layout

\begin_layout Itemize
if found, display the word and its count, else 
\end_layout

\begin_layout Itemize
display 
\begin_inset Quotes qld
\end_inset


\family typewriter
Not Found
\family default

\begin_inset Quotes qrd
\end_inset

 display appropriate error messages for invalid user input 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Design test data for your program written in 
\series bold
Task 2.2
\series default
, provide evidence of testing that includes: 
\end_layout

\begin_layout Itemize
search for a word that is contained in the file 
\end_layout

\begin_layout Itemize
search for a word that is not contained in the file 
\end_layout

\begin_layout Itemize
search for word(s) with a count that is contained in the file 
\end_layout

\begin_layout Itemize
search for word(s) with a count that is not contained in the file 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Download your program code and output for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
Task2_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store words in nodes that is contained within a linked list data structure. A node contains a word, the word category and a next pointer. The pointers link the word items in proper grammatical order based on their word category (
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

: noun, 
\begin_inset Quotes els
\end_inset

V
\begin_inset Quotes ers
\end_inset

: verb, 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

: determiner, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

: adjective). The unused nodes are linked as shown below. The first unused node is the position where the new word item is to be stored. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the words and their respective category inserted in the following order: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
'little', 'J' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'tough', 'J' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'boy', 'N' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'The', 'D' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'runs', 'V' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'race', 'N' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'a', 'D'
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
the unused nodes linked together 
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class Node. The class Node has the following UML class diagram: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
word: STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
category: STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
next: INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_word(w: STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_category(c: STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_next(n: INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_word(): STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_category(): STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_next(): INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
LinkedList
\family default
 class is implemented as follows: 
\end_layout

\begin_layout Itemize
Attributes 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
sentence : ARRAY[0:9] of Node -
\family default
 The linked list data structure that contains 10 nodes. 
\end_layout

\begin_layout Itemize

\family typewriter
start : INTEGER
\family default
 - Index for the start position of the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
nextfree : INTEGER
\family default
 - Index for the next unused node. 
\end_layout

\end_deeper
\begin_layout Itemize
Methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
__init__ : PROCEDURE
\family default
 - Sets all the node data values to 
\begin_inset Quotes els
\end_inset

empty string
\begin_inset Quotes ers
\end_inset

. Set pointers to indicate all nodes are unused and linked. Initialise values for start and nextfree. 
\end_layout

\begin_layout Itemize

\family typewriter
isempty : FUNCTION RETURNS BOOLEAN
\family default
 - Tests for empty linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
isfull : FUNCTION RETURNS BOOLEAN
\family default
 - Tests for no unused nodes. 
\end_layout

\begin_layout Itemize

\family typewriter
display : PROCEDURE
\family default
 - Displays the contents of sentence in index order. 
\end_layout

\begin_layout Itemize

\family typewriter
insert : PROCEDURE
\family default
 - Adds a new word and its category to the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
traversal : PROCEDURE
\family default
 - Displays the simple sentence obtained from the linked list. 
\end_layout

\end_deeper
\begin_layout Standard
The index of the first available node is indicated by 
\family typewriter
nextfree
\family default
. The initial values of 
\family typewriter
start
\family default
 and 
\family typewriter
nextfree
\family default
 is -1 and 0 respectively.
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to define the 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
 classes.
\end_layout

\begin_layout Standard
Do not attempt to write the methods 
\family typewriter
insert
\family default
 and 
\family typewriter
traversal
\family default
 at this stage. 
\begin_inset space \hfill{}

\end_inset

 [10]
\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code to create a LinkedList object and run the display method to confirm the initial values of the pointers, word and category values when the linked list is empty. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
A simple sentence contains words from different category arranged in the manner as illustrated:
\end_layout

\begin_layout Standard
(
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

: noun, 
\begin_inset Quotes els
\end_inset

V
\begin_inset Quotes ers
\end_inset

: verb, 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

: determiner, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

: adjective)
\end_layout

\begin_layout Standard
Verb come between two nouns.
\end_layout

\begin_layout Standard
Determiner comes before a noun, adjective comes before a noun and after a determiner. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
little 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
tough 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In order to aid the process of inserting the words in their correct position in the linked list, the code letter 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

Y
\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset

Z
\begin_inset Quotes ers
\end_inset

 is used in place of the second set of 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

 respectively, so that the correct position can be determined by comparing the category when traversing down the linked list. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
little 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
tough 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Z
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The following pseudocode (available in PSEUDOCODE_TASK_3_3.TXT ) can be used to add a word and its category to the linked list.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE insert(new_word, new_category)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

//check if Linked List is full 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF nextfree = -1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 'Linked List is Full' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

//linked list is not full, safe to insert new word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

sentence[nextfree].word <- new_word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

sentence[nextfree].category <- new_category
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF start = -1 THEN //inserting into empty list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

start <- nextfree
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[start].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[start].next <- -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// traverse down the linked list to search for position to
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// insert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- start //pointer of current node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- -1 //pointer of previous node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

inserted <- FALSE //flag to check for insertion
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE current > -1 AND inserted = FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF sentence[current].category > new_category THEN 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//position found, insert before current node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF current = start THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//check if current equals to start
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

start <- nextfree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[previous].next <- nextfree
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[nextfree].next
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].next <- current
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

inserted <- TRUE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELIF sentence[current].category < new_category THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- sentence[current].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'N' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'Z'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'D' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'X' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'J' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'Y' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- sentence[current].next
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].category <- new_category
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF inserted = False THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[previous].next <- nextfree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[nextfree].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].next <- -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code to implement 
\family typewriter
insert
\family default
 method from this pseudocode. You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_3.TXT
\family default
 as a basis for writing your code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 3.4:
\end_layout

\begin_layout Standard
Write code to insert the following into the linked list created in 
\series bold
Task 3.2
\series default
 and display its contents: 
\end_layout

\begin_layout Itemize
'little', 'J' 
\end_layout

\begin_layout Itemize
'tough', 'J' 
\end_layout

\begin_layout Itemize
'boy', 'N' 
\end_layout

\begin_layout Itemize
'The', 'D' 
\end_layout

\begin_layout Itemize
'runs', 'V' 
\end_layout

\begin_layout Itemize
'race', 'N' 
\end_layout

\begin_layout Itemize
'a', 'D' 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsection*
Task 3.5:
\end_layout

\begin_layout Standard
Write code to implement traversal method which displays the simple sentence obtained from traversing the linked list and run it.
\end_layout

\begin_layout Standard
The expected output should look like this: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
The little boy runs a tough race. 
\family default

\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
Download your program code and output for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
Task3_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\emph on
SafeEnter
\emph default
 is a digital check-in system that tracks the people visiting the public places, to prevent and control the transmission of COVID-19 through contact tracing. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-1.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create a HTML file called 
\family typewriter
index.html
\family default
 to display the Check-In form for people to input their particulars and other details. (Use the picture 
\family typewriter
IN.JPG
\family default
 provided.) [5] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-2.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Check-In Form 
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code, 
\family typewriter
server.py
\family default
, for the back-end server to display the Check-In form on the clients
\begin_inset Quotes ers
\end_inset

 browser when they scan a QR-code which links to the SafeEnter website. The server script should include a route 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkin
\family default

\begin_inset Quotes ers
\end_inset

 to receive the inputs from the client, the program code should: 
\end_layout

\begin_layout Itemize
prevent the user from accessing the 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkin
\family default

\begin_inset Quotes ers
\end_inset

 route directly 
\end_layout

\begin_layout Itemize
receive all the inputs in the Check-In form 
\end_layout

\begin_layout Itemize
reject empty or null inputs 
\end_layout

\begin_layout Itemize
append the new entry into the 
\family typewriter
event
\family default
 table in the given database 
\family typewriter
covid.db 
\family default
 
\end_layout

\begin_layout Itemize
reply by sending a 
\family typewriter
checkout.html
\family default
 page back to the client
\begin_inset Quotes ers
\end_inset

s browser, displaying the following Check-Out form, which is to be used when leaving the venue (Use the picture 
\family typewriter
OUT.JPG
\family default
 provided.)
\family typewriter
 
\family default

\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Check-Out Form 
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Modify the program code, 
\family typewriter
server.py
\family default
, and include an additional route 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkout
\family default

\begin_inset Quotes ers
\end_inset

 to receive the inputs from the client
\begin_inset Quotes ers
\end_inset

s Check-Out form when they leave the venue. The program code should: 
\end_layout

\begin_layout Itemize
allow the user from accessing the 
\begin_inset Quotes els
\end_inset

/checkout
\begin_inset Quotes ers
\end_inset

 route directly 
\end_layout

\begin_layout Itemize
receive all the inputs in the Check-Out form 
\end_layout

\begin_layout Itemize
reject empty or null inputs 
\end_layout

\begin_layout Itemize
update the corresponding entry in the 
\family typewriter
event
\family default
 table in the 
\series bold
given
\series default
 database 
\family typewriter
covid.db 
\family default

\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
Download the files for your program codes for Task 4 as
\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_index.html 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_checkout.html
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_server.py 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_covid.db
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A famous restaurant only accommodates one seating daily from 6.00 pm to 8.00 pm. It has 10 tables, each with a maximum capacity between 2 and 8 people. Advanced reservation is required to dine in at the restaurant.
\end_layout

\begin_layout Standard
The owner of the restaurant decides to write a program to handle reservations. As a trial, it can only take a booking for one evening only.
\end_layout

\begin_layout Standard
A procedure to initialise the arrays 
\family typewriter
MaxSize
\family default
, 
\family typewriter
IsBooked
\family default
 and 
\family typewriter
GroupSize
\family default
 has been defined. The indexes of each array corresponds to the table number.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Index
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
MaxSize
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsBooked
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
GroupSize
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The procedure 
\family typewriter
BookTable
\family default
 is shown below. When a booking enquiry is made, the number of customers is keyed in.
\end_layout

\begin_layout Standard

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE BookTable 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

DECLARE NumberOfCustomers, TableNumber : INTEGERS 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

DECLARE Found : BOOLEAN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

INPUT NumberOfCustomers 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

TableNumber ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

FOUND ‚Üê False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TableNumber ‚Üê TableNumber + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF MaxSize[TableNumber] > NumberOfCustomers AND IsBooked[TableNumber] = FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found ‚Üê TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset

UNTIL Found = TRUE AND TableNumber = 10 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Found = FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

No tables with enough seats available.
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

GroupSize[TableNumber] ‚Üê NumberOfCustomers 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

Booking is successful! Table no:
\begin_inset Quotes qrd
\end_inset

, TableNumber 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 ENDPROCEDURE
\family default

\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
There are two errors and one missing line of code in the procedure above. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Name the type of the errors. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe the errors and the changes required to correct them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write the missing line of code and state where it should be located. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Once the procedure 
\family typewriter
BookTable
\family default
 is able to run correctly, the owner decides to improve its functionality.
\end_layout

\begin_deeper
\begin_layout Standard
The procedure should ask the user to input the name and the mobile number of the person making the reservation when a table with enough seats can be found.
\end_layout

\begin_layout Standard
Name and describe two data validation techniques that can be applied to any of the inputs mentioned above.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the difference in the type of memory allocation for an array and a linked list. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A hash table has 8 spaces to store strings, indexed from 1 to 8 inclusive.
\end_layout

\begin_layout Standard
The hash function finds the ASCII number of the first letter of the string, then counts the number of 1s in its binary representation. This is the index in which the string will be inserted into the hash table.
\end_layout

\begin_layout Standard
For example, the string 
\family typewriter
'Arlington'
\family default
 will have index 2 because the ASCII number of '
\family typewriter
A
\family default
' is 65, which is 
\family typewriter
1000001
\family default
 in binary, and there are two 
\family typewriter
1
\family default
s.
\end_layout

\begin_layout Standard
The following strings are to be inserted into the hash table in the order given.
\end_layout

\begin_layout Standard

\family typewriter
'Grover', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Horsburgh', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Island',
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Jordan', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Kalman'
\family default
 
\end_layout

\begin_layout Enumerate
Find the output of the hash function for each of the strings. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Suppose collisions in the hash table are to be resolved using open hashing.
\end_layout

\begin_deeper
\begin_layout Standard
Draw the hash table after all five strings are inserted. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Suppose instead that collisions in the hash table are to be resolved using closed hashing, where spaces 6 to 8 (inclusive) are used as the overflow storage.
\end_layout

\begin_deeper
\begin_layout Standard
Draw the hash table after all five strings are inserted. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Explain why the space with index 1 in the hash table will never be occupied unless there is a collision. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The diagram below shows a flowchart for performing a search through a binary tree. The algorithm searches through 
\family typewriter
Tree
\family default
 for 
\family typewriter
Searchfor
\family default
. If it finds a node whose data is equal to 
\family typewriter
Searchfor
\family default
, it outputs 
\family typewriter
Found
\family default
. Otherwise, it outputs 
\family typewriter
Not Found
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q3-1.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate
Given the input 
\family typewriter
Tree
\family default
 below and a 
\family typewriter
Searchfor
\family default
 value of 5, draw a trace table to illustrate the algorithm. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q3-2.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
State whether this is a depth-first search or a breadth-first search. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Draw a flowchart to illustrate how the other kind of search in (ii) can be carried out using the same input parameters. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Given the same input 
\family typewriter
Tree
\family default
 and the same 
\family typewriter
Searchfo
\family default
r value of 5, draw a trace table to illustrate the algorithm in (iii). 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Merge sort and bubble sort are two sorting algorithms that can be applied to sort a list of integers in ascending order. 
\end_layout

\begin_layout Enumerate
By briefly comparing the operation of merge sort and bubble sort, state which algorithm would be more efficient. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
The pseudocode for the recursive 
\family typewriter
MergeSortDesc
\family default
 function is shown below, which takes in a list of integers and returns a new list with the integers sorted in descending order. It makes use of the 
\family typewriter
MergeDesc
\family default
 function in line 
\family typewriter
10
\family default
 that merges two lists of integers sorted in descending order into a single list of integers sorted in descending order as well.
\end_layout

\begin_layout Standard

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION MergeSortDesc(MyList: LIST) RETURNS LIST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

MaxIndex ‚Üê LENGTH(MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ......A...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Half ‚Üê ......B...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LeftList ‚Üê LEFT(MyList, Half) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RightList ‚Üê RIGHT(MyList, Half) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SortedLeftList ‚Üê MergeSortDesc(LeftList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SortedRightList ‚Üê MergeSortDesc(RightList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Result ‚Üê MergeDesc(SortedLeftList, SortedRightList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

......C...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Result 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 ENDFUNCTION
\family default

\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State what is meant by a 
\series bold
recursive
\series default
 function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write the pseudocode for 
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe the operation of the 
\family typewriter
MergeDesc
\family default
 function.
\end_layout

\begin_deeper
\begin_layout Standard
Assume that the function does not modify the two input lists.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A gym organises various classes and runs a loyalty membership programme with four tiers: Bronze, Silver, Gold and Diamond
\end_layout

\begin_layout Standard
Upon joining, each member is given a unique membership number and starts with a Bronze membership. Each member can sign up for multiple classes at a reduced rate based on the membership tier.
\end_layout

\begin_layout Standard
Each class has a unique class name. Some classes are offered at three different levels: Beginner, Intermediate and Advanced
\end_layout

\begin_layout Standard
Each instructor is identified with a unique three-character code and can take one or more classes.
\end_layout

\begin_layout Standard
A relational database is to be created to store data about members, employees and classes.
\end_layout

\begin_layout Standard
Part of the table 
\family typewriter
MEMBER
\family default
, which is a first attempt at the database design, is shown below.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberNo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberTier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ClassName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
InstCode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lindy White
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Silver 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Body Pump 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
WAY 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yoga (Beginner) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DAV 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zumba 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ROG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
78 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Derek Davis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bronze 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muay Thai (Beginner) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
CHA 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ ‚Ä¶ ‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
132
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
John Chua 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Diamond 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Circuits (Intermediate) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
JON 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muay Thai (Intermediate) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LEX 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yoga (Advanced) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DAV 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zumba 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ROG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The table 
\family typewriter
MEMBER
\family default
 is not normalised. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
one
\series default
 potential issue that may be encountered when the data are maintained in such a non-normalised table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the table is not in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A second attempt at the database design gives rise to two tables:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
MEMBER(MemberNo, MemberName, MemberTier)
\family default

\end_layout

\begin_layout Standard

\family typewriter
MEMBERCLASSES(MemberNo, ClassName, Instructor)
\family default

\end_layout

\begin_layout Standard
The primary keys are not shown. 
\end_layout

\begin_layout Enumerate
State what is meant by a 
\series bold
primary key
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
By referring to the relationship between the tables 
\family typewriter
MEMBER
\family default
 and 
\family typewriter
MEMBERCLASSES
\family default
, state how the relationship is implemented.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Write an SQL query to create the table MEMBER with the appropriate constraints.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Another attempt at the database design needs to be made to ensure that all the tables are in third normal form (3NF).
\end_layout

\begin_deeper
\begin_layout Standard
In addition, the following data need to be recorded in the database: 
\end_layout

\begin_layout Itemize
the date on which each member signs up for the gym membership; 
\end_layout

\begin_layout Itemize
the attendance of each member in any classes taken; 
\end_layout

\begin_layout Itemize
the original fee, i.e. before discount, of each class; 
\end_layout

\begin_layout Itemize
the name and the salary of each instructor. 
\end_layout

\begin_layout Enumerate
State the total number of 3NF tables required and give their names. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the 3NF tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A table description can be written as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName(
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ...) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk.
\end_layout

\begin_layout Standard
Using the information provided, write table descriptions for all the 3NF tables you identified in 
\series bold
(c)(i)
\series default
.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Making backups and archives are performed to prevent the loss of data.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the difference between a backup and an archive.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A driving simulator is programmed using Object-Oriented Programming (OOP).
\end_layout

\begin_layout Standard
The diagram below shows a UML Class Diagram with 
\series bold
some
\series default
 of the classes, attributes, and methods used in the simulator. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q6.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate
State the relationship between the 
\family typewriter
CAR
\family default
 class and the 
\family typewriter
VEHICLE
\family default
 class. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain briefly, in this context, how each of the following features of Object-Oriented Programming help the simulation to be developed more efficiently. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Abstraction 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Inheritance 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The petrol use rate depends on the speed at which the vehicle is travelling, as well as the mass of the vehicle and the contents of the vehicle ‚Äì the number of passengers in a car, or the mass of the load in a truck. Explain how polymorphism can be used in this case to write the simulation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A new social media platform is to be created. In years to come, it is expected to be as popular globally as other trending social media platforms. 
\end_layout

\begin_layout Enumerate
Give two reasons why a NoSQL database is likely to be more suitable than an SQL database for the social media platform. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
A basic login page that controls access to user accounts is shown below. The password field masks the user input with a dot (‚Ä¢) replacing each of the characters supplied. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q7.png
	scale 50

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

When the login button is clicked, the program processes the username and password supplied by the user.
\end_layout

\begin_deeper
\begin_layout Standard
It displays an error message if the username entered does not exist in the database. If the password entered matches the registered password for the username, login is granted. Otherwise, the program displays an error message to indicate the user of the incorrect password entered.
\end_layout

\begin_layout Standard
The account will be locked if the user enters the correct username, but enters the wrong password three times. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

It is known that users tend to have different problems associated with passwords.
\end_layout

\begin_deeper
\begin_layout Standard
Besides the error message to tell the user when an incorrect password is entered, describe 
\series bold
two
\series default
 examples based on usability principles that can be applied to improve the functionality of the login page. [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain why the HTTP POST method should be used instead of the HTTP GET method for the login request. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a hypothetical scenario, a data security company is helping a client company manage a database of the client company
\begin_inset Quotes ers
\end_inset

s customers. The data security company notices a possible vulnerability in the database.
\end_layout

\begin_layout Standard
Further investigation shows that the vulnerability is obscure and that none or few of the programmers anticipated it. Since the vulnerability is obscure, they determine that the chances of the database being breached are minimal, and decide not to tell the client company about it.
\end_layout

\begin_layout Standard
Instead, the data security company waits until the next time the database is due for scheduled maintenance to attempt to fix the vulnerability. By doing so, they can give themselves enough time to learn how to fix the vulnerability and avoid causing unnecessary panic within the client company or among the customers, which could lead to a potential loss of business.
\end_layout

\begin_layout Standard
Describe how each of the following ethical guidelines was breached by the data security company. 
\end_layout

\begin_layout Enumerate
Integrity 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Responsibility 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Competence 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Professionalism 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
The Universal Product Code (UPC) system is used for tracking trade items in shipping, inventory, and sales. Each item is given a 12-digit identification number. The validity of this identification number can be checked using a checksum. If 
\begin_inset Formula $x_{i}$
\end_inset

 represents the 
\begin_inset Formula $i$
\end_inset

th digit (starting with 
\begin_inset Formula $i=1$
\end_inset

 as the leftmost digit), then a valid identification number satisfies the condition that
\end_layout

\begin_layout Standard
\noindent

\begin_inset Formula \[
3x_{1}+x_{2}+3x_{3}+x_{4}+3x_{5}+x_{6}+3x_{7}+x_{8}+3x_{9}+x_{10}+3x_{11}+x_{12}
\]
\end_inset


\end_layout

\begin_layout Standard
\noindent
has a remainder of 0 when divided by 10.
\end_layout

\begin_layout Standard
\noindent
The identification number can be encoded into a barcode. For this Task, the barcode will be represented as a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's, where '
\family typewriter
0
\family default
' represents a white stripe and '
\family typewriter
1
\family default
' represents a black stripe.
\end_layout

\begin_layout Standard
\noindent
The barcode is divided into seven sections. From left to right, they are 
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes els
\end_inset

quiet zone
\begin_inset Quotes ers
\end_inset

 consisting of nine '
\family typewriter
0
\family default
's; 
\end_layout

\begin_layout Itemize
A start pattern which is always '
\family typewriter
101
\family default
'; 
\end_layout

\begin_layout Itemize
The first six digits of the identification number are encoded using the table below; 
\end_layout

\begin_layout Itemize
A middle pattern which is always '
\family typewriter
01010
\family default
'; 
\end_layout

\begin_layout Itemize
The last six digits of the identification number are encoded using the table below; 
\end_layout

\begin_layout Itemize
An end pattern which is always '
\family typewriter
101
\family default
'; 
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes els
\end_inset

quiet zone
\begin_inset Quotes ers
\end_inset

 consisting of nine '
\family typewriter
0
\family default
's. 
\end_layout

\begin_layout Standard
\noindent
The table below shows the encoding system for the digits. Note that depending on whether the digit occurs in the first six digits or the last six digits, it would be encoded differently. However, the two encodings are optical inverses of each other ‚Äì a '
\family typewriter
0
\family default
' is changed into a '
\family typewriter
1
\family default
', and vice versa. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Digit 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First six digits 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Last six digits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0001101' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1110010'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0011001' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1100110'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0010011'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1101100'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0111101' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1000010' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0100011' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1011100' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0110001' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1001110'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0101111' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1010000'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0111011'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1000100' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0110111' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1001000'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0001011' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1110100'
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reason for encoding the first and last six digits differently is that the barcode may inadvertently be scanned upside down. Notice that in the first six digits, the encoding for each digit contains an odd number of '
\family typewriter
1
\family default
's, while in the last six digits, the encoding for each digit contains an even number of '
\family typewriter
1
\family default
's. This allows the scanning software to detect if the barcode has been placed upside down and correct it. 
\begin_inset space \quad{}

\end_inset


\end_layout

\begin_layout Standard
\noindent
For example, the UPC identification number 036000 291452 would be encoded as:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
000000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0111101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0101111 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quiet 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Start 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1101100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1110100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1100110
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Middle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1011100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1001110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1101100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
000000000 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
End 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quiet
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P2-Q1.png
	scale 80

\end_inset

 
\end_layout

\begin_layout Standard
\noindent
(Notice that in an actual barcode, the stripes for the start, middle and end pattern are usually slightly longer than the surrounding stripes. This is to help humans to read it.)
\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
\noindent
Write a function to determine the validity of any input string as an identification number. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
\noindent
Write a function to convert a valid identification number, given as a string, into a barcode (a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's). 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 1.3
\end_layout

\begin_layout Standard
\noindent
Write a function that takes in a string, check whether it represents a valid barcode, and converts it to an identification number if it does. Note that the barcode may be upside down. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Standard
\noindent
Download your program code and output for Task 1 as 
\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A file compression algorithm reduces file sizes so that files can be sent more quickly. One such algorithm is the Huffman algorithm for text files, which will be implemented in this task.
\end_layout

\begin_layout Standard
\noindent
Unlike ASCII, which assigns a fixed size of 8 bits for each character, the Huffman algorithm assigns fewer bits to more common characters and more bits to less common characters. For example, in a long text written in English, characters such as '
\family typewriter
e
\family default
' and '
\family typewriter
t
\family default
' will have fewer bits assigned to them than characters such as '
\family typewriter
q
\family default
' and '
\family typewriter
z
\family default
'. If the text is long enough, this will use fewer bits in total to encode the text compared to ASCII.
\end_layout

\begin_layout Standard
\noindent
To know which sequence of bits to encode for each character, the 
\series bold
frequency
\series default
 of each character, which is the number of times each character appears in the text file, is tabulated.
\end_layout

\begin_layout Standard
\noindent
The characters are put into a tree. A node is created for each character. The following steps are then repeated until there is only one node without a parent: 
\end_layout

\begin_layout Enumerate
Identify the two nodes, without parents, which have the lowest frequency. 
\end_layout

\begin_layout Enumerate
Create a new node whose left and right children are the two nodes identified in Step 1. The frequency of the new node is the total of the frequency of its children. 
\end_layout

\begin_layout Standard
\noindent
The diagram on the following page shows the process of creation of a tree for a file with only five distinct characters ('
\family typewriter
A
\family default
', '
\family typewriter
E
\family default
', '
\family typewriter
I
\family default
', '
\family typewriter
O
\family default
' and '
\family typewriter
U
\family default
'), in five stages.
\end_layout

\begin_layout Standard
\noindent
The bit sequence assigned to a character will be the path from the root to the node corresponding to that character, where going left corresponds to '
\family typewriter
0
\family default
' and going right corresponds to '
\family typewriter
1
\family default
'. For example, '
\family typewriter
A
\family default
' is encoded as '
\family typewriter
10
\family default
' and '
\family typewriter
O
\family default
' is encoded as '
\family typewriter
011
\family default
'.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
\noindent
Create a Node class that has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
, which is determined when the node is initialized 
\end_layout

\begin_layout Itemize

\family typewriter
left
\family default
, a pointer to another node, 
\end_layout

\begin_layout Itemize

\family typewriter
right
\family default
, a pointer to another node 
\end_layout

\begin_layout Standard
\noindent
When the node is initialised, left and right do not point to anything. The class also has setter methods for left and right, and getter methods for all three attributes. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
\noindent
Write code that takes an input 
\family typewriter
.txt
\family default
 file and creates a dictionary whose keys are the characters in the file, including spaces, punctuation and line breaks ('
\family typewriter

\backslash
n
\family default
'), and the value of a key is its frequency in the file. Uppercase and lowercase letters should be considered as different characters.
\end_layout

\begin_layout Standard
\noindent
Create a node for each character in the file, and put the nodes into a list in ascending order of frequency. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
\noindent
Create a tree using the algorithm described above. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 2.4
\end_layout

\begin_layout Standard
\noindent
Create a dictionary whose keys are the characters, and the value of a key is the bit sequence of that character, expressed as a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's.
\end_layout

\begin_layout Standard
\noindent
Carry out Tasks 2.2 to 2.4 on the file 
\family typewriter
HAMLET.txt
\family default
. Compress the file by replacing each character with its bit sequence and writing the output to a new file, 
\family typewriter
HAMLET_compressed.txt
\family default
. [8]
\end_layout

\begin_layout Standard
\noindent
Download your program code and output for Task 2 as 
\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
\noindent
Diagram showing how the tree is created based on the frequency of each character: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P2-Q2.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A community centre is required to keep COVID-19 vaccination records of its members in a NoSQL database. The CoviDie vaccine, which requires two doses to be taken at least 21 days apart, has been secured for all members of this particular community centre.
\end_layout

\begin_layout Standard
\noindent
As everyone needs to be vaccinated before the end of 2021, we shall only consider the year 2021, which is a non-leap year. The table below shows the number of days available in the twelve months of 2021. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Month 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
02 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
03 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
04 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
05 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
06
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Days 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
28 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Month 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
08 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
09 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Days 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
\noindent
Write a function 
\family typewriter
second_dose_date(date)
\family default
 that: 
\end_layout

\begin_layout Itemize
Takes a string value 
\family typewriter
date
\family default
 in the format 
\family typewriter
YYYYMMDD
\family default
, where 
\family typewriter
YYYY
\family default
 represents the year, 
\family typewriter
MM
\family default
 represents the month and 
\family typewriter
DD
\family default
 represents the day 
\end_layout

\begin_layout Itemize
determines the date that is 21 days after the input date 
\end_layout

\begin_layout Itemize
returns the result date in the format 
\family typewriter
YYYYMMDD
\family default
 
\end_layout

\begin_layout Standard
\noindent
Assume that the result date does not go beyond 
\family typewriter
20211231
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
\noindent
Test the function using the following three calls: 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210105') 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210212') 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210919')
\family default
 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\noindent
Save your program code as
\end_layout

\begin_layout Standard
\noindent

\family typewriter
TASK3_1_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
\noindent
The list of members under the management committee of the community centre is stored in the text file 
\family typewriter
VACCINATION.txt
\family default
. Some members have not taken the vaccination at all, some others have only taken the first dose, while the rest have taken both doses.
\end_layout

\begin_layout Standard
\noindent
Each line of the text file is of the following format: 
\family typewriter
_id,name,date_first_dose,date_second_dose,remarks
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
_id
\family default
 is a unique integer ID assigned to the member 
\end_layout

\begin_layout Itemize

\family typewriter
name
\family default
 is the name of the member 
\end_layout

\begin_layout Itemize

\family typewriter
date_first_dose
\family default
 and 
\family typewriter
date_second_dose
\family default
, if any, represent the date of the first dose and the date of the second dose respectively in the format 
\family typewriter
YYYYMMDD
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
remarks
\family default
, if any, shows the pre-existing condition of the member 
\end_layout

\begin_layout Standard
\noindent
Write program code to insert the data from 
\family typewriter
VACCINATION.txt
\family default
 into a NoSQL database 
\family typewriter
community_centre
\family default
 under the collection 
\family typewriter
management_committee
\family default
. The program should clear the collection 
\family typewriter
management_committee
\family default
 if it exists inside the database. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
\noindent
Save your program code as T
\family typewriter
ASK3_2_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
\noindent
The community centre needs a program to check the vaccination status of its members. The program should also allow for the downloading of vaccination certificates for members who are fully vaccinated, i.e. they have taken the two doses.
\end_layout

\begin_layout Standard
\noindent
Write program code to: 
\end_layout

\begin_layout Itemize
prompt the user to input a member ID, and keep prompting until the user keys in numeric character(s) 
\end_layout

\begin_layout Itemize
if the member ID is available in the NoSQL database, perform either one of the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
if the member is fully vaccinated, write the vaccination certificate to an output text file and update the record in the NoSQL database by including a field and an appropriate value to indicate that the certificate has been downloaded 
\end_layout

\begin_layout Itemize
if the member has only taken the first dose, output a message to show the date from which the member can take the second dose 
\end_layout

\begin_layout Itemize
if the member has not taken the vaccination at all, output a message to tell that the member should take the first dose as soon as possible 
\end_layout

\end_deeper
\begin_layout Itemize
otherwise, if the member ID is not available in the NoSQL database, display an appropriate message and terminate the program 
\end_layout

\begin_layout Standard
\noindent
The format of the vaccination certificate is as follows.
\end_layout

\begin_layout Standard
\noindent

\family typewriter
VACCINATION CERTIFICATE
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Name: <name> 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Vaccine type: CoviDie 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Date of first dose: <date_first_dose> 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Date of second dose: <date_second_dose>
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
\noindent
Save your program code as 
\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
Test your program for the member with 
\family typewriter
member_id = 24
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
\noindent
The output text file should be saved as 
\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.txt
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A company specialising in bento boxes wishes to trial a relational database management system to manage its data. It is expected that the database should be normalised to third normal form (3NF).
\end_layout

\begin_layout Standard
\noindent
The company owns four kiosks. For each of the kiosks, the following information is to be recorded in the table 
\family typewriter
Kiosk
\family default
: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID
\family default
 ‚Äì the unique integer assigned to the kiosk 
\end_layout

\begin_layout Itemize

\family typewriter
Location
\family default
 ‚Äì the area where the kiosk is located 
\end_layout

\begin_layout Itemize

\family typewriter
Rating
\family default
 ‚Äì the average rating of the kiosk between 0.0 and 5.0 inclusive 
\end_layout

\begin_layout Standard
\noindent
The company offers eight different types of bento boxes. Some of them may contain egg, nut, seafood or a combination of them. For each of the bento boxes, the following information is to be recorded in the table 
\family typewriter
BentoBox
\family default
: 
\end_layout

\begin_layout Itemize

\family typewriter
BentoName
\family default
 ‚Äì the unique name of the bento box 
\end_layout

\begin_layout Itemize

\family typewriter
ProductionCost
\family default
 ‚Äì the cost incurred in producing the bento box in dollars and cents 
\end_layout

\begin_layout Itemize

\family typewriter
ContainEgg
\family default
 ‚Äì an integer 0 for not containing egg and 1 for containing egg 
\end_layout

\begin_layout Itemize

\family typewriter
ContainNut
\family default
 ‚Äì an integer 0 for not containing nut and 1 for containing nut 
\end_layout

\begin_layout Itemize

\family typewriter
ContainSeafood
\family default
 ‚Äì an integer 0 for not containing seafood and 1 for containing seafood 
\end_layout

\begin_layout Standard
\noindent
Each of the four kiosks sells all eight bento boxes at different mark-up prices. Another table 
\family typewriter
KioskBento
\family default
 is needed to record the following information: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID
\family default
 ‚Äì the unique integer assigned to the kiosk 
\end_layout

\begin_layout Itemize

\family typewriter
BentoName
\family default
 ‚Äì the unique name of the bento box 
\end_layout

\begin_layout Itemize

\family typewriter
SellPrice
\family default
 ‚Äì the price at which the bento box is sold at the kiosk in dollars and cents 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
\noindent
Create an SQL file called 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
bento_company.db
\family default
 with the three tables. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
\noindent
Save your SQL code as 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default

\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
\noindent
The files 
\family typewriter
KIOSK.txt
\family default
 and 
\family typewriter
BENTOBOX.txt
\family default
 contain information about the company
\begin_inset Quotes ers
\end_inset

s kiosks and bento boxes respectively for insertion into the database. Each row in the two files is a comma-separated list of information.
\end_layout

\begin_layout Standard
\noindent
For 
\family typewriter
KIOSK.txt
\family default
, information about each kiosk is given in the following order: 
\family typewriter
KioskID
\family default
, 
\family typewriter
location
\family default
, 
\family typewriter
rating
\family default

\end_layout

\begin_layout Standard
\noindent
For 
\family typewriter
BENTOBOX.txt
\family default
, information about each bento box is given in the following order: 
\family typewriter
BentoName
\family default
, 
\family typewriter
ProductionCost
\family default
, 
\family typewriter
ContainEgg
\family default
, 
\family typewriter
ContainNut
\family default
, 
\family typewriter
ContainSeafood
\family default

\end_layout

\begin_layout Standard
\noindent
The mark-up price for each kiosk has been set as follows: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 1
\family default
 sells each bento box at a price that is $2.60 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 2
\family default
 sells each bento box at a price that is $2.90 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 3
\family default
 sells each bento box at a price that is $2.40 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 4
\family default
 sells each bento box at a price that is $3.10 higher than the production cost 
\end_layout

\begin_layout Standard
\noindent
Write program code to insert all the required information into the database 
\family typewriter
bento_company.db
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
\noindent
Save your program code as 
\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
Run your program.
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
\noindent
The company wishes to create a form to display the bento boxes sold at a particular kiosk and their prices in a web browser. The form should allow customers to indicate egg, nut and seafood allergies, if any, and filter out the bento boxes that they cannot consume.
\end_layout

\begin_layout Standard
\noindent
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives input from a HTML form that includes: 
\end_layout

\begin_deeper
\begin_layout Itemize
a text box to enter the 
\family typewriter
location
\family default
 of the kiosk 
\end_layout

\begin_layout Itemize
three checkboxes to indicate egg, nut and seafood allergies, if any 
\end_layout

\end_deeper
\begin_layout Itemize
returns a HTML document to display only the bento boxes that the customers can consume based on the allergies indicated, if any, and their prices for the given 
\family typewriter
location
\family default
 
\end_layout

\begin_layout Standard
\noindent
Input validation is not required. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
\noindent
Save your Python program as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
with any additional files / sub-folders as needed in a folder named 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\end_layout

\begin_layout Standard
\noindent
Run and test the web application using the following input: 
\end_layout

\begin_layout Itemize

\family typewriter
'Woodlands'
\family default
 entered as the 
\family typewriter
location
\family default
 
\end_layout

\begin_layout Itemize
checkboxes indicating egg and seafood allergies ticked 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
\noindent
Save the output of the program as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html 
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing software for a baker who makes celebration (wedding and birthday) cakes to order. All cakes are circular.
\end_layout

\begin_layout Standard
The programmer wishes to use object-oriented programming to model the order book and calculate the total price for a cake.
\end_layout

\begin_layout Standard
For every cake. the following items of data are recorded: 
\end_layout

\begin_layout Itemize
an order number 
\end_layout

\begin_layout Itemize
the customer
\begin_inset Quotes ers
\end_inset

s name 
\begin_inset Quotes els
\end_inset

 
\end_layout

\begin_layout Itemize
the customer's telephone number 
\end_layout

\begin_layout Itemize
diameter (in cm) 
\end_layout

\begin_layout Itemize
any special requirements (eg. must not contain nuts) 
\end_layout

\begin_layout Itemize
standard price (in S). 
\end_layout

\begin_layout Standard
For wedding cakes the number of layers, a maximum of four. is also recorded. The total price is the number of layers multiplied by the standard price.
\end_layout

\begin_layout Standard
For birthday cakes the number of candles and price of a candle is recorded. The total price is the standard price plus the number of candles multiplied by the price of a candle. 
\end_layout

\begin_layout Enumerate
Draw a class diagram that shows the following for the situation described above: 
\end_layout

\begin_deeper
\begin_layout Itemize
the superclass 
\end_layout

\begin_layout Itemize
any subclasses 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_layout Itemize
appropriate methods. 
\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\end_deeper
\begin_layout Enumerate
Name two suitable validation techniques that might be applied to the number of layers on a wedding cake.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain inheritance using examples from this situation. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A construction company provides employees to work on projects fro clients. Each employee has a specific skill. 
\end_layout

\begin_layout Itemize
Each project has an ID number and a title. 
\end_layout

\begin_layout Itemize
Each employee has a name, ID number and a SINGLE skill. 
\end_layout

\begin_layout Itemize
Each employee can work on a number of projects. 
\end_layout

\begin_layout Itemize
Each skill has an ID number, name and cost per hour. 
\end_layout

\begin_layout Itemize
The cost to the client for each employee is the employee's cost per hour multiplied by the number of hours worked on the project. 
\end_layout

\begin_layout Standard
This table shows typical data from which server charges can be calculated. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="8">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Project ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Project Title 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Employee ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Employee Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Skill ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Skill Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cost per Hour ($) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hours worked
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New roof 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Smith 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Carpentry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New roof 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jones 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Carpentry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New roof 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Roberts 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bricklaying 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
45 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Refurbish pool 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harrison 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Electrical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Refurbish pool 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harris 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Plastering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
42 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Refurbish pool 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Patel 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
35
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Refurbish pool 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staples 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
42
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Replace kitchen 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jones 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Carpentry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Replace kitchen 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harris 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Plastering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
42 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Replace kitchen 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harrison 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Electrical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Replace kitchen 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Charles 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain, giving an example, whether the above table is in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The company wants to construct a relational database to store the data shown in the table on page 3.
\end_layout

\begin_layout Standard
The following tables contain the data:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Region
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Project ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Project Title
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New roof
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Refurbish pool
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Replace kitchen
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Employee
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Employee ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Employee Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Skill ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Skill Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cost per Hour ($)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Smith 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Carpentry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jones 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Carpentry 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Roberts 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bricklaying 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harrison 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Electrical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Harris 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Plastering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
42
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Patel 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staples 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Charles 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tiling 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="13" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
ProjectEmployee
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Project ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Employee ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hours Worked
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
35
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
42
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain why the table 
\series bold
Employee
\series default
 is not in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (Attributel, Attribute2, Attribute3, ...)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write table descriptions for two tables to hold the data from the 
\series bold
Employee
\series default
 table each of which are in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State the primary key for the table 
\series bold
ProjectEmployee
\series default
.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Draw an entity-relationship (ER) diagram showing the necessary four tables and the relationships between them.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
For each project one employee is nominated to be the Project Manager 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Explain the change that needs to be made to the existing table design to allow the Project Manager on each project to be identified.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The cost of employing an electrician increases to $52 per hour. The client receives an invoice, at the end of the project, showing the hours worked and charge for each skill. An employee with the skill Electircal can be called an electrician. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Explain a problem that may arise if the 
\series bold
Cost per Hour ($)
\series default
 field for Electrical in the 
\series bold
Employee
\series default
 table is changed from $50 to $52. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
An employee with the skill Tiling can be called a tiler. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Write an SQL query to output the names and running worked of the tilers who worked on the Refurbish pool project, in descending hours of 
\series bold
Hours Worked
\series default
.
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard
The video game company maintains a table of employee names and addresses, so the company can send letters to them.
\end_layout

\begin_layout Standard
The company also maintains a table of employee bank account details, so monthly payments for the game can be transferred automatically to their bank accounts. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

) State 
\series bold
four
\series default
 actions the construction company must take regarding the collection, disclosure and use of this data under the Personal Data Protection Act. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a denial of service (DOS) attack can compromise an internet server. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
A news website posts an article that attracts unusually large worldwide attention. The monitoring software, running on the news website server. warns the system administrator that the site might be the victim of a denial of service attack. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State 
\series bold
two
\series default
 reasons why the monitoring software generates the warning. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
A server connected to the internet provides web hosting, file transfer and email services. Clients send requests to this server using an internet protocol. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain how requests arriving at this server are handled. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
A firewall is placed between the internet and the sewer. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain how the firewall may manage traffic between the server and the internet. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Describe how a digital signature can be used to give confidence that a received message has not been altered. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

State 
\series bold
two
\series default
 authentication techniques to limit access to a network application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing code to accept, store and process a number of readings from sensors monitoring an experiment. Depending on conditions, the experiment can generate between hundreds and hundreds of thousands of readings. These readings are stored in a data structure. The programmer has the option of using either a static or a dynamic data structure. 
\end_layout

\begin_layout Enumerate
Explain the advantage of selecting a dynamic over static data structure in terms of memory allocation. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
State two problems that might arise if a dynamic data structure is used in terms of memory allocation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The readings are processed in the order they are stored. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Identify a suitable data structure and explain your choice. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A hashing algorithm is to be used to locate a record within a hash table. 
\end_layout

\begin_layout Enumerate
State three features that a good hashing algorithm will possess.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain how two different records hashing to the same location can be managed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
A social media company has to store and maintain huge quantities of data.
\end_layout

\begin_layout Standard
The social media company hashes a user's ID to locate data for that user
\begin_inset Quotes els
\end_inset

s account. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain the advantage of using a hash table, in this situation. rather than linear search to locate a record.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain the disadvantage of a binary search in this situation.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
ASCII allows characters to be stored in memory by associating a number with each character. In memory. that number is stored as a pattern of bits.
\end_layout

\begin_layout Standard
The decimal value representing 
\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset

 in ASCII is 65. 
\end_layout

\begin_layout Enumerate
Represent this value in: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Binary 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Hexadecimal. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
The decimal value representing 
\begin_inset Quotes els
\end_inset

a
\begin_inset Quotes ers
\end_inset

 in ASCII is 97. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State the hexadecimal value that must be added to the ASCII code for 
\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes els
\end_inset

 to convert it to the ASCII code for 'a
\begin_inset Quotes els
\end_inset

. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
Unicode is another method of encoding characters. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the values that are common to both ASCII and Unicode.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain what advantage Unicode has over ASCII. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The nodes of a binary search tree holding names in alphabetical order are stored in the elements of an array, 
\family typewriter
Names
\family default
.
\end_layout

\begin_layout Standard
Each element of the array 
\family typewriter
Names
\family default
 comprises three parts: a left pointer, the data and a right pointer. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
LPtr
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Data
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
RPtr
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The pointers contain the array index of a node to either the left or right of the current node. 
\series bold
Null
\series default
 indicates there are no further nodes in a particular direction.
\end_layout

\begin_layout Standard
An integer variable, 
\family typewriter
Root
\family default
, holds the index of the root node.
\end_layout

\begin_layout Standard
The contents of the array 
\family typewriter
Names
\family default
 are shown: 
\end_layout

\begin_layout Standard
\align center

\series bold

\series default

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\series bold

\begin_inset space ~

\end_inset


\series default

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Index
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
LPtr
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
RPtr
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Peter
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
3
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Leona
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
5
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Alice
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
2
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Bobbie
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
6
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Tom
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
0
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Simone
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
4
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
David
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Null
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary search tree represented by the data in the array 
\family typewriter
Wurdle
\family default
 and the value in 
\family typewriter
Root
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A new word, 
\series bold
Eric
\series default
, is to be inserted into the binary search tree. Show the changes to the array 
\family typewriter
Names
\family default
 after this insertion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Using pseudo-code, write a recursive procedure 
\family typewriter
P
\family default
, together with line numbers, that takes the value in 
\family typewriter
Root
\family default
 and outputs the result of an in-order traversal of 
\family typewriter
Names
\family default
.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The IMEI number is a unique value used to identify mobile devices, such as phones and tablets. The IMEI number has 15 digits: 14 digits with an extra check digit added to the right-hand Side.
\end_layout

\begin_layout Standard
The check digit is calculated using the following algorithm, on the left-most 14 digits of an IMEI number: 
\end_layout

\begin_layout Enumerate
starting from the right, the first digit is location number 1 
\end_layout

\begin_layout Enumerate
double all digits in the odd numbered positions 
\end_layout

\begin_layout Enumerate
sum all the digits, including both the unchanged digits (i.e. those in the even numbered positions) as well as those doubled (eg. 16 contributes 1 + 6) 
\end_layout

\begin_layout Enumerate
the check digit is the value between 0 and 9 that must be added to the sum to make the result exactly divisible by 10. 
\end_layout

\begin_layout Standard
For example, given the 14 digits 14576567654934:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="15">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Step 1:
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

1
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

4
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

5
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

7
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

5
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

7
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

5
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

4
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

9
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

3
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

4
\size default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Step 2:
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

1
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

8
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

5
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

14
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

10
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

14
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

6
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

10
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

4
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

18
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

3
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

8
\size default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Step 3:
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $1+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(8)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $5+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(1+4)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $6+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(1+0)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $6+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(1+4)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $6+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(1+0)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $4+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(1+8)+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $3+$
\end_inset


\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\begin_inset Formula $(8)$
\end_inset


\size default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Sum = 68
\size default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Step 4:
\size default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\size footnotesize

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

Check digit = 2
\size default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="24">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In [1] :
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
#Task 1.1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task1_1(input_value)
\family default
 that returns an integer.
\end_layout

\begin_layout Standard
The function should: 
\end_layout

\begin_layout Itemize
validate that the parameter 
\family typewriter
input_value
\family default
 is either an integer, or a string containing a valid integer 
\end_layout

\begin_layout Itemize
check that it is 14 digits in length 
\end_layout

\begin_layout Itemize
return 
\begin_inset Formula $-1$
\end_inset

 if the value received is invalid for any reason 
\end_layout

\begin_layout Itemize
calculate the check digit for the given first 14 digits of the IMEI number 
\end_layout

\begin_layout Itemize
return the calculated check digit. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Create 
\series bold
four
\series default
 tests that should fully test your function. Ensure that it validates the inputs accurately and returns the correct expected result.
\end_layout

\begin_layout Standard
Each of the four tests will be a pair of data items: the input value and its expected result.
\end_layout

\begin_layout Standard
Your four input values should be: 
\end_layout

\begin_layout Itemize
a string containing just a valid integer 
\end_layout

\begin_layout Itemize
a valid integer 
\end_layout

\begin_layout Itemize
a string containing characters that are not numbers 
\end_layout

\begin_layout Itemize
a value of the incorrect length 
\end_layout

\begin_layout Standard
Test your function with your four input values by calling it usrng the followmg statement:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print (task1_1(input_value) == expected) 
\family default

\end_layout

\begin_layout Standard
The four statements should all print 
\family typewriter
True
\family default
. For example:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(task1_1(
\begin_inset Quotes qrd
\end_inset

14576567654934
\begin_inset Quotes qrd
\end_inset

) == 2)
\family default

\end_layout

\begin_layout Standard

\series bold
Do not
\series default
 use the example provided but create your own.
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
A full 15-digit IMEI number can be validated by removing the check digit, calculating the check digit from the remaining 14 digits and comparing it to the removed digit.
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task1_3(input_value)
\family default
 that returns a Boolean. The function should: 
\end_layout

\begin_layout Itemize
validate that the parameter 
\family typewriter
input_value
\family default
 is either an integer, or a string containing a valid integer 
\end_layout

\begin_layout Itemize
check that it is 15 digits in length 
\end_layout

\begin_layout Itemize
return 
\family typewriter
False
\family default
 if the value received is invalid for any reason 
\end_layout

\begin_layout Itemize
remove the digit on the right-hand side 
\end_layout

\begin_layout Itemize
use your function from Task 1.1 to calculate the check digit from the remaining 14 digits 
\end_layout

\begin_layout Itemize
return a Boolean representing the comparison between the calculated check digit and the original removed digit.
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Test your function with four input values (these may be based on those from Task 1.2 or otherwise), two should be correct IMEI numbers, two should be in error.
\end_layout

\begin_layout Standard
If a value of 
\family typewriter
True
\family default
 is expected, use the following statement:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(taskl_3(input_value)) 
\family default

\end_layout

\begin_layout Standard
If a value of False is expected to be returned by the comparison, this can be changed to still output True by using the not keyword, for example:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(not task1_3(
\begin_inset Quotes qrd
\end_inset

12345r
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Standard
The four statements should all print True. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Save your Jupyter notebook for Task 1.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
For this question you are provided with three text files, each contains a valid list of positive integers, one per line: 
\end_layout

\begin_layout Itemize

\family typewriter
TEN.txt
\family default
 has 10 lines 
\end_layout

\begin_layout Itemize

\family typewriter
HUNDRED.txt
\family default
 has 100 lines 
\end_layout

\begin_layout Itemize

\family typewriter
THOUSAND.txt
\family default
 has 1000 lines. 
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="24">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In [1] :
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
#Task 2.1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task2_1(filename)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes a string filename which represents the name of a text file 
\end_layout

\begin_layout Itemize
reads in the contents of the text file 
\end_layout

\begin_layout Itemize
returns the content as a list of integers. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
Call your function task2_l with the file TEN.txt, printing the returned list and its length, using the following statements:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

result = task2_l('TEN.txt')
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(result)
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(len(result)) 
\family default

\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
One method of sorting is the insertion sort.
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task2_2(list_of_integers)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes a list of integers 
\end_layout

\begin_layout Itemize
implements an insertion sort algorithm 
\end_layout

\begin_layout Itemize
returns the sorted list of integers. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
Call your function 
\family typewriter
task2_2
\family default
 with the contents of the file 
\family typewriter
TEN.txt
\family default
, printing the returned list, for example, using the following statement:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(task2_2(task2_1('TEN.txt')))
\family default

\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Another method of sorting is the quicksort.
\end_layout

\begin_layout Standard
Write a function t
\family typewriter
ask2_3(list_of_integers)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes a list of integers 
\end_layout

\begin_layout Itemize
implements a quicksort algorithm 
\end_layout

\begin_layout Itemize
returns the sorted list of integers.
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard
Call your function 
\family typewriter
task2_3
\family default
 with the contents of the file 
\family typewriter
TEN.txt
\family default
, printing the returned list. for example, using the following statement:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

print(task2_3(task2_1('TEN.txt')))
\family default

\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
The 
\family typewriter
timeit
\family default
 library is built into Python and can be used to time simple function calls. Example code is shown in 
\family typewriter
Task2_timing.py
\family default
. (The sample code assumes that it has access 
\family typewriter
task2_2
\family default
 function.)
\end_layout

\begin_layout Standard
Using the 
\family typewriter
timeit
\family default
 module, or other evidence, and the three text files provided with this question, compare and contrast, including mention of orders of growth, the time complexity of sort and quicksort algorithms.
\end_layout

\begin_layout Standard
Save your Jupyter notebook for Task 2.
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a class, 
\family typewriter
LinkedList
\family default
, to represent a linked list of unique integers. A linked list is a collection of data elements, whose order is not given by their physical placement in memory. Instead, each element points to the next.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#' to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="24">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In [1] :
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
#Task 3.1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write the 
\family typewriter
LinkedList
\family default
 class in Python. Use of a simple Python list is not sufficient. Include the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
insert(integer_value)
\family default
 inserts the 
\family typewriter
integer_value
\family default
 at the beginning (head) of the list 
\end_layout

\begin_layout Itemize

\family typewriter
delete(integer_value)
\family default
 attempts to delete 
\family typewriter
integer_value
\family default
 from the list; if the item was not present, return 
\family typewriter
None
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
search(integer_value)
\family default
 returns a Boolean value: 
\family typewriter
True
\family default
 if 
\family typewriter
integer_value
\family default
 is in the list, 
\family typewriter
False
\family default
 if not in the list 
\end_layout

\begin_layout Itemize

\family typewriter
count()
\family default
 should return the number of elements in the list, or zero if empty 
\end_layout

\begin_layout Itemize

\family typewriter
to_String()
\family default
 should return a string containing a suitably formatted list with the elements separated by a comma and a space, with square brackets at either end, eg. in the form:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

[11, 2, 7, 4]
\family default
 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Standard
Test 
\family typewriter
LinkedList
\family default
 by using the data in the file 
\family typewriter
Task3data.txt
\family default
. Use the 
\family typewriter
to_String()
\family default
 method to print the resulting contents of the list. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write a Python subclass 
\family typewriter
SortedLinkedList
\family default
 using 
\family typewriter
LinkedList
\family default
 as its superclass.
\end_layout

\begin_layout Standard
The insert method in the 
\family typewriter
SortedLinkedList
\family default
 subclass should ensure that the elements are stored in ascending order. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Test 
\family typewriter
SortedLinkedList
\family default
 by using the data in the file 
\family typewriter
Task3data.txt
\family default
. Use the 
\family typewriter
to_String()
\family default
 method to print the resulting contents of the list.
\end_layout

\begin_layout Standard
Print the result of searching the SortedLinkedList for the value 94. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write a Python subclass 
\family typewriter
Queue
\family default
 using 
\family typewriter
LinkedList
\family default
 as its superclass.
\end_layout

\begin_layout Standard
Additional 
\family typewriter
enqueue
\family default
 and 
\family typewriter
dequeue
\family default
 methods are to be defined on the 
\family typewriter
Queue
\family default
 class; 
\end_layout

\begin_layout Itemize

\family typewriter
enqueue(integer_value)
\family default
 will insert 
\family typewriter
integer_value
\family default
 to the end of the queue 
\end_layout

\begin_layout Itemize

\family typewriter
dequeue()
\family default
 will return the first element in the queue. If the queue is empty, return 
\family typewriter
None.
\family default
 
\begin_inset Newline newline
\end_inset

 
\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard
Test 
\family typewriter
Queue
\family default
 by using the data in the file 
\family typewriter
Task3data.txt
\family default
. Print the first five elements to be dequeued from the list. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
Save your Jupyter notebook for Task 3.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A competition has three qualifying rounds. Competitors could score up to 100 points in each round. Each competitor has a unique ID number. The competitor's ID, name, and the scores for ac round are held in a database, 
\family typewriter
Task4.db
\family default
, provided with this question.
\end_layout

\begin_layout Standard
There are two tables: 
\end_layout

\begin_layout Itemize

\family typewriter
competitor(
\family default

\family typewriter

\bar under
id
\bar default

\family default

\family typewriter
, name) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
scores(
\family default

\family typewriter

\bar under
id
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
round
\bar default

\family default

\family typewriter
, score)
\family default
 
\end_layout

\begin_layout Standard
Not every competitor competed in all three rounds, but they did all compete in round 1.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application. The web application offers the following menu options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Round 1 Scores
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Round 2 Scores
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Round 3 Scores
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mean Scores
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Qualifiers
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Round 1 Scores Round 2 Scores Round 3 Scores Mean Scores Qualifiers
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
Task4_1_<your name>_<centre number>_<index__number>.py 
\family default

\end_layout

\begin_layout Standard
With any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_l_<your name>_<centre number>__<index_number> 
\family default

\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task4_1__<your name>_<centre number>_<index_number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write an SQL query that, for 3 given round number, shows: 
\end_layout

\begin_layout Itemize
competitor names and their scores for that particular round 
\end_layout

\begin_layout Itemize
only those who had a score for that round 
\end_layout

\begin_layout Itemize
the scores sorted in descending order. 
\end_layout

\begin_layout Standard
The results of the query should be shown on a web page in a table that: 
\end_layout

\begin_layout Itemize
lists the name of each competitor and their score 
\end_layout

\begin_layout Itemize
has the results shown in descending order of the competitor's score. 
\end_layout

\begin_layout Standard
The resulting web page for each round should be accessed from the corresponding menu option from Task 4.1.
\end_layout

\begin_layout Standard
Save all your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task4_2_<your name>_<centre number>_<index_number>.sql
\family default

\end_layout

\begin_layout Standard
With any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_2_<your name>_<centre number>_<index_number>
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task4_2_<your name>_<centre number>_<index_number>_1.html
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_2_<your name>_<centre number>_<index__number>_2.html
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_2_<your name>_<centre number>_<index_number>_3.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a SQL query that shows: 
\end_layout

\begin_layout Itemize
competitor name 
\end_layout

\begin_layout Itemize
the mean score for each competitor, based on the number of rounds in which they competed. 
\end_layout

\begin_layout Standard
The query's results should be Shown on a web page in a table that: 
\end_layout

\begin_layout Itemize
lists the name of each competitor and their mean score (to 2 decimal places) 
\end_layout

\begin_layout Itemize
has the results shown in ascending alphabetical order of the competitor's name. 
\end_layout

\begin_layout Standard
The resulting web page should be accessed from the corresponding menu option from Task 4.1.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task4_3_<your name>_<centre number>_<index_number>.sql
\family default

\end_layout

\begin_layout Standard
With any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_3_<your name>_<centre number>_<index_number>
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task4_3_<your name>_<centre number>_<index_number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
In order to qualify for the final of the competition, competitors need to score over 250, in total, in the first three rounds.
\end_layout

\begin_layout Standard
Write SQL query that shows: 
\end_layout

\begin_layout Itemize
competitor
\begin_inset Quotes ers
\end_inset

s name 
\end_layout

\begin_layout Itemize
their total score 
\end_layout

\begin_layout Itemize
whether that competitor has qualified for the final. 
\end_layout

\begin_layout Standard
The results of the query should be shown on a web page in a table that: 
\end_layout

\begin_layout Itemize
lists the names of the competitors, their scores and whether they qualified 
\end_layout

\begin_layout Itemize
has the results shown in descending order of the competitor's score. 
\end_layout

\begin_layout Standard
The resulting web page should be accessed from the corresponding menu option from Task 4.1.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task4_4_<your name>_<centre number>_<index_number>.sql
\family default

\end_layout

\begin_layout Standard
With any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_4_<your name>_<centre number>_<index_number>
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task4_4_<your name>_<centre number>_<index_number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A cosmic ray striking computer memory at just the right time can flip a bit, turning a 0 into a 1 or vice versa.
\end_layout

\begin_layout Standard
Bit flips had caused plane accidents, software glitches, and at times, the Blue Screen of Death (BSoD) on personal computers. 
\end_layout

\begin_layout Enumerate
The hexadecimal number 
\family typewriter
D4
\family default
 had been changed to 
\family typewriter
9A
\family default
. Suggest the minimum number of times a bit flip could have affected it and explain why. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why Unicode characters, as compared to ASCII characters, are more likely to be altered after a cosmic ray strike.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Define what a backup and archive is, and explain which should be prioritised if a company is warned of a global cosmic ray strike occurring in a week. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain how TCP/IP layers help to fulfil the purpose of the TCP/IP model. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Suggest and explain a consequence on network communication when a data packet is affected by a bit flip occurring at the Internet Layer
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why the consequence of a bit flip occurring at the Internet Layer and the Transport Layer would be the same as the consequence as a bit flip occurring at the Internet Layer only. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An array stores 16 powers of 2 integers in ascending order:
\end_layout

\begin_layout Standard
1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768 
\end_layout

\begin_layout Enumerate
If the array is searched by means of a binary search, state which elements would be accessed, and in what order, 
\end_layout

\begin_deeper
\begin_layout Enumerate
when searching for the number 4096 (which is present), and 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
when searching for the number 3 (which is not present). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a program flowchart of an iterative binary search algorithm. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Explain why binary search could be more efficient than linear search. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the time complexities of hash table search and binary search and explain which is more efficient with reference to their time complexities in the above scenario. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A mobile network provider
\begin_inset Quotes ers
\end_inset

s management of customer
\begin_inset Quotes ers
\end_inset

s overdue bills include an automated emailing and SMS system. 
\end_layout

\begin_layout Itemize
If a mobile bill is overdue, a daily system generated reminder is emailed to the user indicating the overdue details. 
\end_layout

\begin_layout Itemize
If the user has 1 mobile bill that is more than 6 days overdue, in place of the daily reminder email, a warning email and SMS will be sent to the user. 
\end_layout

\begin_layout Itemize
If a user has more than 4 bills which are more than 14 days overdue, the user will incur a penalty fee for every additional week starting from the 14th day of being overdue. 
\end_layout

\begin_layout Itemize
If a user has incurred more than 3 penalty fees, the user
\begin_inset Quotes ers
\end_inset

s mobile service will be terminated. 
\end_layout

\begin_layout Itemize
Penalty fees could be incurred as a result of other actions such as accessing illegal websites. 
\end_layout

\begin_layout Itemize
Each bill issued to a customer represents the past month
\begin_inset Quotes ers
\end_inset

s usage. 
\end_layout

\begin_layout Enumerate
Create a decision table showing all possible outcomes and results for bill(s) that are overdue. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify the decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
A user interface is designed for a program for customers to check their bills and overdue status. State a usability principle and describe how the user interface of the program should be designed to demonstrate this principle.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a linked list data structure could be more suitable than an array data structure to implement a binary tree. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
(b) Suggest and justify one circumstance where an array structure is more appropriate than a linked structure. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The diagram shows a binary tree before and after an inversion. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Each node has these attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
right
\family default
 which is the pointer to right subtree 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
 which is the value contained in each respective node displayed above 
\end_layout

\begin_layout Itemize

\family typewriter
left
\family default
 which is the pointer to the left subtree 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write pseudocode for procedure 
\family typewriter
insert
\family default
 which will add a node to the post-inverted tree (which may be empty) in such a way that if the new value of the node is 
\series bold
less
\series default
 than the value at the current node, the new node will be added to the 
\series bold
right
\series default
 subtree, or else it will be added to the left subtree. 
\family typewriter
insert
\family default
 takes in values 
\family typewriter
node_data
\family default
 and 
\family typewriter
root_node
\family default
 which is the value to be added to the tree and the instance of the root node of the tree respectively. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d) 
\end_layout

\end_inset

A function 
\family typewriter
invertTree
\family default
 takes in the root node of the above pre-inverted tree, uses recursion to invert it into the post-inverted tree, and returns the root node of the post-inverted tree. Write pseudocode for the function and visualise it in a trace diagram. An incomplete trace diagram is provided for you to begin with. Copy and complete it. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q4-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
(Note: Should be invertTree, not insertTree) 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Consider the following data which shows a single Civics Group record used in COVID19 vaccination tracking. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Derive a set of tables to show the above data in first, second and third normal form. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Using examples in the above context, explain the significance of the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
With reference to the above context, describe or suggest a scenario where a NoSQL database would be more appropriate. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Long-distance optical fibre lines and submarine cables which are a vital part of the global internet infrastructure are vulnerable to solar superstorms which happen once in a century. The last solar superstrom was in 1921. 
\end_layout

\begin_layout Enumerate
State and explain why websites would or would not be accessible by web browsers if a solar superstorm shuts down all DNS servers. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain packet switching and its importance in ensuring global internet connectivity when some parts of the earth are hit by a solar superstorm. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
An international company based in many countries updates its network structure to ensure Internet connectivity during solar superstorms.
\end_layout

\begin_layout Standard
Employees can now access files on a shared virtual space which is made up of 3 servers located in the United States, Europe, and Asia. All servers hold identical information (any changes made on one server would update the other servers immediately) so even if one server is affected by the solar superstorm, employees still can access their files on the other servers.
\end_layout

\begin_layout Standard
Employees must be connected physically to the company
\begin_inset Quotes ers
\end_inset

s intranet network at each country
\begin_inset Quotes ers
\end_inset

s office to access the virtual space. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw a network diagram of the above configuration and label the LAN, internet, router(s), WAN link(s), intranet, servers, and employee laptops. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Why is version control vital when employees from different countries work in teams? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A divide and conquer approach is used by merge sort to successively divide a list into half, forming two sublists, until each sublist is of length 1. The sublists are then sorted and merged into larger sublists until they are recombined into a single sorted list. An algorithm for merge sort to perform an ascending sort is given below. It will be used to sort large or small data sizes.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE mergesort(mergelist : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ‚Üê LENGTH(mergelist) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ‚Üê 0 TO (mid - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

lefthalf[index] ‚Üê mergelist[index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

right_len ‚Üê LENGTH(mergelist) - mid
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ‚Üê 0 TO (right_len - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

righthalf[index] ‚Üê mergelist[right_len + index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê lefthalf[i]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
33
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
39
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist(k] ‚Üê righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
46 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The following array of numbers is to be sorted using 
\family typewriter
mergesort
\family default
: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
mergelist = [2, 4, 2, 8, 2, 8, 9, 1, 3]
\family default
 
\end_layout

\begin_layout Standard
What are the first two lists to be merged? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain what a logic error is, give the line number for the logic error in the above code, and rewrite the line correctly. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The procedure
\family typewriter
 sorting_proc
\family default
 uses an optimised bubble sort to sort an array
\family typewriter
 input_array
\family default
 in an ascending order. It is used within 
\family typewriter
modified_mergesort
\family default
 which is a modified version of 
\family typewriter
mergesort
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE sorting_proc(input_array : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

length ‚Üê LENGTH(input_array) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ‚Üê FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR curr_elem_index ‚Üê 1 to length ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF input_array [curr_elem_index - 1] > input_array [curr_elem_index] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SWAP (input_array [curr_elem_index - 1], input_array [curr_elem_index]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ‚Üê TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

length ‚Üê length ‚Äì 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset

UNTIL NOT swapped 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE modified_mergesort(mergelist : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) < 5 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sorting_proc(mergelist) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ‚Üê LENGTH(mergelist) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ‚Üê 0 TO (mid - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

lefthalf[index] ‚Üê mergelist[index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

right_len ‚Üê LENGTH(mergelist) - mid 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ‚Üê 0 TO (right_len - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

righthalf[index] ‚Üê mergelist[right_len + index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
33 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê righthalf[j]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
39 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ‚Üê i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
46 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE j < LENGTH(righthalf)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
47 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ‚Üê righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
48 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ‚Üê j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
49 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ‚Üê k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
50 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
51 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
52 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
53 ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Would the above modification of mergesort improve the algorithm
\begin_inset Quotes ers
\end_inset

s overall efficiency? Support your answer with a description on how and explanation on why its efficiency is affected. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The procedure 
\family typewriter
insertionSort
\family default
 is an algorithm which uses insertion sort.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE insertionSort(input_array: ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

current_elem_index ‚Üê 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current_elem_index ‚Üê current_elem_index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

compared_item_index ‚Üê -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ‚Üê FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

compared_item_index ‚Üê compared_item_index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF input_array[current_elem_index] < input_array[compared_item_index] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp ‚Üê input_array[current_elem_index]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

the value of each element of input_array from compared_item_index to (current_elem_index ‚Äì 1) is sequentially assigned to each element of input_array from (compared_item_index + 1) to current_elem_index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

input_array[compared_item_index] ‚Üê temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ‚Üê TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL swapped ‚Üê TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset

UNTIL current_elem_index = LENGTH(input_array) - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Modify 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 to count and store the number of comparisons made in a variable named 
\family typewriter
comparisons
\family default
. Instead of copying all the pseudocode statements, state the line number(s) you want to modify or insert any pseudocode at, followed by the pseudocode statement(s) to be added/modified. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Trace the modified algorithms 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 for the array 
\family typewriter
[5, 2, 3, 4]
\family default
 showing the value of all variables for each step by completing the following tables.
\end_layout

\begin_deeper
\begin_layout Standard
Trace table for 
\family typewriter
insertionSort
\family default
:
\end_layout

\begin_layout Standard

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
current_elem _index 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
compared_item_index 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
comparisons
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
input_array
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
swapped
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
TRUE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FALSE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Trace table for 
\family typewriter
sorting_proc
\family default
:
\end_layout

\begin_layout Standard

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
current_elem _index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
compared_item_index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
input_array
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
arr_length
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
swapped
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
TRUE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FALSE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
...
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
...
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

In the context of 
\family typewriter
mergesort
\family default
, suggest scenario(s) where using the current optimised bubble sort algorithm for 
\family typewriter
sorting_proc
\family default
 would be better than using the 
\family typewriter
insertionSort
\family default
 algorithm above. Support your answer by designing 3 test cases (normal and boundary) and comparing the number of 
\family typewriter
comparisons
\family default
 made by each algorithm for each test case. Display your output. 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 1
\series default

\end_layout

\begin_layout Standard
For this task, submit all code as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
\end_layout

\begin_layout Standard
The Taliban
\begin_inset Quotes ers
\end_inset

s takeover of Afghanistan had seen the United States (US) evacuating people. The Republic of Singapore Air Force offers its A330 Multi-Role Tanker Transport plane (A330 MRTT) to help the US airlift groups of evacuees from Afghanistan.
\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
To prevent Taliban interference, messages sent between evacuees and the A330 MRTT are encrypted.
\end_layout

\begin_layout Standard
The encryption converts each character of the message into its ASCII number representation, adds the ASCII number representation of a character of a secret key which is in the same position, and then converts it back into ASCII text.
\end_layout

\begin_layout Standard
Secret keys are generated from passwords known only by the sender and receiver. Passwords that are shorter in length than the message are lengthened to match by repeating the password until the same length as the message is achieved.
\end_layout

\begin_layout Standard
For example, given that the inputs are
\end_layout

\begin_layout Standard

\family typewriter
password : 
\begin_inset Quotes qld
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
message 
\begin_inset space ~

\end_inset

: 
\begin_inset Quotes qld
\end_inset

hello
\begin_inset Quotes qrd
\end_inset


\family default

\end_layout

\begin_layout Standard
Step 1 - Extend password by repeating until matches length of message
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

 -> 
\begin_inset Quotes qld
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Step 2 - Convert each character of password and message into ASCII number representation
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

 -> 104, 101, 108, 108, 111 
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 -> 99, 97, 116, 99, 97 
\family default

\end_layout

\begin_layout Standard
Step 3 - Add the ASCII number representation of same positions together
\end_layout

\begin_layout Standard

\family typewriter
104+99, 101+97, 108+116, 108+99, 111+97 -> 203, 198, 224, 207, 208 
\family default

\end_layout

\begin_layout Standard
Step 4 - Convert each number to its ASCII character
\end_layout

\begin_layout Standard

\family typewriter
203, 198, 224, 207, 208 -> 
\begin_inset Quotes qld
\end_inset

√ã√Ü√†√è√ê
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Therefore, the results are
\end_layout

\begin_layout Standard

\family typewriter
Secret key : 
\begin_inset Quotes qld
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Encrypted message : 
\begin_inset Quotes qld
\end_inset

√ã√Ü√†√è√ê
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generateKey(password, message)
\family default
 that takes in two argument strings 
\family typewriter
message
\family default
 and 
\family typewriter
password
\family default
 and returns the secret key.
\end_layout

\begin_layout Standard
Test your function using 
\family typewriter
generateKey(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write functions 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 that takes in 
\family typewriter
password
\family default
 and message strings and returns the encrypted or decrypted 
\family typewriter
message
\family default
. It should use the above function 
\family typewriter
generateKey(password, message)
\family default
 to obtain the secret key before performing the encryption.
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
decrypt(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

, encrypt(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

))
\family default
. Show your output. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Since the A330 MRTT plane can only take a maximum of 266 passengers at once, implement a 
\family typewriter
Queue
\family default
 to manage incoming pickup requests and dropoffs. Write a class Queue with the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
enqueue(string)
\family default
 which takes in a string and adds it to the queue or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is full!
\begin_inset Quotes qrd
\end_inset


\family default
 if queue is full 
\end_layout

\begin_layout Itemize

\family typewriter
dequeue
\family default
 which removes the next item for the queue or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is empty!
\begin_inset Quotes qrd
\end_inset


\family default
 if the queue is empty 
\end_layout

\begin_layout Itemize

\family typewriter
display
\family default
 which returns a string of queue items in sequence from head to tail or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is empty!
\begin_inset Quotes qrd
\end_inset


\family default
 if the queue is empty 
\end_layout

\begin_layout Itemize

\family typewriter
current_size
\family default
 which returns an integer of the number of items in the queue. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsubsection*
Task 1.4 
\end_layout

\begin_layout Standard
Using socket programming, write the client program for the evacuee teams (client) in Afghanistan and the A330 MRTT plane (server) to communicate. The program should 
\end_layout

\begin_layout Itemize
use the above queue data structure to manage the requests 
\end_layout

\begin_layout Itemize
request the user to set a password for encryption at the start of the program 
\end_layout

\begin_layout Itemize
present the user with incoming pickup requests and pickup details (Team name and group size) as well as queue details (size of current queue) 
\end_layout

\begin_layout Itemize
allow the user(server) to accept/reject pickup requests 
\end_layout

\begin_layout Itemize
encrypt all information sent and received using 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 functions. 
\end_layout

\begin_layout Standard
You are provided with the client program in 
\family typewriter
client.py
\family default
. Write and submit the server program as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
\end_layout

\begin_layout Standard
Study the following sample program output to determine your code design, output format and socket protocol. User inputs are underlined.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\series bold
Sample server program:
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password: Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
2
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Queue is empty! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
Y
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Added to queue. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Items in queue now are: Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 151 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You do NOT have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's Team name: Team3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 19 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
N
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 15 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
Y
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Added to queue. Items in queue now are: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from the next pickup location client 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
2
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 How many to dequeue? 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Items in queue now are: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong secret key. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Sample client programs (in sequence): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 1 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4 
\bar default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size?
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
143
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request‚Ä¶ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 2
\emph default

\series default

\family default

\family typewriter

\emph on
 
\emph default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 solver(
\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset

)
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team2
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
151
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request‚Ä¶ 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 3
\emph default

\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team3
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
19
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request‚Ä¶ 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 4 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
15
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request‚Ä¶ 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup to arrive. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 4 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
FEWF
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team5
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
10
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request‚Ä¶ 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup cancelled. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 2
\series default

\end_layout

\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<index_number>_<name>.ipynb 
\family default

\end_layout

\begin_layout Standard
You will be writing a Math game program for Form Teachers to play with students in school. The game auto-generates math expressions and tracks scoring.
\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using a stack data structure, write a function 
\family typewriter
solver(expr)
\family default
 that takes in a string of a mathematical expression expr such as 
\family typewriter

\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset


\family default
 and returns 
\family typewriter
13
\family default
. You may assume that the entire expression would never have spaces, and would always be enclosed in an opening and closing parenthesis 
\begin_inset Quotes qld
\end_inset

( )
\begin_inset Quotes qrd
\end_inset

. Do not use the built-in function 
\family typewriter
eval()
\family default
. Test your function with 
\family typewriter
solver(
\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset

)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generate_expression
\family default
 that takes in an integer 
\family typewriter
operator_count
\family default
 and returns a string of a mathematical expression which has the specified number of operators (i.e. 
\family typewriter
+ - * /
\family default
 ) in 
\family typewriter
operator_count
\family default
. The function should use 
\series bold
recursion
\series default
 to form up the operators and operands. The operands, operators and positions of operands and operators should be random.
\end_layout

\begin_layout Standard
For example, 
\family typewriter
generate_expression(5)
\family default
 would output 
\begin_inset Quotes qld
\end_inset


\family typewriter
(4*(6-(2+((1*7)+6))))
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\family typewriter
generate_expression(5
\family default
) would output 
\begin_inset Quotes qld
\end_inset


\family typewriter
((8+(6+((2*4)-3)))+6)
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
generate_expression(5)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Implement the following using object-oriented programming: 
\end_layout

\begin_layout Itemize

\family typewriter
Person
\family default
, a class, which 
\end_layout

\begin_deeper
\begin_layout Itemize
initialises with these attributes 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
name: string 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
gender: string
\family default
 where male is 
\begin_inset Quotes qld
\end_inset


\family typewriter
M
\family default

\begin_inset Quotes qrd
\end_inset

 and female is 
\begin_inset Quotes qld
\end_inset


\family typewriter
F
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize

\family typewriter
score: integer 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which displays the 
\family typewriter
Person
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
, 
\family typewriter
gende
\family default
r and 
\family typewriter
score
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
1. eg 
\begin_inset Quotes qld
\end_inset


\family typewriter
Nelson(M)
\begin_inset Quotes ers
\end_inset

s score is 3.
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
attempts()
\family default
 which 
\end_layout

\begin_deeper
\begin_layout Itemize
1. uses the function 
\family typewriter
generate_expression
\family default
 from Task 2.2 to generate and display a random math expression of 2 operators 
\end_layout

\begin_layout Itemize
2. queries the user to give an answer rounded up to the nearest integer 
\end_layout

\begin_layout Itemize
3. displays 
\begin_inset Quotes qld
\end_inset


\family typewriter
Good job!
\family default

\begin_inset Quotes qrd
\end_inset

 if the input is correct or 
\begin_inset Quotes qld
\end_inset


\family typewriter
Wrong answer. (Correct answer: <answer>)
\family default

\begin_inset Quotes qrd
\end_inset

 where 
\family typewriter
<answer>
\family default
 is the correct answer. 
\end_layout

\begin_layout Itemize
4. increases the score of the student by 
\family typewriter
1
\family default
 if the answer is correct 
\end_layout

\begin_layout Itemize
5. displays the user
\begin_inset Quotes ers
\end_inset

s latest 
\family typewriter
sc
\family default
ore 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
Student
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following attribute 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
role: string
\family default
 which is 
\begin_inset Quotes qld
\end_inset


\family typewriter
no role
\family default

\begin_inset Quotes qrd
\end_inset

 by default unless the 
\family typewriter
Student
\family default
 has a class committee role such as 
\begin_inset Quotes qld
\end_inset


\family typewriter
chairperson
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
also has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
student_role()
\family default
 which returns a string describing the 
\family typewriter
role
\family default
 of the 
\family typewriter
Student
\family default
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
FormTeacher
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which uses polymorphism to display the
\family typewriter
 FormTeacher
\family default

\begin_inset Quotes ers
\end_inset

s information with salutation to the FormTeacher
\begin_inset Quotes ers
\end_inset

s name 
\end_layout

\begin_deeper
\begin_layout Itemize
1. eg: 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ms. Norah's score is 0
\family default
.
\begin_inset Quotes qrd
\end_inset

 where 
\begin_inset Quotes qld
\end_inset


\family typewriter
Norah
\family default

\begin_inset Quotes qrd
\end_inset

 is her name, and 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ms
\family default
.
\begin_inset Quotes qrd
\end_inset

 corresponds to her gender. 
\begin_inset space \hfill{}

\end_inset

 [14] 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsubsection*
Task 2.4
\end_layout

\begin_layout Standard
Write driver code to test the earlier class you created. Also, create 
\family typewriter
groups
\family default
 which is a list that uses a 2-dimensional array to store and associate each instance created below with his/her civics group. Use this 2-dimensional array to display the scores of all persons in each civics group indicating the student chairperson
\begin_inset Quotes ers
\end_inset

s name (if any). Test your code with the following steps in order: 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Melvin
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Susan
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 whose role is 
\begin_inset Quotes qld
\end_inset


\family typewriter
chairperson
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize
Create an instance information of 
\family typewriter
FormTeacher
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Norah
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ben
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
FormTeacher
\family default
 with name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Jimmy
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Display the information of Melvin 
\end_layout

\begin_layout Itemize
Display the information of Susan 
\end_layout

\begin_layout Itemize
Display the information of Norah 
\end_layout

\begin_layout Itemize
Melvin attempts a math question 
\end_layout

\begin_layout Itemize
Susan attempts a math question 
\end_layout

\begin_layout Itemize
Jimmy attempts a math question 
\end_layout

\begin_layout Itemize
Display the scores of all persons in each civics group with a header for each class 
\end_layout

\begin_layout Standard
Here is a sample of an expected output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ms. Norah's score is 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Melvin : ((5/7)+8) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer. (Correct answer: 9 ) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Susan : (3*(5*6)) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:90 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Good job! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
New total score for Susan is 1 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Jimmy : ((6-2)-6) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(Correct answer: -2 ) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5C35
\begin_inset Quotes ers
\end_inset

s scores:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 1. (Chairperson) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ms. Norah's score is 0.
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6C35
\begin_inset Quotes ers
\end_inset

s scores:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ben(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mr. Jimmy's score is 0. 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Run your program and save your output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 3
\series default

\end_layout

\begin_layout Standard
In 2021, Singapore's Health Science Authority (HSA) recalled 18 brands of hand sanitisers due to high levels of acetaldehyde and/or methanol. The HSA keeps information on current hand sanitisers and uses it to monitor the types of chemical ingredients used to make the sanitisers.
\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create an SQL file to show the SQL code to create database 
\family typewriter
sanitisers.db
\family default
 with the single table, 
\family typewriter
sanitisers
\family default
.
\end_layout

\begin_layout Standard
The table will have the following fields: 
\end_layout

\begin_layout Itemize

\family typewriter
product_name
\family default
 which is the primary key 
\end_layout

\begin_layout Itemize

\family typewriter
active_ingredient
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
alcohol-based
\family default
 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
sanitisers.txt
\family default
, contains data items for a number of sanitisers. It contains a header line. Each data item is separated by a comma, with each item data on a new line, as follows: 
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
active ingredient used to make the sanitiser product 
\end_layout

\begin_layout Itemize

\begin_inset Quotes qld
\end_inset

Yes
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

No
\begin_inset Quotes qrd
\end_inset

 to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
sanitisers.txt
\family default
, and insert all the information into the 
\family typewriter
sanitisers.db
\family default
 database. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
The information is to be displayed in a web browser.
\end_layout

\begin_layout Standard
Write a python program and the necessary files to create a web application that enables the list of sanitisers to be displayed.
\end_layout

\begin_layout Standard
For each record the web page should include the: 
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
ingredients used to make the sanitiser product 
\end_layout

\begin_layout Itemize

\begin_inset Quotes qld
\end_inset

Yes
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

No
\begin_inset Quotes qrd
\end_inset

 to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default

\end_layout

\begin_layout Standard
with any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>
\family default

\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_OUTPUT_<index_number>_<name>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
HSA wants a form on the web page that allows users to enter in the name of an active ingredient and, upon submission, will display all the information of the products with the matching active ingredient.
\end_layout

\begin_layout Standard
Update your application to include this form feature so that users will be able to use the form after seeing the list of sanitisers displayed as required in Task 3.3.
\end_layout

\begin_layout Standard
Run the web application, test your program with the ingredient 
\begin_inset Quotes qld
\end_inset


\family typewriter
Triclosan
\family default

\begin_inset Quotes qrd
\end_inset

 and save the output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Save, zip up and submit your program code and all related files for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.zip
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 4
\series default

\end_layout

\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_<index_number>_<name>.ipynb 
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write a program to help staff of an events company to insert data into a NoSQL database products under the collection 
\family typewriter
balloons
\family default
.
\end_layout

\begin_layout Standard
The data is provided for you in 
\family typewriter
balloons.json
\family default
 as well as in the table below where the first row are headers for the fields. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
design 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
amount 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
helium
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
colours
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
car 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
88 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, yellow
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cloud 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
blue, green
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
flower 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
75 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
yes 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, blue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bag 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
38 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, blue, black
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Each colour in 
\family typewriter
colours
\family default
 field should be an item in an array. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write code to print the 
\family typewriter
amount
\family default
 of the product with the design 
\begin_inset Quotes qld
\end_inset


\family typewriter
car
\family default

\begin_inset Quotes qrd
\end_inset

.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write code to update the field 
\family typewriter
helium
\family default
 to have the value 
\begin_inset Quotes qld
\end_inset


\family typewriter
n
\family default
o
\begin_inset Quotes qrd
\end_inset

 for all documents which do not have a field or value for 
\family typewriter
helium
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write code to display the 
\family typewriter
design
\family default
(s) which do not contain helium and have colours that either contain 
\family typewriter
green
\family default
 or do not contain 
\family typewriter
black
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An E-Commerce company stores the following data of customers in the system. 
\end_layout

\begin_layout Itemize
Name 
\end_layout

\begin_layout Itemize
Contact 
\end_layout

\begin_layout Itemize
Address 
\end_layout

\begin_layout Standard
It categories its customers into 2 types of loyalty programs. 
\end_layout

\begin_layout Itemize
Spend-based loyalty program 
\end_layout

\begin_layout Itemize
Paid loyalty program 
\end_layout

\begin_layout Standard
Customers of Spend-based loyalty program earn one point for every block of $10 spent in a single order, whereas customers of Paid loyalty program pay a monthly or annual fee. Customers of Paid loyalty program will enjoy the benefits of having early access to sales events and free delivery for purchases above $30.
\end_layout

\begin_layout Standard
For Spend-based loyalty program, the additional data stored include: 
\end_layout

\begin_layout Itemize
Points earned 
\end_layout

\begin_layout Standard
For Paid loyalty program, the additional data stored include: 
\end_layout

\begin_layout Itemize
Payment schedule (monthly or annually) and corresponding fee 
\end_layout

\begin_layout Itemize
Next payment date, computed based on payment schedule and the date of enrollment to the program 
\end_layout

\begin_layout Standard
Object-oriented programming will be used to model the customers. 
\end_layout

\begin_layout Enumerate
Draw a class diagram that shows the following for the requirement described above. 
\end_layout

\begin_deeper
\begin_layout Itemize
the superclass 
\end_layout

\begin_layout Itemize
any subclasses 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_layout Itemize
appropriate methods 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard
The company makes changes to the Paid loyalty program to allow the customer in the program to earn ten points for every block of $20 spent in a single order, in addition to the current benefits. The points earned do not expire. For Spend- based loyalty program, all points earned will expire on the anniversary of the date of enrolment to the program. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Suggest changes required to the class diagram to enable the changes.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard
To attract customers to enrol to its Paid loyalty program, the company launches an invitation campaign to invite Spend-based loyalty program customers who qualified the following conditions: 
\end_layout

\begin_layout Itemize
Customer who earned more than 2000 points in a year and has an average of at least one order per month will be contacted by staff. 
\end_layout

\begin_layout Itemize
Customer who has enrolled for at least a year and has an average of at least one order per month will be sent an invitation email. 
\end_layout

\begin_layout Itemize
Otherwise, no invitation will be sent. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Create a decision table showing all the possible outcomes and results. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Simplify your decision table by removing redundancies.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q2]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Merge Sort is a Divide and Conquer algorithm. It divides the unsorted array 
\family typewriter
A[low..high]
\family default
 into two halves, calls itself for the two halves, until each half is of length 1. It then merges the two sorted halves. An algorithm for Merge Sort is given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE MergeSort(A, low, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF low < high 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ‚Üê (low + high) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MergeSort(A, low, mid) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MergeSort(A, mid+1, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Merge(A, low, mid, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write in 
\series bold
pseudocode
\series default
, an algorithm for the merge procedure, 
\family typewriter
Merge(A, low, mid, high)
\family default
 that is called by the 
\family typewriter
MergeSort
\family default
 algorithm. The merge procedure should merge the sorted subarrays in 
\family typewriter
A[low..mid]
\family default
 and 
\family typewriter
A[mid+1..high]
\family default
 into a single sorted subarray in 
\family typewriter
A[low..high]
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Give and justify the time complexity of Merge Sort. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q3]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An abstract Data Type (ADT) consists of both data type and associated operations.
\end_layout

\begin_layout Standard
A stack ADT has the following operations defined: 
\end_layout

\begin_layout Itemize
Create(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- creates an empty stack S, 
\end_layout

\begin_layout Itemize
Insert(S, Item) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts new value, Item, onto stack S, 
\end_layout

\begin_layout Itemize
Retrieve(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- removes and returns item from the stack S, 
\end_layout

\begin_layout Itemize
EmptyStack(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns true if stack S is empty. 
\end_layout

\begin_layout Enumerate
Devise an algorithm that converts a non-negative integer from decimal to hexadecimal, by making use of the stack operations given above. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Three items, L1, L2 and L3, are to be inserted into a stack in its original order, but the output would be in the order of L1, L3 and L2.
\end_layout

\begin_deeper
\begin_layout Standard
Write an algorithm, using the operations given above, that would use a stack R to carry this out. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Some algorithms can be written using recursion. 
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 features of recursion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the use of a stack when the recursive procedure executes. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write a recursive function using 
\series bold
pseudocode
\series default
 that returns the sum of the digits in an integer. For example, the sum of the digits of the integer 
\family typewriter
12345
\family default
 is 
\family typewriter
5+4+3+2+1=15
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q5]
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Vaccination centres are located across the island to facilitate the national vaccination programme. At each vaccination centre, data is uploaded to the central system of Ministry of Health. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the name of this network structure. Describe 
\series bold
on
\series default
e disadvantage and suggest 
\series bold
one
\series default
 method to resolve it. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 rules of conduct for the staff handling data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain each of the following terms and how it works: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Digital signature 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate
Transmission Control Protocol 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Domain Name System
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q6]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Check digit is one technique of data validation. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Give 
\series bold
two
\series default
 other techniques of data validation.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(ii)
\end_layout

\end_inset

With 
\series bold
one
\series default
 example of data verification, explain the difference between data verification and data validation. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
A student ID consists of 5 digits and a check digit. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iii)
\end_layout

\end_inset

One way to calculate the check digit is to use the unit
\begin_inset Quotes ers
\end_inset

s digit of the sum of all 5 digits. For example, suppose the 5 digits are 50879. Since 5 + 0 + 8 + 7 + 9 = 29, the check digit is 9, and the student ID is 508799.
\end_layout

\begin_deeper
\begin_layout Standard
Explain, with 
\series bold
two
\series default
 examples, why this method is inadequate. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
The check digit is calculated from the 5 digits using the modulus 11 system. It can be digits 
\family typewriter
0 - 9 
\family default
or character 
\family typewriter
'X'
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iv)
\end_layout

\end_inset

Showing your working, determine the check digit for 30526. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(v)
\end_layout

\end_inset

Write an algorithm to check if a student ID is valid. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(vi)
\end_layout

\end_inset

A function is designed to read a student ID and determine if it is valid. State the data types of its input parameter and justify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q7]
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is a flowchart? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Draw a flowchart to find the factorial of a given positive integer 
\family typewriter
N
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
You have a row of 
\family typewriter
2
\family default
n disks of two colors, 
\family typewriter
n
\family default
 black and 
\family typewriter
n
\family default
 white. They alternate: black, white, black, white, and so on. You want to get all the black disks to the right-hand end, and all the white disks to the left-hand end. The only moves you are allowed to make are those that interchange the positions of two neighboring disks. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q7.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Assume that there is an array 
\family typewriter
A
\family default
 of size 
\family typewriter
2n
\family default
 representing the alternating disks. Write, in 
\series bold
pseudocode
\series default
, an algorithm to solve this puzzle and determine the number of moves it takes. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q8]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The school is designing a website to allow ordering of meal. The database stores data about 
\end_layout

\begin_layout Itemize
students 
\end_layout

\begin_layout Itemize
meal information 
\end_layout

\begin_layout Itemize
order information 
\end_layout

\begin_layout Standard
An order contains one meal only.
\end_layout

\begin_layout Standard
Each meal can be purchased by different students.
\end_layout

\begin_layout Standard
A student never places more than one meal on any day.
\end_layout

\begin_layout Standard
The data is stored in a relational database. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q8-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain why the table is not in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q8-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State suitable primary key(s) for each table.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain the reasons for reducing data redundancy in a relational database. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Draw an entity-relationship (E-R) diagram showing the degree of the relations. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

State which table is not in third normal form (3NF) and explain why. [2] 
\end_layout

\begin_layout Standard
A table description can be expressed as: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ‚Ä¶) 
\family default
 
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Write table descriptions for the required tables in the databases so they are in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Write an SQL query to output the student names and date of order of all the orders for the meal 
\begin_inset Quotes eld
\end_inset


\family typewriter
Japanese Bento with green tea
\family default

\begin_inset Quotes erd
\end_inset

.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q1]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
Task1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
The file 
\family typewriter
INTEGERS.txt
\family default
 stores 100 integers. Write a program to read the integers, arrange them in ascending order using quick sort, and write the sorted integers to a file called
\end_layout

\begin_layout Standard

\family typewriter
SORTED_<your name>_<centre number>_<index number>.txt
\family default
 
\begin_inset space \hfill{}

\end_inset

 [15]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
BinarySearch(list_of_integers, target)
\family default
 that 
\end_layout

\begin_layout Itemize
takes a list of ascending integers, 
\family typewriter
list_of_integers
\family default
 and an integer 
\family typewriter
target
\family default
 
\end_layout

\begin_layout Itemize
performs a binary search 
\end_layout

\begin_layout Itemize
prints out if 
\family typewriter
target
\family default
 is found in 
\family typewriter
list_of_integers
\family default
 
\end_layout

\begin_layout Itemize
returns the number of comparisons during the binary search 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write a program to read the list of integers from
\end_layout

\begin_layout Standard

\family typewriter
SORTED_<your name>_<centre number>_<index number>.txt
\family default

\end_layout

\begin_layout Standard
obtained in Task 1.1. Generate 50 random integers between 1 and 200 (inclusive) and perform a binary search for each of these random integers in this sorted list. Output the average number of comparisons of these 50 binary searches. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
Save your Jupiter Notebook for Task 1.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q2]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
FlexiMSG provides messaging services. Information of the messages are logged into a file. The log records contain the phone numbers or IP address of the sender, the date which the service is being accessed, the status indicating whether the message has been sent and the type of application used. There are two different formats used:
\end_layout

\begin_layout Standard

\family typewriter
<IP address> <DD/MMM/YYYY> <Status> <App> 
\family default

\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Standard

\family typewriter
<Phone number> <DD/MMM/YYYY> <Status>
\family default

\end_layout

\begin_layout Standard
Below is the log records in the file, 
\family typewriter
LOG.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
54.36.149.41 22/Jan/2021 200 WA 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
188.226.164.216 22/Jan/2021 0 FB 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
92783423 22/Jan/2021 200 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
188.226.164.216 23/Jan/2021 0 FB 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
88188293 23/Jan/2021 0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write the SQL code to create database 
\family typewriter
ServiceLog.db
\family default
 with the single table, 
\family typewriter
Log
\family default
.
\end_layout

\begin_layout Standard
The table will have the following fields of the given SQLite types: 
\end_layout

\begin_layout Itemize

\family typewriter
LogID
\family default
 - primary key, an auto-incremented integer 
\end_layout

\begin_layout Itemize

\family typewriter
Sender
\family default
 - the client internet address or phone number, text 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate
\family default
 - the access date, text 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 - the status, integer 
\end_layout

\begin_layout Itemize

\family typewriter
AppType
\family default
 - application type, text 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task2_1_<your name>_<center number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
FlexiMSG wants to use Python programming language and object-oriented programming to update the information in the log file into the database.
\end_layout

\begin_layout Standard
Create the class 
\family typewriter
ServiceRecord
\family default
 that will store the following: 
\end_layout

\begin_layout Itemize

\family typewriter
Sender
\family default
 - stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate
\family default
 - stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 - stored as integer, 
\family typewriter
0
\family default
 or 
\family typewriter
200
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AppTy
\family default
pe - stored as string value 
\family typewriter
'WA'
\family default
 or 
\family typewriter
'FB'
\family default
 
\end_layout

\begin_layout Standard
The class has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
isSuccess()
\family default
- returns a Boolean value to indicate whether the message has been sent. 
\end_layout

\begin_deeper
\begin_layout Itemize
returns 
\family typewriter
True
\family default
 if the 
\family typewriter
Status
\family default
 is 200, otherwise returns 
\family typewriter
False
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
getAppType()-
\family default
 returns a string value to indicate the type of messaging application. 
\end_layout

\begin_deeper
\begin_layout Itemize
returns the value of 
\family typewriter
AppType
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Write program code to read in the information from 
\family typewriter
LOG.txt
\family default
, creating an instance of the 
\family typewriter
ServiceRecord
\family default
 class for each record and insert the information into 
\family typewriter
ServiceLog.db
\family default
 database.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task2_2_<your name>_<center number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
FlexiMSG wants to publish the database content on a web page.
\end_layout

\begin_layout Standard
Create class 
\family typewriter
AppServiceRecord
\family default
 which inherits from 
\family typewriter
ServiceRecord
\family default
, such that: 
\end_layout

\begin_layout Itemize

\family typewriter
getAppType()
\family default
- returns the following values based on the value of 
\family typewriter
AppType
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
WA
\family default
 - returns 
\family typewriter
'WHATSAPP'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
FB
\family default
 - returns 
\family typewriter
'FACEBOOK MESSENGER' 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
getSuccess()
\family default
- returns the following values based on the returned value of isSuccess() 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
True
\family default
 - returns 
\family typewriter
'SUCCESS'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
False
\family default
 - returns 
\family typewriter
'FAILED'
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Create class 
\family typewriter
SmsServiceRecord
\family default
 which inherits from 
\family typewriter
ServiceRecord
\family default
, such that: 
\end_layout

\begin_layout Itemize

\family typewriter
getAppType()
\family default
- always returns 
\family typewriter
'SHORT MESSAGE SERVICE' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
getSuccess()
\family default
- returns the following values based on the returned value of 
\family typewriter
isSuccess() 
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
True
\family default
 - returns 
\family typewriter
'SUCCESS'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
False
\family default
 - returns 
\family typewriter
'FAILED'
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Save your program code to 
\family typewriter
Task2_3_<your name>_<center number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsubsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that enables the list of log records to be displayed.
\end_layout

\begin_layout Standard
For each record, the web page should include the: 
\end_layout

\begin_layout Itemize

\family typewriter
Sender 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AppType
\family default
 (either 
\family typewriter
WHATSAPP
\family default
,
\family typewriter
 FACEBOOK MESSENGER 
\family default
or
\family typewriter
 SHORT MESSAGE SERVICE
\family default
) 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 (
\family typewriter
SUCCESS
\family default
 or 
\family typewriter
FAILED
\family default
) 
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files/sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>
\family default
.
\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q3]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to implement a priority queue using Object-Oriented Programming.
\end_layout

\begin_layout Standard
A priority queue is an extension of queue with the following properties. 
\end_layout

\begin_layout Itemize
Every element has a priority associated with it. Smaller integer value has a higher priority. 
\end_layout

\begin_layout Itemize
An element with high priority leaves the queue before an element with low priority. 
\end_layout

\begin_layout Itemize
If two elements have the same priority, they are served according to their order in the queue, i.e. the earlier element will be served before the later element (FIFO). 
\end_layout

\begin_layout Standard
For example, the emergency room in a hospital assigns patients with priority numbers. The patient with the highest priority is treated first, regardless of the order of arrival.
\end_layout

\begin_layout Standard
An example of operations on a priority queue is shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A 
\series bold
priority queue
\series default
 abstract data type (ADT) is to be implemented as a linked list using object- oriented programming. Two classes 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
 have been identified. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Priority
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates priority of node. Smaller value has higher priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pointer to next node in queue.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="13" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: PQueue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisPQueue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[1:10] Of Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The priority queue data.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for front node of queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for rear node of queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Initialise()
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Set pointers to indicate all nodes are unused and linked. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Initialise values for 
\family typewriter
Front
\family default
, 
\family typewriter
Rear
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PQInsert(NewItem, Priority)
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Assign 
\family typewriter
NewItem
\family default
 and 
\family typewriter
Priority
\family default
 passed as parameters to a node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Insert the node to the rear of the priority queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PQDelete()
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Remove a node of highest priority from the priority queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Return the 
\family typewriter
Data
\family default
 attribute of the node that is removed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayPQueue()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the values of 
\family typewriter
Front
\family default
, 
\family typewriter
Rear
\family default
, 
\family typewriter
NextFree
\family default
 and the contents of 
\family typewriter
ThisPQueue
\family default
 array in index order.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the data items 
\family typewriter
'Ben'
\family default
, 
\family typewriter
'May'
\family default
, 
\family typewriter
'Anne'
\family default
 and 
\family typewriter
'Jim'
\family default
 (inserted in that order) in the priority queue 
\end_layout

\begin_layout Itemize
the unused nodes linked together 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
, including the 
\family typewriter
Initialise
\family default
, 
\family typewriter
PQInsert
\family default
, 
\family typewriter
PQDelete
\family default
 and 
\family typewriter
DisplayPQueue
\family default
 methods. The code should follow the specification given. 
\begin_inset space \hfill{}

\end_inset

[17]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
The program is to be tested.
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
create a 
\family typewriter
PQueue
\family default
 object 
\end_layout

\begin_layout Itemize
read from file 
\family typewriter
PATIENTS.txt
\family default
 all the data items with its priorities into the priority queue by calling 
\family typewriter
PQInsert
\family default
 method. 
\end_layout

\begin_layout Itemize
output the priority queue by calling 
\family typewriter
DisplayPQueue
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write additional code in your main program to do the following in order by calling the appropriate methods from 
\family typewriter
PQueue
\family default
 class. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
No. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operation 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add patient Carol 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Carol
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display priority queue 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Save your Jupiter Notebook for Task 3. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to write program code for a Tic-Tac-Toe-Tomek game for two players.
\end_layout

\begin_layout Standard
Tic-Tac-Toe-Tomek is a game played on a 4 x 4 square board. The board starts empty, except that a single 'T' symbol may appear in one of the 16 squares. There are two players: X and O. They take turns to make moves, with X starting. In each move a player puts her symbol in one of the empty squares. Player X's symbol is 
\family typewriter
'X'
\family default
, and player O's symbol is 
\family typewriter
'O'
\family default
.
\end_layout

\begin_layout Standard
After a player's move, if there is a row, column or a diagonal containing 4 of that player's symbols, or containing 3 of her symbols and the 
\family typewriter
'T'
\family default
 symbol, she wins and the game ends. Otherwise the game continues with the other player's move. If all of the fields are filled with symbols and nobody won, the game ends in a draw.
\end_layout

\begin_layout Standard
Given the 4 x 4 board description containing 
\family typewriter
'X'
\family default
, 
\family typewriter
'O'
\family default
, 
\family typewriter
'T'
\family default
 and 
\family typewriter
'.'
\family default
 characters (where 
\family typewriter
'.'
\family default
 represents an empty square). The following examples show the various winning positions. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[4]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[5]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
initialize the data structure to represent the 4 x 4 square board, using the identifier 
\family typewriter
board
\family default
 
\end_layout

\begin_layout Itemize
generate a pair of random numbers between 1 and 4 
\end_layout

\begin_layout Itemize
place 
\family typewriter
'T'
\family default
 at that random position on the board 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
displayBoard
\family default
 that will display the game board clearly to the players. You should use the 
\family typewriter
board
\family default
 as a parameter in 
\family typewriter
displayBoard
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
getPlayerMove
\family default
 to get players to make their move (by marking 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
) on the board. You should include validation on player
\begin_inset Quotes ers
\end_inset

s input and check that the space is not already occupied. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
checkWin
\family default
 that checks all the conditions for winning a game and returns 
\family typewriter
True
\family default
 if a player has won the game, otherwise returns 
\family typewriter
False
\family default
. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write a 
\family typewriter
main
\family default
 function that makes use of the identifiers and functions from Task 4.1 to Task 4.4 and allows two players, X and O, to play a game of Tic-Tac-Toe-Tomek.
\end_layout

\begin_layout Standard
The 
\family typewriter
main
\family default
 function should include the following: 
\end_layout

\begin_layout Itemize
display the initial game board with the single 
\family typewriter
'T
\family default
' displayed in it 
\end_layout

\begin_layout Itemize
start with player X to make the first move 
\end_layout

\begin_layout Itemize
ensure players X and O take turns to make their move 
\end_layout

\begin_layout Itemize
display the game board after every move made by a player 
\end_layout

\begin_layout Itemize
check for winner 
\end_layout

\begin_layout Itemize
display message on which player has won the game or whether the game ends in a draw. 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard
Run your 
\family typewriter
main
\family default
 function and produce outputs of 
\series bold
three
\series default
 games where player X wins one game, player O wins another game, and a drawn game.
\end_layout

\begin_layout Standard
Copy and paste all outputs in a text file as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_5_<your name>_<centre number>_<index number>.txt
\family default
 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 4.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Your program code and output for Task 1 should be saved in a single 
\family typewriter
.ipynb
\family default
 file.
\end_layout

\begin_layout Standard
Name your Jupyter Notebook as 
\family typewriter
TASK1_<your name>_<class>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The file 
\family typewriter
marathon.CSV
\family default
 contains the full list of athletes who took part in the 42.195km marathon race. The first line in the file is the heading for the records. Each subsequent line is a record of a runner in the form: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<name of athlete>,<country code>,<timing in h:mm:ss>
\family default
 
\end_layout

\begin_layout Standard
For example, 
\family typewriter
Abdi ABDIRAHMAN,USA,2:18:27
\family default

\end_layout

\begin_layout Standard
Several athletes did not complete the race and their timing is recorded as 'DNF' to indicate 
\begin_inset Quotes els
\end_inset

did not finish
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
For example: 
\family typewriter
Alemu BEKELE,BRN,DNF 
\family default

\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to find out the number of athletes who did not finish the race and output the following three statements:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Number of DNF: x 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total number of athletes: y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Percentage of athletes who finished race: z 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
x
\family default
 is the number of athletes who did not finish the race,
\end_layout

\begin_layout Standard

\family typewriter
y
\family default
 is the total number of athletes who participated in the marathon race,
\end_layout

\begin_layout Standard
and 
\family typewriter
z
\family default
 is the percentage (rounded to 1 decimal place) of athletes who finished the race.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
insertionSort
\family default
 that takes an unsorted list as a parameter, sorts the list using the insertion sort algorithm, and returns the sorted list. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
By making use of the 
\family typewriter
insertionSort
\family default
 function from Task 1.2, or otherwise, find out the top 20 athletes and list them in order of rank under the heading (Rank, Country, Name, Timing). 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Sample Output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Rank Country Name 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Timing 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

ABC 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Harry TAN 
\begin_inset space ~

\end_inset

2:08:38 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

XYZ 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Andy LEE 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2:09:58 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Python file as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>_<class>_<index number>.py
\family default

\end_layout

\begin_layout Standard
You will build a simplified, one-player version of the classic board game Battleship. Refer to 
\family typewriter
Task2_Client_SampleOutput.JPG
\family default
 for the sample output.
\end_layout

\begin_layout Standard
In this version of the game: 
\end_layout

\begin_layout Itemize
The
\series bold
 server program
\series default
 initialises a grid measuring 4 metres by 5 metres. 
\end_layout

\begin_layout Itemize
The grid is to be represented on the screen by a rectangular grid. 
\end_layout

\begin_layout Itemize
Each square metre of the grid is represented by an 
\family typewriter
x
\family default
-coordinate and a 
\family typewriter
y
\family default
-coordinate. 
\end_layout

\begin_layout Itemize
The top left square metre of the grid display has 
\family typewriter
x = 0
\family default
 and 
\family typewriter
y = 0
\family default
. 
\end_layout

\begin_layout Itemize
Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent an unoccupied space. 
\end_layout

\begin_layout Itemize
There will be a single ship hidden in a random location. 
\end_layout

\begin_layout Itemize
The ship only occupies one square metre of the grid. 
\end_layout

\begin_layout Itemize
The 
\series bold
client program
\series default
 allows the player to input guesses to sink the ship. After each guess, 
\begin_inset Quotes qld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

 represents the incorrect position guessed while 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

 represents the sunken ship. 
\end_layout

\begin_layout Itemize
The ship will not appear if it has not been sunk. 
\end_layout

\begin_layout Itemize
The game is terminated by the server program when 
\series bold
three
\series default
 guesses are used or the player has guessed the correct position. 
\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write the code for the following functions and procedures for the 
\series bold
server program
\series default
. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subroutine Header
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
InitialiseGrid(): ARRAY[0:3, 0:4] OF CHAR 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialises a 4 by 5 two-dimensional array and returns the array. Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent blank.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayGrid(arr: ARRAY[0:3, 0:4] OF CHAR) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sends the encoded grid to the client. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ValidateRow(row: INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
True
\family default
 if the row is valid and 
\family typewriter
False
\family default
 otherwise.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ValidateCol(col: INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
True
\family default
 if the column is valid and 
\family typewriter
False
\family default
 otherwise. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckResult(row,col:INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Checks if the guess is correct. If the guess is correct, uses 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

 to represent the sunken ship. Otherwise, uses 
\begin_inset Quotes qld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

 to represent incorrect guess. Returns 
\family typewriter
True
\family default
 for the correct guess and returns 
\family typewriter
False
\family default
 for the wrong guess.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
The following client program is given in 
\family typewriter
Battleship_Client.py
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
import socket 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket = socket.socket() 
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
address = input('Enter IPv4 address of server: ') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
port = int(input('Enter port number of server: ')) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket.connect((address, port)) 
\family default

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
while True: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

data = client_socket.recv(1024)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if b
\begin_inset Quotes qrd
\end_inset

Enter
\begin_inset Quotes qrd
\end_inset

 in data: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

choice = input(data.decode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

client_socket.sendall(choice.encode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(data.decode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if b
\begin_inset Quotes qrd
\end_inset

GAME OVER
\begin_inset Quotes qrd
\end_inset

 in data or b
\begin_inset Quotes qrd
\end_inset

YOU WON
\begin_inset Quotes qrd
\end_inset

 in data: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

break 
\family default

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket.close() 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write the corresponding server program that: 
\begin_inset space \hfill{}

\end_inset

[16] 
\end_layout

\begin_layout Itemize
Instantiates the server socket. 
\end_layout

\begin_layout Itemize
Binds the socket to localhost and port number 6789. 
\end_layout

\begin_layout Itemize
Listens for incoming request, accepts incoming request and establishes connection with the client. 
\end_layout

\begin_layout Itemize
Generates a random position for the hidden ship. 
\end_layout

\begin_layout Itemize
Sends a 
\begin_inset Quotes eld
\end_inset

Welcome to Battleship!
\begin_inset Quotes erd
\end_inset

 message to the client. 
\end_layout

\begin_layout Itemize
Uses the subroutines coded in Task 2.1 to play the game. 
\end_layout

\begin_layout Itemize
Sends 
\begin_inset Quotes qld
\end_inset


\family typewriter
YOU WON!
\family default

\begin_inset Quotes qrd
\end_inset

 to the client for the correct guess and ends the game. 
\end_layout

\begin_layout Itemize
Sends 
\begin_inset Quotes qld
\end_inset


\family typewriter
GAME OVER‚Ä¶
\family default

\begin_inset Quotes qrd
\end_inset

 to the client if three guesses are used. 
\end_layout

\begin_layout Itemize
Closes the sockets. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Your program code and output for Task 3 should be saved in a single 
\family typewriter
.ipynb
\family default
 file.
\end_layout

\begin_layout Standard
Name your Jupyter Notebook as 
\family typewriter
TASK3_<your name>_<class>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
JP Fitness Club is a gym that keeps details of its members. You are tasked to help the club manage the members
\begin_inset Quotes ers
\end_inset

 details and store them in a SQL database.
\end_layout

\begin_layout Standard
There are two types of membership: normal and annual. Each member has a unique membership number, first name, surname, contact number and last visit date recorded.
\end_layout

\begin_layout Standard
A normal member deposits a selected amount into their account. Each time the member visits the gym, the entrance fee is deducted from the amount held in his account. The member may top up the account any time.
\end_layout

\begin_layout Standard
An annual member pays a fixed fee per year, starting from the date of registration. He may then visit the gym any number of times for the whole year without paying the entrance fee.
\end_layout

\begin_layout Standard
Three classes have been identified: 
\family typewriter
Member
\family default
, 
\family typewriter
NormalMember
\family default
, 
\family typewriter
AnnualMember
\family default
.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Member
\family default
 has these attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
memberID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 digit membership number. First four digits represent the year of joining gym and last four digits are used to make the 
\family typewriter
memberID
\family default
 unique, e.g. 
\family typewriter
20210357
\family default
. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
first_name 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First name of member, at most 15 characters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
surname 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Surname of member, at most 15 characters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
contact_number 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 digit contact number.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
last_visit 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The date when member last visited the gym, in the format
\family typewriter
 YYYY-MM-DD
\family default
. Initialises to today
\begin_inset Quotes ers
\end_inset

s date. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
memberType
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates type of membership, either 
\begin_inset Quotes eld
\end_inset

normal
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

annual
\begin_inset Quotes erd
\end_inset

. Initialises to None. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember() 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Outputs member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
isActive() 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Boolean 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates whether a member is active or not. Returns True if the last visit date is within 30 days, otherwise returns False.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The class 
\family typewriter
NormalMember
\family default
 inherits from 
\family typewriter
Member
\family default
 and has these additional attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
stored_value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Float 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
stored in member
\begin_inset Quotes ers
\end_inset

s account. Display in 2 decimal places. Initialise to $0.00.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output 
\family typewriter
memberType
\family default
 in addition to member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The class 
\family typewriter
AnnualMember
\family default
 also inherits from 
\family typewriter
Member
\family default
 and has these additional attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
annual_fee 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Annual fee paid by member. Initialises to $500
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
date_register
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date when member joins annual membership, in format 
\family typewriter
YYYY-MM-DD
\family default
. Initialises to today
\begin_inset Quotes ers
\end_inset

s date.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Outputs 
\family typewriter
memberType
\family default
 in addition to member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code using object-oriented programming for the classes 
\family typewriter
Member
\family default
, 
\family typewriter
NormalMember
\family default
, and 
\family typewriter
AnnualMember
\family default
. Include all the identifiers stated and other appropriate methods to access and modify the attributes. 
\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
members.TXT
\family default
, contains data items for a number of members. Each data item is separated by a comma, with each member
\begin_inset Quotes ers
\end_inset

s data on a new line as follows: 
\end_layout

\begin_layout Itemize
membership number 
\end_layout

\begin_layout Itemize
first name 
\end_layout

\begin_layout Itemize
surname 
\end_layout

\begin_layout Itemize
contact number 
\end_layout

\begin_layout Itemize
member type 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
member.txt
\family default
, creating an instance of the appropriate class for each member, storing each instance in the same list.
\end_layout

\begin_layout Standard
Run 
\family typewriter
showMember
\family default
 method to display each of the members
\begin_inset Quotes ers
\end_inset

 details. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
The members
\begin_inset Quotes ers
\end_inset

 details are to be stored in a SQL database.
\end_layout

\begin_layout Standard
The file 
\family typewriter
JPgym.SQL
\family default
 contains the SQL code to create database 
\family typewriter
JPgym.db
\family default
 with the single table, 
\family typewriter
Member
\family default
. The table will have the following fields: 
\end_layout

\begin_layout Itemize
MemberID ‚Äì primary key, text 
\end_layout

\begin_layout Itemize
FirstName ‚Äì first name of member, text 
\end_layout

\begin_layout Itemize
Surname ‚Äì surname of member, text 
\end_layout

\begin_layout Itemize
ContactNo ‚Äì contact number of member, text 
\end_layout

\begin_layout Itemize
LastVisit ‚Äì date that member last visited gym, text 
\end_layout

\begin_layout Itemize
MemberType ‚Äì indicates 
\begin_inset Quotes els
\end_inset

normal
\begin_inset Quotes ers
\end_inset

 or 
\begin_inset Quotes els
\end_inset

annual
\begin_inset Quotes ers
\end_inset

 membership, text 
\end_layout

\begin_layout Standard
Copy and paste this SQL code into your Python program to create the database and table.
\end_layout

\begin_layout Standard
Also, write program code in Python to insert all the information from the file into the 
\family typewriter
JPgym.db
\family default
 database.
\end_layout

\begin_layout Standard
Run your program and check that all information has been inserted using SQLite database software. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write a SQL query code in Python to display all members with 
\begin_inset Quotes eld
\end_inset

normal
\begin_inset Quotes erd
\end_inset

 membership in ascending order of 
\family typewriter
FirstName
\family default
.
\end_layout

\begin_layout Standard
Display only the following fields from the query: 
\family typewriter
FirstName
\family default
, 
\family typewriter
Surname
\family default
, 
\family typewriter
ContactNo
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
JP Mobile sells mobile phones and manages its inventory using a NoSQL database. Information about the mobile phones is stored in the JSON file 
\family typewriter
items.JSON
\family default
.
\end_layout

\begin_layout Standard
The following fields are recorded: 
\end_layout

\begin_layout Itemize
brand of mobile phone, 
\end_layout

\begin_layout Itemize
model, 
\end_layout

\begin_layout Itemize
colour(s) available, 
\end_layout

\begin_layout Itemize
price in dollar, 
\end_layout

\begin_layout Itemize
quantity in stock. 
\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to import the information from the JSON file into a MongoDB database. Save the information under the 
\family typewriter
phone
\family default
 collection in the 
\family typewriter
jp_mobile
\family default
 database. Ensure that the collection only stores the information from the JSON file.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
TASK4_<your name>_<class>_<index number>.py 
\family default

\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
The shop decides to include one or more free gifts for new batches of mobile phones it sells.
\end_layout

\begin_layout Standard
Write program code for a user to insert information of a mobile phone by getting user input of the following: brand, model, colour, price, quantity, free gift(s).
\end_layout

\begin_layout Standard
Your code should allow user to input one or more free gifts.
\end_layout

\begin_layout Standard
If a phone
\begin_inset Quotes ers
\end_inset

s brand, model and colour already exists, add the new quantity to the existing quantity in the database, and replace the existing price with the new price.
\end_layout

\begin_layout Standard
Run your program and insert the following 2 documents: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
No. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Brand 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Model 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Colour 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Price 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quantity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Free gift(s)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
orange 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
black 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
900 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
power bank
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
solo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A33 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1300 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
power bank, earbuds
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Add your program code to 
\family typewriter
TASK4_<your name>_<class>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
display_all
\family default
 that will display all the information in the 
\family typewriter
phone
\family default
 collection under these fields: 
\family typewriter
brand
\family default
, 
\family typewriter
model
\family default
, 
\family typewriter
colour
\family default
, 
\family typewriter
price
\family default
, 
\family typewriter
quantity
\family default
, 
\family typewriter
free gift(s)
\family default
.
\end_layout

\begin_layout Standard
If no free gift comes with the phone, print a 
\family typewriter
None
\family default
 statement.
\end_layout

\begin_layout Standard
Include a final statement that shows the total number of documents in the collection.
\end_layout

\begin_layout Standard
Run the 
\family typewriter
display_all
\family default
 function to show your output.
\end_layout

\begin_layout Standard
Add your program code to 
\family typewriter
TASK4_<your name>_<class>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
The shop uses a web browser to display the database content. The manager wants to filter the mobile phones by 
\family typewriter
brand
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write additional Python code and the necessary files to create a web application that 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
brand
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display an ordered list of mobile phones sorted by 
\family typewriter
price
\family default
. 
\end_layout

\begin_layout Standard
For each document, the web page should include the: 
\end_layout

\begin_layout Itemize
brand as the heading 
\end_layout

\begin_layout Itemize
model, 
\end_layout

\begin_layout Itemize
colour, 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>_<class>_<index number>.py
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>_<class>_<index number>
\family default

\end_layout

\begin_layout Standard
Run the web application and input brand as 
\begin_inset Quotes els
\end_inset


\family typewriter
solo
\family default

\begin_inset Quotes ers
\end_inset

 in the webpage.
\end_layout

\begin_layout Standard
Save the output of the program as
\end_layout

\begin_layout Standard
TASK4_4_<your name>_<class>_<index number>.html
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The TCP/IP networking model comprises 4 layers. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Copy and complete the below diagram for the TCP/IP stack. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Transport Layer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of the Transport Layer in the TCP/IP network model. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the reserved port range used in the Transport Layer. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A certain port number in binary form is 
\family typewriter
00000100
\family default
 
\family typewriter
00011000
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Express this value in denary (decimal) form. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain how it may be checked if this binary port value is within the reserved port range, without converting it to decimal.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State which layer of the TCP/IP model the Domain Name System (DNS) protocol belongs to.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the DNS protocol. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Validation and verification are used in data entry. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the purpose of validation. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the purpose of verification. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard
A network program using TCP needs to check if a port number is within an acceptable range of values. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Is this fulfilled by validation or verification? Explain your answer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Provide three sets of suitable test values for the above check. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A printing shop needs to set up a print queue system to serve its customers. This print queue will manage print tasks, by sending them one at a time to available printers.
\end_layout

\begin_layout Standard
For all print tasks, the data that will be stored include:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
User
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Printer address
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Job name
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Status 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The print queue itself stores the following data:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Number of jobs
\end_layout

\begin_layout Standard
When a print task is added to the queue: 
\end_layout

\begin_layout Itemize
The task is stored inside the queue, in FIFO order 
\end_layout

\begin_layout Itemize
The jobs count is incremented by one 
\end_layout

\begin_layout Standard
When a print task is sent to a printer: 
\end_layout

\begin_layout Itemize
The print task is removed from the queue, in FIFO order 
\end_layout

\begin_layout Itemize
The jobs count is decremented by one 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram that shows the following for the situation described above. 
\end_layout

\begin_deeper
\begin_layout Itemize
The classes 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_layout Itemize
appropriate methods 
\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the meaning of the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

inheritance 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

polymorphism 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
The printing shop wishes to implement a circular queue to limit the maximum number of pending jobs and improve the performance of their system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State two differences between a linear queue and a circular queue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Suggest whether inheritance or polymorphism is a more suitable principle to apply in the implementation of both linear queue and circular queue in the same program. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Using a suitable diagram, pseudocode, or other method, show how an item would be added to a circular queue implemented with a static array. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An algorithm for sorting an array of elements is shown.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR i = 1 to Array.LENGTH - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

FOR j = 1 to Array.LENGTH - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Array[j] > Array[j+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

t = Array[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Array[j] = Array[j+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Array[j+1] = t 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ENDFOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDFOR 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the algorithm represented. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
tate the time complexity of this algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Copy and complete the trace table below with the value of 
\family typewriter
Array
\family default
 at the end of each iteration of 
\family typewriter
i
\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initial 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[2, 3, 4, 5, 6, 1]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 improvements that could be made to the above algorithm to improve its efficiency. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain why insertion sort is usually used instead of bubble sort, although both have the same time efficiency.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school database has some data in the following table: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
StudentID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student Name 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Class 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subjects
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Wong Yong Ming 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1917 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2PHY, H2CHEM, H2ECON
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vikram Singh 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1911 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2CHEM, H2ECON,H1GEOG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muhd Bashir bin Ramdan 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1911 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2CHEM, H2ECON, H1ELIT
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State and explain if the above table is in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe two advantages that normalised data has over redundant data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
In an effort to improve the school database, the IT administrator came up with an ER diagram. Part of the full ER diagram is as shown. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2021-P1-Q5.png
	width 15page%

\end_inset

 
\end_layout

\begin_layout Standard
Each of the three entities in the ER diagram has a name attribute. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Write table descriptions to implement the above ER diagram. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Write an SQL query to retrieve only the student name and class name for all students in the level 
\family typewriter
JC2
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A fast-growing startup is writing code to provide a new service. The user needs have not yet been fully determined, and the data schema is likely to undergo further changes before being finalised. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Suggest if SQL or NoSQL is more suitable for the needs of this startup. Give 
\series bold
two
\series default
 reasons to support your answer.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 challenges the startup will face in using NoSQL databases.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The startup is concerned that a hardware failure may wipe out critical data and leave them unable to continue operating.
\end_layout

\begin_deeper
\begin_layout Standard
Suggest what the startup should do to 
\series bold
ensure
\series default
 that they are safe against data loss in such a scenario.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Alice, a programmer, is implementing a DNS cache using a hash table. 
\end_layout

\begin_layout Enumerate
Explain the purpose of the hash function in a hash table. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The description for a particular hashing algorithm using rolling polynomials is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
For each character in the data, do the following: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Let 
\family typewriter
i
\family default
 represent the position of the character (1st char = 1, 2nd char = 2, ...) 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Let 
\family typewriter
ascii
\family default
 represent the ASCII value of the character 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Calculate the sum of 
\family typewriter
i
\family default
√ó(31^
\family typewriter
ascii
\family default
) for all characters 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Implement this algorithm in pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard
You may assume that the function 
\family typewriter
Ord()
\family default
 is available, which takes in a single character and returns the ASCII value of the character. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Bob, another programmer, suggests that a Binary Search Tree would be a more appropriate data structure for the DNS cache. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe one advantage of using a hash table for the DNS cache.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe one advantage of using a Binary Search Tree for the DNS cache.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the algorithm used to retrieve the sorted contents of a cache from a Binary Search Tree.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Using any appropriate diagrams, pseudocode, or other appropriate method, show how this algorithm might be carried out. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
Explain why the Binary Search Tree might need to be periodically recreated.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
A text file, 
\family typewriter
TIDES.TXT
\family default
, contains the low and high tide information for a coastal location for each day of a month. Each line contains tab-delimited data that shows the date, the time, whether the tide is high or low and the tide height in metres.
\end_layout

\begin_layout Standard
Each line is in the format:
\end_layout

\begin_layout Standard

\family typewriter
YYYY-MM-DD
\backslash
tHH:mm
\backslash
tTIDE
\backslash
tHEIGHT
\backslash
n 
\family default
 
\end_layout

\begin_layout Itemize
The date is in the form YYYY-MM-DD, for example, 2019-08-03 is 3rd August, 2019 
\end_layout

\begin_layout Itemize
The time is in the form HH:mm, for example, 13:47 
\end_layout

\begin_layout Itemize
TIDE is either HIGH or LOW 
\end_layout

\begin_layout Itemize
HEIGHT is a positive number shown to one decimal place 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
t
\family default
 represents the tab character 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
n
\family default
 represents the newline character 
\end_layout

\begin_layout Standard
The text file is stored in ascending order of date and time.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the tide data from a text file 
\end_layout

\begin_layout Itemize
find the highest high tide and print this value 
\end_layout

\begin_layout Itemize
find the lowest low tide and print this value 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 1.
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
The tidal range is the difference between the heights of successive tides; from a high tide to the following low tide or from a low tide to the following high tide.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
output the largest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Itemize
output the smallest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to implement a todo list using a linkedlist data structure. For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
The class 
\family typewriter
TodoList
\family default
 represents a LinkedList and has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
__head
\family default
 ‚Äì a pointer to the first node of the LinkedList; if empty, it has a value of 
\family typewriter
None
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
__tail
\family default
 ‚Äì a pointer to the last node of the LinkedList; if empty, it has a value of 
\family typewriter
None
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
TodoList
\family default
 has the following methods defined on it: 
\end_layout

\begin_layout Itemize

\family typewriter
add(item)
\family default
 ‚Äì wraps 
\family typewriter
item
\family default
 in a 
\family typewriter
TodoItem
\family default
 instance, and adds it to the end of the LinkedList 
\end_layout

\begin_layout Itemize

\family typewriter
remove(item)
\family default
 ‚Äì removes the first 
\family typewriter
TodoItem
\family default
 containing 
\family typewriter
item
\family default
 from the LinkedList 
\end_layout

\begin_layout Itemize

\family typewriter
list()
\family default
 ‚Äì returns a Python list containing each 
\family typewriter
item
\family default
 in the TodoList 
\end_layout

\begin_layout Standard
The class 
\family typewriter
TodoItem
\family default
 represents a Node of the LinkedList and has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
title
\family default
 ‚Äì a short description of the todo item 
\end_layout

\begin_layout Itemize

\family typewriter
__next
\family default
 ‚Äì a pointer to the next node in the LinkedList; if this is the last node, it has a value of None 
\end_layout

\begin_layout Standard

\family typewriter
TodoItem
\family default
 has the following methods defined on it: 
\end_layout

\begin_layout Itemize
l
\family typewriter
ink_to(todoitem)
\family default
 ‚Äì links this 
\family typewriter
TodoItem
\family default
 instance to 
\family typewriter
todoitem
\family default
, another instance of the TodoItem class 
\end_layout

\begin_layout Standard
Implement the above classes. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Add the following items to a new 
\family typewriter
TodoList
\family default
: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy milk
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy flour
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy eggs
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Bake cake
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Display the contents of the 
\family typewriter
TodoList
\family default
. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Remove the following items from the 
\family typewriter
TodoList
\family default
: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy milk
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy eggs
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Display the contents of the 
\family typewriter
TodoList
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 2.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to write a function that takes a sequence of characters representing a colour, and translates the colour into a different number base.
\end_layout

\begin_layout Standard
8-bit colours are represented with three numbers, indicating the level of the colours red (R), green (G), and blue (B) respectively. Each number is an integer from 0 to 255. 255 represents the fully saturated colour, while 0 represents zero saturation (black).
\end_layout

\begin_layout Standard
In HTML, these colours may be represented using hex code as well. In hex code, the R, G, and B values are converted to hexadecimal. Hex codes begin with the symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

 followed by the three R, G, and B hexadecimal values.
\end_layout

\begin_layout Standard
For example, the hex code #0A0B0C represents a colour with RGB values 10, 11, and 12 respectively.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write a function called 
\family typewriter
task3_1(hex)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes 
\family typewriter
hex
\family default
, a string representing a hex code, beginning with a 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

 symbol followed by three valid hexadecimal values between 00 and FF 
\end_layout

\begin_layout Itemize
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
a 3-integer tuple representing RGB values
\end_layout

\begin_deeper
\begin_layout Standard
or 
\end_layout

\end_deeper
\begin_layout Itemize
the error message, 
\begin_inset Quotes qld
\end_inset


\family typewriter
invalid data
\family default

\begin_inset Quotes qrd
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
Test the function fully with suitable test data.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_1(
\begin_inset Quotes qrd
\end_inset

#FFFFFF
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Standard
should return and display 
\family typewriter
(255, 255, 255)
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
Some image programs do not represent colours using 8-bit integers. Instead, they represent them as a normalised float value. In this representation, a value of 1.0 represents the fully saturated colour and a value of 0 represents zero saturation (black).
\end_layout

\begin_layout Standard
Write a second function 
\family typewriter
task3_2(rgb)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes a 3-integer tuple rgb representing RGB values 
\end_layout

\begin_layout Itemize
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
a 3-float tuple representing normalised RGB
\end_layout

\begin_deeper
\begin_layout Standard
or 
\end_layout

\end_deeper
\begin_layout Itemize
the error message, 
\begin_inset Quotes qld
\end_inset

invalid data
\begin_inset Quotes qrd
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
Test the function fully with suitable test data.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_2((128, 128, 128))
\family default

\end_layout

\begin_layout Standard
should return and display
\family typewriter
 (0.50196, 0.50196, 0.50196) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
task3_2((255, 255, 255)) 
\family default

\end_layout

\begin_layout Standard
should return and display
\family typewriter
 (1.0, 1.0, 1.0)
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Image filters are functions that take in image data and change the RGB values of its colours according to an algorithm. The algorithm for converting an image to grayscale calculates the average of the RGB values and sets the R, G, and B values to this average.
\end_layout

\begin_layout Standard
Write a third function 
\family typewriter
task3_3(hex)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes hex, a string representing a hex code 
\end_layout

\begin_layout Itemize
returns and displays a 3-float tuple representing normalised RGB of the colour converted to grayscale 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Test the function fully with 
\series bold
two
\series default
 suitable values.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_3(
\begin_inset Quotes qrd
\end_inset

#FF8000
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Standard
should return and display 
\family typewriter
(0.5, 0.5, 0.5)
\family default

\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 3.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bookstore uses a text file to store data about its inventory of books. The bookshop carries two kinds of books: printed books and virtual books. The bookshop wishes to transfer this information into a database.
\end_layout

\begin_layout Standard
The bookshop also wishes to create an online bookstore that allows users to add books to a shopping cart for purchase.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
TASK4_1_<centre number>_<index number>.sql
\family default
 to show the SQL code to create database 
\family typewriter
bookstore.db
\family default
 with three tables: 
\family typewriter
Book
\family default
, 
\family typewriter
Printed
\family default
, and 
\family typewriter
Virtual
\family default
. The Printed and Virtual tables represent physical and virtual books respectively, and stores properties unique to each type of book.
\end_layout

\begin_layout Standard
The 
\family typewriter
Book
\family default
 table will have the following fields: 
\end_layout

\begin_layout Itemize

\family typewriter
BookID
\family default
 ‚Äì the primary key, an integer value 
\end_layout

\begin_layout Itemize

\family typewriter
Title
\family default
 ‚Äì the title of the book 
\end_layout

\begin_layout Itemize

\family typewriter
Price
\family default
 ‚Äì the price of the book, in cents 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 ‚Äì the type of book: 
\begin_inset Quotes qld
\end_inset

physical
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

virtual
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Standard
The 
\family typewriter
Printed
\family default
 table will have the following additional field: 
\end_layout

\begin_layout Itemize

\family typewriter
Weight
\family default
 ‚Äì the weight of the book 
\end_layout

\begin_layout Standard
The 
\family typewriter
Virtual
\family default
 table will have the following additional field: 
\end_layout

\begin_layout Itemize

\family typewriter
DownloadLink
\family default
 ‚Äì the download link for the book 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Python programming language and object-oriented programming will be used to implement the online bookstore and shopping cart on a web page.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Book
\family default
 will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
title
\family default
 ‚Äì stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
price
\family default
 ‚Äì stored as an integer 
\end_layout

\begin_layout Standard
The class 
\family typewriter
Cart
\family default
 will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
items
\family default
 ‚Äì stored as a list of 
\family typewriter
Book
\family default
 objects 
\end_layout

\begin_layout Standard
The class 
\family typewriter
Cart
\family default
 has a method defined on it: 
\end_layout

\begin_layout Itemize

\family typewriter
total_price()
\family default
 ‚Äì returns an integer representing the total price of books in the cart 
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
The 
\family typewriter
PrintedBook
\family default
 class inherits from 
\family typewriter
Book
\family default
, and stores the following additional data: 
\end_layout

\begin_layout Itemize
weight ‚Äì stored as an integer 
\end_layout

\begin_layout Standard

\family typewriter
Virtu
\family default
alBook class inherits from 
\family typewriter
Bo
\family default
ok, and stores the following additional data: 
\end_layout

\begin_layout Itemize
download_link ‚Äì stored as a string 
\end_layout

\begin_layout Standard
Add your program code to
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 [3]
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
bookstore.txt
\family default
, contains data items for books stocked by the bookstore. Each data item is separated by a comma, with each book
\begin_inset Quotes ers
\end_inset

s data on a new line as follows: 
\end_layout

\begin_layout Itemize
book title 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Itemize
type 
\end_layout

\begin_layout Itemize
weight 
\end_layout

\begin_layout Itemize
download link 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
bookstore.txt
\family default
, creating an instance of the appropriate class for each book (either 
\family typewriter
PrintedBook
\family default
 or 
\family typewriter
VirtualBook
\family default
). 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Write program code to insert all information from the file into the 
\family typewriter
bookstore.db
\family default
 database.
\end_layout

\begin_layout Standard
Run the program. Add your program code to
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
The data from the text file, 
\family typewriter
bookstore.txt
\family default
, is to be used to implement a shopping cart in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
displays a list of books stocked by the bookstore 
\end_layout

\begin_layout Itemize
enables the user to add books to a shopping cart using an ID 
\end_layout

\begin_layout Itemize
displays the contents of the shopping cart 
\end_layout

\begin_layout Itemize
shows the total price of items in the shopping cart 
\end_layout

\begin_layout Standard
For each book displayed the web page should include the: 
\end_layout

\begin_layout Itemize
book ID 
\end_layout

\begin_layout Itemize
book title 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard
Run the web application and add the following books to the shopping cart: 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Northanger Abbey
\begin_inset Quotes qrd
\end_inset

, Price: 13.99, Type: Physical, Weight: 178g 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

War and Peace
\begin_inset Quotes qrd
\end_inset

, Price: 17.49, Type: Physical, Weight: 432g 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Computer Programs
\begin_inset Quotes qrd
\end_inset

, Price: 20.99, Type: Virtual, Link: https://mybookstore.com/dJHtFy 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Data Science
\begin_inset Quotes qrd
\end_inset

, Price: 14.99, Type: Virtual, Link: https://mybookstore.com/fJynJk 
\end_layout

\begin_layout Standard
Save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Draw a reduced decision table based on the following conditions regarding how John should go to school. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Itemize
If it is a Monday, John always takes his dad
\begin_inset Quotes ers
\end_inset

s car to school if he does not oversleep. 
\end_layout

\begin_layout Itemize
If John oversleeps, he always takes Taxi to school. 
\end_layout

\begin_layout Itemize
Otherwise, if it is a rainy day, John takes Taxi to school. If not, by MRT. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive function below helps to check if a password string 
\family typewriter
pw
\family default
 satisfies certain requirements. The meaning of the function parameters 
\family typewriter
pw
\family default
, 
\family typewriter
digit
\family default
s, 
\family typewriter
upper_l
\family default
, 
\family typewriter
lower_l
\family default
 and 
\family typewriter
length
\family default
 are password string, minimum number of digits, minimum number of uppercase letters, minimum number of lowercase letters and minimum length of the password respectively.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def check_pw(pw, digits, upper_l, lower_l, length): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(pw) == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

char = pw[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isdigit(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits-1, upper_l, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

elif char.isalpha(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isupper():
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits, upper_l-1, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits, upper_l, lower_l-1, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return False 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the values of all arguments in each recursive function call when the following code is executed. Then, state the value that the function returns.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> check_pw(
\begin_inset Quotes qrd
\end_inset

SP500
\begin_inset Quotes qrd
\end_inset

, 3, 1, 1, 5)
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
The function in 
\series bold
2a)
\series default
 is rewritten in such a way that string slicing on the password string pw is removed. A new function parameter 
\family typewriter
i
\family default
 is added to help the recursive function to keep track of the position in 
\family typewriter
pw
\family default
 in which it is currently checking.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def check_pw(pw, i, digits, upper_l, lower_l, length): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
if
\family default

\family typewriter

\series bold
 
\series default

\family default

\family typewriter

\series bold

\bar under
A
\bar default

\series default

\family default

\family typewriter
: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold

\bar under
B
\bar default

\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if char.isdigit(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits-1, upper_l, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

elif char.isalpha(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isupper(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits, upper_l-1, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits, upper_l, lower_l-1, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return False 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
State the code in 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe clearly or write in Python the modification needed for the function 
\family typewriter
check_pw()
\family default
 to also display a suggestion of a new password if the password requirements are not met. For example, if 
\family typewriter
pw
\family default
 does not have enough digits, it will append digits to 
\family typewriter
pw
\family default
 so that it can satisfy the requirement.
\end_layout

\begin_deeper
\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> check_pw(
\begin_inset Quotes qrd
\end_inset

WoBeiShiGeDa
\begin_inset Quotes qrd
\end_inset

, 0, 2, 6, 7, 15) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Suggested password: WoBeiShiGeDa33Uxxx 
\family default

\end_layout

\begin_layout Standard

\family typewriter
False 
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

33Uxxx
\begin_inset Quotes qrd
\end_inset


\family default
 is added to 
\family typewriter

\begin_inset Quotes qrd
\end_inset

WoBeiShiGeDa
\begin_inset Quotes qrd
\end_inset


\family default
 so that the password passes the requirements. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following recursive procedure is created to encode a character 
\family typewriter
char
\family default
 based on a 
\family typewriter
shift
\family default
 value. For example, if letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
a
\family default

\begin_inset Quotes qrd
\end_inset

 is shifted by 
\family typewriter
3
\family default
, it will become letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes qrd
\end_inset

; and if shifted by 
\family typewriter
-3
\family default
, it will become letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
x
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
The 
\family typewriter
ORD
\family default
 and 
\family typewriter
CHR
\family default
 function will help to convert the character to its ASCII value and vice versa.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE ENCODE_CHAR(char: STRING, shift: INT): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF shift == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN char 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ELSE IF shift > 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

DECLARE new_char: STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_char = CHR((ORD(char) + 1) % 26) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

shift -= 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ENCODE_CHAR(new_char, shift) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ELSE: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Shift += 26 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ENCODE_CHAR(char, shift) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 END PROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Identify one error from the above code, state the type of the error, including its definition and explain how the errors can be fixed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Assume the above error has been fixed. Copy the following trace table to your answer booklet. State the line number each time one of the return statements is called and complete it based on the following function call.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
ENCODE_CHAR(
\begin_inset Quotes qrd
\end_inset

y
\begin_inset Quotes qrd
\end_inset

, -24) 
\family default

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Line No. 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
char 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
shift 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
new_char 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Answer all questions. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the network architecture model of A and B as shown in the diagram below.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State an advantage of model A over B in the diagram above.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State and explain if each of the following statements are correct. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_deeper
\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

One of the functionalities of the DNS is that different users can simultaneously receive different IP translations for the same domain name.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The 4 top layers of TCP/IP model are application, internet, data link and physical.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The internet layer is not responsible for reliable transmission. It makes no guarantees about the proper arrival of packets.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

2C:54:91:G8:F9:E3 is a valid MAC address.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

2001:0db8:0001:0ab9:C0A8:0102 is a valid IPv6 address.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The internet and the World Wide Web are the same thing.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of HTTP and explain how the protocol works. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain packet switching. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State an ethical issue related to artificial intelligence.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the purpose of defining the code of conduct for computer use. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State a difference between data validation and data verification.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The implementation of a Binary Search Tree (BST) using three 1D arrays is shown below.
\end_layout

\begin_layout Standard
Each unused node that are not in the logical BST is initially connected in a singly linked list manner using the 
\family typewriter
leftPtr
\family default
 array. The first position of this linked list is indicated by the variable 
\family typewriter
nextFree
\family default
.
\end_layout

\begin_layout Standard
When a piece of data is inserted into the BST, a node will be disconnected from the linked list and added to the logical BST. The root of this logical BST is indicated by the variable 
\family typewriter
root
\family default
. The logical structure of the BST is managed by 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 which are the positions of the left and right child of the node respectively.
\end_layout

\begin_layout Standard
Below is an illustration for such BST with a 0-based index array.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
nextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
leftPtr 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
rightPtr 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the logical BST at this point of time. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the post order traversal of the BST 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the values of 
\family typewriter
root
\family default
, 
\family typewriter
nextFree
\family default
 and the values in the arrays 
\family typewriter
data
\family default
, 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 after the 
\series bold
each
\series default
 of the following BST operations are executed sequentially. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Add 8
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Recursive Delete 6 
\family default
 
\end_layout

\end_deeper
\begin_layout Enumerate
State an advantage of BST over Hash table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain what can make a Hash Table Search inefficient besides a bad hash function and how to overcome it. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State 2 characteristics of a good hash function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Study the following sorting code carefully.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def sort(lst): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(lst)<=1: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return lst 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

pivot = lst[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

smaller = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

larger = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

for i in range (1, len(lst)): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if lst[i] < pivot: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

smaller.append(lst[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

larger.append(lst[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return sort (smaller) + [pivot,] + sort (larger) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the name of the above sorting algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the above sorting algorithm is inefficient when it is used on a nearly sorted array. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how you can modify the code to improve the efficiency. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
Bubble sort and insertion sort are both used to sort a nearly sorted integer array of size 1000 and there are only 5 integers in the array that are not in the correct position. 
\end_layout

\begin_layout Enumerate
State and explain why insertion sort generally perform better than bubble sort for nearly sorted array. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Draw a flow chart for the algorithm described below. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_deeper
\begin_layout Standard
Given an integer 
\family typewriter
k
\family default
 and an array 
\family typewriter
arr[]
\family default
 representing the destination floors for 
\family typewriter
n
\family default
 people waiting currently at the ground floor and 
\family typewriter
k
\family default
 is the capacity of the elevator. It takes 1 unit time for the elevator to reach any consecutive floor from the current floor. The algorithm finds the minimal time taken to get all the people to their destination floor and then return to the ground floor.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def minTime(n, k, arr) : 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Sort in descending order 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

arr.sort(reverse = True) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

minTime = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Iterate through the groups 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for i in range(0, n, k) : 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# Update the time taken for 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# each group 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

minTime += (2 * arr[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Return the total time taken 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return minTime
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A relational database is created to store data about contractors engaging workers to perform renovation jobs.
\end_layout

\begin_layout Standard
The database designers are told that: 
\end_layout

\begin_layout Itemize
each contractor can recruit different workers to perform various jobs. 
\end_layout

\begin_layout Itemize
each worker can have skills to perform different jobs. 
\end_layout

\begin_layout Itemize
each job can have different levels of skills 
\begin_inset Quotes qld
\end_inset

A
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

B
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

C
\begin_inset Quotes qrd
\end_inset

 and their hourly rate is calculated based on their skill level for the job. 
\end_layout

\begin_layout Standard
A first attempt is represented by the following table: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain why this table is not in first normalized form. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-2.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain what a composite key is. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State a suitable primary key for Worker table and explain why the table is not in second normal form. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ‚Ä¶) 
\family default

\end_layout

\begin_layout Standard
The primary keys are indicated using a solid underline and foreign keys are indicated by using a dashed underline/asterisk. Write table descriptions for the required tables in the database so that they are in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Create an entity-relationship (ER) diagram showing the degree of all relations. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Using the above example, elaborate why a relational database model has advantage in maintaining data integrity over a flat file system. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

The homeowner would like to know a schedule of the renovation jobs performed to their house. They are 
\series bold
NOT
\series default
 interested in knowing the exact worker
\begin_inset Quotes ers
\end_inset

s name. Write an SQL query to output the 
\series bold
contractor
\begin_inset Quotes ers
\end_inset

s name
\series default
, 
\series bold
worker
\begin_inset Quotes ers
\end_inset

s job
\series default
, 
\series bold
worker
\begin_inset Quotes ers
\end_inset

s skill level
\series default
 and 
\series bold
date
\series default
 based on the contractor
\begin_inset Quotes ers
\end_inset

s name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Su Ming De
\family default

\begin_inset Quotes qrd
\end_inset

. The output is to be in the ascending order based on the date of job performed. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are also to design an Object-Oriented solution for the above-mentioned project. Both contractor and workers are to create a 
\family typewriter
User
\family default
 account on the platform, with details such as 
\family typewriter
user_id
\family default
, 
\family typewriter
password
\family default
 and 
\family typewriter
gender
\family default
.
\end_layout

\begin_layout Standard
The contractors will have to register their company details such as company 
\family typewriter
name
\family default
 and 
\family typewriter
address
\family default
, while the workers need to register their bank 
\family typewriter
account
\family default
 number. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\series bold
User
\series default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-classes, 
\end_layout

\begin_layout Itemize
inheritance, 
\end_layout

\begin_layout Itemize
the properties required, 
\end_layout

\begin_layout Itemize
appropriate methods, including but not limited to the 
\series bold
constructor
\series default
 methods, and at least 
\series bold
one
\series default
 pair of 
\begin_inset Quotes els
\end_inset


\series bold
get
\series default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\series bold
set
\series default

\begin_inset Quotes ers
\end_inset

 methods for each class, 
\end_layout

\begin_layout Itemize
circle the polymorphed methods. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using the above example, state the definition of inheritance and explain its purpose/advantage in object-oriented programing. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
The platform hopes to expand its function to allow register of homeowner accounts. The homeowners can view which are the workers came to their home address for renovation work on the date/time specified by the contractors. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State how this would affect the class, properties and methods in the current example. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State how this would affect the tables, attributes and relationships of the relational database stated in 
\series bold
7(d)
\series default
 and 
\series bold
(e)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Explain how NoSQL addresses shortcomings of relational databases. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
Some homeowners request to have access to the hourly rate and personal contact of renovation workers. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

From the perspective of the company, explain to the homeowners how such a feature is against the data protection obligations stated in the Personal Data Protection Act (PDPA). 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 1.1
\series default

\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task1_1(name_A, name_B)
\family default
 where 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are strings which consists of only alphabet letters and spaces. The function will return 
\family typewriter
True
\family default
 if 
\end_layout

\begin_layout Itemize
the alphabet letters combination used in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are the same and 
\end_layout

\begin_layout Itemize
the spaces in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are at the same locations. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Deabc
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde Fgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcd Efgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde Fzh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
False
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Test your program with the following test data:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Deabc
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde Fgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcd Efgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde Fzh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write the function 
\family typewriter
task1_2()
\family default
 to read the names in file 
\family typewriter

\begin_inset Quotes qrd
\end_inset

namelist_A.txt
\begin_inset Quotes qrd
\end_inset


\family default
 and find a matching name in 
\begin_inset Quotes qld
\end_inset


\family typewriter
namelist_B.txt
\family default

\begin_inset Quotes qrd
\end_inset

 that satisfied the conditions stated in 
\series bold
Task 1.1
\series default
. If a matching name cannot be found in 
\begin_inset Quotes qld
\end_inset


\family typewriter
namelist_B.txt
\family default

\begin_inset Quotes qrd
\end_inset

, it will just display 
\begin_inset Quotes qld
\end_inset


\family typewriter
***********No match***********
\family default

\begin_inset Quotes qrd
\end_inset

. Your results should be displayed in the following manners. The time-complexity of your program code matters. 
\begin_inset space \hfill{}

\end_inset

[13] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 2.1
\series default

\end_layout

\begin_layout Standard
Complete the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 by implementing both the 
\family typewriter
insert
\family default
 and 
\family typewriter
delete
\family default
 class functions. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
insert(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 as input and inserts it at the tail of the linked list. Take note that the attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 of 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 are both 
\family typewriter
None
\family default
 before the insertion. 
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
delete(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 which exists in the linked list as input. The function removes/detaches 
\family typewriter
node
\family default
 from the linked list and returns it. The 
\family typewriter
node
\family default
 returned has both its attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 set to 
\family typewriter
None
\family default
, but data remains unchanged. 
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
The class 
\family typewriter
LRUQ
\family default
 uses the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 to implement its least recently used queue (
\family typewriter
lruq
\family default
). 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Itemize
The attribute hashmap is a dictionary object that takes the node's data as key and the node instance itself in lruq as value. 
\end_layout

\begin_layout Itemize
The attribute size is the max number of nodes that lruq can have. 
\end_layout

\begin_layout Itemize
The attribute count is the number of nodes that lruq currently have. 
\end_layout

\begin_layout Standard
Complete the least recently used queue class 
\family typewriter
LRUQ
\family default
 by implementing the 
\family typewriter
use
\family default
 function. The class function 
\family typewriter
use(value)
\family default
 takes an integer 
\family typewriter
value
\family default
 as input. 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is in 
\family typewriter
lruq
\family default
 (referenced by hashmap), it removes the node in the 
\family typewriter
lruq
\family default
 and re-insert it to the end of the 
\family typewriter
lruq
\family default
. 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is not in 
\family typewriter
lruq
\family default
 (not referenced by hashmap), it references 
\family typewriter
value
\family default
 in hashmap and inserts a new 
\family typewriter
Node
\family default
 instance with value as its data to the end of 
\family typewriter
lruq
\family default
. If 
\family typewriter
count
\family default
 > 
\family typewriter
size
\family default
, it removes the least recently used node in 
\family typewriter
lruq
\family default
 and de-references it in 
\family typewriter
hashmap
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Hint: To de-reference a key in 
\family typewriter
hashmap
\family default
, you can call the following. 
\family typewriter
self.hashmap.pop(key, None)
\family default
 where 
\family typewriter
self.hashmap
\family default
 is a dictionary object. 
\end_layout

\end_deeper
\begin_layout Standard
The test function 
\family typewriter
test2_2()
\family default
 is provided for you in 
\family typewriter
task2.ipynb
\family default
. The expected outcome of this test function is shown on the next page. Take note that the size of the least recently used queue is 
\family typewriter
6
\family default
 in this test function.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 3 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 45 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Print from head: 8 2 3 45 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 31 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 12 31 
\family default

\series bold
//Queue is full at this point
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 42 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 12 31 42 
\family default

\series bold
//8 is removed because it is the least used 
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 45 31 42 12 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 3.1
\series default

\end_layout

\begin_layout Standard
Write program code to read the csv file 
\begin_inset Quotes qld
\end_inset


\family typewriter
health_facilities.csv
\family default

\begin_inset Quotes qrd
\end_inset

 and insert all information in the file as documents into a NoSQL MongoDB database called 
\begin_inset Quotes qld
\end_inset


\family typewriter
Health
\family default

\begin_inset Quotes qrd
\end_inset

 with one collection called 
\begin_inset Quotes qld
\end_inset


\family typewriter
facilities
\family default

\begin_inset Quotes qrd
\end_inset

. The 
\begin_inset Quotes qld
\end_inset


\family typewriter
_id
\family default

\begin_inset Quotes qrd
\end_inset

 of the documents in the database should start from 
\family typewriter
1
\family default
, 
\family typewriter
2
\family default
, 
\family typewriter
3
\family default
 and 
\family typewriter
4
\family default
 etc. The correct data type of each field is expected to be inserted into the database. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query to retrieve all public acute hospital documents with their corresponding number of beds more than 7200. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Write program code to bubble sort the results retrieved in 
\series bold
Task 3.2 a)
\series default
 according to the average number of beds per facility. Then, display the top 3 years which has the highest average number of beds per facility using the format below.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
The three years that have the highest average number of beds per facility are: _____, _____ and _____. 
\family default

\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query and program code to display all 
\begin_inset Quotes qld
\end_inset


\family typewriter
_id
\family default

\begin_inset Quotes qrd
\end_inset

s of Not-for-Profit health facilities documents that have no facility. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write MongoDB Pymongo code to update the fields 
\begin_inset Quotes qld
\end_inset


\family typewriter
no_of_facilities
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
no_beds
\family default

\begin_inset Quotes qrd
\end_inset

 of only 3 documents retrieved in 
\series bold
Task 3.3 a)
\series default
 to 
\family typewriter
1
\family default
 and a random number from 
\family typewriter
10
\family default
 to 
\family typewriter
20
\family default
 respectively. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Car Loaning System 
\series default

\end_layout

\begin_layout Standard
CaRent is a company providing electronic car rental services. The company engages you to design a web application using Flask microframework to aid in the car rental process.
\end_layout

\begin_layout Standard
The following information of each Customer is stored:
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 ‚Äì auto increment integer value to keep track of the ID of customer.
\end_layout

\begin_layout Standard

\family typewriter
Name
\family default
 ‚Äì name of customer.
\end_layout

\begin_layout Standard

\family typewriter
Gender
\family default
 ‚Äì gender of customer, to be stored as a single character, using either '
\family typewriter
M
\family default
' or '
\family typewriter
F
\family default
'.
\end_layout

\begin_layout Standard

\family typewriter
Contact
\family default
 ‚Äì contact number of customer.
\end_layout

\begin_layout Standard
The following information of each Car is stored:
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 ‚Äì vehicle identification number (VIN) of the car.
\end_layout

\begin_layout Standard

\family typewriter
Brand
\family default
 ‚Äì brand of the car.
\end_layout

\begin_layout Standard

\family typewriter
Vehicle Type
\family default
 ‚Äì type of the car, can be 
\family typewriter
'Sedan'
\family default
, 
\family typewriter
'Hatchback'
\family default
, 
\family typewriter
'SUV'
\family default
 or 
\family typewriter
'MPV'
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
Energy Source
\family default
 ‚Äì type of energy source the engine is running on, can be 
\family typewriter
'Diesel'
\family default
, 
\family typewriter
'Gasoline'
\family default
, 
\family typewriter
'Hybrid'
\family default
 or 
\family typewriter
'Electricity'
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
DailyPrice
\family default
 ‚Äì daily price for renting the car.
\end_layout

\begin_layout Standard

\family typewriter
Availability
\family default
 ‚Äì availability of the car, can be 
\family typewriter
'Available'
\family default
 or 
\family typewriter
'Unavailable'
\family default
.
\end_layout

\begin_layout Standard
The following information of each RentalPoint is stored:
\end_layout

\begin_layout Standard

\family typewriter
PointID
\family default
 ‚Äì auto increment integer value to keep track of the ID of rental service point.
\end_layout

\begin_layout Standard

\family typewriter
Address
\family default
 ‚Äì address of the rental point.
\end_layout

\begin_layout Standard

\family typewriter
OpWeekDay
\family default
 ‚Äì weekdays that the rental point is open, stored as a 7-digits string, starting from Sunday to Saturday, with 
\family typewriter
'1'
\family default
 indicating open and 
\family typewriter
'0'
\family default
 indicating closed. E.g. 
\family typewriter
'0111110'
\family default
 means it is open on weekdays and closed on weekend.
\end_layout

\begin_layout Standard

\family typewriter
OpStartHr
\family default
 ‚Äì starting time of daily operation, stored as a 4 digits string, using 24hour time format.
\end_layout

\begin_layout Standard

\family typewriter
OpEndHr
\family default
 ‚Äì ending time of daily operation, stored as a 4 digits string, using 24hour time format.
\end_layout

\begin_layout Standard
The following information of each 
\family typewriter
RentalRecord
\family default
 is stored:
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 ‚Äì ID of customer.
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 ‚Äì VIN of car.
\end_layout

\begin_layout Standard

\family typewriter
StartDate
\family default
 ‚Äì start date for the rental service.
\end_layout

\begin_layout Standard

\family typewriter
CollectionPointID
\family default
 ‚Äì ID of the collection point.
\end_layout

\begin_layout Standard

\family typewriter
ReturnDate
\family default
 ‚Äì return date for the rental service.
\end_layout

\begin_layout Standard

\family typewriter
ReturnPointID
\family default
 ‚Äì ID of the return point.
\end_layout

\begin_layout Standard
The information is to be stored in four tables:
\end_layout

\begin_layout Standard

\family typewriter
Customer
\family default

\end_layout

\begin_layout Standard

\family typewriter
Car
\family default

\end_layout

\begin_layout Standard

\family typewriter
RentalPoint
\family default

\end_layout

\begin_layout Standard

\family typewriter
RentalRecord
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
Task4_1.sql
\family default
 to show the SQL code to create the database 
\family typewriter
car_rental.db
\family default
 with the three tables.
\end_layout

\begin_layout Standard
The table 
\family typewriter
Customer
\family default
 must use 
\family typewriter
CustomerID
\family default
 as its primary key, the table 
\family typewriter
Car
\family default
 must use 
\family typewriter
VIN
\family default
 as its primary key, and the table 
\family typewriter
RentalPoint
\family default
 must use 
\family typewriter
PointID
\family default
 as its primary key.
\end_layout

\begin_layout Standard
The table 
\family typewriter
RentalRecord
\family default
 should use 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
StartDate
\family default
 as a composite key, while 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
CollectionPointID/ReturnPointID
\family default
 must refer to 
\family typewriter
CustomerID
\family default
 in 
\family typewriter
Customer
\family default
, 
\family typewriter
VIN
\family default
 in 
\family typewriter
Car
\family default
 and 
\family typewriter
PointID
\family default
 in 
\family typewriter
RentalPoint
\family default
 as foreign keys.
\end_layout

\begin_layout Standard
Save your SQL code as 
\family typewriter
Task4_1.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
customers.csv
\family default
, 
\family typewriter
cars.csv
\family default
, 
\family typewriter
rental_points.csv
\family default
 and 
\family typewriter
rental_records.csv
\family default
 contains information about the customers, cars, rental points and the past rental records. The first row of each file contains the header of the respective columns. Each row in the files is a comma- separated list of information.
\end_layout

\begin_layout Standard
Write a Python program to insert all information from the three files into the 
\family typewriter
database car_rental.db
\family default
. Run the program.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task4_2.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
You are tasked to implement a function to search and display all past rental records of a customer. Using the customer
\begin_inset Quotes ers
\end_inset

s name 
\family typewriter

\series bold
'Goh Yi Xi'
\series default

\family default
, query and display a list of data with the following fields as shown in the table, sorted in the ascending order according to the start date. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Contact 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
VehicleType 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
StartDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ReturnDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DailyPrice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
‚Ä¶
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write the SQL code required.
\end_layout

\begin_layout Standard
Save this code as 
\family typewriter
Task4_3.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
The company wants to implement a function to register new cars for rental into the database. Office staff can register new cars by adding the values of the attributes in the 
\family typewriter
Car
\family default
 table.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
Receive the following information: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
VIN
\family default
, 
\family typewriter
Brand
\family default
, 
\family typewriter
VehicleType
\family default
, 
\family typewriter
EnergySource
\family default
, and 
\family typewriter
DailyPrice
\family default
 of a car through a HTML form. 
\end_layout

\begin_layout Itemize

\family typewriter
Availability
\family default
 should be set to the default value of 
\family typewriter
'Available'
\family default
. 
\end_layout

\begin_layout Itemize
Note that 
\family typewriter
VehicleType
\family default
 and 
\family typewriter
EnergySource
\family default
 should be in 
\series bold
dropdown
\series default
 list format to improve data validity. 
\end_layout

\end_deeper
\begin_layout Itemize
Check if the 
\family typewriter
VIN
\family default
 is valid based on the following algorithm: 
\end_layout

\begin_deeper
\begin_layout Itemize
Step 1: Translate all letters to integer values using the following table (
\family typewriter
I
\family default
, 
\family typewriter
O
\family default
, and 
\family typewriter
Q
\family default
 are not allowed in a valid 
\family typewriter
VIN
\family default
): 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
B
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
E
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
F
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
G
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
H
\series default
: 8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
J
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
K
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
L
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
M
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
P
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
R
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
S
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
T
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
U
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
V
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
W
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
X
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Y
\series default
: 8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Z
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Step 2: Use the following weight factor for each position in the VIN. 
\series bold
The 9th position is that of the check digit
\series default
. Its weight factor has been substituted with a 
\family typewriter
0
\family default
, which will cancel it out in the multiplication step. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="18">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Position 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
5
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
7
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
8
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
9
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
10
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
11
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
12
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
13
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
14
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
15
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
16
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
17
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weight 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The sum of product of the letter/digit with their corresponding weight factor is then divided by 
\family typewriter
11
\family default
. 
\end_layout

\begin_layout Itemize
The remainder is the check digit. If the remainder is 
\family typewriter
10
\family default
, the check digit will use 
\family typewriter
X
\family default
 instead. 
\end_layout

\begin_layout Itemize
E.g. the 
\family typewriter
VIN
\family default
 with values 1
\family typewriter
M8GDM9A_KP042788
\family default
 will produce a check digit of 
\family typewriter
X
\family default
 and hence 
\family typewriter
1M8GDM9AXKP042788
\family default
 is a valid 
\family typewriter
VIN
\family default
. 
\end_layout

\end_deeper
\begin_layout Itemize
If 
\family typewriter
VIN
\family default
 is valid, create a new car record in the 
\family typewriter
Car
\family default
 table, and display the record in the confirmation page. 
\end_layout

\begin_layout Itemize
Otherwise, inform the user that the VIN is invalid. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
You may assume: 
\end_layout

\begin_layout Itemize
All inputs are in valid format. 
\end_layout

\begin_layout Itemize
VIN: 1M8GDM9AXKP042788 is a new record to the database 
\end_layout

\begin_layout Standard
Save your program as 
\family typewriter
Task4_4.py 
\family default

\end_layout

\begin_layout Standard
With additional files or sub-folders as needed in a folder named 
\family typewriter
Task4_4 
\family default

\end_layout

\begin_layout Standard
Run the web application. Enter the values based on the sample input above.
\end_layout

\begin_layout Standard
Then save the output of the program as 
\family typewriter
Task4_4.html
\family default
. 
\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An iterative function Fn has two parameters, Arr and Object, and returns an integer. The pseudocode is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION Fn(Arr: ARRAY, Object: STRING) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Current ‚Üê 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Object = Arr[Current] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Object > Arr[Current] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Next ‚Üê 1 + Current * 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Next ‚Üê Current * 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current ‚Üê Next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset

UNTIL Current > LENGTH(Arr) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset

RETURN -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 ENDFUNCTION 
\family default

\end_layout

\end_inset

A binary search tree is used to store the names of the 12 Chinese Zodiac animals. The order in which these names were added into the tree follows the order in the array 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array X
\family default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rat'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Tiger' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Monkey'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Dog'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Snake'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Horse'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Dragon'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[10]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Ox'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Pig'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[11]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rabbit'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Sheep'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[12]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rooster'
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary tree using the array 
\family typewriter
X
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Complete the trace table templates provided for the following function calls and state the RETURN value after each function call: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current] 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current] 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Function call: 
\family typewriter
Fn(X,'Sheep')
\family default
 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Function call: 
\family typewriter
Fn(X,'Duck')
\family default
 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe the purpose of function 
\family typewriter
Fn
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why this function 
\family typewriter
Fn
\family default
 is more efficient than linear search.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
It is found that one of the Zodiac animals should be named as 
\begin_inset Quotes els
\end_inset

Goat
\begin_inset Quotes ers
\end_inset

 instead of 
\begin_inset Quotes els
\end_inset

Sheep
\begin_inset Quotes ers
\end_inset

. Design another array 
\family typewriter
Y
\family default
 such that the function 
\family typewriter
Fn
\family default
 can be used with the correct list of the Chinese Zodiac animals.
\end_layout

\begin_deeper
\begin_layout Standard
Complete the template provided for the array 
\family typewriter
Y
\family default
.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Description
Template
\begin_inset space ~

\end_inset

for
\begin_inset space ~

\end_inset

Question
\begin_inset space ~

\end_inset

1(b) 
\begin_inset space ~

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Function call: 
\family typewriter
Fn(X,'Sheep')
\family default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(ii)
\end_layout

\end_inset

Function call: 
\family typewriter
Fn(X,'Duck')
\family default
 
\end_layout

\begin_deeper
\begin_layout Standard
\align left
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Template
\begin_inset space ~

\end_inset

for
\begin_inset space ~

\end_inset

Question
\begin_inset space ~

\end_inset

1(e) 
\begin_inset space ~

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array Y
\family default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rat'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Tiger'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Monkey'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Dog'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Snake'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Horse'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Dragon'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[10]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Ox'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Pig'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[11]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rabbit'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Sheep'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[12]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rooster'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A merge sort algorithm consists of the function 
\family typewriter
merge_sort(seq)
\family default
 that takes in an unsorted list 
\family typewriter
seq
\family default
 as an input and returns a sorted list. The function uses the helper function 
\family typewriter
merge(left,right)
\family default
 which merges the two sorted lists, 
\family typewriter
left
\family default
 and 
\family typewriter
right
\family default
, and returns a sorted list.
\end_layout

\begin_layout Standard
The following is the pseudocode for the function 
\family typewriter
merge(left,right)
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION merge(left: LIST, right: LIST) RETURNS LIST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(left) = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN right 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 IF LENGTH(right) = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN left 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset

IF left[0] < right[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN [left[0]] + merge(left[1:], right) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN [right[0]] + merge(left, right[1:]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain why this is a recursive function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State whether this 
\family typewriter
merge
\family default
 implementation is stable or unstable and explain with an example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Complete the merge sort algorithm by writing the pseudocode for the function 
\family typewriter
merge_sort(seq)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of a merge sort algorithm over a bubble sort algorithm. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain whether using a merge sort algorithm or a bubble sort algorithm will be more efficient in arranging the data list 
\family typewriter
[2,1,3,4,6,5,8,7,9,10,12,11]
\family default
 in an ascending order. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stack is a last-in-first-out (LIFO) abstract data type (ADT) in which all the elements are inserted and removed from one end.
\end_layout

\begin_layout Standard
It is common to either use a linked list or an array to implement a stack 
\end_layout

\begin_layout Itemize
In the linked list implementation, a root pointer points to the top of a stack and a data structure. The data structure contains the value of the data and a pointer pointing to the next node in the stack. 
\end_layout

\begin_layout Itemize
In the array implementation, a fixed size array is used to store the elements. 
\end_layout

\begin_layout Standard
The basic stack operations of 
\family typewriter
push()
\family default
, 
\family typewriter
pop()
\family default
 and 
\family typewriter
peek()
\family default
 are provided in both implementations. 
\end_layout

\begin_layout Itemize

\family typewriter
push()
\family default
 is used to insert an element into the stack. 
\end_layout

\begin_layout Itemize

\family typewriter
pop()
\family default
 removes an element from the stack and returns the value of the element. 
\end_layout

\begin_layout Itemize

\family typewriter
peek()
\family default
 returns the value of the element at the top of the stack without removing it. 
\end_layout

\begin_layout Enumerate
Describe what an abstract data type is and how it benefits the user.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State one advantage and one disadvantage of implementing the stack ADT using a linked list. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State one advantage and one disadvantage of implementing the stack ADT using an array.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe how a 
\family typewriter
push()
\family default
 operation is done in a stack ADT which is implemented using a linked list. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe how the number of elements within a stack can be counted using only the basic stack operations provided. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
The following program code uses a Python list as an array with the built-in functions
\family typewriter
 <list>.insert()
\family default
 and 
\family typewriter
<list>.pop()
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 def add(seq): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

stk = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

def InsertOne(item): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if stk==[] or item < stk[0]:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

stk.insert(0,item) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp = stk.pop(0) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

InsertOne(item) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

stk.insert(0,temp) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

for ele in seq: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

InsertOne(ele) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

return stk 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
The above is an example of implementing a stack using an array. State and explain how the program code adds all the elements in the sequence 
\family typewriter
seq
\family default
 into the stack. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Modify the above program code such that it uses only the basic stack ADT operations provided. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following shows a sample of a student
\begin_inset Quotes ers
\end_inset

s result slip for the Preliminary Examination. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P1-Q4.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
The college wishes to manage this result information using a relational database. The normalised database design requires to have a number of tables. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram showing these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ‚Ä¶) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. Write table descriptions for the tables you identified in 
\series bold
part (a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Under the Personal Data Protection Act (PDPA), the NRIC/FIN can no longer be used as a unique identifier for each student. Suggest and justify a suitable alternative unique identifier for each student. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Write an SQL query to output the names, civics groups and grades of students who have obtained at least 60 marks for H2 Computing. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Food Services Industry Digital Plan (IDP) was recently launched by the Minister of State for Trade and Industry to help F&B businesses adopt more digital technologies in their daily operations. The manager of a Iocal restaurant engaged a consultant to propose a digital solution for his restaurant operations.
\end_layout

\begin_layout Standard
After conducting a comprehensive study, the consultant proposed a web-based solution using a client-server model. The solution requires the following hardware to access the web server wirelessly in the local area network (LAN): 
\end_layout

\begin_layout Itemize
A tablet device on each table for customers to browse the menu and order their food items. 
\end_layout

\begin_layout Itemize
Multiple large monitors for the chefs in the kitchen to read the ordered food items. 
\end_layout

\begin_layout Itemize
A computer station for the service staff to check the table number before serving the food to the customers. 
\end_layout

\begin_layout Itemize
A computer in the manager
\begin_inset Quotes ers
\end_inset

s office to update the menu in the web server and print the daily sales report. 
\end_layout

\begin_layout Standard
When a customer decides to pay the bill, a QR code will be generated on the tablet device for him to scan and make online payment using his personal mobile device. 
\end_layout

\begin_layout Enumerate
Explain the meaning of the term client-server model. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe the main software components to be developed for the web server to host this service for the restaurant. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe how the customer would use the client tablet device to browse and order the food items. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Suggest 
\series bold
one
\series default
 feature on the digital form that will provide a positive experience for the customers when using the tablet device to order their food. Describe the usability principle applied in this feature. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The manager recommends the proposed solution to the shareholders, but a number of social issues associated with the solution have been raised. Describe 
\series bold
two
\series default
 possible issues that could have been raised.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
An alternative to this web-based solution would be to develop a native application programme for the customers to download and install on their mobile devices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 feature that is only available in the native application solution and how it is relevant to the solution proposed for the restaurant. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The restaurant
\begin_inset Quotes ers
\end_inset

s manager is also keen to expand his business to accept online ordering for takeaways. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Explain 
\series bold
one
\series default
 benefit of the web-based solution in this situation.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Draw the network diagram for the proposed web-based solution and include all the required hardware for the restaurant to accept online ordering.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 benefits for the restaurant in implementing this solution. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(j)
\end_layout

\end_inset

For online ordering, the restaurant needs to collect the customer's name, address and contact number. State and describe 
\series bold
two
\series default
 data protection obligations that the manager needs to comply under the Personal Data Protection Act. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A fantasy card game was developed using object-oriented programming (OOP) to store its cards
\begin_inset Quotes ers
\end_inset

 data. A card can either be a minion or a weapon. Each card has a name, mana cost, health or durability and attack power.
\end_layout

\begin_layout Standard
In order to play a card, a player must spend a certain amount of mana as specified in the card
\begin_inset Quotes ers
\end_inset

s mana cost. When the card has been played, the player may decide whether to use it to attack another minion or not.
\end_layout

\begin_layout Standard
A minion may belong to one of the following races: beast, demon, dragon or elemental. When a minion is attacked, its health would decrease according to the attacking card
\begin_inset Quotes ers
\end_inset

s attack power. Once the health of a minion decreases to zero, it is destroyed and removed from the game.
\end_layout

\begin_layout Standard
Instead of health, a weapon has durability and it cannot be attacked. When a weapon is used for an attack, its durability would decrease by one. Once the durability of a weapon decreases to zero, it is destroyed and removed from the game. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
the base class 
\family typewriter
CARD
\family default
, 
\end_layout

\begin_layout Itemize
any sub-classes and inheritance from the base class, 
\end_layout

\begin_layout Itemize
the properties for the base class and sub-classes, 
\end_layout

\begin_layout Itemize
appropriate methods with at least one getter and one setter method.
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\end_deeper
\begin_layout Enumerate
In relation to your diagram in part 
\series bold
(a)
\series default
, explain the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation, 
\end_layout

\begin_layout Enumerate
inheritance, 
\end_layout

\begin_layout Enumerate
polymorphism. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why OOP is a preferred programming paradigm in the development of this game. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
During a contact tracing exercise, the TraceTogether token
\begin_inset Quotes ers
\end_inset

s tag number, the user
\begin_inset Quotes ers
\end_inset

s name and the user
\begin_inset Quotes ers
\end_inset

s mobile number are stored in an Abstract Data Type (ADT) 
\family typewriter
Person
\family default
. The information are stored as a three element tuple as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
(tag: INTEGER, name: STRING, hp: STRING) 
\family default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Function 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return Type 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
make_person(tag,name,hp) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Person ADT 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A Constructor to create the 
\family typewriter
Person
\family default
 ADT.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_tag(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the tag number of the user. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_name(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the name of the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_hp(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the mobile number of the user.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to implement the ADT 
\family typewriter
Person
\family default
 with the above constructor and accessors.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
read_file()
\family default
 to read all the 21 users
\begin_inset Quotes ers
\end_inset

 information from the file 
\family typewriter
PEOPLE.csv
\family default
 and return a list containing all the 
\family typewriter
Person
\family default
 ADTs.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
insertion_sort(lst)
\family default
 that takes the list 
\family typewriter
lst
\family default
 obtained from 
\series bold
Task 1.2
\series default
 and sort them according to their tag numbers in an ascending order using the insertion sort algorithm.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard
Searching for a tag number in a large list of users may be slow and tedious. However, if the list is sorted, performing a binary search would be more efficient.
\end_layout

\begin_layout Subsubsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
search(lst,num)
\family default
 that searches for a tag number 
\family typewriter
num
\family default
 in the sorted list 
\family typewriter
lst
\family default
 obtained from 
\series bold
Task 1.3
\series default
. The code should 
\end_layout

\begin_layout Itemize
perform a binary search on the sorted list. 
\end_layout

\begin_layout Itemize
return the 
\family typewriter
Person
\family default
 ADT if the tag number 
\family typewriter
num
\family default
 exists. Otherwise, return 
\family typewriter
None
\family default
. 
\end_layout

\begin_layout Itemize
print the number of comparisons made in the searching process.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every user is required to carry a tracing token inside an indoor sports facility so that the sensing device system can detect the token to read the position of the users and their temperature. The data is stored as records in the file 
\family typewriter
POSRECORDS.txt
\family default
, with the following entries separated by commas: 
\end_layout

\begin_layout Itemize
the tag number (
\family typewriter
INTEGER
\family default
) of the tracing token which could be used to identify the user 
\end_layout

\begin_layout Itemize
the temperature (
\family typewriter
FLOAT
\family default
) of the user measured in degree Celsius 
\end_layout

\begin_layout Itemize
the location 
\begin_inset Formula $(x,y)$
\end_inset


\family typewriter
 (FLOAT,FLOAT)
\family default
 of the user which consists of the perpendicular 
\family typewriter
x-
\family default
 and 
\family typewriter
y-
\family default
distances, measured in metres, from the walls A and B respectively 
\end_layout

\begin_layout Standard
The diagram below shows two locations 
\begin_inset Formula $(x_{1},y_{1})$
\end_inset

 and 
\begin_inset Formula $(x_{2},y_{2})$
\end_inset

: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
The distance between two locations can be calculated using the formula:
\end_layout

\begin_layout Standard

\begin_inset Formula \[
\text{Distance}=\sqrt{(x_{2}-x_{1})^{2}+(y_{2}-y_{1})^{2}}
\]
\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Create an empty array 
\family typewriter
all_records
\family default
 of size 20 and paste the data from the text file 
\family typewriter
POSRECORDS.txt
\family default
 into your program code.
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
distance(user1,user2)
\family default
 that takes in two records and returns the distance between the two users in metres, correct to 2 decimal places. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard
For safety reasons during the Covid-19 pandemic, two users are considered to be in close proximity if the distance between them is less than 1.5 m apart.
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
analyse(user1)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
, calculates the distances between 
\family typewriter
user1
\family default
 and all other users in the array, and returns a list of tag numbers of the users who are in close proximity to 
\family typewriter
user1
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard
Under the Safe Management Measures, people with a temperature of more than 37.5 degree Celsius will be flagged out as RED cases and the people who are in close proximity to these RED cases will be flagged out as YELLOW cases. The facility manager needs to submit both lists to the authority daily for follow-up actions.
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
red_list(all_records)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
 and returns a list of tag numbers belonging to the RED cases. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
yellow_list(red_cases,all_records)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
 to check for people who were in close proximity to any of the RED cases. The function returns a list of tag numbers belonging to the YELLOW cases.
\end_layout

\begin_layout Standard
Those people flagged out as RED cases in 
\series bold
Task 2.3
\series default
 should not appear in the list of YELLOW cases even though they may be in close proximity to another RED case.
\end_layout

\begin_layout Standard
You may use the functions written in Task 2.1 and Task 2.2 for the program code in this task. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Shoppe e-Commerce has a mobile application for customers to make purchases through its online platform. All the customers
\begin_inset Quotes ers
\end_inset

 details, product data and ordering records are kept in the database 
\family typewriter
shoppe.db
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for the webpage 
\family typewriter
index.html
\family default
 for the customer to log in to their account. The 
\family typewriter
/login
\family default
 route in the server code should verify the customer
\begin_inset Quotes ers
\end_inset

s username and password using the data in the 
\family typewriter
Account
\family default
 table in the database. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-1.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
If the log-in details are valid, the customer will receive the webpage 
\family typewriter
display.html
\family default
. Otherwise, the customer will be redirected back to the log-in page. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code for the webpage 
\family typewriter
display.html 
\family default
to display the customer
\begin_inset Quotes ers
\end_inset

s details, with the profile picture, and a menu for the customer to choose the option to update the profile picture or to check the shopping cart. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Standard
A customer, John, does not have a profile picture and he now wishes to upload the file 
\family typewriter
mypic.png
\family default
. This picture file will be renamed as 
\family typewriter
John.png
\family default
 before storing in the web server.
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write program code for the customer to select and upload a picture file, and it should include the following: 
\end_layout

\begin_layout Itemize

\family typewriter
/menu
\family default
 route in the server code to provide the customer with a webpage 
\family typewriter
profile.html
\family default
 when the option to update the profile picture is chosen 
\end_layout

\begin_layout Itemize

\family typewriter
profile.html
\family default
 to allow the customer to upload a profile picture in the 
\family typewriter
.png
\family default
 format 
\end_layout

\begin_layout Itemize

\family typewriter
/update
\family default
 route in the server code to receive the uploaded picture file and rename it as 
\family typewriter
<username>.png
\family default
 before storing in the server
\begin_inset Quotes ers
\end_inset

s 
\family typewriter

\backslash
static
\backslash
photo
\backslash

\family default
 directory 
\end_layout

\begin_layout Itemize

\family typewriter
success.html
\family default
 to display a webpage informing the customer that the profile picture has been successfully uploaded 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard
The Shoppe customers usually browse through the available products on the platform and add them to their shopping carts. When they have decided on their purchase, they will select some or all the items in the shopping cart before checking out to make payment. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-3.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write program code for the customer to select the items to check out for payment, and it should include the following: 
\end_layout

\begin_layout Itemize

\family typewriter
/menu
\family default
 route in the server code to query the 
\family typewriter
Cart
\family default
 table in the 
\family typewriter
shoppe.db
\family default
 when the customer chooses the option to check the shopping cart 
\end_layout

\begin_layout Itemize

\family typewriter
cart.html
\family default
 to display the list of items in the shopping cart and let the customer select them for checking out; the customer will also be required to indicate the preferred date and address for delivery 
\end_layout

\begin_layout Itemize

\family typewriter
/checkout
\family default
 route in the server code to receive the customer
\begin_inset Quotes ers
\end_inset

s inputs and insert a record into the
\family typewriter
 Orders
\family default
 table in the
\family typewriter
 shoppe.db 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
success.html
\family default
 to display the 
\series bold
total cost
\series default
 and inform the customer that the purchase has been successfully recorded.
\begin_inset space \hfill{}

\end_inset

 [14] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Lessonology is a learning management system that utilises gamification elements to motivate students to complete their assignments. The Linked List data structure is used to store the students
\begin_inset Quotes ers
\end_inset

 names and their total experience points. Each node contains a student
\begin_inset Quotes ers
\end_inset

s name, the student
\begin_inset Quotes ers
\end_inset

s total experience points, and a pointer to the next node. The nodes are linked together according to the order provided in the 
\family typewriter
DATA.txt
\family default
 file.
\end_layout

\begin_layout Standard
A program is to be written to implement nodes as an instance of the class 
\family typewriter
Node
\family default
. The class 
\family typewriter
Node
\family default
 has the following properties and method: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node
\begin_inset Quotes ers
\end_inset

s value for a student
\begin_inset Quotes ers
\end_inset

s name.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Exp
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node
\begin_inset Quotes ers
\end_inset

s value for the student
\begin_inset Quotes ers
\end_inset

s total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer to the next node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Method
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SetPointer()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Set the pointer to point at the next node or point to 
\family typewriter
None
\family default
 when it is the last node.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
StudentList
\family default
. The class 
\family typewriter
StudentList
\family default
 has the following property and methods: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: StudentList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer at the start of the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialise the linked list with the pointer 
\family typewriter
Start
\family default
 assigned to 
\family typewriter
None
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Add()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add a new node into the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Update()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Update the value for the total experience points of a student
\begin_inset Quotes ers
\end_inset

s node in the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Delete()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Delete a node in the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current content of the linked list in table form.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
StudentList
\family default
, including the 
\family typewriter
Constructor
\family default
,
\family typewriter
 Add() 
\family default
and 
\family typewriter
Display()
\family default
 methods. The code should follow the specification given. Do not write the 
\family typewriter
Update()
\family default
 and 
\family typewriter
Delete()
\family default
 methods yet.
\end_layout

\begin_layout Standard
The 
\family typewriter
Add(node)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class should add the 
\family typewriter
node
\family default
 containing a student
\begin_inset Quotes ers
\end_inset

s name and the student
\begin_inset Quotes ers
\end_inset

s total experience points to the linked list, according to the order given in the 
\family typewriter
DATA.txt
\family default
 file.
\end_layout

\begin_layout Standard
Test your code by reading the data from the file 
\family typewriter
DATA.txt
\family default
 and adding them as nodes into the linked list. The diagram below shows a portion of the expected output when using the 
\family typewriter
Display()
\family default
 method on the populated linked list: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q4-1.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Each time a student completes an assignment, points will be awarded and the student
\begin_inset Quotes ers
\end_inset

s total experience points will be updated.
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
Update(name,points)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class that takes a student
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
 and the awarded 
\family typewriter
points
\family default
 as inputs to update the student
\begin_inset Quotes ers
\end_inset

s total experience points in the node. (You may assume that the node containing the student exists in the linked list.)
\end_layout

\begin_layout Standard
For example, 
\family typewriter
Update('BRIAN',100)
\family default
 will update the total experience points of a student whose name is 
\family typewriter
'BRIAN'
\family default
 from 
\family typewriter
20404
\family default
 to 
\family typewriter
20504
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write program code to implement the 
\family typewriter
Delete(name)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class to search and remove a node, containing a particular student
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
, in the linked list. Return 
\family typewriter
True
\family default
 if the node is found and removed; otherwise return 
\family typewriter
False
\family default
. (You may assume that the students
\begin_inset Quotes ers
\end_inset

 names are unique in the linked list.) 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Another linked list which has pointers linking the nodes in decreasing order of the experience points is implemented as an instance of the class 
\family typewriter
Leaderboard
\family default
.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Leaderboard
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Leaderboard
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer at the start of the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Inherit the property and all the methods from the class 
\family typewriter
StudentList
\family default
. Initialise the linked list with the pointer 
\family typewriter
Start
\family default
 assigned to 
\family typewriter
None
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Add()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modify the 
\family typewriter
Add()
\family default
 method in the parent class to add a new node in decreasing order of total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Update()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modify the 
\family typewriter
Update()
\family default
 method in the parent class such that the linked list is still in decreasing order of experience points after updating a student
\begin_inset Quotes ers
\end_inset

s total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayTop()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the content of the nodes in the linked list for the top students based on their total experience points.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
Leaderboard
\family default
 to inherit the properties and methods from the class 
\family typewriter
StudentList
\family default
 with the modified 
\family typewriter
Add()
\family default
 and 
\family typewriter
Update()
\family default
 methods. The additional 
\family typewriter
DisplayTop(n)
\family default
 method should display the top 
\family typewriter
n
\family default
 number of students in the linked list, based on their total experience points. (You may assume that no two students have the same total experience points.)
\end_layout

\begin_layout Standard
Test your code by reading the data from the file 
\family typewriter
DATA.txt
\family default
 and adding them as nodes into this linked list. The diagram below shows the expected output when using the 
\family typewriter
DisplayTop(5)
\family default
 method on the linked list: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q4-2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
