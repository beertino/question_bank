#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q1] 
\end_layout

\begin_deeper
\begin_layout Standard
The number of rainy days for each year and month is stored in the file 
\family typewriter
RAINFALL.txt
\family default
.
 The first line of the file contains the heading description for the data.
 Each line of data is stored in the format 
\family typewriter
YYYY-MM,99
\family default
 where 
\family typewriter
YYYY
\family default
 is the year, 
\family typewriter
MM
\family default
 is the month and 
\family typewriter
99
\family default
 is the number of days.
 Thus '
\family typewriter
1982- 01,10
\family default
' means there were 10 rainy days in the month of January, 1982.
 
\end_layout

\begin_layout Standard
You are required to write a program to: 
\end_layout

\begin_layout Itemize
Read the data in the file.
 
\end_layout

\begin_layout Itemize
Calculate the total number of rainy days for each year by adding all the
 months’ rainy days for that year.
 
\end_layout

\begin_layout Itemize
Create a new file 
\family typewriter
RAINFALLYEAR.txt
\family default
.
 
\end_layout

\begin_layout Itemize
Write the heading description in the first line as "Year,Rainy Days”.
 
\end_layout

\begin_layout Itemize
For each subsequent line, write to the file in the format 
\family typewriter
YYYY,999
\family default
 where 
\family typewriter
YYYY
\family default
 is the year and 
\family typewriter
999
\family default
 is the total number of rainy days (up to 3 digits) for that year.
 
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for this task.
 
\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code for a procedure 
\family typewriter
ShowMenu
\family default
 to display the following menu: 
\end_layout

\begin_layout Enumerate

\family typewriter
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Query total rainy days in any year
\end_layout

\begin_layout Enumerate

\family typewriter
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Query by year the month of highest rainy days 
\end_layout

\begin_layout Enumerate

\family typewriter
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 -1 to Exit
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Implement a program that displays 
\family typewriter
ShowMenu
\family default
 and asks the user for their choice.
 Create functions 
\family typewriter
Query1
\family default
 and 
\family typewriter
Query2
\family default
 which corresponds to the menu selection option 
\family typewriter
1
\family default
 and 
\family typewriter
2
\family default
 respectively.
 When option 
\family typewriter
1
\family default
 is selected, 
\family typewriter
Query1
\family default
 should run and ask the user to input the year.
 
\family typewriter
Query1
\family default
 will return the total number of rainy days or a suitable message if data
 for that year is not available.
 
\end_layout

\begin_layout Standard
When option 
\family typewriter
2
\family default
 is selected, 
\family typewriter
Query2
\family default
 should execute and ask the user for the year.
 
\family typewriter
Query2
\family default
 will return the month with the highest number of rainy days in that year
 in words (e.g.
 January, August, or December) or a suitable message if data for that year
 is not available.
 
\end_layout

\begin_layout Standard
For both 
\family typewriter
Query1
\family default
 and 
\family typewriter
Query2
\family default
, appropriate validation of the user input for year should be done.
 The program will display 
\family typewriter
ShowMenu
\family default
 after each valid query until option 
\family typewriter
3
\family default
 is selected.
\end_layout

\begin_layout Subsection*
Evidence 3: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Design 3 test data which tests the functionality of your program.
 
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
A screenshot for each test case you considered.
 Annotate the screenshot explaining the purpose of each test.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q2] 
\end_layout

\begin_deeper
\begin_layout Standard
The following is the algorithm for a recursive insertion sort on an array
 of size 
\begin_inset Formula $n$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Base Case: If array size is 1 or smaller, return.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Recursively sort first n – 1 elements.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 Insert last element at its correct position in sorted array.
 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for this algorithm to implement a recursive insertion
 sort function.
 Use the sample array data available from text file 
\family typewriter
COUNTRIES.txt
\family default
 and paste this into your programming code.
 Your program should display the sorted items with each item shown per line.
 
\end_layout

\begin_layout Subsection*
Evidence 5: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Amend your code to display the insertion process done during each recursive
 call.
 Each recursive call should display a line as follows: 
\end_layout

\begin_layout Standard

\family typewriter
Element at position n is being inserted in position j 
\end_layout

\begin_layout Standard
Replace 
\family typewriter
n
\family default
 and 
\family typewriter
j
\family default
 to show the actual index value.
 
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
Your amended program code.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 7:
\end_layout

\begin_layout Standard
One screenshot of the output.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q3] 
\end_layout

\begin_deeper
\begin_layout Standard
Create a binary tree Abstract Data Type (ADT) with commands to create a
 new tree, insert data items to the tree and print the tree.
 
\end_layout

\begin_layout Standard
The sequence of commands 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a new tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (15) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (10) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (20) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (8) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (12) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (18) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (25)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
would create the following binary tree: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-NYJC-2019-P1-Q3-1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes Tree and Node designed
 as follows: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
root : Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
add(newItem)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
printTreeInOrder()
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
key : INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
left : Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
right : Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
insert(key : INTEGER)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 8: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[16]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Itemize
Write program code for a procedure 
\family typewriter
CreateTreefromArray
\family default
 that accepts an array of unsorted unique integers passed in via a parameter.
 
\end_layout

\begin_layout Itemize
The procedure will read each integer in the array and construct a binary
 tree using your classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
 
\end_layout

\begin_layout Itemize
Call 
\family typewriter
printTreeInOrder
\family default
 to display the output (numbers shown will always be sorted).
 
\end_layout

\begin_layout Itemize
Test your program by copying the input data found in 
\family typewriter
BST.txt
\family default
 into your code.
 
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CreateTreefromArray
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
A screenshot of the output.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
A binary tree created from keys that are in ascending order will result
 in an unbalanced binary tree.
\end_layout

\begin_layout Standard
For instance, the sequence of commands
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Create a new tree 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (8) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (10) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (12) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (15)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (18) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (20)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add to tree (25)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
will result in a tree that looks as follows: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-NYJC-2019-P1-Q3-2.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
Amend procedure 
\family typewriter
CreateTreefromArray
\family default
 so that the created tree from any input array of integers will be balanced
 where the number of items on the left and right subtree will roughly be
 divided equally (Hint: input array must first be sorted).
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Your amended program code.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Create a function 
\family typewriter
FindKthSmallest
\family default
 that returns the 
\begin_inset Formula $k$
\end_inset

th smallest element in your binary tree.
 If 
\begin_inset Formula $k=5$
\end_inset

 the 
\begin_inset Formula $k$
\end_inset

th smallest element will be 18.
 Your function should not need to use extra space (e.g.
 creating a new array) to solve the problem other than using a temp variable(s).
 
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
FindKthSmallest
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 13:
\end_layout

\begin_layout Standard
Produce a screenshot showing the retrieval of the 5th smallest element from
 the tree created earlier.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P1/Q4] 
\end_layout

\begin_deeper
\begin_layout Standard
To encrypt a message, a keyword cipher is used.
 It is a form of monoalphabetic substitution where a keyword is used as
 the key.
 The key is used to determine the letter matchings of the cipher alphabet
 to the plain alphabet.
 Repeating letters in the key is removed.
 For instance, if the key used is 
\family typewriter
'SECRET'
\family default
, the cipher alphabet generated will be as follows: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="27">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plain text:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cipher Alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
After the key’s unique letters is used up, the rest of the ciphertext letters
 are used in alphabetical order, excluding those already used in the key.
 Thus, to encode the word ‘
\family typewriter
Attack
\family default
’, ‘
\family typewriter
A
\family default
’ is replaced with 
\family typewriter
'S'
\family default
, 
\family typewriter
't'
\family default
 is replaced with 
\family typewriter
'Q'
\family default
, and so on giving the encrypted word as 
\family typewriter
'SQQSCH'
\family default
.
 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for a function to generate an array of the cipher alphabet
 given a key.
 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
FUNCTION Cipher (NewAlphabet : ARRAY, Key : STRING) 
\end_layout

\begin_layout Standard
The function has two parameters and returns the 
\family typewriter
NewAlphabet
\family default
 array with the correct cipher alphabet based on the 
\family typewriter
Key
\family default
 parameter.
 
\end_layout

\begin_layout Subsection*
Evidence 14:
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write driver code that asks the user to enter a key that contains only letters,
 calls function Cipher and displays the cipher alphabet (all in uppercase)
 in one line.
 Do appropriate data validation on the input key.
 
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Design three suitable test cases and provide screenshot evidence for your
 testing.
 
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Develop your program further to display the following menu: 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Encode a message
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Decode a message 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 -1 to Quit
\end_layout

\begin_layout Standard
Implement the menu options to allow a line of text to be encoded or decoded.
 For each option, ask for the cipher key and the message that is to be encoded
 or decoded.
 Test your program with the key 
\family typewriter
'TOPSECRET'
\family default
 and the message 
\family typewriter
'I will score A for Computing
\family default
'.
 
\end_layout

\begin_layout Subsection*
Evidence 17: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Subsection*
Evidence 18: 
\end_layout

\begin_layout Standard
Screenshot(s) showing your output.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Frequency analysis is a common method used by code breakers to break monoalphabe
tic substitution ciphers.
 The first step is to analyse the coded message and construct a frequency
 table of all the letters appearing in the coded message.
 
\end_layout

\begin_layout Standard
Write a program that reads the content from the file 
\family typewriter
INTERCEPT.txt
\family default
.
 The text in this file contains a coded message.
 Construct a frequency table (ignore punctuation marks) as follows using
 a suitable data structure: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="27">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ciphertext Letter:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frequency:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Your program will then display the table sorted by descending order showing
 the most used letter and its frequency first followed by the next highest
 and so on.
\end_layout

\begin_layout Standard
Partial sample output: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ciphertext Letter:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frequency:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
88
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
85
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
67
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 19: 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 20: 
\end_layout

\begin_layout Standard
Screenshot of output.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q1] 
\end_layout

\begin_deeper
\begin_layout Enumerate
Database management systems are aimed at solving a number of problems associated
 with traditional file-based systems.
 Describe three such problems and explain how they are solved by database
 management systems.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Enumerate
A national car hire company uses a relational database.
 Cars are available for hire from a large number of depots around the country.
 Two entities (or records) are CARS-FOR-HIRE and DEPOTS.
\end_layout

\begin_deeper
\begin_layout Enumerate
Suggest four attributes (or fields) associated with the entity CARS-FOR-HIRE.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Draw a diagram showing the relationship between the entities CARS-FOR-HIRE
 and DEPOTS.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State one other entity which is related to either or both of the original
 entities.
 Describe the relationship(s).
 Suggest an attribute for this entity.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q2] 
\end_layout

\begin_deeper
\begin_layout Standard
A stack is to be implemented using an array of 20 elements.
 
\end_layout

\begin_layout Enumerate
Describe an algorithm to remove an item from a stack and place it in a variable
 
\family typewriter
x
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
With the aid of examples, explain what nested functions or nested subroutines
 are.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
Explain with the aid of diagrams or otherwise, how a stack can be used by
 the operating system to process “nested functions” or “nested subroutines”.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Outline the data attributes and member functions for a class stack abstract
 data type.
 You need not go into details as to how they will be implemented.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q3] 
\end_layout

\begin_deeper
\begin_layout Standard
A large national electrical appliances company maintains an extensive inventory
 of appliances for sale in a country.
 The company has twelve specialised retail stores targeting the needs of
 different market segments.
 Six of these stores are housed in a large mall in the capital, but the
 other six are in different cities in the country.
 
\end_layout

\begin_layout Standard
The six stores in the capital are linked using a LAN, while the other six
 are linked via a WAN.
 
\end_layout

\begin_layout Enumerate
Explain the difference between a LAN and a WAN.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Wireless technology has become more popular in recent years.
 Describe two reasons why the company will not replace its LAN network with
 a wireless one.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Discuss two security threats faced by the company’s LAN and measures that
 can be put in place to reduce these threats.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Standard
The company is thinking of allowing all its sales personnel access to this
 inventory.
 It can store this data on an intranet or cloud storage.
 Discuss the relative merits and demerits of these two options.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q4] 
\end_layout

\begin_deeper
\begin_layout Standard
A company has decided to offer an in-house credit system by issuing privileged
 customers an in-house credit-card which allows customers to charge their
 purchases from the stores to the card, up to the customers’ credit limits.
\end_layout

\begin_layout Enumerate
During a sales promotion, the store offers a discount of 15% if a customer’s
 total purchase is greater or equal to $200 but less than $500.
 A discount of 20% is given if the customer’s total purchase is greater
 or equal to $500.
 For customers who had exceeded their credit limits, the supervisor’s approval
 is required.
 Create a decision table or tree to represent the above conditions and actions.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
In order to protect the privacy of data, many countries have passed legislation
 to address this issue.
 Describe any 3 features of the Personal Data Protection Act in Singapore
 that aims to do this.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q5] 
\end_layout

\begin_deeper
\begin_layout Standard
When a customer orders goods over the phone, the cashier will record the
 order in an order form containing the items ordered and quantity, customer
 address, delivery date and time and the amount payable.
 A copy of this form will be given to the storeman who will pick the goods
 and generate a delivery order (DO).
 The DO will be given to the delivery man who will deliver the goods.
 The customer on collecting the goods will sign on the DO and return a signed
 copy to the delivery man.
 On his return, the delivery man will give the DO to the accounts department
 who will generate an invoice.
 Invoices are kept in a file until the next day where they will be mailed
 to the customers.
\end_layout

\begin_layout Enumerate
Draw a data flow diagram of the above processes.
\begin_inset space \hfill{}
\end_inset

 [8] 
\end_layout

\begin_layout Enumerate
Goods in the warehouse are divided into 2 main categories – Kitchen appliances
 (e.g.
 kettle, toasters and ovens) and Entertainment products (e.g.
 LCD television, mp3 players and gaming consoles).
 Each item has an item name, description, unit price and quantity on hand.
 Kitchen appliances have an item weight, packing volume and colour.
 Entertainment products have a serial number, country of manufacture and
 recommended retail price.
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram of the above showing inheritance, their private attributes
 and public methods.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Enumerate
What is the purpose of a public method?
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
What is the difference between a class and an object?
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
In relation to the diagram in part (b), explain the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Encapsulation; 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Inheritance;
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Data hiding; 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Polymorphism.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9597/2019/P2/Q6] 
\end_layout

\begin_deeper
\begin_layout Standard
A linked list ADT with the following incomplete specification is given as
 follows:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LList
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
head : Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
addNode(s : Node)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
findmiddle(l : llist)-> INTEGER
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
data : INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
nextPtr : Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
setData(s : INTEGER)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
setnextPtr(x : Node)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
getData(): INTEGER 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain the main difference between an array and a linked list data structure.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Using pseudo code, write an algorithm to implement 
\family typewriter
findmiddle
\family default
 that will return the data in the middle of the linked list in one pass.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Enumerate
State two applications of a linked list.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
State two other common methods (including parameters) that should be included
 in the 
\family typewriter
LList
\family default
 specification.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\end_body
\end_document
