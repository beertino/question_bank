#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate

\series bold
CID3 Team Grouping
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
In this question, you will help the CID3 students in forming CID3 groups
 for their projects.
 
\end_layout

\begin_layout Standard
In “
\family typewriter
student_cid.txt
\family default
” 
\end_layout

\begin_layout Standard
There are three fields on each line which indicates 
\family typewriter
name
\family default
, 
\family typewriter
role
\family default
 and 
\family typewriter
gender
\family default
 of 50 cid3 students.
 The fields are separated by ‘;’ 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Rufus Schuck;Coder;F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Ione Wolfe;Dealer;F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Hillary Curl;Coder;M 
\end_layout

\begin_layout Plain Layout

\family typewriter
… 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
read_data(filename)
\family default
 which takes 
\family typewriter
filename
\family default
 as a string and returns a 2-dimension list that follows the format as shown
 in the example below.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
[['Rufus Schuck', 'Coder', 'F'], ['Ione Wolfe', 'Dealer', 'F'], ['Hillary
 Curl', 'Coder', 'M'],…] 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
read_data
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
gender_count(cid_student_lst, is_female)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 and a boolean 
\family typewriter
is_female
\family default
 as inputs and returns the number of female students in 
\family typewriter
cid_student_lst
\family default
 if 
\family typewriter
is_female
\family default
 is 
\family typewriter
True
\family default
, otherwise return the number of male students.
 
\family typewriter
cid_student_lst
\family default
 is the list obtained in 
\series bold
Task 1.1
\series default
.
 
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
gender_count
\family default
.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 3 
\end_layout

\begin_layout Standard
Screenshot of the output of the following: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(gender_count(cid_student_lst, True)) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(gender_count(cid_student_lst, False))
\family default

\begin_inset space \hfill{}
\end_inset


\family typewriter
 
\family default
[1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.3 
\end_layout

\begin_layout Standard
Implement the procedure 
\family typewriter
role_statistics(cid_student_lst)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and output the number of students for each role in the following
 format.
 (There are more than 5 types of roles.) 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> role_statistics(cid_student_lst) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Role 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Number 
\end_layout

\begin_layout Plain Layout

\family typewriter
Coder 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

11 
\end_layout

\begin_layout Plain Layout

\family typewriter
Dealer 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

13 
\end_layout

\begin_layout Plain Layout

\family typewriter
Designer 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

14 
\end_layout

\begin_layout Plain Layout

\family typewriter
Empathizer 
\begin_inset space ~
\end_inset

14 
\end_layout

\begin_layout Plain Layout

\family typewriter
Maker 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

12 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Take note that the roles and numbers shown above is just an example.
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
role_statistics
\family default
.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot of the output of the following: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
role_statistics(cid_student_lst)
\family default

\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
form_random_group(cid_student_lst)
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and returns a list consists of 5 student names.
 This list of students forms a group and must consist of one coder, one
 maker, one dealer, one empathizer and one designer.
 The student picked for each role must be random.
 If there is not sufficient roles or students to form a group, return an
 empty list.
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> form_random_group(cid_student_lst) 
\end_layout

\begin_layout Plain Layout

\family typewriter
['Fredricka Gormley', 'Jalisa Stoudemire', 'Laverna Halpern', 'Chadwick
 Griffin', 'Abdul Boland'] 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Fredricka Gormley is a coder 
\end_layout

\begin_layout Plain Layout

\family typewriter
Jalisa Stoudemire is a dealer
\end_layout

\begin_layout Plain Layout

\family typewriter
Laverna Halpern is a designer 
\end_layout

\begin_layout Plain Layout

\family typewriter
Chadwick Griffin is an empathizer 
\end_layout

\begin_layout Plain Layout

\family typewriter
Abdul Boland is a maker
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
form_random_group
\family default
.
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Screenshot of the output of the following: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
for i in range(3): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print(form_random_group(cid_student_lst))
\family default
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.5 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
remove_students
\family default
 which takes 
\family typewriter
cid_student_lst
\family default
 and 
\family typewriter
one_cid_group
\family default
 as inputs where 
\family typewriter
cid_studnet_lst
\family default
 is the list obtained from 
\series bold
task 1.1
\series default
 and 
\family typewriter
one_cid_group
\family default
 is the list of 5 student names obtained from task 1.4.
 The function removes 5 records in 
\family typewriter
cid_student_lst
\family default
 specified by the student names in 
\family typewriter
one_cid_group
\family default
 and returns the removed records in a list.
 For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> cid_student_lst = read_data("student_cid.txt")
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> one_cid_group = form_random_group(cid_student_lst) 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> one_cid_group ['Rufus Schuck', 'Kathlene Collar', 'Luanne Lett', 'Phyliss
 Rolen', 'Tobias Kimmer'] 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> remove_students(cid_student_lst, one_cid_group) [['Rufus Schuck', 'Coder',
 'F'], ['Kathlene Collar', 'Empathizer', 'M'], ['Luanne Lett', 'Dealer',
 'F'], ['Phyliss Rolen', 'Maker', 'M'], ['Tobias Kimmer', 'Designer', 'F']
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> len(cid_student_lst) 
\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After 
\family typewriter
remove_students(cid_student_lst, one_cid_group)
\family default
 is executed 
\family typewriter
cid_student_lst
\family default
 should not contain any records with students name 
\family typewriter
Fredricka Gormley
\family default
, 
\family typewriter
Jalisa Stoudemire
\family default
, 
\family typewriter
Laverna Halpern
\family default
, 
\family typewriter
Chadwick Griffin
\family default
 and 
\family typewriter
Abdul Boland
\family default
.
 Since the 5 names are removed.
 
\family typewriter
cid_student_lst
\family default
 should now have 45 records.
 
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Program code of function 
\family typewriter
remove_students
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def test_15(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print("------Task 1.5------") 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

cid_student_lst = read_data("student_cid.txt") 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

one_cid_group = form_random_group(cid_student_lst) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

removed_records = remove_students(cid_student_lst, one_cid_group) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print("removed records") 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for removed_record in removed_records: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

print(removed_record) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print("remaining records") 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for cid_student in cid_student_lst: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

print(cid_student) 
\end_layout

\begin_layout Plain Layout

\family typewriter
test_15()
\family default
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.6 
\end_layout

\begin_layout Standard
Using your solutions in task 1.1, 1.4 and 1.5, write a procedure 
\family typewriter
form_max_cid_group
\family default
 which takes a list 
\family typewriter
cid_student_lst
\family default
 as input and write to a file named “
\family typewriter
result.txt
\family default
” the suggested maximum number of CID3 groups that can be formed from 
\family typewriter
cid_student_lst
\family default
.
 The content in "
\family typewriter
result.txt
\family default
" should also include the group number and its group members.
 For example, the content of "
\family typewriter
result.txt
\family default
" can be: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Group 0
\end_layout

\begin_layout Plain Layout

\family typewriter
Rufus Schuck Coder F
\end_layout

\begin_layout Plain Layout

\family typewriter
Lashawna Meals Dealer M
\end_layout

\begin_layout Plain Layout

\family typewriter
Phyliss Rolen Maker M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Laverna Halpern Designer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Apryl Soileau Empathizer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Claudette Bode Maker F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Angle Linck Coder F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Grazyna Kitzman Designer M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Virgilio Britt Dealer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Dannette Raasch Empathizer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Carolann Kintner Designer M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Ola Markell Empathizer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Jaye Galle Maker F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Lanita Sciortino Coder M
\end_layout

\begin_layout Plain Layout

\family typewriter
Joella Wessner Dealer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group 3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Hertha Dossantos Dealer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Chadwick Griffin Empathizer M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Fredricka Gormley Coder F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Marcella Daigneault Designer F
\end_layout

\begin_layout Plain Layout

\family typewriter
Farah Quon Maker F
\end_layout

\begin_layout Plain Layout

\family typewriter
Group 4 
\end_layout

\begin_layout Plain Layout

\family typewriter
Hillary Curl Coder M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Elvia Dubrey Designer F
\end_layout

\begin_layout Plain Layout

\family typewriter
Terrence Shannon Empathizer M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Luanne Lett Dealer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
See Borne Maker F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group 5 
\end_layout

\begin_layout Plain Layout

\family typewriter
Toney Mcnab Coder M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Jalisa Stoudemire Dealer M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Abdul Boland Maker M 
\end_layout

\begin_layout Plain Layout

\family typewriter
Russell Gillison Designer F 
\end_layout

\begin_layout Plain Layout

\family typewriter
Reiko Stack Empathizer F
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Program code of procedure 
\family typewriter
form_max_cid_group
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Screenshot of the content of "
\family typewriter
result.txt
\family default
".
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
EAN-13 
\end_layout

\begin_deeper
\begin_layout Standard
EAN-13 (European Article Number) barcode a standard describing a barcode
 symbology and numbering system used in global trade to identify a specific
 retail product type, in a specific packaging configuration, from a specific
 manufacturer.
 
\end_layout

\begin_layout Standard
EAN check digits are calculated by summing each of the odd position numbers
 multiplied by 3 and then by adding the sum of the even position numbers.
 
\end_layout

\begin_layout Standard
Numbers are examined going from right to left, so the first odd position
 is the last digit in the code.
 The final digit of the result is subtracted from 10 to calculate the check
 digit.
 
\end_layout

\begin_layout Standard
For example, 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
EAN(first 12 digits) = 
\series bold
4
\series default
0
\series bold
0
\series default
6
\series bold
3
\series default
8
\series bold
1
\series default
3
\series bold
3
\series default
3
\series bold
9
\series default
3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Even digits 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 4 + 0 + 3 + 1 + 3 + 9 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 20 
\end_layout

\begin_layout Plain Layout

\family typewriter
Odd digits x 3 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= (0 + 6 + 8 + 3 + 3 + 3) x 3 = 69 
\end_layout

\begin_layout Plain Layout

\family typewriter
Total 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 20 + 69 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 89 
\end_layout

\begin_layout Plain Layout

\family typewriter
Check digit 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 10 – 9 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

= 1 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore, the valid EAN number is 
\family typewriter
4006381333931
\family default
.
 
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Implement the 
\series bold
\emph on
iterative
\series default
\emph default
 function 
\family typewriter
EAN
\family default
 that takes in a string 
\family typewriter
ean12
\family default
 which is the first 12 characters of a valid EAN number and returns the
 full valid EAN with the check digit in string.
 
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> EAN("400638133393") 
\end_layout

\begin_layout Plain Layout

\family typewriter
"4006381333931" 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> EAN("590123412345")
\end_layout

\begin_layout Plain Layout

\family typewriter
"5901234123457" 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
EAN
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
print(EAN("400638133393"))
\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN("590123412345")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN("950110153000")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN("007567816412")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN("123456789123")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(EAN("563643712973")) 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
EAN_rec
\family default
 which is the recursive version of task 2.1.
 
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
EAN_rec
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
generate_n_random_EAN(n)
\family default
 that takes an integer 
\family typewriter
n
\family default
 as input and return a list that contains n random valid EAN numbers in
 string.
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> generate_n_random_EAN(5)
\end_layout

\begin_layout Plain Layout

\family typewriter
['9399783016850', '7126497037138', '7859230985143', '4663965860605', '0075678464
126']
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
generate_n_random_EAN
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Standard

\family typewriter
print(generate_n_random_EAN(5))
\family default
 
\end_layout

\begin_layout Subsection*
Task 2.4
\end_layout

\begin_layout Standard
Implement the function 
\family typewriter
quick_sort_10_EAN()
\family default
 that performs quicksort on 10 randomly generated valid EANs and returns
 the sorted list of EANs in string.
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> quick_sort_10_EAN() 
\end_layout

\begin_layout Plain Layout

\family typewriter
['0777557883249', '1830930669218', '1932904647625', '3257925382651', '6272017045
297', '6715598129708', '7248472619815', '7660010013945', '9810395262430',
 '9870932286909'] 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 17 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
quick_sort_10_EAN
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 18
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Standard

\family typewriter
print(quick_sort_10_EAN())
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Minimum Heap 
\end_layout

\begin_deeper
\begin_layout Standard
A minimal heap is a binary tree that always maintains the smallest data
 item at its root node.
 In this question, the 
\family typewriter
class minHeap
\family default
 is implemented using a 1D array with each child node index calculated using
 the following formula.
 
\end_layout

\begin_layout Standard

\family typewriter
left_child_ptr = node_ptr x 2 + 1
\end_layout

\begin_layout Standard

\family typewriter
right_child_ptr = node_ptr x 2 + 2 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
class minHeap attributes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
count (INTEGER)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It stores the number of data item currently in 
\family typewriter
minHeap
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
size (INTEGER)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It stores the maximum number of data item 
\family typewriter
minHeap
\family default
 can take.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
tree (ARRAY OF INTEGER)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
It is a 1D array that stores the data items as nodes in 
\family typewriter
minHeap
\family default
.
 If a data item doesn’t exist, it is represented by -1.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
The pseudo-code of the class procedure 
\family typewriter
add(newItem)
\family default
 is given in file “
\family typewriter
task31.txt
\family default
”.
\end_layout

\begin_layout Standard
Use it to implement the class procedure 
\family typewriter
add
\family default
.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
PROCEDURE add(newItem) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF minHeap is not full THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

tree[count] <- newItem
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

curr_ptr <- count 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

parent_ptr <- QUOTIENT((curr_ptr - 1) DIV 2)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

SWAP (tree[parent_ptr], tree[curr_ptr]) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

curr_ptr <- parent_ptr 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

parent_ptr <- QUOTIENT((curr_ptr - 1) DIV 2)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

UNTIL curr_ptr EQUAL TO 0 OR tree[parent_ptr]<= newItem
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

INCREMENT count BY 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

OUTPUT "Heap is full.
 Cannot add." 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

END IF 
\end_layout

\begin_layout Plain Layout

\family typewriter
END PROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 19 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
add
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The class function 
\family typewriter
remove_minimum
\family default
 is implemented for you in file “
\family typewriter
T3.py
\family default
”.
 This function removes the data item at the root node of the minimum heap
 and returns the data item.
 Your task is to implement the class function 
\family typewriter
sort
\family default
 which returns a list consists of all the data items stored in the minimum
 heap in increasing order.
 Take note that after 
\family typewriter
sort
\family default
 is executed, the minimum heap becomes empty.
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def test(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

test_value = [58, 36, 3, 9, 87]
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

h1 = minHeap(5) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for value in test_value: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

h1.add(value) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print(h1.sort())
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> test () 
\end_layout

\begin_layout Plain Layout

\family typewriter
[3, 9, 36, 58, 87] 
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Evidence 20
\end_layout

\begin_layout Standard
Program code for the class function 
\family typewriter
sort
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 21
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def test_32(n): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

test_value = random.sample(range(1,100), n)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

h1 = minHeap(n)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for value in test_value:
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

h1.add(value)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print(h1.sort())
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
print("task 3.2") 
\end_layout

\begin_layout Plain Layout

\family typewriter
print("1st run") 
\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15)
\end_layout

\begin_layout Plain Layout

\family typewriter
print("2nd run")
\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print("3rd run")
\end_layout

\begin_layout Plain Layout

\family typewriter
test_32(15) 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Implement the class procedure 
\family typewriter
display_all_paths
\family default
 which displays all paths from the root of minimum heap to all its leaves.
 
\emph on
Hint: The minimum heap in this question is implemented using a complete
 binary tree.
 This means that the 
\family typewriter
\emph default
tree
\family default
\emph on
 array indices from 
\family typewriter
\emph default
0
\family default
\emph on
 to 
\family typewriter
\emph default
count-1
\family default
\emph on
 contain all the data items of the minimum heap
\emph default
.
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def test_33(n):
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

test_value = random.sample(range(1,100), n) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

h1 = minHeap(n)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for value in test_value: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

h1.add(value) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

h1.
 display_all_paths() 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> test_33(10) 
\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 21 40 
\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 21 29 
\end_layout

\begin_layout Plain Layout

\family typewriter
5 16 34 94 
\end_layout

\begin_layout Plain Layout

\family typewriter
5 49 96 
\end_layout

\begin_layout Plain Layout

\family typewriter
5 49 69 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Program code for 
\family typewriter
display_all_paths
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 23 
\end_layout

\begin_layout Standard
Screenshot of the output of the following code: 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
print("task 3.3") 
\end_layout

\begin_layout Plain Layout

\family typewriter
print("1st run") 
\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(5)
\end_layout

\begin_layout Plain Layout

\family typewriter
print("2nd run")
\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(10)
\end_layout

\begin_layout Plain Layout

\family typewriter
print("3rd run")
\end_layout

\begin_layout Plain Layout

\family typewriter
test_33(15) 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Begemed 
\end_layout

\begin_deeper
\begin_layout Standard
Begemed is a casual game which is played on ruled grids.
 The player is required to swap a gem in one of the four possible directions,
 namely “up”, “down”, “left”, “right”; after the swap, if a row or a column
 of 3 or more gems are formed, it’s considered a valid move and the connected
 gems will be destroyed.
 Otherwise, it’s considered an invalid move.
 Note that diagonal directions are not counted.
 
\end_layout

\begin_layout Standard
Below are some examples of the game demonstrated in a 
\begin_inset Formula $5\times5$
\end_inset

 grid.
 The letters "d", "s", "t", "r", "e" represents Diamond, Sapphire, Topaz,
 Ruby, Emerald respectively.
 
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
Some other valid swaps are: 
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
You are tasked to create a text-based interactive “Begemed” game in the
 following tasks.
 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Implement 
\family typewriter
Begemed
\family default
 class according to the UML class diagram and attributes/methods specifications
 given.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Board
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
- board: list 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
+ Board(size: int)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
+ new_game(board: list) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
+ check_connection(row: int, col: int): boolean 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
+ find_valid_moves(row: int, col: int): list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
+ display(hint: boolean=False)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
Attribute
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
Specification
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
board: list
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
board
\family default
 is a 2-dimensional 
\family typewriter
list
\family default
 hosting the gems inside each grid.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Methods and its specification.
\end_layout

\begin_layout Itemize

\family typewriter
Board(n: int) : n
\family default
 is the size used to define the dimension of the 
\family typewriter
board
\family default
.
 The board should be initialized to a (
\begin_inset Formula $n\times n$
\end_inset

) 2- dimensional list filled with string “_”.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Itemize

\family typewriter
new_game(new_board : list): new_game
\family default
 takes in a 
\family typewriter
list
\family default
 named 
\family typewriter
new_board
\family default
 and assign it to the class attribute 
\family typewriter
board
\family default
.
 The following list is provided in the python template file.
 
\end_layout

\begin_deeper
\begin_layout Standard
t
\family typewriter
est_board = [ ['r', 'r', 'd', 'e', 'd'], ['s', 'd', 'r', 'd', 't'], ['d',
 'd', 'r', 's', 'd'], ['e', 'r', 't', 'r', 'r'], ['t', 'e', 'e', 's', 'd']]
 
\end_layout

\begin_layout Standard

\emph on
This method is just a temporary solution which help you in initial coding
 and debugging.
 In a later task, there will be further instructions to update its implementatio
n.

\emph default
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
check_connection( row: int, col: int): boolean : check_connection
\family default
 takes in the 
\family typewriter
row
\family default
 and 
\family typewriter
col
\family default
 value of a particular gem, then check if there is a connection of 3 or
 more gems of the same type in its horizontal or vertical direction.
 Return 
\family typewriter
True
\family default
 if such a connection is found, and 
\family typewriter
False
\family default
 otherwise.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsection*
Evidence 24 
\end_layout

\begin_layout Standard
Program code of class Board and class methods up to 
\family typewriter
check_conection
\family default
.
 [11] 
\end_layout

\begin_layout Standard
Methods and its specification.
\end_layout

\begin_layout Itemize

\family typewriter
find_valid_moves( row: int, col: int): list
\family default
 : 
\family typewriter
find_valid_moves
\family default
 takes in the 
\family typewriter
row
\family default
 and 
\family typewriter
col
\family default
 value of a particular gem, then attempt to swap in the four directions
 (up, down, left, right).
 If there is a new connection of 3 or more gems of the same type formed,
 record as a valid movement.
 
\end_layout

\begin_deeper
\begin_layout Standard
Return a 
\family typewriter
list
\family default
 containing all valid movements.
 An empty 
\family typewriter
list
\family default
 is to be returned if no valid movement is found.
 
\end_layout

\begin_layout Standard
For example:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | r | t | r | r | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\family typewriter
find_valid_moves(0, 2)
\family default
 is called, the function should return 
\family typewriter
['d', 'l']
\family default
 because when down swap or left swap is performed on gem at 
\family typewriter
(0, 2)
\family default
, a new connection of 3 or more gems of the same type will be formed.
 [5]
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
display(hint: Boolean=False)
\family default
 : 
\family typewriter
display
\family default
 will print out the 
\family typewriter
board
\family default
 according to the sample format given.
 Take note that the 
\family typewriter
size
\family default
 of the board can be changed and hence the grid outline should be dynamically
 adjusted according to its 
\family typewriter
size
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | r | t | r | r |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
hint
\family default
 is an optional argument with a default value of 
\family typewriter
False
\family default
.
 If 
\family typewriter
hint
\family default
 is set to be 
\family typewriter
True
\family default
, the gems with valid moves should be highlighted by using the 
\series bold
uppercase
\series default
 letters, and the valid moves for the 
\series bold
coordinates
\series default
 and 
\series bold
directions
\series default
 should be displayed too.
 
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
(0, 1) ['r']
\end_layout

\begin_layout Plain Layout

\family typewriter
(0, 2) ['d', 'l']
\end_layout

\begin_layout Plain Layout

\family typewriter
(1, 2) ['u'] 
\end_layout

\begin_layout Plain Layout

\family typewriter
(1, 3) ['u', 'r']
\end_layout

\begin_layout Plain Layout

\family typewriter
(2, 2) ['d'] 
\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 0) ['d'] 
\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 1) ['r']
\end_layout

\begin_layout Plain Layout

\family typewriter
(3, 3) ['l'] 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | 
\series bold
\bar under
R
\series default
\bar default
 | 
\series bold
\bar under
D
\series default
\bar default
 | e | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | 
\series bold
\bar under
R
\series default
\bar default
 | 
\series bold
\bar under
D
\series default
\bar default
 | t |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | 
\series bold
\bar under
R
\series default
\bar default
 | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | 
\series bold
\bar under
E
\series default
\bar default
 | 
\series bold
\bar under
R
\series default
\bar default
 | t | 
\series bold
\bar under
R
\series default
\bar default
 | r |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Evidence 25 
\end_layout

\begin_layout Standard
Program code of class method 
\family typewriter
find_valid_moves
\family default
 and 
\family typewriter
display
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[14]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a texted based menu which has the following options.
 Validation of the user input is needed.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Choose an option below: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Validate Move 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Toggle Hint Mode
\end_layout

\begin_layout Plain Layout

\family typewriter
3) Move the Gem!
\end_layout

\begin_layout Plain Layout

\family typewriter
4) New Game
\end_layout

\begin_layout Plain Layout

\family typewriter
5) Exit 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The descriptions for the options can be found below.
 
\end_layout

\begin_layout Standard
Options and its descriptions.
\end_layout

\begin_layout Itemize

\family typewriter
Validate Move
\family default
 : Ask user to input a set of 
\family typewriter
row
\family default
, 
\family typewriter
col
\family default
 and 
\family typewriter
direction
\family default
.
 Check and feedback if this swap is valid.
 
\end_layout

\begin_layout Itemize

\family typewriter
Toggle Hint Mode
\family default
 : For every new game, the 
\family typewriter
hint
\family default
 mode by default should be 
\family typewriter
off
\family default
.
 Use this option to toggle the 
\family typewriter
on
\family default
 and 
\family typewriter
off
\family default
 state of hint mode.
\end_layout

\begin_deeper
\begin_layout Standard
If 
\family typewriter
hint
\family default
 mode is 
\family typewriter
on
\family default
, the menu interface should automatically highlight the gems with valid
 moves and print out a list of the coordinates together with its valid movement
 directions.
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Move the Gem! :
\family default
 Move a gem in a chosen direction.
 
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
Note that the related class method will only be implemented in the 
\series bold
next task
\series default
.
 For the current menu, you only need to take in user input for 
\family typewriter
\emph default
row
\family default
\emph on
, 
\family typewriter
\emph default
col
\family default
\emph on
 and 
\family typewriter
\emph default
direction
\family default
\emph on
, but no further action needs to be taken.
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
New Game
\family default
 : Start a new game and reset 
\family typewriter
hint
\family default
 mode to be off.
 
\end_layout

\begin_deeper
\begin_layout Standard
For this task, you may just initialize the new game using the 
\family typewriter
test_board
\family default
 given.
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Exit
\family default
 : Exit program.
 
\end_layout

\begin_layout Subsection*
Evidence 26
\end_layout

\begin_layout Standard
Program code of menu implementation.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Update the class Begemed with the following methods.
 Note that this task is time consuming and only worth 
\series bold
2 marks
\series default
.
 
\end_layout

\begin_layout Standard
Methods and its specification.
\end_layout

\begin_layout Itemize

\family typewriter
new_game(n: int)
\family default
 : 
\family typewriter
new_game
\family default
 will now take in a size of 
\family typewriter
n
\family default
 and randomly generate a 
\family typewriter

\begin_inset Formula $\mathtt{n}\times\mathtt{n}$
\end_inset


\family default
 board of gems.
 The newly generated gems should not have any connection of 3 or more gems
 with the same type.
 
\end_layout

\begin_layout Itemize

\family typewriter
move_gem(row: int, col: int, direction: string)
\family default
 
\family typewriter
move_gem
\family default
 should take in a gem position and direction.
 If the swap is a valid move, detect any newly formed connection of 3 or
 more gems with the same type and cancel them.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | r | d | t |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | r | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | 
\series bold
\bar under
r
\series default
\bar default
 | 
\series bold
\bar under
t
\series default
\bar default
 | r | r |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout
Swap "r" at (3, 1) with "t" at (3, 2)
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | d | e | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | _ | d | t |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | _ | s | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | _ | _ | _ | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+
\end_layout

\begin_layout Plain Layout
Gems connected with 3 or more of the same type are cancelled.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After the gems are being cancelled, those gems on top of the current gems
 should “fall” down.
 
\end_layout

\begin_layout Standard
New gems will be randomly generated to fill up the board.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | _ | _ | _ | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | _ | 
\series bold
\bar under
e
\series default
\bar default
 | 
\series bold
\bar under
d
\series default
\bar default
 |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | _ | 
\series bold
\bar under
d
\series default
\bar default
 | 
\series bold
\bar under
t
\series default
\bar default
 |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | 
\series bold
\bar under
d
\series default
\bar default
 | 
\series bold
\bar under
s
\series default
\bar default
 | 
\series bold
\bar under
d
\series default
\bar default
 |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout
Gems on top of the cancelled gem “falls” down
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

0
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

1
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

3
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
0 | r | r | 
\series bold
\bar under
r
\series default
\bar default
 | 
\series bold
\bar under
s
\series default
\bar default
 | 
\series bold
\bar under
s
\series default
\bar default
 |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1 | s | d | 
\series bold
\bar under
t
\series default
\bar default
 | e | d | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 | d | d | 
\series bold
\bar under
t
\series default
\bar default
 | d | t | 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 | e | t | d | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout

\family typewriter
4 | t | e | e | s | d |
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

+---+---+---+---+---+ 
\end_layout

\begin_layout Plain Layout
New gems are generated 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Check if there are more connections of 3 or more gems of the same type are
 formed, if found repeat the above cancel and refill steps.
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
menu
\family default
 Adjust the menu to accommodate these new changes.
 
\end_layout

\begin_layout Subsection*
Evidence 27 
\end_layout

\begin_layout Standard
Program code of above mentioned changes.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Enumerate
Vending machine
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a data flow diagram for a vending machine system that allows user to
 buy drinks using coins and seller to refill stock.
 
\emph on
Note: You are to decide on the processes to be included in the DFD on your
 own
\emph default
.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Draw a flow chart on the steps in dispensing a drink by the vending machine.
 Your flow chart should include various situations faced by the system e.g.
 not enough cash, drinks chosen out of stock etc.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Enumerate
Driverless car
\end_layout

\begin_deeper
\begin_layout Enumerate
State one ethical and one social issue of using driverless car.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
A simplified decision making on the behavior of a driverless car is as follow.
 
\end_layout

\begin_deeper
\begin_layout Itemize
When a pedestrian is sensed 10m ahead, the driverless car 
\series bold
must
\series default
 apply emergency break if its current speed is more than 20 km/hr.
 Otherwise, it should slow down gently.
\end_layout

\begin_layout Itemize
In other situations, when red light is sensed 20m ahead, the driverless
 car should slow down gently regardless of its speed.
 
\end_layout

\begin_layout Standard
Draw a reduced decision table for the scenario above.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A project manager uses the PERT chart to manage a software project.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Activity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Duration (week)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Specification
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Installation of datastore servers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Development
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit Testing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
System testing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Conversion of existing data files to new format
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UAT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Explain the significance of the dotted line.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Draw a Gantt chart based on the above information.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
State the impact on the project if activity F duration is cut by 3 weeks.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
State the purpose of the project proposal.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State 2 important topics in the project proposal.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A user-defined linked list has the following operations.
\end_layout

\begin_deeper
\begin_layout Standard
Operations and its descriptions 
\end_layout

\begin_layout Itemize

\family typewriter
create()
\family default
 : This function creates an empty linked list.
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard

\family typewriter
lst1 = create()
\end_layout

\begin_layout Standard
A linked list is created and referenced by 
\family typewriter
lst1
\family default
.
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
insert(llst,data)
\family default
 : This procedure always adds 
\family typewriter
data
\family default
 as a node at the head of the linked list
\end_layout

\begin_deeper
\begin_layout Standard
For example
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B'->'C'->'D'->'E'
\end_layout

\begin_layout Plain Layout

\family typewriter
insert(lst1, 'Z')
\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'Z'->'A'->'B'->'C'->'D'->'E'
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
split(llst,pos) The function breaks the linked list at position 
\family typewriter
pos
\family default
 and returns the cut half as a new linked list.
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B'->'C'->'D'->'E'
\end_layout

\begin_layout Plain Layout

\family typewriter
lst2 = split(lst1, 2)
\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'A'->'B' 
\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: 'C'->'D'->'E'
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
join(llst1,llist2) This function joins 2 linked lists as one.
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
lst1: 'C'->'B' 
\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: 'A'->'D'->'E
\end_layout

\begin_layout Plain Layout

\family typewriter
join(lst1, lst2)
\end_layout

\begin_layout Plain Layout

\family typewriter
lst1: 'C'->'B'->'A'->'D'->'E' 
\end_layout

\begin_layout Plain Layout

\family typewriter
lst2: Empty
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Using the provided operations of the linked list, write, in pseudo-code
 an algorithm that could be used to implement the 
\family typewriter
swap
\family default
 operation.
 
\emph on
Hint: you don’t have to use all the operations provided
\emph default
.
\end_layout

\begin_layout Standard
Operations and its description 
\end_layout

\begin_layout Itemize

\family typewriter
swap(llst,pos)
\family default
 : This procedure swaps the data at positions 
\family typewriter
pos
\family default
 and 
\family typewriter
pos + 1
\end_layout

\begin_deeper
\begin_layout Standard
For example: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
lst1:'A'->'B'->'C'->'D'->'E' 
\end_layout

\begin_layout Plain Layout

\family typewriter
swap(lst1,3)
\end_layout

\begin_layout Plain Layout

\family typewriter
lst1:'A'->'B'->'D'->'C'->'E'
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
You can assume that the operations executed are always valid.
 For example, if there is no 5th node, 
\family typewriter
swap(lst1,4)
\family default
 will not be called.
 [5]
\end_layout

\end_deeper
\begin_layout Enumerate
Computer Network
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how the switch forwards data packet to destinated device.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State the function of a router.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Explain with an example what a client server network is.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Describe the differences between PaaS and IaaS.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State 2 data verification methods.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Explain what packet switching is.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State the connection mode that the walkie-talkie (push to talk) is working
 on.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State the difference between synchronous and asynchronous data transmission.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State and explain a method to protect data in transit.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State and explain a method to protect data at rest.
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A sort procedure is implemented in Python is follow.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def sort(sort_lst, unsort_lst):
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if len(unsort_lst) > 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

item = unsort_lst[0] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i = 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

while i < len(sort_lst) and item < sort_lst[i]: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i += 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return sort(sort_lst[:i]+[item,]+sort_lst[i:], unsort_lst[1:])
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

else:
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return sort_lst
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the name of the above sorting algorithm.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
The below statement is executed.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
>>> sort([], [9,1,8,2,3,7,5])
\end_layout

\begin_layout Standard
Using the table below, trace the items in 
\family typewriter
sort_lst
\family default
 and 
\family typewriter
unsort_lst
\family default
 in each recursive call.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
#
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
sort_lst
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
unsort_lst
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[9,1,8,2,3,7,5]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
State the time complexity of the sort procedure above.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Standard
  A sleepy teacher implemented an inefficient binary search function as
 follow.
 The function is supposed to return True if target is found in the list
 inc_sort_lst and False otherwise.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 def binSearch(target, inc_sort_lst):
\end_layout

\begin_layout Plain Layout

\family typewriter
02 if len(inc_sort_lst) == 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

return False
\end_layout

\begin_layout Plain Layout

\family typewriter
04 if len(inc_sort_lst) == 1: 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset

return True 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 n = len(inc_sort_lst)
\end_layout

\begin_layout Plain Layout

\family typewriter
07 first_half = inc_sort_lst[:n//2] 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 second_half = inc_sort_lst[n//2:] 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 if target > first_half[-1]: 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}
\end_inset

return binSearch(target, second_half) 
\end_layout

\begin_layout Plain Layout

\family typewriter
11 else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}
\end_inset

return binSearch(target, first_half)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Explain the bug in his code with examples.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 Explain how you can correct the bug without changing the code from line
 06 onwards.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 Explain why the binary search performed is inefficient.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
Run length encoding (RLE) is a very simple form of lossless data compression
 which runs on sequences having same value occurring many consecutive times
 and it encodes the sequence to store only a single value and its count.
 For example, “111111000” can be converted to “6130”.
\end_layout

\begin_deeper
\begin_layout Standard
Below is a draft attempt of implementing this algorithm.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE RLECompress(s: STRING): 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}
\end_inset

DECLARE comp_str: STRING 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

DECLARE count, i: INT 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}
\end_inset

comp_str = "" 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset

count, i = 0, 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(s): 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

count = 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(s) - 1 and s[i] == s[i+1]:
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

count += 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i += 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

END WHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

comp_str += count + s[i] 
\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}
\end_inset

END WHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}
\end_inset

RETURN comp_str 
\end_layout

\begin_layout Plain Layout

\family typewriter
19 END PROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The compiler reported an error at line 15.
 Identity the type of error, state its definition and suggest how it can
 be fixed.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
After the above error has been corrected, a successful compilation produces
 executable code.
 However, when the code was executed, it failed to complete.
 Identity another type of error, state its definition and suggest how it
 can be fixed.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
Assuming all errors have been identified and corrected.
\end_layout

\begin_layout Standard
The following steps are taken to encode English alphabets:
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Convert alphabet to hexadecimal ASCII value 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Convert the hexadecimal number to binary number 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 Encode the binary number using RLE algorithm
\end_layout

\begin_layout Standard
For example, the alphabet “A” has a hexadecimal ASCII value of “41”.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 State the definition of ASCII.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 State the encoded RLE string for letter “A”.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 State and explain with example one potential limitation of RLE encoding
 when compressing long binary strings.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The school library currently stores their data in flat files.
 These files contain information about students, books and their loaning
 details.
 
\end_layout

\begin_deeper
\begin_layout Standard
Using examples from the school’s flat files to illustrate your answers.
\end_layout

\begin_layout Enumerate
Explain how data inconsistency could arise.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Explain why data privacy could be a potential concern.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Explain the definition of Primary Key in a relational database.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
A book can be borrowed by any student, and a student can borrow any book.
 Students need to fill up a loaning record form each time he/she wants to
 borrow a book.
 A student is entitled to borrow up to 5 books each time using the same
 loaning record form.
\end_layout

\begin_layout Standard
The decision has been made to create a relational database for the library
 loaning system.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Identify the necessary tables and draw an E-R diagram to show the relationships
 between these tables.
 [4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 For each table specify the attributes (fields) required and state suitable
 primary keys and foreign key relationships.
 State necessary legends if you are using symbols to represent the primary
 and foreign keys.
 [7]
\end_layout

\begin_layout Standard
The following table is generated for students’ reference regarding their
 loaning details.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Student Name:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xiao Ming 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Class: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19J08
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Book Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Author
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Loan Date
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Due Date
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A Brief History of Time
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stephen Hawking
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
05 Aug 2019
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30 Aug 2019
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spider Man Comics
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stan Lee
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
29 Aug 2019
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 Sep 2019
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 To create the report 
\family typewriter
StudentName
\family default
 and 
\family typewriter
StudentClass
\family default
 are used.
 Name other fields that the database uses to produce this report.
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
Beside the database design, you are also in charge of creating an online
 loaning form.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(g)
\end_layout

\end_inset

 Design and draw a webpage layout for the auto loaning interface for the
 new system.
 Identify and briefly explain your design considerations for the various
 features which aid users to input valid data entries.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(h)
\end_layout

\end_inset

 Some students use their handphones to snap photos of tables and charts
 from the books they borrowed and use them for their research projects.
 Explain what potential issues may arise and suggest alternate ways which
 students can adopt.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\begin_layout Enumerate
The school library has in store different kinds of items which students
 can loan out.
 Information about items are stored and recorded, such as 
\family typewriter
title
\family default
, 
\family typewriter
description
\family default
, and 
\family typewriter
damaged
\family default
, which is a Boolean value indicating if the item has any form of physical
 damage.
\end_layout

\begin_deeper
\begin_layout Standard
For books in the library, additional information such as the 
\family typewriter
author
\family default
, 
\family typewriter
publisher
\family default
, 
\family typewriter
ISBN
\family default
 are recorded.
\end_layout

\begin_layout Standard
Digital media resources are also available for students’ reference.
 Information such as 
\family typewriter
storage media
\family default
, 
\family typewriter
file size
\family default
 and
\family typewriter
 playback time
\family default
 are stored.
 
\end_layout

\begin_layout Standard
You are engaged by the school to design an Object-Oriented Programming solution
 to manage these items.
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\family typewriter
Item
\family default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-classes 
\end_layout

\begin_layout Itemize
inheritance
\end_layout

\begin_layout Itemize
the properties required 
\end_layout

\begin_layout Itemize
appropriate methods, including 
\series bold
constructor
\series default
 methods, and at least 
\series bold
one
\series default
 pair of ‘
\series bold
get
\series default
’ and ‘
\series bold
set
\series default
’ methods for one of the properties.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Enumerate
Using the above example, explain the meaning of the term 
\series bold
Polymorphism
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Using the above example, explain the meaning of the term 
\series bold
Encapsulation
\series default
.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
The school also provides a series of past year examination papers for the
 students’ loaning and reference.
 State how this would affect the 
\series bold
class
\series default
, 
\series bold
properties
\series default
 and 
\series bold
methods
\series default
 in the current example.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
