#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A list of data items is stored in a hash table using an array 
\family typewriter
Values
\family default
.
 The following pseudocode describes an algorithm for searching the table
 using the hashing function 
\family typewriter
Hash
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 Index <- Hash(Key) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 WHILE Values[Index] <> Key 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

Index <- Index + 1
\end_layout

\begin_layout Plain Layout

\family typewriter
04 ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 Return Values[Index] 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the situations when "
\family typewriter
Values[Index] <> Key"
\family default
 in line 
\family typewriter
02
\family default
 will be 
\family typewriter
True
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
describe the two problems with this algorithm.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Without writing any program code, describe the modifications required to
 overcome each of the problems stated in (b).
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
An array 
\family typewriter
seq
\family default
 contains a list of sorted data items except the last element.
 
\family typewriter
[1,2,5,8,9,6]
\family default
 is an example of such an array.
 
\end_layout

\begin_deeper
\begin_layout Standard
The function 
\family typewriter
sortInner
\family default
 takes two parameters, the array 
\family typewriter
seq
\family default
 and the index position 
\family typewriter
j
\family default
 of the last element, and returns the mutated array 
\family typewriter
seq
\family default
.
 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def sortInner(seq, j): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if j == 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return seq 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if seq[j] <= seq[j-1]: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

seq[j], seq[j-1] = seq[j-1], seq[j] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

return sortInner(seq, j-1)
\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
State what is meant by a recursive function.
\begin_inset space \hfill{}
\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe what happens when the function 
\family typewriter
sortInner([1,2,5,8,9,6],5)
\family default
 is executed.
 
\begin_inset space \hfill{}
\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Write a recursive function 
\family typewriter
insertionSort
\family default
 for the Insertion Sort algorithm by using the given function 
\family typewriter
sortInner(seq,j
\family default
).
\begin_inset space \hfill{}
\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain whether the Insertion Sort algorithm in 
\series bold
(c)
\series default
 is performing an "in-place" or "non in-place" sorting and whether it is
 stable or unstable.
\begin_inset space \hfill{}
\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
State and explain the efficiencies of the Insertion Sort algorithm in 
\series bold
(c)
\series default
 in the worst case scenario, using the Big-O notation for the time complexity.
 
\begin_inset space \hfill{}
\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A wildlife information application is being developed to store and display
 information about birds.
 The application uses a binary search tree to store the name of the bird.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The binary search tree has its data inserted in the following order.
 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Magpie 
\end_layout

\begin_layout Standard

\family typewriter
Cockatiel 
\end_layout

\begin_layout Standard

\family typewriter
Jay 
\end_layout

\begin_layout Standard

\family typewriter
Pigeon 
\end_layout

\begin_layout Standard

\family typewriter
Mynah 
\end_layout

\begin_layout Standard

\family typewriter
Crow 
\end_layout

\begin_layout Standard

\family typewriter
Albatross 
\end_layout

\begin_layout Standard

\family typewriter
Quail 
\end_layout

\begin_layout Standard
Draw the binary search tree.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
The binary search tree in part 
\series bold
(a)
\series default
 can be implemented using object-oriented programming that involves the
 use of two pointers and an array.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the purpose of the two pointers in the implementation of the binary
 search tree class.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Describe the purpose of the array in the implementation of the binary search
 tree class.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
List the nodes, in order, that are visited for an in-order traversal.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
State the property exhibited by the list of items produced in part (c)(i).
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Describe an algorithm, using pseudocode, which uses a stack to perform an
 in- order traversal for the tree 
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
HoLi Tea
\emph default
 is a popular chain selling a wide variety of bubble tea.
 Each drink is categorised by the flavor (e.g.
 brown sugar, peppermint, lemon …), the type of tea leaves used (e.g.
 green tea, red tea, black tea …), the pearl options (e.g.
 black pearl, white pearl, or no pearl) and the price.
 
\end_layout

\begin_deeper
\begin_layout Standard
There are two variants of bubble tea: Milk Tea and Fruit Tea.
 Each milk tea has a specific type of milk used (e.g.
 fresh milk, condensed milk) and some milk tea come with pudding.
 Some fruit tea include cultured milk.
 
\end_layout

\begin_layout Standard
The owner of HoLi Tea intends to use object-oriented programming language
 to store and process the information on the types of drink in the self-ordering
 web application system.
 
\end_layout

\begin_layout Standard
The base class 
\family typewriter
BUBBLE_TEA
\family default
 has a method to display the properties of the bubble tea.
 
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a UML class diagram showing:
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_deeper
\begin_layout Itemize
any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
the properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
suitable methods to support the system with at least one getter and one
 setter method
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Explain why polymorphism is useful in object-oriented programming.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard

\emph on
HoLi Tea
\emph default
 has a loyalty programme to reward their regular customers.
 Members are entitled to a 20% discount for their purchases and a free drink
 on their birthday.
 To pay tribute to the frontline workers during the COVID-19 pandemic, all
 frontline workers are entitled to a 20% discount for their purchases, and
 those who are also members will receive a free drink on any day.
 
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
YI restaurant serves a variety of local dishes at reasonable prices and
 plans to provide food delivery services to its customers via a web application.
 A customer places an online order and an employee will be assigned by the
 system to deliver the order to the customer.
 The customer can choose to pay online when ordering or make cash payment
 upon delivery.
 Customers can choose more than one dish in the same online order and each
 order has a unique ID.
 
\end_layout

\begin_deeper
\begin_layout Standard
At the time of ordering, the application records the following data: 
\end_layout

\begin_layout Itemize
Customer name, delivery address and email, if the customer has not placed
 an online order before 
\end_layout

\begin_layout Itemize
Customer ID 
\end_layout

\begin_layout Itemize
Order date 
\end_layout

\begin_layout Itemize
Order time 
\end_layout

\begin_layout Itemize
Payment mode 
\end_layout

\begin_layout Itemize
Dish and quantity 
\end_layout

\begin_layout Standard
The following shows an example of the order receipt which will be sent to
 the customer’s email address.
 
\end_layout

\begin_layout Standard
The restaurant assigns a unique ID to each employee and maintains its employees’
 information, such as their name, contact number and bank account number.
 The restaurant keeps a record of the employees’ delivery assignments, the
 date and time when the order is successfully delivered to the customer.
 
\end_layout

\begin_layout Enumerate
The company wants to model this application using a relational database.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the customers’ food
 order: 
\family typewriter
CUSTOMER
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
FOOD
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the
 relationships between them.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the employees’ delivery
 assignment: 
\family typewriter
EMPLOYEE
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
ASSIGNMENT
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the
 relationships between them.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
Draw the overall Entity-Relationship (E-R) diagram showing the five tables
 and the relationships between them.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A table description can be expressed as: 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\bar under
Attribute1
\bar default
, Attribute2*, Attribute3,...)
\family default
 
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
 
\end_layout

\begin_layout Standard
Foreign keys are indicated using an asterisk or dashed underline.
 
\end_layout

\begin_layout Standard
Write table descriptions for the five tables.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a method to protect data from loss or corruption.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Explain how Singapore’s Personal Data Protection Act (PDPA) protects the
 personal data of the customers and employees stored in the database.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe the impact of such food delivery applications on the society and
 economy.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
With an increase in demand for food delivery, the restaurant wishes to enhance
 the food delivery services to cater to the larger volume of orders and
 to include more features in the application such as real time location
 tracking of the food order and customers’ review of the dishes, yet ensuring
 that the application maintains fast performance.
 The restaurant is now considering using a NoSQL DBMS instead of a relational
 database.
 
\end_layout

\begin_deeper
\begin_layout Standard
State and explain 
\series bold
two
\series default
 reasons why NoSQL DBMS may be more suitable for the proposed scenario.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A Web Developer is designing an online Sales portal for a company.
 The customer needs to submit an online form to register before ordering
 through the portal.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Enumerate
Explain the difference between data validation and data verification.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe two validation checks that the above form should perform for the
 customer's inputs.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Describe, with a specific example, how the customer's inputs are being verified.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
The web developer intends to use CAPTCHA for the above form 
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Enumerate
Explain what this added feature helps to verify.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe the required server scripting to process the customer's input on
 his email address and password.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Describe the differences between a web application and a native application.
 Explain how the developer should decide between designing a web or a native
 application.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\end_deeper
\begin_layout Enumerate
The College’s local area network (LAN) is connected to the MOE Headquarter’s
 LAN over the internet.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
A staff in the college, Alan, sends an email to Charles who works in the
 MOE Headquarter.
\end_layout

\begin_layout Enumerate
The following questions should take reference from the above network diagram.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the function of the Domain Name System (DNS) server.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Explain how the router identifies that the MOE's Mail server is residing
 in another network.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Describe in detail how Alan's email is delivered and kept in the MOE's Mail
 server.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Describe how Charles eventually receive Alan’s email.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
Charles forwards Alan’s email to his colleague, David.
 Describe how David could receive the email even when he is away from the
 office.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
 
\end_layout

\end_body
\end_document
