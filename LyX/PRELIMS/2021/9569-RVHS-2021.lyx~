#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q1] 
\end_layout

\begin_deeper
\begin_layout Standard
Draw a reduced decision table based on the following conditions regarding
 how John should go to school.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Itemize
If it is a Monday, John always takes his dad’s car to school if he does
 not oversleep.
 
\end_layout

\begin_layout Itemize
If John oversleeps, he always takes Taxi to school.
 
\end_layout

\begin_layout Itemize
Otherwise, if it is a rainy day, John takes Taxi to school.
 If not, by MRT.
 
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q2] 
\end_layout

\begin_deeper
\begin_layout Standard
The recursive function below helps to check if a password string 
\family typewriter
pw
\family default
 satisfies certain requirements.
 The meaning of the function parameters 
\family typewriter
pw
\family default
, 
\family typewriter
digit
\family default
s, 
\family typewriter
upper_l
\family default
, 
\family typewriter
lower_l
\family default
 and 
\family typewriter
length
\family default
 are password string, minimum number of digits, minimum number of uppercase
 letters, minimum number of lowercase letters and minimum length of the
 password respectively.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def check_pw(pw, digits, upper_l, lower_l, length): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if len(pw) == 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

char = pw[0] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if char.isdigit(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw[1:], digits-1, upper_l, lower_l, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

elif char.isalpha(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if char.isupper():
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw[1:], digits, upper_l-1, lower_l, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw[1:], digits, upper_l, lower_l-1, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return False 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the values of all arguments in each recursive function call when the
 following code is executed.
 Then, state the value that the function returns.
 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
>>> check_pw("SP500", 3, 1, 1, 5)
\family default
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
The function in 
\series bold
2a)
\series default
 is rewritten in such a way that string slicing on the password string pw
 is removed.
 A new function parameter 
\family typewriter
i
\family default
 is added to help the recursive function to keep track of the position in
 
\family typewriter
pw
\family default
 in which it is currently checking.
 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def check_pw(pw, i, digits, upper_l, lower_l, length): 
\end_layout

\begin_layout Plain Layout

\family typewriter
if
\series bold
 
\bar under
A
\series default
\bar default
: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\series bold
\bar under
B
\series default
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if char.isdigit(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw, C, digits-1, upper_l, lower_l, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

elif char.isalpha(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if char.isupper(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw, C, digits, upper_l-1, lower_l, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return check_pw(pw, C, digits, upper_l, lower_l-1, length-1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return False 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
State the code in 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Describe clearly or write in Python the modification needed for the function
 
\family typewriter
check_pw()
\family default
 to also display a suggestion of a new password if the password requirements
 are not met.
 For example, if 
\family typewriter
pw
\family default
 does not have enough digits, it will append digits to 
\family typewriter
pw
\family default
 so that it can satisfy the requirement.
 
\end_layout

\begin_deeper
\begin_layout Standard
For example, 
\end_layout

\begin_layout Standard

\family typewriter
>>> check_pw("WoBeiShiGeDa", 0, 2, 6, 7, 15) 
\end_layout

\begin_layout Standard

\family typewriter
Suggested password: WoBeiShiGeDa33Uxxx 
\end_layout

\begin_layout Standard

\family typewriter
False 
\end_layout

\begin_layout Standard

\family typewriter
"33Uxxx"
\family default
 is added to 
\family typewriter
"WoBeiShiGeDa"
\family default
 so that the password passes the requirements.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q3] 
\end_layout

\begin_deeper
\begin_layout Standard
The following recursive procedure is created to encode a character 
\family typewriter
char
\family default
 based on a 
\family typewriter
shift
\family default
 value.
 For example, if letter "
\family typewriter
a
\family default
" is shifted by 
\family typewriter
3
\family default
, it will become letter "
\family typewriter
d
\family default
"; and if shifted by 
\family typewriter
-3
\family default
, it will become letter "
\family typewriter
x
\family default
".
 
\end_layout

\begin_layout Standard
The 
\family typewriter
ORD
\family default
 and 
\family typewriter
CHR
\family default
 function will help to convert the character to its ASCII value and vice
 versa.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE ENCODE_CHAR(char: STRING, shift: INT): 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}
\end_inset

IF shift == 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN char 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}
\end_inset

ELSE IF shift > 0: 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

DECLARE new_char: STRING 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

new_char = CHR((ORD(char) + 1) % 26) 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

shift -= 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN ENCODE_CHAR(new_char, shift) 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}
\end_inset

ELSE: 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Shift += 26 
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN ENCODE_CHAR(char, shift) 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}
\end_inset

END IF 
\end_layout

\begin_layout Plain Layout

\family typewriter
13 END PROCEDURE
\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
Identify one error from the above code, state the type of the error, including
 its definition and explain how the errors can be fixed.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Assume the above error has been fixed.
 Copy the following trace table to your answer booklet.
 State the line number each time one of the return statements is called
 and complete it based on the following function call.
 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
ENCODE_CHAR("y", -24) 
\family default

\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Line No.
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
char 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
shift 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
new_char 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q4] 
\end_layout

\begin_deeper
\begin_layout Standard
Answer all questions.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q4.png
	width 50page%

\end_inset


\end_layout

\begin_layout Enumerate
State the network architecture model of A and B as shown in the diagram
 below.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State an advantage of model A over B in the diagram above.
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State and explain if each of the following statements are correct.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_deeper
\begin_layout Itemize
“One of the functionalities of the DNS is that different users can simultaneousl
y receive different IP translations for the same domain name.” 
\end_layout

\begin_layout Itemize
“The 4 top layers of TCP/IP model are application, internet, data link and
 physical.” 
\end_layout

\begin_layout Itemize
“The internet layer is not responsible for reliable transmission.
 It makes no guarantees about the proper arrival of packets.” 
\end_layout

\begin_layout Itemize
“2C:54:91:G8:F9:E3 is a valid MAC address.” 
\end_layout

\begin_layout Itemize
“2001:0db8:0001:0ab9:C0A8:0102 is a valid IPv6 address.” 
\end_layout

\begin_layout Itemize
“The internet and the World Wide Web are the same thing.” 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of HTTP and explain how the protocol works.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Explain packet switching.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State an ethical issue related to artificial intelligence.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State the purpose of defining the code of conduct for computer use.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
State a difference between data validation and data verification.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q5] 
\end_layout

\begin_deeper
\begin_layout Standard
The implementation of a Binary Search Tree (BST) using three 1D arrays is
 shown below.
 
\end_layout

\begin_layout Standard
Each unused node that are not in the logical BST is initially connected
 in a singly linked list manner using the 
\family typewriter
leftPtr
\family default
 array.
 The first position of this linked list is indicated by the variable 
\family typewriter
nextFree
\family default
.
 
\end_layout

\begin_layout Standard
When a piece of data is inserted into the BST, a node will be disconnected
 from the linked list and added to the logical BST.
 The root of this logical BST is indicated by the variable 
\family typewriter
root
\family default
.
 The logical structure of the BST is managed by 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 which are the positions of the left and right child of the node respectively.
 
\end_layout

\begin_layout Standard
Below is an illustration for such BST with a 0-based index array.
 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
root 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
nextFree
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="9">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
leftPtr 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
rightPtr 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the logical BST at this point of time.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State the post order traversal of the BST 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State the values of 
\family typewriter
root
\family default
, 
\family typewriter
nextFree
\family default
 and the values in the arrays 
\family typewriter
data
\family default
, 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 after the 
\series bold
each
\series default
 of the following BST operations are executed sequentially.
 
\begin_inset space \hfill{}
\end_inset

[3] 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Add 8
\end_layout

\begin_layout Itemize

\family typewriter
Recursive Delete 6 
\end_layout

\end_deeper
\begin_layout Enumerate
State an advantage of BST over Hash table.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Explain what can make a Hash Table Search inefficient besides a bad hash
 function and how to overcome it.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
State 2 characteristics of a good hash function.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q6] 
\end_layout

\begin_deeper
\begin_layout Standard
Study the following sorting code carefully.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def sort(lst): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if len(lst)<=1: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return lst 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

pivot = lst[0] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

smaller = [] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

larger = [] 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

for i in range (1, len(lst)): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if lst[i] < pivot: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

smaller.append(lst[i]) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

larger.append(lst[i]) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

return sort (smaller) + [pivot,] + sort (larger) 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the name of the above sorting algorithm.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Explain why the above sorting algorithm is inefficient when it is used on
 a nearly sorted array.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Explain how you can modify the code to improve the efficiency.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
Bubble sort and insertion sort are both used to sort a nearly sorted integer
 array of size 1000 and there are only 5 integers in the array that are
 not in the correct position.
 
\end_layout

\begin_layout Enumerate
State and explain why insertion sort generally perform better than bubble
 sort for nearly sorted array.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Draw a flow chart for the algorithm described below.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_deeper
\begin_layout Standard
Given an integer 
\family typewriter
k
\family default
 and an array 
\family typewriter
arr[]
\family default
 representing the destination floors for 
\family typewriter
n
\family default
 people waiting currently at the ground floor and 
\family typewriter
k
\family default
 is the capacity of the elevator.
 It takes 1 unit time for the elevator to reach any consecutive floor from
 the current floor.
 The algorithm finds the minimal time taken to get all the people to their
 destination floor and then return to the ground floor.
 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
def minTime(n, k, arr) : 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

# Sort in descending order 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

arr.sort(reverse = True) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

minTime = 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

# Iterate through the groups 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

for i in range(0, n, k) : 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

# Update the time taken for 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

# each group 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

minTime += (2 * arr[i]) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

# Return the total time taken 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

return minTime
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q7] 
\end_layout

\begin_deeper
\begin_layout Standard
A relational database is created to store data about contractors engaging
 workers to perform renovation jobs.
 
\end_layout

\begin_layout Standard
The database designers are told that: 
\end_layout

\begin_layout Itemize
each contractor can recruit different workers to perform various jobs.
\end_layout

\begin_layout Itemize
each worker can have skills to perform different jobs.
 
\end_layout

\begin_layout Itemize
each job can have different levels of skills "A", "B" or "C" and their hourly
 rate is calculated based on their skill level for the job.
 
\end_layout

\begin_layout Standard
A first attempt is represented by the following table: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-1.png
	width 65page%

\end_inset


\end_layout

\begin_layout Enumerate
Explain why this table is not in first normalized form.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-2.png
	width 65page%

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b)
\end_layout

\end_inset

Explain what a composite key is.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

State a suitable primary key for Worker table and explain why the table
 is not in second normal form.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

A table description can be expressed as: 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\bar under
Attribute1
\bar default
, Attribute2*, Attribute3, …) 
\end_layout

\begin_layout Standard
The primary keys are indicated using a solid underline and foreign keys
 are indicated by using a dashed underline/asterisk.
 Write table descriptions for the required tables in the database so that
 they are in third normal form (3NF).
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

Create an entity-relationship (ER) diagram showing the degree of all relations.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

Using the above example, elaborate why a relational database model has advantage
 in maintaining data integrity over a flat file system.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

The homeowner would like to know a schedule of the renovation jobs performed
 to their house.
 They are 
\series bold
NOT
\series default
 interested in knowing the exact worker’s name.
 Write an SQL query to output the 
\series bold
contractor’s name
\series default
, 
\series bold
worker’s job
\series default
, 
\series bold
worker’s skill level
\series default
 and 
\series bold
date
\series default
 based on the contractor’s name "
\family typewriter
Su Ming De
\family default
".
 The output is to be in the ascending order based on the date of job performed.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q8] 
\end_layout

\begin_deeper
\begin_layout Standard
You are also to design an Object-Oriented solution for the above-mentioned
 project.
 Both contractor and workers are to create a 
\family typewriter
User
\family default
 account on the platform, with details such as 
\family typewriter
user_id
\family default
, 
\family typewriter
password
\family default
 and 
\family typewriter
gender
\family default
.
 
\end_layout

\begin_layout Standard
The contractors will have to register their company details such as company
 
\family typewriter
name
\family default
 and 
\family typewriter
address
\family default
, while the workers need to register their bank 
\family typewriter
account
\family default
 number.
 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\series bold
User
\series default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-classes, 
\end_layout

\begin_layout Itemize
inheritance, 
\end_layout

\begin_layout Itemize
the properties required, 
\end_layout

\begin_layout Itemize
appropriate methods, including but not limited to the 
\series bold
constructor
\series default
 methods, and at least 
\series bold
one
\series default
 pair of ‘
\series bold
get
\series default
’ and ‘
\series bold
set
\series default
’ methods for each class, 
\end_layout

\begin_layout Itemize
circle the polymorphed methods.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\end_deeper
\begin_layout Enumerate
Using the above example, state the definition of inheritance and explain
 its purpose/advantage in object-oriented programing.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Standard
The platform hopes to expand its function to allow register of homeowner
 accounts.
 The homeowners can view which are the workers came to their home address
 for renovation work on the date/time specified by the contractors.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

State how this would affect the class, properties and methods in the current
 example.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

State how this would affect the tables, attributes and relationships of
 the relational database stated in 
\series bold
7(d)
\series default
 and 
\series bold
(e)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

Explain how NoSQL addresses shortcomings of relational databases.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Standard
Some homeowners request to have access to the hourly rate and personal contact
 of renovation workers.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 From the perspective of the company, explain to the homeowners how such
 a feature is against the data protection obligations stated in the Personal
 Data Protection Act (PDPA).
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q1] 
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 1.1
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task1_1(name_A, name_B)
\family default
 where 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are strings which consists of only alphabet letters and spaces.
 The function will return 
\family typewriter
True
\family default
 if 
\end_layout

\begin_layout Itemize
the alphabet letters combination used in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are the same and
\end_layout

\begin_layout Itemize
the spaces in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are at the same locations.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Standard
For example, 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
>>> match_names("Abcde", "Deabc") 
\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> match_names("Abcde Fgh I", "Ihgfe Dcb A") 
\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> match_names("Abcd Efgh I", "Ihgfe Dcb A") 
\end_layout

\begin_layout Plain Layout

\family typewriter
False 
\end_layout

\begin_layout Plain Layout

\family typewriter
>>> match_names("Abcde Fzh I", "Ihgfe Dcb A") 
\end_layout

\begin_layout Plain Layout

\family typewriter
False
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Test your program with the following test data: 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
print(task1_1("Abcde", "Deabc")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1("Abcde Fgh I", "Ihgfe Dcb A")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1("Abcd Efgh I", "Ihgfe Dcb A")) 
\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1("Abcde Fzh I", "Ihgfe Dcb A"))
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write the function 
\family typewriter
task1_2()
\family default
 to read the names in file 
\family typewriter
"namelist_A.txt"
\family default
 and find a matching name in "
\family typewriter
namelist_B.txt
\family default
" that satisfied the conditions stated in 
\series bold
Task 1.1
\series default
.
 If a matching name cannot be found in "
\family typewriter
namelist_B.txt
\family default
", it will just display "
\family typewriter
***********No match***********
\family default
".
 Your results should be displayed in the following manners.
 The time-complexity of your program code matters.
 
\begin_inset space \hfill{}
\end_inset

[13]
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q2] 
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 2.1
\end_layout

\begin_layout Standard
Complete the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 by implementing both the 
\family typewriter
insert
\family default
 and 
\family typewriter
delete
\family default
 class functions.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
insert(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 as input and inserts it at the tail of the linked list.
 Take note that the attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 of 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 are both 
\family typewriter
None
\family default
 before the insertion.
 
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
delete(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 which exists in the linked list as input.
 The function removes/detaches 
\family typewriter
node
\family default
 from the linked list and returns it.
 The 
\family typewriter
node
\family default
 returned has both its attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 set to 
\family typewriter
None
\family default
, but data remains unchanged.
 
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
The class 
\family typewriter
LRUQ
\family default
 uses the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 to implement its least recently used queue (
\family typewriter
lruq
\family default
).
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Itemize
The attribute hashmap is a dictionary object that takes the node's data
 as key and the node instance itself in lruq as value.
 
\end_layout

\begin_layout Itemize
The attribute size is the max number of nodes that lruq can have.
\end_layout

\begin_layout Itemize
The attribute count is the number of nodes that lruq currently have.
 
\end_layout

\begin_layout Standard
Complete the least recently used queue class 
\family typewriter
LRUQ
\family default
 by implementing the 
\family typewriter
use
\family default
 function.
 The class function 
\family typewriter
use(value)
\family default
 takes an integer 
\family typewriter
value
\family default
 as input.
 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is in 
\family typewriter
lruq
\family default
 (referenced by hashmap), it removes the node in the 
\family typewriter
lruq
\family default
 and re-insert it to the end of the 
\family typewriter
lruq
\family default
.
 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is not in 
\family typewriter
lruq
\family default
 (not referenced by hashmap), it references 
\family typewriter
value
\family default
 in hashmap and inserts a new 
\family typewriter
Node
\family default
 instance with value as its data to the end of 
\family typewriter
lruq
\family default
.
 If 
\family typewriter
count
\family default
 > 
\family typewriter
size
\family default
, it removes the least recently used node in 
\family typewriter
lruq
\family default
 and de-references it in 
\family typewriter
hashmap
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
Hint: To de-reference a key in 
\family typewriter
hashmap
\family default
, you can call the following.
 
\family typewriter
self.hashmap.pop(key, None)
\family default
 where 
\family typewriter
self.hashmap
\family default
 is a dictionary object.
 
\end_layout

\end_deeper
\begin_layout Standard
The test function 
\family typewriter
test2_2()
\family default
 is provided for you in 
\family typewriter
task2.ipynb
\family default
.
 The expected outcome of this test function is shown on the next page.
 Take note that the size of the least recently used queue is 
\family typewriter
6
\family default
 in this test function.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 8 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 3 8 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 45 3
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: 
\end_layout

\begin_layout Plain Layout

\family typewriter
Print from head: 8 2 3 45 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 31 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 12 31 
\family default
\series bold
//Queue is full at this point
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 42 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 12 31 42 
\family default
\series bold
//8 is removed because it is the least used 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head:
\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\end_layout

\begin_layout Plain Layout

\family typewriter
3 45 31 42 12 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
---------------- 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\begin_layout Standard

\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q3] 
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 3.1
\end_layout

\begin_layout Standard
Write program code to read the csv file "
\family typewriter
health_facilities.csv
\family default
" and insert all information in the file as documents into a NoSQL MongoDB
 database called "
\family typewriter
Health
\family default
" with one collection called "
\family typewriter
facilities
\family default
".
 The "
\family typewriter
_id
\family default
" of the documents in the database should start from 
\family typewriter
1
\family default
, 
\family typewriter
2
\family default
, 
\family typewriter
3
\family default
 and 
\family typewriter
4
\family default
 etc.
 The correct data type of each field is expected to be inserted into the
 database.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query to retrieve all public acute hospital documents
 with their corresponding number of beds more than 7200.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Write program code to bubble sort the results retrieved in 
\series bold
Task 3.2 a)
\series default
 according to the average number of beds per facility.
 Then, display the top 3 years which has the highest average number of beds
 per facility using the format below.
 
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
The three years that have the highest average number of beds per facility
 are: _____, _____ and _____.
 
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query and program code to display all "
\family typewriter
_id
\family default
"s of Not-for-Profit health facilities documents that have no facility.
 
\begin_inset space \hfill{}
\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write MongoDB Pymongo code to update the fields "
\family typewriter
no_of_facilities
\family default
" and "
\family typewriter
no_beds
\family default
" of only 3 documents retrieved in 
\series bold
Task 3.3 a)
\series default
 to 
\family typewriter
1
\family default
 and a random number from 
\family typewriter
10
\family default
 to 
\family typewriter
20
\family default
 respectively.
 
\begin_inset space \hfill{}
\end_inset

[6] 
\end_layout

\begin_layout Standard
[SPLIT_HERE]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q4] 
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Car Loaning System 
\end_layout

\begin_layout Standard
CaRent is a company providing electronic car rental services.
 The company engages you to design a web application using Flask microframework
 to aid in the car rental process.
 
\end_layout

\begin_layout Standard
The following information of each Customer is stored: 
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 – auto increment integer value to keep track of the ID of customer.
 
\end_layout

\begin_layout Standard

\family typewriter
Name
\family default
 – name of customer.
 
\end_layout

\begin_layout Standard

\family typewriter
Gender
\family default
 – gender of customer, to be stored as a single character, using either
 '
\family typewriter
M
\family default
' or '
\family typewriter
F
\family default
'.
 
\end_layout

\begin_layout Standard

\family typewriter
Contact
\family default
 – contact number of customer.
 
\end_layout

\begin_layout Standard
The following information of each Car is stored: 
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 – vehicle identification number (VIN) of the car.
 
\end_layout

\begin_layout Standard

\family typewriter
Brand
\family default
 – brand of the car.
 
\end_layout

\begin_layout Standard

\family typewriter
Vehicle Type
\family default
 – type of the car, can be 
\family typewriter
'Sedan'
\family default
, 
\family typewriter
'Hatchback'
\family default
, 
\family typewriter
'SUV'
\family default
 or 
\family typewriter
'MPV'
\family default
.
 
\end_layout

\begin_layout Standard

\family typewriter
Energy Source
\family default
 – type of energy source the engine is running on, can be 
\family typewriter
'Diesel'
\family default
, 
\family typewriter
'Gasoline'
\family default
, 
\family typewriter
'Hybrid'
\family default
 or 
\family typewriter
'Electricity'
\family default
.
 
\end_layout

\begin_layout Standard

\family typewriter
DailyPrice
\family default
 – daily price for renting the car.
 
\end_layout

\begin_layout Standard

\family typewriter
Availability
\family default
 – availability of the car, can be 
\family typewriter
'Available'
\family default
 or 
\family typewriter
'Unavailable'
\family default
.
 
\end_layout

\begin_layout Standard
The following information of each RentalPoint is stored: 
\end_layout

\begin_layout Standard

\family typewriter
PointID
\family default
 – auto increment integer value to keep track of the ID of rental service
 point.
\end_layout

\begin_layout Standard

\family typewriter
Address
\family default
 – address of the rental point.
 
\end_layout

\begin_layout Standard

\family typewriter
OpWeekDay
\family default
 – weekdays that the rental point is open, stored as a 7-digits string,
 starting from Sunday to Saturday, with 
\family typewriter
'1'
\family default
 indicating open and 
\family typewriter
'0'
\family default
 indicating closed.
 E.g.
 
\family typewriter
'0111110'
\family default
 means it is open on weekdays and closed on weekend.
 
\end_layout

\begin_layout Standard

\family typewriter
OpStartHr
\family default
 – starting time of daily operation, stored as a 4 digits string, using
 24hour time format.
 
\end_layout

\begin_layout Standard

\family typewriter
OpEndHr
\family default
 – ending time of daily operation, stored as a 4 digits string, using 24hour
 time format.
 
\end_layout

\begin_layout Standard
The following information of each 
\family typewriter
RentalRecord
\family default
 is stored: 
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 – ID of customer.
 
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 – VIN of car.
 
\end_layout

\begin_layout Standard

\family typewriter
StartDate
\family default
 – start date for the rental service.
 
\end_layout

\begin_layout Standard

\family typewriter
CollectionPointID
\family default
 – ID of the collection point.
 
\end_layout

\begin_layout Standard

\family typewriter
ReturnDate
\family default
 – return date for the rental service.
 
\end_layout

\begin_layout Standard

\family typewriter
ReturnPointID
\family default
 – ID of the return point.
 
\end_layout

\begin_layout Standard
The information is to be stored in four tables: 
\end_layout

\begin_layout Standard

\family typewriter
Customer
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
Car
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
RentalPoint
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
RentalRecord
\family default
 
\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
Task4_1.sql
\family default
 to show the SQL code to create the database 
\family typewriter
car_rental.db
\family default
 with the three tables.
 
\end_layout

\begin_layout Standard
The table 
\family typewriter
Customer
\family default
 must use 
\family typewriter
CustomerID
\family default
 as its primary key, the table 
\family typewriter
Car
\family default
 must use 
\family typewriter
VIN
\family default
 as its primary key, and the table 
\family typewriter
RentalPoint
\family default
 must use 
\family typewriter
PointID
\family default
 as its primary key.
 
\end_layout

\begin_layout Standard
The table 
\family typewriter
RentalRecord
\family default
 should use 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
StartDate
\family default
 as a composite key, while 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
CollectionPointID/ReturnPointID
\family default
 must refer to 
\family typewriter
CustomerID
\family default
 in 
\family typewriter
Customer
\family default
, 
\family typewriter
VIN
\family default
 in 
\family typewriter
Car
\family default
 and 
\family typewriter
PointID
\family default
 in 
\family typewriter
RentalPoint
\family default
 as foreign keys.
 
\end_layout

\begin_layout Standard
Save your SQL code as 
\family typewriter
Task4_1.sql
\family default
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
customers.csv
\family default
, 
\family typewriter
cars.csv
\family default
, 
\family typewriter
rental_points.csv
\family default
 and 
\family typewriter
rental_records.csv
\family default
 contains information about the customers, cars, rental points and the past
 rental records.
 The first row of each file contains the header of the respective columns.
 Each row in the files is a comma- separated list of information.
 
\end_layout

\begin_layout Standard
Write a Python program to insert all information from the three files into
 the 
\family typewriter
database car_rental.db
\family default
.
 Run the program.
 
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task4_2.py
\family default
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
You are tasked to implement a function to search and display all past rental
 records of a customer.
 Using the customer’s name 
\family typewriter
\series bold
'Goh Yi Xi'
\family default
\series default
, query and display a list of data with the following fields as shown in
 the table, sorted in the ascending order according to the start date.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contact 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VehicleType 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StartDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ReturnDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DailyPrice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
…
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
…
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
…
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write the SQL code required.
 
\end_layout

\begin_layout Standard
Save this code as 
\family typewriter
Task4_3.sql
\family default
 
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
The company wants to implement a function to register new cars for rental
 into the database.
 Office staff can register new cars by adding the values of the attributes
 in the 
\family typewriter
Car
\family default
 table.
 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application
 that: 
\end_layout

\begin_layout Itemize
Receive the following information: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
VIN
\family default
, 
\family typewriter
Brand
\family default
, 
\family typewriter
VehicleType
\family default
, 
\family typewriter
EnergySource
\family default
, and 
\family typewriter
DailyPrice
\family default
 of a car through a HTML form.
\end_layout

\begin_layout Itemize

\family typewriter
Availability
\family default
 should be set to the default value of 
\family typewriter
'Available'
\family default
.
 
\end_layout

\begin_layout Itemize
Note that 
\family typewriter
VehicleType
\family default
 and 
\family typewriter
EnergySource
\family default
 should be in 
\series bold
dropdown
\series default
 list format to improve data validity.
 
\end_layout

\end_deeper
\begin_layout Itemize
Check if the 
\family typewriter
VIN
\family default
 is valid based on the following algorithm: 
\end_layout

\begin_deeper
\begin_layout Itemize
Step 1: Translate all letters to integer values using the following table
 (
\family typewriter
I
\family default
, 
\family typewriter
O
\family default
, and 
\family typewriter
Q
\family default
 are not allowed in a valid 
\family typewriter
VIN
\family default
): 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="9">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
A
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
B
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
C
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
D
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
E
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
F
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
G
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
H
\series default
: 8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N/A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
J
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
K
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
L
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
M
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
P
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N/A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
R
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
S
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
T
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
U
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
V
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
W
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
X
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Y
\series default
: 8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Z
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Step 2: Use the following weight factor for each position in the VIN.
 
\series bold
The 9th position is that of the check digit
\series default
.
 Its weight factor has been substituted with a 
\family typewriter
0
\family default
, which will cancel it out in the multiplication step.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="18">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Position 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Weight 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The sum of product of the letter/digit with their corresponding weight factor
 is then divided by 
\family typewriter
11
\family default
.
 
\end_layout

\begin_layout Itemize
The remainder is the check digit.
 If the remainder is 
\family typewriter
10
\family default
, the check digit will use 
\family typewriter
X
\family default
 instead.
 
\end_layout

\begin_layout Itemize
E.g.
 the 
\family typewriter
VIN
\family default
 with values 1
\family typewriter
M8GDM9A_KP042788
\family default
 will produce a check digit of 
\family typewriter
X
\family default
 and hence 
\family typewriter
1M8GDM9AXKP042788
\family default
 is a valid 
\family typewriter
VIN
\family default
.
 
\end_layout

\end_deeper
\begin_layout Itemize
If 
\family typewriter
VIN
\family default
 is valid, create a new car record in the 
\family typewriter
Car
\family default
 table, and display the record in the confirmation page.
 
\end_layout

\begin_layout Itemize
Otherwise, inform the user that the VIN is invalid.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q4.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
You may assume: 
\end_layout

\begin_layout Itemize
All inputs are in valid format.
 
\end_layout

\begin_layout Itemize
VIN: 1M8GDM9AXKP042788 is a new record to the database 
\end_layout

\begin_layout Standard
Save your program as 
\family typewriter
Task4_4.py 
\end_layout

\begin_layout Standard
With additional files or sub-folders as needed in a folder named 
\family typewriter
Task4_4 
\end_layout

\begin_layout Standard
Run the web application.
 Enter the values based on the sample input above.
 
\end_layout

\begin_layout Standard
Then save the output of the program as 
\family typewriter
Task4_4.html
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[15]
\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
