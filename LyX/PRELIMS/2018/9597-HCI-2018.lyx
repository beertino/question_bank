#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A programmer is writing a treasure island game to be played on the computer.
 
\end_layout

\begin_deeper
\begin_layout Standard
The island is a rectangular grid, 30 squares by 10 squares.
 Each square of the island is represented by an element in a 2D array.
 The top left square of the island is represented by the array element [0,
 0].
 
\end_layout

\begin_layout Standard
There are 30 squares across and 10 squares down.
 
\end_layout

\begin_layout Standard
The computer will: 
\end_layout

\begin_layout Itemize
generate three random locations where treasure will be buried 
\end_layout

\begin_layout Itemize
prompt the player for the location of one square where the player choose
 to dig
\end_layout

\begin_layout Itemize
display the contents of the array by outputting for each square: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
'.'
\family default
 for only sand in this square 
\end_layout

\begin_layout Itemize

\family typewriter
'T'
\family default
 for treasure still hidden in sand 
\end_layout

\begin_layout Itemize

\family typewriter
'X'
\family default
 for a hole dug where treasure was found
\end_layout

\begin_layout Itemize

\family typewriter
'O'
\family default
 for a hole dug where no treasure was found.
 
\end_layout

\begin_layout Standard
Here is an example display after the player has chosen to dig at location
 [9, 3]: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..................T...........
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
...T..........................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
...X..........................
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The game is to be implemented using object oriented programming.
 
\end_layout

\begin_layout Standard
The programmer has designed the class 
\family typewriter
IslandClass
\family default
.
 The identifier table for this class is: 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Grid
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ARRAY[0:9, 0:29] OF CHAR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2D array to represent the squares of the island
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Constructor()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
instantiates an object of class 
\family typewriter
IslandClass
\family default
 and initialises all squares to sand
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
HideTreasure()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
generates a pair of random numbers used as the grid location of treasure
 and marks the square with 
\family typewriter
'T' 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DigHole(Row, Column)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
takes as parameter a valid grid location and marks the square with 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
 as appropriate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
GetSquare(Row, Column) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
CHAR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
takes as parameter a valid grid location and returns the grid value for
 that square from the 
\family typewriter
IslandClass
\family default
 object
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DisplayGrid()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
shows the current grid data.
 
\family typewriter
DisplayGrid
\family default
 should make use of the getter method 
\family typewriter
GetSquare
\family default
 of the 
\family typewriter
IslandClass
\family default
 class
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
IslandClass
\family default
 including the 
\family typewriter
Constructor
\family default
, 
\family typewriter
GetSquare
\family default
 and 
\family typewriter
DisplayGrid
\family default
 methods.
 The code should follow the specification given.
 
\end_layout

\begin_layout Standard
The value to represent sand should be declared as a constant.
 
\end_layout

\begin_layout Standard
Do not attempt to write the methods 
\family typewriter
HideTreasure
\family default
 or 
\family typewriter
DigHole
\family default
 at this stage.
 
\end_layout

\begin_layout Subsection*
Evidence 1 
\end_layout

\begin_layout Standard
Program code for Task 1.1
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
HideTreasure
\family default
 method.
 Your method should check that the random location generated does not already
 contain treasure.
 The value to represent treasure should be declared as a constant.
\end_layout

\begin_layout Subsection*
Evidence 2 
\end_layout

\begin_layout Standard
Your program code for Task 1.2
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.3
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
create an 
\family typewriter
IslandClass
\family default
 object 
\end_layout

\begin_layout Itemize
generate three random locations where treasures will be buried
\end_layout

\begin_layout Itemize
your program will then call the 
\family typewriter
DisplayGrid
\family default
 method.
 
\end_layout

\begin_layout Subsection*
Evidence 3
\end_layout

\begin_layout Standard
The program code for Task 1.3 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Evidence 4 
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 1.3 [1] 
\end_layout

\begin_layout Subsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
DigHole
\family default
 method.
 This method takes two integers as parameters.
 These parameters form a valid grid location.
 The location is marked with 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
 as appropriate.
 The values to represent treasure, found treasure and hole should be declared
 as constants.
\end_layout

\begin_layout Subsection*
Evidence 5
\end_layout

\begin_layout Standard
Program code for Task 1.4.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 1.5
\end_layout

\begin_layout Standard
Add code to the main program in Task 1.3.
 The program is to: prompt the player for a location to dig validate the
 user input call the 
\family typewriter
DigHole
\family default
 method and then the 
\family typewriter
DisplayGrid
\family default
 method.
 
\end_layout

\begin_layout Subsection*
Evidence 6 
\end_layout

\begin_layout Standard
The program code.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 1.6 
\end_layout

\begin_layout Standard
Run the program by inputting a location where:
\end_layout

\begin_layout Itemize
the treasure is not found
\end_layout

\begin_layout Itemize
the treasure is found.
\end_layout

\begin_layout Subsection*
Evidence 7 
\end_layout

\begin_layout Standard
Screenshot evidence similar to that shown which shows: 
\end_layout

\begin_layout Itemize
The player has chosen to dig at location [2, 25] where no treasure was found
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
..............................
 
\end_layout

\begin_layout Plain Layout

\family typewriter
....T.........................
 
\end_layout

\begin_layout Plain Layout

\family typewriter
.........................O....
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..........T...................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..................T...........
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The player has chosen to dig at location [5, 3] where treasure was found
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
...............T..............
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
.........................T....
\end_layout

\begin_layout Plain Layout

\family typewriter
...X..........................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\begin_layout Plain Layout

\family typewriter
..............................
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The International Bank Account Number (IBAN) is an international bank account
 identification standard used in many countries.
 It uses modulo arithmetic to perform validation.
\end_layout

\begin_deeper
\begin_layout Standard
The IBAN consists of up to 34 alphanumeric characters, as follows: 
\end_layout

\begin_layout Itemize
country code – two letters 
\end_layout

\begin_layout Itemize
check digits – two digits, and 
\end_layout

\begin_layout Itemize
basic bank account number – up to 30 alphanumeric characters that are countryspe
cific 
\end_layout

\begin_layout Standard
An example of an IBAN in the United Kingdom Great Britain which is 22 characters
 is 
\family typewriter
GB82WEST12345698765432
\family default
 (
\family typewriter
GB
\family default
 - country code, 
\family typewriter
82
\family default
 - check digits) 
\end_layout

\begin_layout Standard
The following is the IBAN check digits generation algorithm:
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Initialize the two check digits by 
\family typewriter
00
\family default
 (e.g.
 
\family typewriter
GB
\bar under
00
\bar default
WEST12345698765432
\family default
).
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Move the four initial characters to the end of the string (e.g.
 
\family typewriter
WEST12345698765432GB
\bar under
00
\family default
\bar default
).
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 Replace each alphabet in the string with two digits, using the mapping
 A = 10, B = 11, C = 12, .
 .
 .
 .
 .
 , Z = 35 (i.e.
 ASCII value of uppercase letters - 55) (e.g.
 
\family typewriter
\bar under
32142829
\bar default
12345698765432
\bar under
1611
\bar default
00
\family default
).
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
4.
\end_layout

\end_inset

 Convert the string to an integer.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
5.
\end_layout

\end_inset

 Calculate the remainder of dividing this number by 97 (e.g.
 
\family typewriter
3214282912345698765432161100 mod 97 = 16
\family default
).
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
6.
\end_layout

\end_inset

 Subtract the remainder from 98 to give the two check digits (e.g.
 check digits = 
\family typewriter
98 - 16 = 82
\family default
).
 If the result is a single digit number, pad it with a leading 0 to make
 a two-digit number.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
CheckDigits
\family default
 function using the following specification.
 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
FUNCTION CheckDigits (IBAN : STRING) : STRING 
\end_layout

\begin_layout Standard
The function has a single string parameter 
\family typewriter
IBAN
\family default
 and returns a two-digit string result.
 
\end_layout

\begin_layout Standard
Use the sample data provided in the text file 
\family typewriter
IBANS.txt
\family default
 and paste this into your program code.
 
\end_layout

\begin_layout Subsection*
Evidence 8 
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Evidence 9 
\end_layout

\begin_layout Standard
One screenshot verifying that your program generates the correct check digits
 for the data in 
\family typewriter
IBANS.txt
\family default
.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Standard
An IBAN is validated by converting it into an integer and performing a basic
 mod-97 operation on it.
 If the IBAN is valid, the remainder equals 1.
 
\end_layout

\begin_layout Standard
The algorithm of IBAN validation is as follows: 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Move the four initial characters to the end of the string (For the IBAN
 
\family typewriter
GB82WEST12345698765432
\family default
 e.g.
 
\family typewriter
WEST12345698765432
\bar under
GB82
\family default
\bar default
).
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Replace each letter in the string with two digits, thereby expanding the
 string, where A = 10, B = 11, C = 12, .
 .
 .
 .
 .
 , Z = 35 (e.g.
 
\family typewriter
\bar under
32142829
\bar default
12345698765432
\bar under
1611
\bar default
82
\family default
).
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 Interpret the string as a decimal integer and compute the remainder of
 that number on division by 97 (e.g.
 
\family typewriter
3214282912345698765432161182 mod 97 = 1
\family default
).
 If the remainder is 1, the check digit test is passed and the IBAN might
 be valid.
 
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a Boolean function 
\family typewriter
ValidateIBAN
\family default
 to determine if a given IBAN is valid.
 This function should have a parameter which allows it to be used for any
 IBAN.
 
\end_layout

\begin_layout Subsection*
Evidence 10 
\end_layout

\begin_layout Standard
Your 
\family typewriter
ValidateIBAN
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
A 
\family typewriter
TRANSACTIONS.txt
\family default
 file contains transaction details of customers of a bank.
 Each transaction record takes up one line and has three data fields: customer
 IBAN, transaction mode (W - withdrawal or D - deposit) and transaction
 amount.
 
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
CheckIBAN
\family default
 to read in the IBANs in 
\family typewriter
TRANSACTIONS.txt
\family default
 and display on the screen:
\end_layout

\begin_layout Itemize
If an IBAN is valid, the valid IBAN followed by “
\family typewriter
OK
\family default
”.
\end_layout

\begin_layout Itemize
If an IBAN is invalid, the invalid IBAN followed by “
\family typewriter
Invalid.
 Expected check digits: ??
\family default
”, where 
\family typewriter
??
\family default
 represents the computed check digits.
 
\end_layout

\begin_layout Itemize
For an invalid IBAN, update the record in 
\family typewriter
TRANSACTIONS.txt
\family default
 with the expected computed check digits.
 
\end_layout

\begin_layout Subsection*
Evidence 11 
\end_layout

\begin_layout Standard
Your 
\family typewriter
CheckIBAN
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

 [7]
\end_layout

\begin_layout Subsection*
Evidence 12 
\end_layout

\begin_layout Standard
One screenshot showing the output and contents of 
\family typewriter
TRANSACTIONS.txt
\family default
 from running the program.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
A master file 
\family typewriter
ACCOUNTS.txt
\family default
 contains the customer IBANs, names and current balances.
 Write a procedure 
\family typewriter
UpdateBalance
\family default
 to update the current balances of the customers in 
\family typewriter
ACCOUNTS.txt
\family default
 from 
\family typewriter
TRANSACTIONS.txt
\family default
.
 At the end of the process, your program will output the message: 
\end_layout

\begin_layout Standard

\family typewriter
x records updated.
 
\end_layout

\begin_layout Subsection*
Evidence 13 
\end_layout

\begin_layout Standard
Your program code for the procedure 
\family typewriter
UpdateBalance
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Evidence 14
\end_layout

\begin_layout Standard
One screenshot showing the program output and contents of 
\family typewriter
ACCOUNTS.txt
\family default
 from running the program.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
A linked list Abstract Data Type (ADT) has the following operations defined:
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Create()
\family default
 -- creates an empty linked list;
\end_layout

\begin_layout Itemize

\family typewriter
Insert(item, p)
\family default
 -- inserts new value, 
\family typewriter
item
\family default
, into linked list so that it is at position p in the linked list.
 Assume that the linked list contains at least 
\family typewriter
(p - 1)
\family default
 items before the insertion.
 
\end_layout

\begin_layout Itemize

\family typewriter
Delete(p)
\family default
 -- deletes the item at position 
\family typewriter
p
\family default
 in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Length()
\family default
 -- returns the number of items in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 -- returns true if linked list is empty;
\end_layout

\begin_layout Itemize

\family typewriter
IsFull()
\family default
 – returns true if linked list is full;
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that
 have two parts: the item data and a pointer to the next item in the list.
 In addition there is a 
\family typewriter
Start
\family default
 pointer which points to the first item in the list.
 
\end_layout

\begin_layout Standard
The unused nodes are linked and the first unused node is the position where
 the next new data item is to be stored.
 Node removed from the linked list should be returned to 
\family typewriter
NextFree
\family default
 list.
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
The diagram shows the linked list after the following sequence of commands
 have been executed.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Create() 
\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ali', 1)
\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Jack', 1)
\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ben',2) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Delete(1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Jane', 2)
\end_layout

\begin_layout Plain Layout

\family typewriter
Insert('Ken', 3) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Delete(2) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 as follows: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset


\series bold
ListNode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Name : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Pointer : INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SetName(Name:STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SetPointer(Pointer:INTEGER)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
GetName():STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
GetPointer():INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset


\series bold
LinkedList
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Node : ARRAY [1..10] OF ListNode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Start : INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
NextFree : INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Constructor()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Insert (name: STRING, position: INTEGER)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Delete (position: INTEGER)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Length (): INTEGER
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
IsEmpty(): BOOLEAN
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
IsFull() : BOOLEAN 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
.
 
\end_layout

\begin_layout Subsection*
Evidence 15 
\end_layout

\begin_layout Standard
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes.
 
\begin_inset space \hfill{}
\end_inset

 [18]
\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
A method 
\family typewriter
Display()
\family default
 is to be added, which displays the value of 
\family typewriter
Start
\family default
, the value of 
\family typewriter
NextFree
\family default
 and the contents of 
\family typewriter
Node
\family default
 array in index order.
 Write program code to implement this method.
\end_layout

\begin_layout Subsection*
Evidence 16 
\end_layout

\begin_layout Standard
Your program code for Task 3.2.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program.
 Paste the sequence of commands in 
\family typewriter
COMMANDS.txt
\family default
 into your program code.
 Your program will then call the 
\family typewriter
Display
\family default
 method.
 
\end_layout

\begin_layout Standard
Execute your program to test it.
 
\end_layout

\begin_layout Subsection*
Evidence 17
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.3.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
A linear queue is implemented using the 
\family typewriter
LinkedList
\family default
 class as a super class.
 
\end_layout

\begin_layout Standard
The subclass 
\family typewriter
Queue
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Enqueue(item)
\family default
 -- inserts item at the rear of the queue;
\end_layout

\begin_layout Itemize

\family typewriter
Dequeue()
\family default
 -- deletes the item at the front of the queue; 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 -- displays the contents of the queue using the format given below.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Steven
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
<-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Front
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Celine
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Tom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Ryan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
<-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Rear
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Number in queue : 4
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
Write program code for the subclass 
\family typewriter
Queue
\family default
.
 
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism in your design.
 
\end_layout

\begin_layout Subsection*
Evidence 18 
\end_layout

\begin_layout Standard
Your program code for Task 3.4.
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 3.5
\end_layout

\begin_layout Standard
Write program code to:
\end_layout

\begin_layout Itemize
create a new queue and add the data in the file 
\family typewriter
NAMES.txt
\family default
 to the queue 
\end_layout

\begin_layout Itemize
remove two items from the queue 
\end_layout

\begin_layout Itemize
display final contents of the queue 
\end_layout

\begin_layout Subsection*
Evidence 19
\end_layout

\begin_layout Standard
Your program code for Task 3.5.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Evidence 20
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.5.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
The Romans had their own system of number representation which used a sequence
 of upper case letter characters to represent a number.
 We shall consider the denary number 1 to 20 only.
 
\end_layout

\begin_deeper
\begin_layout Standard
The following letters represent each of the values shown: 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Roman Numeral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Five
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fifty
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A number is always written with the smallest number of characters, with
 the letters in sequence starting with the character with the largest value.
 
\end_layout

\begin_layout Itemize
For example, 6 is written 
\family typewriter
VI
\family default
 (not 
\family typewriter
IIIIII
\family default
)
\end_layout

\begin_layout Standard
The exceptions to this sequence are as follows:
\end_layout

\begin_layout Itemize
one less than 5 -- which is written as 
\family typewriter
IV
\end_layout

\begin_layout Itemize
one less than ten -- which is written as 
\family typewriter
IX
\end_layout

\begin_layout Itemize
ten less than fifty -- which is written as 
\family typewriter
XL
\family default
 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code with the following specification:
\end_layout

\begin_layout Itemize
Input a denary integer number in the range 1 to 20 
\end_layout

\begin_layout Itemize
Validate the input 
\end_layout

\begin_layout Itemize
Calculate the Roman numeral representation (write this code as a function)
 
\end_layout

\begin_layout Itemize
Output the Roman number.
\end_layout

\begin_layout Subsection*
Evidence 21 
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable tests and provide screenshot evidence for your testing.
 
\end_layout

\begin_layout Subsection*
Evidence 22 
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write additional program code with appropriate data validation for the following
 specification: 
\end_layout

\begin_layout Itemize
Input two Roman numeral numbers between 1 and 20
\end_layout

\begin_layout Itemize
Ouput the sum of the numbers as a Roman numeral number.
 
\end_layout

\begin_layout Subsection*
Evidence 23
\end_layout

\begin_layout Standard
Your program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable tests and provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsection*
Evidence 24
\end_layout

\begin_layout Standard
Annotated screenshots for each test data run.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
A local area network can be set up as either client-server or peer-to-peer.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State where data are stored on a client-server network and why?
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State where data are stored on a peer-to-peer network and why?
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
In your opinion, what is the key benefit of a client-server network over
 peer-topeer network.
 Justify.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
In your opinion, what is the main drawback of a client-server network compared
 to a peer-to-peer network.
 Justify.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
A 60 Megabyte file is transferred over a network to a printer in 10 seconds.
 Calculate the transfer rate, in kilobytes per second, used to transfer
 this file.
 Show all of your working.
 [1 MB = 1024 KB] 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain how DHCP operates in a network? 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Switches and routers are both connecting devices.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What are the purposes of having connecting device in a network? 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
What are the differences between them?
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
What are the characteristics of a voice-user interface?
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
What are the strengths and weaknesses of a voice-user interface in comparison
 to a graphical user-interface?
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
One of the 8 golden rules for interface design is the element of consistency.
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the importance of consistency in designing a user interface.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Is consistency still important in the newer user-interfaces (eg.
 voice, gesture)? Why is this so? 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Voice User interfaces gaining popularity with the readily availablity of
 devices like Echo and iphone.
 What do you think are some of the key design elements that are vital to
 an effective user experience when using such devices? Explain your answers.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Explain what is meant by the following terms and give an example for each
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Candidate key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Secondary key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Foreign key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The school’s Robotics club is looking at designing a relational database
 to keep track of members participation and achievements.
 Proposed a relational database design for this purpose.
\end_layout

\begin_deeper
\begin_layout Enumerate
Give the table descriptions in shorthand notations.
 Explain the purpose of all your tables.
 Highlight the necessary details needed in your design.
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
(ii) Draw the entity-relationship model for your design.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
An apartment block in a city consists of a large number of apartments.
 Each of the residents of the apartments has their information stored in
 a file.
 
\end_layout

\begin_deeper
\begin_layout Standard
The records in the file are to be sorted into alphabetical order of the
 resident’s name.
 
\end_layout

\begin_layout Enumerate
Using the following list of names as an example, show how the records can
 be sorted into alphabetical order using an insertion sort.
 
\end_layout

\begin_deeper
\begin_layout Standard
GRA, CHR, DAV, SAR, TOM, KAT
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\end_deeper
\begin_layout Enumerate
Residents sometimes make requests for maintenance on their apartments.
 Each request is given a priority number ranging from 1, for failure of
 the air conditioning, to 10, for a dripping tap.
 Each request is stored in a linked list in order of priorities.
 Jobs with equal priority are stored in order of the date that they have
 been submitted.
\end_layout

\begin_deeper
\begin_layout Standard
Describe an algorithm to insert a new job into the list.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between an iterative solution and a recursive solution
 to a problem.
 [2]
\end_layout

\begin_layout Enumerate
The program 
\family typewriter
RADIX_CONVERT
\family default
, listed below, calls a recursive procedure, 
\family typewriter
OUT
\family default
.
 Note that 
\family typewriter
x DIV y
\family default
 gives the integral part of the quotient when x is divided by 
\family typewriter
y
\family default
, and 
\family typewriter
x MOD y
\family default
 gives the remainder.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Program RADIX_CONVERT 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

declare integers a, b 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

input a, b
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

OUT (a, b) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print a, b 
\end_layout

\begin_layout Plain Layout

\family typewriter
End RADIX_CONVERT
\end_layout

\begin_layout Plain Layout

\family typewriter
Procedure OUT (x, y) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

declare integers a, b
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

a = x DIV y
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

b = x MOD y 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

if a > 0 then OUT (a, y)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

print (b) 
\end_layout

\begin_layout Plain Layout

\family typewriter
end OUT
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Draw a diagram to trace the execution of the program, 
\family typewriter
RADIX_CONVERT
\family default
 with values 46 and 3 as input for 
\family typewriter
a
\family default
 and 
\family typewriter
b
\family default
 respectively.
 Show clearly the order of call and return, and the change in values of
 
\family typewriter
a
\family default
 and 
\family typewriter
b
\family default
.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Write down, in the correct order, all the values printed.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
What does 
\family typewriter
RADIX_CONVERT
\family default
 accomplish? 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Carrie Car, a car accessories shop wants to sell its products through the
 internet.
 A software house has been engaged to supply the computerised solution.
 The project manager has drawn up a list of activities and their likely
 duration.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Activity
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Weeks to complete
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write requirement specification
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Produce program design
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write module code
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module testing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
E
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integration testing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alpha testing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
G
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Install software and acceptance testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
H
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write end user training guide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
J
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Write technical documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
K
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
End user training 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sign off final system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The project manager decides to construct a Program Evaluation Review Technique
 (PERT) chart from this data.
\end_layout

\begin_deeper
\begin_layout Enumerate
Complete the PERT chart.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
State the critical path and elapsed time for this project.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
State the earliest and late start for activity J.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The systems analyst from the team gathered the following requirements: 
\end_layout

\begin_deeper
\begin_layout Itemize
A customer can place an order either by telephone or via the internet 
\end_layout

\begin_layout Itemize
The order will be placed in a file to be dealt with by the warehouse staff
\end_layout

\begin_layout Itemize
An email acknowledgement of the order will be sent to the customer 
\end_layout

\begin_layout Itemize
After completion of the order the customer details will be stored in a customer
 file
\end_layout

\begin_layout Standard
List details of the data stores required, and draw the data flow diagram
 for the solution.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
Various procedures are written.
 One of the procedures is written to look up the customer record in the
 customer file.
 The procedure then adds the value of the current order to the total ordered
 by the customer this year.
 This determines whether or not a discount is payable.
 
\end_layout

\begin_deeper
\begin_layout Standard
Parameters can be passed to a procedure by using pass-by-value or pass-by-refere
nce.
 Explain the two methods and highlight the difference.
 Using the scenario above, give an example of each to illustrate the difference.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
Besides car accessories, Carrie Car also sells car insurance.
 Customers can insure their car using one of two methods: 
\end_layout

\begin_deeper
\begin_layout Itemize
Method A: by using the Internet or 
\end_layout

\begin_layout Itemize
Method B: by using the telephone to talk to a sales representative.
\end_layout

\begin_layout Enumerate
For method A, describe how the car registration could be validated.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
For method B, describe how the car registration could be verified.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Explain the difference between data validation and data verification.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The rules that are used when deciding whether to offer insurance to customers
 and whether to offer discounts are as follows: 
\end_layout

\begin_deeper
\begin_layout Itemize
If the customer has been refused insurance by another company and their
 car is over 10 years old then insurance is refused.
 
\end_layout

\begin_layout Itemize
If the customer has been refused insurance by another company and their
 car is not more than 10 years old then insurance without any discount is
 available.
 
\end_layout

\begin_layout Itemize
If the customer has not been refused insurance by another company and their
 car is over 10 years old then insurance without any discount is available.
 
\end_layout

\begin_layout Itemize
If the customer has not been refused insurance by another company and their
 car is less than 10 years old and they have made not more than three claims
 previously then insurance with a discount is available.
 
\end_layout

\begin_layout Enumerate
Create a decision table showing all the possible outcomes and results.
 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The elements of an array are numbered 0 to MAX.
 It is wished to copy all the data items stored in that part of the array
 between START and FINISH to a different position in the array, the item
 at START moving to NEWSTART.
 
\end_layout

\begin_deeper
\begin_layout Standard
Describe in detail an algorithm to accomplish this.
 You may assume that no items will be moved beyond the range of the array,
 but remember that the copying may be in either direction, and that the
 new position may overlap the old.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="28">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Plain text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
g
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
h
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
i
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
j
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
k
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
m
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
o
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
p
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
u
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
v
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is substituted by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Cipher text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Please enter a menu item index (or −1 to complete the order):
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
