#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 DHS 2020
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
Given an array of numbers 
\family typewriter
A
\family default
, count the minimum number of 'bubble sort' swaps (swap between pair of
 consecutive items) needed to sort the array in ascending order.
 
\end_layout

\begin_deeper
\begin_layout Standard
For example, if 
\family typewriter
A = [3, 2, 1, 4]
\family default
, we need 3 'bubble sort' swaps to sort A in ascending order i.e.
 
\end_layout

\begin_layout Standard

\family typewriter
swap(3, 2)
\family default
 to get 
\family typewriter
[
\bar under
2, 3
\bar default
, 1, 4] 
\end_layout

\begin_layout Standard

\family typewriter
swap(3, 1)
\family default
 to get 
\family typewriter
[2, 
\bar under
1, 3
\bar default
, 4]
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
swap(1, 2)
\family default
 to get 
\family typewriter
[
\bar under
1, 2
\bar default
, 3, 4]
\family default
 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n^{2})$
\end_inset

 algorithm using bubble sort to count the number of 'bubble sort' swaps.
 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n\log n)$
\end_inset

 algorithm to count the number of 'bubble sort' swaps.
 
\end_layout

\begin_layout Standard
You should also explain why each algorithm has its efficiency.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

Would you expect insertion sort to perform better or worse than bubble sort
 in (a)? Explain your answer with respect to the number of comparisons needed
 using the above example.
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

Why is quick sort not a suitable algorithm in part (b)? Illustrate your
 answer with a suitable example.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Enumerate
You have been tasked to use a suitable data structure to manage the preliminary
 exam results of students in Dunman High School.
 Each student is identified by its centre and index numbers, each of which
 is 4-digit.
 For example, Lim Ah Seng's identification number is 30420188.
 A typical range of students' identification numbers are from 30420001 to
 30420450, since each graduating cohort will have about 450 students.
 
\end_layout

\begin_deeper
\begin_layout Standard
The preliminary examination details to be stored are as follows: 
\end_layout

\begin_layout Itemize
Subject code (4-digit) eg 9569 
\end_layout

\begin_layout Itemize
Subject name eg H2 Computing 
\end_layout

\begin_layout Itemize
Subject grade (1-character eg 'A') You may assume that each student will
 have a valid subject grade in the range of ['A', 'B', 'C', 'D', 'E', 'S',
 'U', 'T', '0'], where 'T' stands for terminated and '0' stands for absent.
 
\end_layout

\begin_layout Standard
Using suitable examples, evaluate the pros and cons using each of the following
 data structure to store the required information: 
\end_layout

\begin_layout Enumerate
dictionary 
\end_layout

\begin_layout Enumerate
hash table 
\begin_inset space \hfill{}
\end_inset

[12]
\end_layout

\end_deeper
\begin_layout Enumerate
The information in Question 2 will also be stored in a relational database.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Why is a relational database model more suitable than a NoSQL database model
 for storing the required information? 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Produce the specification for the tables.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Using examples in this context, explain the significance of the following
 terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
1NF
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
2NF
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
3NF 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
What is the relationship between the data structures in Question 2 and a
 relational database? [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The following diagram shows the contents with some data inserted.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State two possible insertion orders of data to this BST.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Generalise how data can be inserted to produce a balanced BST.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Enumerate
The BST is to be implemented using a 1D array T.
 Write pseudocode to show how data can be represented in T with suitable
 initial values for an empty BST.
 
\begin_inset space \hfill{}
\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to insert to this BST.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to check if T is a BST.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Convert the recursive algorithm in part (e) to an iterative one using a
 suitable data structure which you should name and justify.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the items in T that are within a given range
 [a, b] inclusive in ascending order.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the contents of the leaves of T in descending
 order.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Despite its memory overhead, why is recursion often used in BSTs? 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Why is recursion less often used in linked lists?
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
A student came up with the following Python program to implement a linked
 list data structure:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}
\end_inset

class Node: 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

def __init__(self, data): 
\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

self.data = data 
\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

self.link = None 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}
\end_inset

def insert(data): 
\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

global head 
\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

if head == None: # empty linked list 
\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

head = Node(data) 
\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

else: # insert to front 
\end_layout

\begin_layout Plain Layout

\family typewriter
11
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

new_node = Node(data) 
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

new_node.link = head 
\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

head = new_node 
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

def display(): 
\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

global head 
\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

curr = head 
\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

while curr: 
\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

print(curr.data) 
\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

curr = curr.link 
\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}
\end_inset

# main 
\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}
\end_inset

head = None 
\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}
\end_inset

insert("Ali") 
\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}
\end_inset

insert("Tom") 
\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}
\end_inset

insert("Mary") 
\end_layout

\begin_layout Plain Layout

\family typewriter
27
\begin_inset space \qquad{}
\end_inset

display() 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
What will be the output of line 27?
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Comment on the programming paradigms used and identify any potential pitfalls
 in the above program.
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
Why is OOP appropriate in the implementation of data structures such as
 linked lists?
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
The above program maintains an unordered linked list.
 Devise an algorithm to insert to an ordered linked list.
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
A linked list can be ordered or unordered.
 Draw a UML class diagram to illustrate the concepts of encapsulation, inheritan
ce and polymorphism.
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Enumerate
Explain how polymorphism is applied to the 
\family typewriter
insert()
\family default
 rather than the 
\family typewriter
display()
\family default
 method in this context.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\begin_layout Enumerate
On 14 September 2020, it was reported that GrabCar was fined S$10,000 for
 a 4th user data privacy violation.
 The Personal Data Protection Commission (PDPC) said the update risked the
 personal data of 21,541 drivers and passengers, including profile pictures,
 names and vehicle plate numbers.
 
\end_layout

\begin_deeper
\begin_layout Standard
GrabCar rolled back the app to the previous version within about 40 minutes
 and took other remedial action, PDPC said.
 
\end_layout

\begin_layout Standard
On Aug 30, 2019, GrabCar notified the PDPC that profile data of 5,651 GrabHitch
 drivers was exposed to the risk of unauthorised access by other GrabHitch
 drivers for a "short period of time on the same day" through the Grab app.
 
\end_layout

\begin_layout Standard
Grab's investigations traced the cause of the breach to a deployment of
 an update to the app on the same day.
 The purpose of the update was to address a potential vulnerability discovered
 within the Grab app.
 
\end_layout

\begin_layout Standard
In PDPC's findings, the application programming interface URL which allowed
 GrabHitch drivers to access their data, had contained a "userID" portion
 that could potentially be manipulated to allow access to other drivers'
 data.
 According to GrabCar, there was no evidence that this vulnerability was
 exploited.
 
\end_layout

\begin_layout Standard
To fix the vulnerability, the update removed the "userID" from the URL,
 which shortened it to a hard-coded "users/profile".
 However, it failed to take into account the URL-based caching mechanism
 in the app, which was configured to refresh every 10 seconds.
 
\end_layout

\begin_layout Standard
The mechanism served cached content in response to data requests, so as
 to reduce the load of direct access to GrabCar's database.
 
\end_layout

\begin_layout Standard
With the update, all URLs in the Grab app ended with "users/profile".
 Without the "userID" in the URL, which directed data requests to the correct
 GrabHitch driver's accounts, the caching mechanism could no longer differentiat
e between drivers.
 
\end_layout

\begin_layout Standard
Thus, the mechanism provided the same data to all GrabHitch drivers for
 10 seconds before new data was retrieved from GrabCar's database and cached
 for the next 10 seconds.
 
\end_layout

\begin_layout Standard
PDPC said GrabCar did not put in place "sufficiently robust processes" to
 manage changes to its IT system that may put personal data it was processing
 at risk.
 
\end_layout

\begin_layout Standard
"This was a particularly grave error given that this is the second time
 the (GrabCar) is making a similar mistake, albeit with respect to a different
 system," he said.
\end_layout

\begin_layout Standard
In a statement in response to Reuters' query, Grab said: "To prevent a recurrenc
e, we have since introduced more robust processes, especially pertaining
 to our IT environment testing, along with updated governance procedures
 and an architecture review of our legacy application and source codes."
 
\end_layout

\begin_layout Standard
In 2019, GrabCar was ordered to pay a financial penalty of S$16,000 after
 it sent out more than 120,000 marketing emails to customers containing
 the name and mobile phone number of another customer.
 
\end_layout

\begin_layout Standard
The PDPC had found that GrabCar “failed to make reasonable security arrangements
” to detect the errors in their database when sending out the emails.
 
\end_layout

\begin_layout Standard
Source: Reuters/CNA/lk 
\end_layout

\begin_layout Standard
Adapted from https://www.channelnewsasia.com/news/business/grab-car-hitch-pdpc-per
sonal-data-risk-fin e-13108144 
\end_layout

\begin_layout Enumerate
For each of the following, suggest two ways in which the data leaks could
 have been exploited by a malicious hacker with reference to 
\end_layout

\begin_deeper
\begin_layout Enumerate
profile pictures, names and vehicle plate numbers of drivers and passengers
 [2]
\end_layout

\begin_layout Enumerate
name and mobile phone number of customers [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What could have caused 
\end_layout

\begin_deeper
\begin_layout Enumerate
the URL related data leak? 
\end_layout

\begin_layout Enumerate
the marketing emails related data leak? 
\end_layout

\begin_layout Enumerate
the repeated data leaks? 
\end_layout

\begin_layout Standard
You should provide a balance of technical and human related reasons.
 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
How can Grab ensure and assure PDPC that sufficiently robust processes have
 been put in place? [3]
\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
