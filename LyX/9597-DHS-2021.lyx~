#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 DHS 2021
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A cosmic ray striking computer memory at just the right time can flip a
 bit, turning a 0 into a 1 or vice versa.
 
\end_layout

\begin_deeper
\begin_layout Standard
Bit flips had caused plane accidents, software glitches, and at times, the
 Blue Screen of Death (BSoD) on personal computers.
 
\end_layout

\begin_layout Enumerate
The hexadecimal number 
\family typewriter
D4
\family default
 had been changed to 
\family typewriter
9A
\family default
.
 Suggest the minimum number of times a bit flip could have affected it and
 explain why.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain why Unicode characters, as compared to ASCII characters, are more
 likely to be altered after a cosmic ray strike.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Define what a backup and archive is, and explain which should be prioritised
 if a company is warned of a global cosmic ray strike occurring in a week.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Explain how TCP/IP layers help to fulfil the purpose of the TCP/IP model.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Suggest and explain a consequence on network communication when a data packet
 is affected by a bit flip occurring at the Internet Layer
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Explain why the consequence of a bit flip occurring at the Internet Layer
 and the Transport Layer would be the same as the consequence as a bit flip
 occurring at the Internet Layer only.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
An array stores 16 powers of 2 integers in ascending order: 
\end_layout

\begin_deeper
\begin_layout Standard
1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768
 
\end_layout

\begin_layout Enumerate
If the array is searched by means of a binary search, state which elements
 would be accessed, and in what order,
\end_layout

\begin_deeper
\begin_layout Enumerate
when searching for the number 4096 (which is present), and 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
when searching for the number 3 (which is not present).
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a program flowchart of an iterative binary search algorithm.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
Explain why binary search could be more efficient than linear search.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State the time complexities of hash table search and binary search and explain
 which is more efficient with reference to their time complexities in the
 above scenario.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\end_deeper
\begin_layout Enumerate
A mobile network provider’s management of customer’s overdue bills include
 an automated emailing and SMS system.
 
\end_layout

\begin_deeper
\begin_layout Itemize
If a mobile bill is overdue, a daily system generated reminder is emailed
 to the user indicating the overdue details.
 
\end_layout

\begin_layout Itemize
If the user has 1 mobile bill that is more than 6 days overdue, in place
 of the daily reminder email, a warning email and SMS will be sent to the
 user.
 
\end_layout

\begin_layout Itemize
If a user has more than 4 bills which are more than 14 days overdue, the
 user will incur a penalty fee for every additional week starting from the
 14th day of being overdue.
\end_layout

\begin_layout Itemize
If a user has incurred more than 3 penalty fees, the user’s mobile service
 will be terminated.
 
\end_layout

\begin_layout Itemize
Penalty fees could be incurred as a result of other actions such as accessing
 illegal websites.
 
\end_layout

\begin_layout Itemize
Each bill issued to a customer represents the past month’s usage.
 
\end_layout

\begin_layout Enumerate
Create a decision table showing all possible outcomes and results for bill(s)
 that are overdue.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Simplify the decision table by removing redundancies.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
A user interface is designed for a program for customers to check their
 bills and overdue status.
 State a usability principle and describe how the user interface of the
 program should be designed to demonstrate this principle.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a linked list data structure could be more suitable than an
 array data structure to implement a binary tree.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
(b) Suggest and justify one circumstance where an array structure is more
 appropriate than a linked structure.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
The diagram shows a binary tree before and after an inversion.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/Beertino/Desktop/Github/Question_Bank/question_bank/static/img/9597-DHS-2021-P1-Q4-1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
Each node has these attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
right
\family default
 which is the pointer to right subtree 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
 which is the value contained in each respective node displayed above 
\end_layout

\begin_layout Itemize

\family typewriter
left
\family default
 which is the pointer to the left subtree
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Write pseudocode for procedure 
\family typewriter
insert
\family default
 which will add a node to the post-inverted tree (which may be empty) in
 such a way that if the new value of the node is 
\series bold
less
\series default
 than the value at the current node, the new node will be added to the 
\series bold
right
\series default
 subtree, or else it will be added to the left subtree.
 
\family typewriter
insert
\family default
 takes in values 
\family typewriter
node_data
\family default
 and 
\family typewriter
root_node
\family default
 which is the value to be added to the tree and the instance of the root
 node of the tree respectively.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d) 
\end_layout

\end_inset

A function 
\family typewriter
invertTree
\family default
 takes in the root node of the above pre-inverted tree, uses recursion to
 invert it into the post-inverted tree, and returns the root node of the
 post-inverted tree.
 Write pseudocode for the function and visualise it in a trace diagram.
 An incomplete trace diagram is provided for you to begin with.
 Copy and complete it.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename C:/Users/Beertino/Desktop/Github/Question_Bank/question_bank/static/img/9597-DHS-2021-P1-Q4-2.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
(Note: Should be invertTree, not insertTree) 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Consider the following data which shows a single Civics Group record used
 in COVID19 vaccination tracking.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename C:/Users/Beertino/Desktop/Github/Question_Bank/question_bank/static/img/9597-DHS-2021-P1-Q4-2.png
	width 50page%

\end_inset


\end_layout

\begin_layout Enumerate
Derive a set of tables to show the above data in first, second and third
 normal form.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Using examples in the above context, explain the significance of the following
 terms:
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
With reference to the above context, describe or suggest a scenario where
 a NoSQL database would be more appropriate.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_deeper
\begin_layout Enumerate
Long-distance optical fibre lines and submarine cables which are a vital
 part of the global internet infrastructure are vulnerable to solar superstorms
 which happen once in a century.
 The last solar superstrom was in 1921.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State and explain why websites would or would not be accessible by web browsers
 if a solar superstorm shuts down all DNS servers.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain packet switching and its importance in ensuring global internet
 connectivity when some parts of the earth are hit by a solar superstorm.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
An international company based in many countries updates its network structure
 to ensure Internet connectivity during solar superstorms.
 
\end_layout

\begin_layout Standard
Employees can now access files on a shared virtual space which is made up
 of 3 servers located in the United States, Europe, and Asia.
 All servers hold identical information (any changes made on one server
 would update the other servers immediately) so even if one server is affected
 by the solar superstorm, employees still can access their files on the
 other servers.
 
\end_layout

\begin_layout Standard
Employees must be connected physically to the company’s intranet network
 at each country’s office to access the virtual space.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

Draw a network diagram of the above configuration and label the LAN, internet,
 router(s), WAN link(s), intranet, servers, and employee laptops.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

Why is version control vital when employees from different countries work
 in teams? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A divide and conquer approach is used by merge sort to successively divide
 a list into half, forming two sublists, until each sublist is of length
 1.
 The sublists are then sorted and merged into larger sublists until they
 are recombined into a single sorted list.
 An algorithm for merge sort to perform an ascending sort is given below.
 It will be used to sort large or small data sizes.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE mergesort(mergelist : ARRAY) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

IF LENGTH(mergelist) > 1 THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mid ← LENGTH(mergelist) DIV 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR index ← 0 TO (mid - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

lefthalf[index] ← mergelist[index] 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NEXT index
\end_layout

\begin_layout Plain Layout

\family typewriter
10
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

right_len ← LENGTH(mergelist) - mid
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR index ← 0 TO (right_len - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

righthalf[index] ← mergelist[right_len + index] 
\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NEXT index 
\end_layout

\begin_layout Plain Layout

\family typewriter
16
\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(lefthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(righthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
19
\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← lefthalf[i]
\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← i + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← righthalf[j] 
\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← j + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1
\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
33
\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(lefthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← lefthalf[i] 
\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← i + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
39
\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE j < LENGTH(righthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist(k] ← righthalf[j] 
\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← j + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
46 ENDPROCEDURE 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The following array of numbers is to be sorted using 
\family typewriter
mergesort
\family default
: 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
mergelist = [2, 4, 2, 8, 2, 8, 9, 1, 3]
\family default
 
\end_layout

\begin_layout Standard
What are the first two lists to be merged? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain what a logic error is, give the line number for the logic error
 in the above code, and rewrite the line correctly.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
The procedure
\family typewriter
 sorting_proc
\family default
 uses an optimised bubble sort to sort an array
\family typewriter
 input_array
\family default
 in an ascending order.
 It is used within 
\family typewriter
modified_mergesort
\family default
 which is a modified version of 
\family typewriter
mergesort
\family default
.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE sorting_proc(input_array : ARRAY) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

length ← LENGTH(input_array) 
\end_layout

\begin_layout Plain Layout

\family typewriter
04
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

swapped ← FALSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
07
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR curr_elem_index ← 1 to length – 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
09
\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF input_array [curr_elem_index - 1] > input_array [curr_elem_index] THEN
 
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

SWAP (input_array [curr_elem_index - 1], input_array [curr_elem_index])
 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

swapped ← TRUE 
\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDFOR
\end_layout

\begin_layout Plain Layout

\family typewriter
16
\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

length ← length – 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}
\end_inset

UNTIL NOT swapped 
\end_layout

\begin_layout Plain Layout

\family typewriter
20
\end_layout

\begin_layout Plain Layout

\family typewriter
21 ENDPROCEDURE 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE modified_mergesort(mergelist : ARRAY) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

IF LENGTH(mergelist) > 1 THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF LENGTH(mergelist) < 5 THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

sorting_proc(mergelist) 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE
\end_layout

\begin_layout Plain Layout

\family typewriter
10
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mid ← LENGTH(mergelist) DIV 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR index ← 0 TO (mid - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

lefthalf[index] ← mergelist[index] 
\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NEXT index
\end_layout

\begin_layout Plain Layout

\family typewriter
16
\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

right_len ← LENGTH(mergelist) - mid 
\end_layout

\begin_layout Plain Layout

\family typewriter
18
\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR index ← 0 TO (right_len - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

righthalf[index] ← mergelist[right_len + index] 
\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NEXT index 
\end_layout

\begin_layout Plain Layout

\family typewriter
22
\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(lefthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(righthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
25
\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← lefthalf[i] 
\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← i + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
33 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← righthalf[j]
\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← j + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
39 
\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE i < LENGTH(lefthalf) 
\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← lefthalf[i] 
\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← i + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1
\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE
\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\end_layout

\begin_layout Plain Layout

\family typewriter
46 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE j < LENGTH(righthalf)
\end_layout

\begin_layout Plain Layout

\family typewriter
47 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergelist[k] ← righthalf[j] 
\end_layout

\begin_layout Plain Layout

\family typewriter
48 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← j + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
49 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

k ← k + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
50 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
51 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
52 
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
53 ENDPROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Would the above modification of mergesort improve the algorithm’s overall
 efficiency? Support your answer with a description on how and explanation
 on why its efficiency is affected.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Standard
The procedure 
\family typewriter
insertionSort
\family default
 is an algorithm which uses insertion sort.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE insertionSort(input_array: ARRAY) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

current_elem_index ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

current_elem_index ← current_elem_index + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

compared_item_index ← -1 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

swapped ← FALSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

compared_item_index ← compared_item_index + 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF input_array[current_elem_index] < input_array[compared_item_index] THEN
 
\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

temp ← input_array[current_elem_index]
\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

the value of each element of input_array from compared_item_index to (current_el
em_index – 1) is sequentially assigned to each element of input_array from
 (compared_item_index + 1) to current_elem_index
\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

input_array[compared_item_index] ← temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

swapped ← TRUE 
\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

UNTIL swapped ← TRUE 
\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}
\end_inset

UNTIL current_elem_index = LENGTH(input_array) - 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\end_layout

\begin_layout Plain Layout

\family typewriter
28 ENDPROCEDURE 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Modify 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 to count and store the number of comparisons made in a variable named 
\family typewriter
comparisons
\family default
.
 Instead of copying all the pseudocode statements, state the line number(s)
 you want to modify or insert any pseudocode at, followed by the pseudocode
 statement(s) to be added/modified.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 Trace the modified algorithms 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 for the array 
\family typewriter
[5, 2, 3, 4]
\family default
 showing the value of all variables for each step by completing the following
 tables.
 
\end_layout

\begin_deeper
\begin_layout Standard
Trace table for 
\family typewriter
insertionSort
\family default
: 
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
current_elem _index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
compared_item_index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
comparisons
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
input_array
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
swapped
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[2,5,3,4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
TRUE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[2,5,3,4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Trace table for 
\family typewriter
sorting_proc
\family default
: 
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
current_elem _index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
compared_item_index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
input_array
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
arr_length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
swapped
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[2,5,3,4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
TRUE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
[2,5,3,4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
...
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\family default
 
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 In the context of 
\family typewriter
mergesort
\family default
, suggest scenario(s) where using the current optimised bubble sort algorithm
 for 
\family typewriter
sorting_proc
\family default
 would be better than using the 
\family typewriter
insertionSort
\family default
 algorithm above.
 Support your answer by designing 3 test cases (normal and boundary) and
 comparing the number of 
\family typewriter
comparisons
\family default
 made by each algorithm for each test case.
 Display your output.
 
\begin_inset space \hfill{}
\end_inset

 [7]
\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Enumerate

\series bold
Task 1
\end_layout

\begin_deeper
\begin_layout Standard
For this task, submit all code as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
 
\end_layout

\begin_layout Standard
The Taliban’s takeover of Afghanistan had seen the United States (US) evacuating
 people.
 The Republic of Singapore Air Force offers its A330 Multi-Role Tanker Transport
 plane (A330 MRTT) to help the US airlift groups of evacuees from Afghanistan.
 
\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
To prevent Taliban interference, messages sent between evacuees and the
 A330 MRTT are encrypted.
 
\end_layout

\begin_layout Standard
The encryption converts each character of the message into its ASCII number
 representation, adds the ASCII number representation of a character of
 a secret key which is in the same position, and then converts it back into
 ASCII text.
 
\end_layout

\begin_layout Standard
Secret keys are generated from passwords known only by the sender and receiver.
 Passwords that are shorter in length than the message are lengthened to
 match by repeating the password until the same length as the message is
 achieved.
 
\end_layout

\begin_layout Standard
For example, given that the inputs are 
\end_layout

\begin_layout Standard

\family typewriter
password : "cat" 
\end_layout

\begin_layout Standard

\family typewriter
message 
\begin_inset space ~
\end_inset

: "hello"
\family default
 
\end_layout

\begin_layout Standard
Step 1 - Extend password by repeating until matches length of message 
\end_layout

\begin_layout Standard

\family typewriter
"cat" -> "catca" 
\end_layout

\begin_layout Standard
Step 2 - Convert each character of password and message into ASCII number
 representation 
\end_layout

\begin_layout Standard

\family typewriter
"hello" -> 104, 101, 108, 108, 111 
\end_layout

\begin_layout Standard

\family typewriter
"catca" -> 99, 97, 116, 99, 97 
\end_layout

\begin_layout Standard
Step 3 - Add the ASCII number representation of same positions together
 
\end_layout

\begin_layout Standard

\family typewriter
104+99, 101+97, 108+116, 108+99, 111+97 -> 203, 198, 224, 207, 208 
\end_layout

\begin_layout Standard
Step 4 - Convert each number to its ASCII character 
\end_layout

\begin_layout Standard

\family typewriter
203, 198, 224, 207, 208 -> "ËÆàÏÐ" 
\end_layout

\begin_layout Standard
Therefore, the results are 
\end_layout

\begin_layout Standard

\family typewriter
Secret key : "catca" 
\end_layout

\begin_layout Standard

\family typewriter
Encrypted message : "ËÆàÏÐ" 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generateKey(password, message)
\family default
 that takes in two argument strings 
\family typewriter
message
\family default
 and 
\family typewriter
password
\family default
 and returns the secret key.
 
\end_layout

\begin_layout Standard
Test your function using 
\family typewriter
generateKey("cat", "hello")
\family default
 and show your output.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write functions 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 that takes in 
\family typewriter
password
\family default
 and message strings and returns the encrypted or decrypted 
\family typewriter
message
\family default
.
 It should use the above function 
\family typewriter
generateKey(password, message)
\family default
 to obtain the secret key before performing the encryption.
 
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
decrypt("cat", encrypt("cat","hello"))
\family default
.
 Show your output.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Since the A330 MRTT plane can only take a maximum of 266 passengers at once,
 implement a 
\family typewriter
Queue
\family default
 to manage incoming pickup requests and dropoffs.
 Write a class Queue with the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
enqueue(string)
\family default
 which takes in a string and adds it to the queue or returns 
\family typewriter
"Queue is full!"
\family default
 if queue is full 
\end_layout

\begin_layout Itemize

\family typewriter
dequeue
\family default
 which removes the next item for the queue or returns 
\family typewriter
"Queue is empty!"
\family default
 if the queue is empty 
\end_layout

\begin_layout Itemize

\family typewriter
display
\family default
 which returns a string of queue items in sequence from head to tail or
 returns 
\family typewriter
"Queue is empty!"
\family default
 if the queue is empty
\end_layout

\begin_layout Itemize

\family typewriter
current_size
\family default
 which returns an integer of the number of items in the queue.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 1.4 
\end_layout

\begin_layout Standard
Using socket programming, write the client program for the evacuee teams
 (client) in Afghanistan and the A330 MRTT plane (server) to communicate.
 The program should 
\end_layout

\begin_layout Itemize
use the above queue data structure to manage the requests 
\end_layout

\begin_layout Itemize
request the user to set a password for encryption at the start of the program
 
\end_layout

\begin_layout Itemize
present the user with incoming pickup requests and pickup details (Team
 name and group size) as well as queue details (size of current queue) 
\end_layout

\begin_layout Itemize
allow the user(server) to accept/reject pickup requests 
\end_layout

\begin_layout Itemize
encrypt all information sent and received using 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 functions.
 
\end_layout

\begin_layout Standard
You are provided with the client program in 
\family typewriter
client.py
\family default
.
 Write and submit the server program as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
 
\end_layout

\begin_layout Standard
Study the following sample program output to determine your code design,
 output format and socket protocol.
 User inputs are underlined.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Sample server program:
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password: Answer: 
\bar under
WDIB4
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
2
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Queue is empty! 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu:
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Awaiting connection from pickup client...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Client's Team name: Team1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 143
\end_layout

\begin_layout Plain Layout

\family typewriter
No.
 of passengers in queue: 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Confirm pickup? Y/N? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\bar under
Y
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Added to queue.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Items in queue now are: Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Next action? Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Awaiting connection from pickup client...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Client's Team name: Team2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 151 
\end_layout

\begin_layout Plain Layout

\family typewriter
No.
 of passengers in queue: 143 
\end_layout

\begin_layout Plain Layout

\family typewriter
You do NOT have capacity for them.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\begin_inset VSpace bigskip
\end_inset

Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Awaiting connection from pickup client...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Client's Team name: Team3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 19 
\end_layout

\begin_layout Plain Layout

\family typewriter
No.
 of passengers in queue: 143
\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Confirm pickup? Y/N? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\bar under
N
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection disconnected.
 
\begin_inset VSpace bigskip
\end_inset

Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Awaiting connection from pickup client...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Client's Team name: Team4 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 15 
\end_layout

\begin_layout Plain Layout

\family typewriter
No.
 of passengers in queue: 143 
\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Confirm pickup? Y/N? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\bar under
Y
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Added to queue.
 Items in queue now are: 
\end_layout

\begin_layout Plain Layout

\family typewriter
Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1,
 Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4,
 Team4, Team4, Team4, Team4, 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from the next pickup location client 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
2
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

How many to dequeue? 143
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Items in queue now are: 
\end_layout

\begin_layout Plain Layout

\family typewriter
Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4,
 Team4, Team4, Team4, Team4, 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\bar under
1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Awaiting connection from pickup client...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong secret key.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset

Next action? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Sample client programs (in sequence): 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\emph on
CLIENT 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
WDIB4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
Team1
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Group size?
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
143
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\emph on
CLIENT 2
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
WDIB4
\bar default
 solver("((1*7)+6)")
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
Team2
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
151
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again.
 Connection disconnected.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\emph on
CLIENT 3
\series default
\emph default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
WDIB4
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
Team3
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
19
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\emph on
CLIENT 4 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
WDIB4
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
Team4
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
15
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup to arrive.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series bold
\emph on
CLIENT 4 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
FEWF
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
Team5
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\bar under
10
\bar default
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection...
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup cancelled.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[15]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Task 2
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as 
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<index_number>_<name>.ipynb 
\end_layout

\begin_layout Standard
You will be writing a Math game program for Form Teachers to play with students
 in school.
 The game auto-generates math expressions and tracks scoring.
 
\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using a stack data structure, write a function 
\family typewriter
solver(expr)
\family default
 that takes in a string of a mathematical expression expr such as 
\family typewriter
"((1*7)+6)"
\family default
 and returns 
\family typewriter
13
\family default
.
 You may assume that the entire expression would never have spaces, and
 would always be enclosed in an opening and closing parenthesis "( )".
 Do not use the built-in function 
\family typewriter
eval()
\family default
.
 Test your function with 
\family typewriter
solver("((1*7)+6)")
\family default
 and show your output.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generate_expression
\family default
 that takes in an integer 
\family typewriter
operator_count
\family default
 and returns a string of a mathematical expression which has the specified
 number of operators (i.e.
 
\family typewriter
+ - * /
\family default
 ) in 
\family typewriter
operator_count
\family default
.
 The function should use 
\series bold
recursion
\series default
 to form up the operators and operands.
 The operands, operators and positions of operands and operators should
 be random.
 
\end_layout

\begin_layout Standard
For example, 
\family typewriter
generate_expression(5)
\family default
 would output "
\family typewriter
(4*(6-(2+((1*7)+6))))
\family default
" and 
\family typewriter
generate_expression(5
\family default
) would output "
\family typewriter
((8+(6+((2*4)-3)))+6)
\family default
".
 
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
generate_expression(5)
\family default
 and show your output.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Implement the following using object-oriented programming: 
\end_layout

\begin_layout Itemize

\family typewriter
Person
\family default
, a class, which 
\end_layout

\begin_deeper
\begin_layout Itemize
initialises with these attributes 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
name: string 
\end_layout

\begin_layout Itemize

\family typewriter
gender: string
\family default
 where male is "
\family typewriter
M
\family default
" and female is "
\family typewriter
F
\family default
" 
\end_layout

\begin_layout Itemize

\family typewriter
score: integer 
\end_layout

\end_deeper
\begin_layout Itemize
has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which displays the 
\family typewriter
Person
\family default
’s 
\family typewriter
name
\family default
, 
\family typewriter
gende
\family default
r and 
\family typewriter
score
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
1.
 eg "
\family typewriter
Nelson(M)’s score is 3.
\family default
" 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
attempts()
\family default
 which
\end_layout

\begin_deeper
\begin_layout Itemize
1.
 uses the function 
\family typewriter
generate_expression
\family default
 from Task 2.2 to generate and display a random math expression of 2 operators
 
\end_layout

\begin_layout Itemize
2.
 queries the user to give an answer rounded up to the nearest integer 
\end_layout

\begin_layout Itemize
3.
 displays "
\family typewriter
Good job!
\family default
" if the input is correct or "
\family typewriter
Wrong answer.
 (Correct answer: <answer>)
\family default
" where 
\family typewriter
<answer>
\family default
 is the correct answer.
 
\end_layout

\begin_layout Itemize
4.
 increases the score of the student by 
\family typewriter
1
\family default
 if the answer is correct 
\end_layout

\begin_layout Itemize
5.
 displays the user’s latest 
\family typewriter
sc
\family default
ore 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
Student
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following attribute 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
role: string
\family default
 which is "
\family typewriter
no role
\family default
" by default unless the 
\family typewriter
Student
\family default
 has a class committee role such as "
\family typewriter
chairperson
\family default
" 
\end_layout

\end_deeper
\begin_layout Itemize
also has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
student_role()
\family default
 which returns a string describing the 
\family typewriter
role
\family default
 of the 
\family typewriter
Student
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
FormTeacher
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following methods
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which uses polymorphism to display the
\family typewriter
 FormTeacher
\family default
’s information with salutation to the FormTeacher’s name 
\end_layout

\begin_deeper
\begin_layout Itemize
1.
 eg: "
\family typewriter
Ms.
 Norah's score is 0
\family default
." where "
\family typewriter
Norah
\family default
" is her name, and "
\family typewriter
Ms
\family default
." corresponds to her gender.
 
\begin_inset space \hfill{}
\end_inset

 [14]
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsubsection*
Task 2.4
\end_layout

\begin_layout Standard
Write driver code to test the earlier class you created.
 Also, create 
\family typewriter
groups
\family default
 which is a list that uses a 2-dimensional array to store and associate
 each instance created below with his/her civics group.
 Use this 2-dimensional array to display the scores of all persons in each
 civics group indicating the student chairperson’s name (if any).
 Test your code with the following steps in order: 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 "
\family typewriter
Melvin
\family default
" in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 "
\family typewriter
Susan
\family default
" in civics group 
\family typewriter
5C35
\family default
 whose role is "
\family typewriter
chairperson
\family default
" 
\end_layout

\begin_layout Itemize
Create an instance information of 
\family typewriter
FormTeacher
\family default
 with 
\family typewriter
name
\family default
 "
\family typewriter
Norah
\family default
" in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with name "
\family typewriter
Ben
\family default
" in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
FormTeacher
\family default
 with name "
\family typewriter
Jimmy
\family default
" in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Display the information of Melvin 
\end_layout

\begin_layout Itemize
Display the information of Susan 
\end_layout

\begin_layout Itemize
Display the information of Norah 
\end_layout

\begin_layout Itemize
Melvin attempts a math question 
\end_layout

\begin_layout Itemize
Susan attempts a math question 
\end_layout

\begin_layout Itemize
Jimmy attempts a math question 
\end_layout

\begin_layout Itemize
Display the scores of all persons in each civics group with a header for
 each class 
\end_layout

\begin_layout Standard
Here is a sample of an expected output: 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 0.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Ms.
 Norah's score is 0.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
To Melvin : ((5/7)+8) ? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer.
 (Correct answer: 9 ) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
To Susan : (3*(5*6)) ? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:90 
\end_layout

\begin_layout Plain Layout

\family typewriter
Good job! 
\end_layout

\begin_layout Plain Layout

\family typewriter
New total score for Susan is 1 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
To Jimmy : ((6-2)-6) ? 
\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
(Correct answer: -2 ) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0.
 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
5C35’s scores:
\end_layout

\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 1.
 (Chairperson) 
\end_layout

\begin_layout Plain Layout

\family typewriter
Ms.
 Norah's score is 0.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
6C35’s scores:
\end_layout

\begin_layout Plain Layout

\family typewriter
Ben(M)'s score is 0.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Mr.
 Jimmy's score is 0.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Run your program and save your output.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Task 3
\series default
 
\end_layout

\begin_deeper
\begin_layout Standard
In 2021, Singapore's Health Science Authority (HSA) recalled 18 brands of
 hand sanitisers due to high levels of acetaldehyde and/or methanol.
 The HSA keeps information on current hand sanitisers and uses it to monitor
 the types of chemical ingredients used to make the sanitisers.
 
\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create an SQL file to show the SQL code to create database 
\family typewriter
sanitisers.db
\family default
 with the single table, 
\family typewriter
sanitisers
\family default
.
 
\end_layout

\begin_layout Standard
The table will have the following fields: 
\end_layout

\begin_layout Itemize

\family typewriter
product_name
\family default
 which is the primary key 
\end_layout

\begin_layout Itemize

\family typewriter
active_ingredient
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
alcohol-based
\family default
 
\end_layout

\begin_layout Standard
Save your SQL code as 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.sql
\family default
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
sanitisers.txt
\family default
, contains data items for a number of sanitisers.
 It contains a header line.
 Each data item is separated by a comma, with each item data on a new line,
 as follows:
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
active ingredient used to make the sanitiser product 
\end_layout

\begin_layout Itemize
"Yes" or "No" to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
sanitisers.txt
\family default
, and insert all the information into the 
\family typewriter
sanitisers.db
\family default
 database.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
 
\end_layout

\begin_layout Standard
Save your program as 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default
 
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
The information is to be displayed in a web browser.
 
\end_layout

\begin_layout Standard
Write a python program and the necessary files to create a web application
 that enables the list of sanitisers to be displayed.
 
\end_layout

\begin_layout Standard
For each record the web page should include the: 
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
ingredients used to make the sanitiser product
\end_layout

\begin_layout Itemize
"Yes" or "No" to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Save your program as 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default
 
\end_layout

\begin_layout Standard
with any additional files/subfolders as needed in a folder named 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>
\family default
 
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_OUTPUT_<index_number>_<name>.html
\family default

\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
HSA wants a form on the web page that allows users to enter in the name
 of an active ingredient and, upon submission, will display all the information
 of the products with the matching active ingredient.
 
\end_layout

\begin_layout Standard
Update your application to include this form feature so that users will
 be able to use the form after seeing the list of sanitisers displayed as
 required in Task 3.3.
 
\end_layout

\begin_layout Standard
Run the web application, test your program with the ingredient "
\family typewriter
Triclosan
\family default
" and save the output.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
Save, zip up and submit your program code and all related files for Task
 3 as 
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.zip
\family default
 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Task 4
\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as 
\end_layout

\begin_layout Standard

\family typewriter
TASK4_<index_number>_<name>.ipynb 
\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write a program to help staff of an events company to insert data into a
 NoSQL database products under the collection 
\family typewriter
balloons
\family default
.
 
\end_layout

\begin_layout Standard
The data is provided for you in 
\family typewriter
balloons.json
\family default
 as well as in the table below where the first row are headers for the fields.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
amount 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
helium
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
colours
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
car 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
88 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
red, yellow
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cloud 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
blue, green
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flower 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
75 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
red, blue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bag 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
38 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
red, blue, black
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Each colour in 
\family typewriter
colours
\family default
 field should be an item in an array.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write code to print the 
\family typewriter
amount
\family default
 of the product with the design "
\family typewriter
car
\family default
".
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write code to update the field 
\family typewriter
helium
\family default
 to have the value "
\family typewriter
n
\family default
o" for all documents which do not have a field or value for 
\family typewriter
helium
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write code to display the 
\family typewriter
design
\family default
(s) which do not contain helium and have colours that either contain 
\family typewriter
green
\family default
 or do not contain 
\family typewriter
black
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
 
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
