#LyX file created by tex2lyx 2.3
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin C:/Users/Admin/Desktop/Github/question_bank/LyX/
\textclass article
\begin_preamble

\usepackage{enumitem}
\usepackage{amsthm}



\usepackage{enumitem}
\setenumerate[1]{label=\textbf{\arabic*}}
\setenumerate[2]{label=\textbf{(\alph*)}}
\setenumerate[3]{label=\textbf{(\roman*)}}
\setlist[enumerate]{align=right}

\setcounter{page}{2}

%for upright integrals
\usepackage[integrals]{wasysym}


%to be used in conjunction with fancyfoot for last page
\usepackage{zref-totpages}


%fancyhrd settings
\usepackage{fancyhdr}

\fancyhf{}

\fancypagestyle{laststyle}
{
   \fancyhf{}
   \chead{\thepage}
   \fancyfoot[L]{\copyright NJC }
   \fancyfoot[R]{\textbf{END}} %Put \thispagestyle{laststyle} in the last page
}

%%centering page number
\chead{\thepage}

\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

%%footer settings, different footer for ODD and EVEN pages, also for the LASTPAGE
\fancyfoot[LO]{Generated with Python Script by BRW\hfill \textbf{[Turn Over}}
\fancyfoot[LE]{Generated with Python Script by BRW }

%%shameless self-plug BRW



\usepackage{babel}

\end_preamble
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "default" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing double
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\leftmargin 1.5cm
\topmargin 1.8cm
\rightmargin 2cm
\bottommargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A food delivery app offers promotions to customers based on their usage pattern.
\end_layout

\begin_layout Standard
First time customers would receive a $5 discount on their first purchase. If a customer has spent at least $1000 on the app in the last 3 months, the app would upgrade the customer to Gold status and offer 10% discount on all orders.
\end_layout

\begin_layout Standard
Gold status customers who have been inactive for 1 month would be offered an additional 5% discount on top of the existing 10% discount. Customers who have made their first purchase and have been inactive for 1 month would receive a $5 discount instead. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies from the decision table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive function 
\family typewriter
Binomial
\family default
 has two parameters, 
\family typewriter
N
\family default
 and 
\family typewriter
R
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Binomial(N, R : INTEGERS) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF R = 0 OR R = N 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ← 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ← Binomial(N – 1, R) + Binomial(N – 1, R – 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Answer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by a recursive function, and identify the line number that makes 
\family typewriter
Binomial
\family default
 recursive. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
An example of a trace tree diagram showing the recursive function call 
\family typewriter
Binomial(3,1)
\family default
 is shown. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2020-P1-Q2.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
Use the above example to create a trace tree diagram for the recursive function call 
\family typewriter
Binomial(3,2)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Give values of N and R which would cause the function to enter infinite recursion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The function 
\family typewriter
Evaluate
\family default
 is designed to evaluate a polynomial at a given value of 
\begin_inset Formula $x$
\end_inset

. The polynomial is stored as a queue of coefficients in descending powers of x.
\end_layout

\begin_layout Standard
For example, the polynomial 
\begin_inset Formula $5x^{3}-2x^{2}+3x-1$
\end_inset

 is given as the queue 
\begin_inset Formula $[5,\lyxmathsym{\textendash}2,3,\lyxmathsym{\textendash}1]$
\end_inset

, where 5 is at the head of the queue.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Evaluate(X : INTEGER, Coeffs : QUEUE) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ← Answer + DEQUEUE Coeffs 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Answer ← Answer * X 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL Coeffs IS EMPTY 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Answer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Draw a trace table to determine the output of the function 
\family typewriter
Evaluate
\family default
 for 
\family typewriter
X = 2
\family default
 and 
\family typewriter
Coeffs = [5, –2, 3, –1]
\family default
, as described above. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe the error in the function 
\family typewriter
Evaluate
\family default
 as it is currently written. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Rewrite the pseudo-code above so that 
\family typewriter
Evaluate
\family default
 returns the correct value of the polynomial at a given value of 
\family typewriter
x
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
During Home-Based Learning, many lessons were carried out over the Internet. 
\end_layout

\begin_layout Enumerate
For lessons carried out by video conferencing, tools by external companies such as Zoom or Google Meet were used.
\end_layout

\begin_deeper
\begin_layout Standard
Give one example of an ethical consideration companies such as Zoom or Google should take into account in this situation. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Many lesson resources and homework submissions were carried out via file uploads. Describe how a file can be uploaded from a student
\begin_inset Quotes ers
\end_inset

s computer to a cloud drive by packet switching.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
For a Mother Tongue lesson, a teacher created a webpage in a non-English language. Some students who accessed the webpage saw random characters instead of the content intended by the teacher. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the relevance of communications protocols in this context. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe how Unicode might address some of these problems.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A printing shop offers printing services to its customers. When a printing order is sent to the shop, the following information is recorded down: 
\end_layout

\begin_layout Itemize
Date of order 
\end_layout

\begin_layout Itemize
Name of customer 
\end_layout

\begin_layout Itemize
Number of copies 
\end_layout

\begin_layout Itemize
Colour, or black and white, printing 
\end_layout

\begin_layout Itemize
Whether express printing is required 
\end_layout

\begin_layout Standard
The printing shop accepts three types of orders, leaflets, books and posters.
\end_layout

\begin_layout Standard
Customers printing leaflets or books need to indicate if they require single side or double side printing.
\end_layout

\begin_layout Standard
In addition, for books, the type of cover (hard cover or soft cover) would need to be recorded.
\end_layout

\begin_layout Standard
Leaflets and books are available in three sizes (A3, A4 or A5), while posters are only available in a fixed size of A2.
\end_layout

\begin_layout Standard
For poster printing, customers have a choice of either glossy or matte finishing.
\end_layout

\begin_layout Standard
The total charge to user is determined by the specifications of the order and the formula is unique for each type of order.
\end_layout

\begin_layout Standard
This system is to be implemented using object-oriented programming (OOP). 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
Any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
The properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
Suitable methods to support the system with at least one getter and setter 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The base class is 
\family typewriter
BASIC_ORDER
\family default
. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the purpose of inheritance in object-oriented programing. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a computer game, players
\begin_inset Quotes ers
\end_inset

 names and scores are stored in a binary search tree, in increasing order of score.
\end_layout

\begin_layout Standard
The binary search tree has its data inserted in the following order:
\end_layout

\begin_layout Standard
Ryan 18
\end_layout

\begin_layout Standard
Bella 25
\end_layout

\begin_layout Standard
Joshua 27
\end_layout

\begin_layout Standard
Shane 20
\end_layout

\begin_layout Standard
Jasmine 17
\end_layout

\begin_layout Standard
Alexis 21
\end_layout

\begin_layout Standard
Leslie 15 
\end_layout

\begin_layout Enumerate
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The binary search tree is implemented using the two dimensional array shown below. Copy and fill in the entries in the array. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Left Pointer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Right Pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
To delete a node from a binary tree, the following cases are considered: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Case 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has no children 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Node is removed from tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has one child 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Node is replaced with its child
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Node has two children
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Call the node to be deleted 
\begin_inset Formula $D$
\end_inset

. Do not delete
\begin_inset Formula $D$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Look for the node 
\begin_inset Formula $E$
\end_inset

 that comes after 
\begin_inset Formula $D$
\end_inset

 in an in-order traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Copy the data 
\begin_inset Formula $E$
\end_inset

 into 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Delete 
\begin_inset Formula $E$
\end_inset

 using one of the previous two cases.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Draw the tree at each step after the following players are deleted, one after another: 
\end_layout

\begin_layout Enumerate
Joshua 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Jasmine
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Ryan 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The program has a feature which allows the user to enter an integer. The program then returns a list of players whose score is greater than that integer. Describe how the program can create this list using the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q7] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The following is the pseudocode for an in-place quicksort algorithm for sorting in ascending order.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

FUNCTION Partition(L, R : INTEGERS, MyList : LIST) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Pivot ← MyList[R] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF MyList[j] > Pivot 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
A
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp ← MyList[j] 11 MyList[j] ← MyList[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
B
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL j = R 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MyList[R] ← MyList[i] // swap elements with index i and R 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MyList[i] ← Pivot 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
C
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}

\end_inset

ENDFUNCTION 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}

\end_inset

PROCEDURE Quicksort(L, R : INTEGERS, MyList : LIST) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF 
\family default

\family typewriter

\series bold
D
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PivotPos = Partition(R, L, MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CALL Quicksort(L, PivotPos - 1, MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold
E
\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}

\end_inset

ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write pseudo-code to replace 
\family typewriter

\series bold
A
\series default

\family default
, 
\family typewriter

\series bold
B
\series default

\family default
, 
\family typewriter

\series bold
C
\series default

\family default
, 
\family typewriter

\series bold
D
\series default

\family default
 and 
\family typewriter

\series bold
E
\series default

\family default
 in the above algorithm. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
State the time complexity of the algorithm in the above pseudo-code. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State and explain when the worst case scenario (for running time) for quicksort arises in the above algorithm. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Another programmer suggested insertion sort would be more efficient during the worst case scenario in (iii).
\end_layout

\begin_deeper
\begin_layout Standard
State and explain if insertion sort is indeed more efficient in this instance. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A program needs to store an array of names and scores in a two dimensional array and perform the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
Output the names and scores in alphabetical order. 
\end_layout

\begin_layout Itemize
Check for the presence of a particular name 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The data to be stored in the array is as follows:
\end_layout

\begin_layout Standard
Peter 68
\end_layout

\begin_layout Standard
Mary 70
\end_layout

\begin_layout Standard
Kelvin 48
\end_layout

\begin_layout Standard
Casper 44
\end_layout

\begin_layout Standard
Luther 76 
\end_layout

\begin_layout Enumerate
Draw a flowchart to represent a linear search algorithm that returns the score of a particular name. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Instead of storing the data in an array, it is suggested that the names could be stored in a hash table instead.
\end_layout

\begin_deeper
\begin_layout Standard
With reference to the requirements of the program, suggest one advantage and one disadvantage of storing the names in a hash table instead of an array. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
(iii) An array can be used to create the hash table data structure. Describe the process of inserting the above data into a hash table. You may assume there will be no collisions. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is tasked to write a program to store the examination scores of students in the entire school. For each student, the database would need to store the following data: name, form class, subject class, subject, score and subject teacher. 
\end_layout

\begin_layout Enumerate
Suggest a suitable data type for each of the following fields: 
\end_layout

\begin_deeper
\begin_layout Itemize
Name 
\end_layout

\begin_layout Itemize
Class 
\end_layout

\begin_layout Itemize
Score 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The programmer is considering storing this data in either a relational or non-relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State three key differences between the two types of databases. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State and explain which database system the programmer should choose. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A healthcare group would like to store patient data in a relational database. When a patient visits the clinic, the clinic will record the following information: 
\end_layout

\begin_layout Itemize
Date and time of visit 
\end_layout

\begin_layout Itemize
Name of attending doctor and his NRIC 
\end_layout

\begin_layout Itemize
Patient name and NRIC number 
\end_layout

\begin_layout Standard
After the doctor has attended to the patient, the patient would be given a prescription. The prescription would record the medication which the patient is supposed to take. Each prescription, which consists of at least one medicine, would have its own unique identification number. Each medicine would have a unique identification number, name and price.
\end_layout

\begin_layout Standard
The data is stored in a relational database with five tables: 
\family typewriter
Patient
\family default
, 
\family typewriter
Doctor
\family default
, 
\family typewriter
Appointment
\family default
, 
\family typewriter
Prescription
\family default
 and 
\family typewriter
Medicine
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw the Entity-Relationship (E-R) diagram to show the tables in third normal form (3NF) and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A table description can be written as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (Attribute1, Attribute2, Attribute3, …)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline.
\end_layout

\begin_layout Standard
Using the information provided, write table descriptions for the tables you identified in part (c). 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a program to implement a role-playing computer game using Object-Oriented Programming (OOP).
\end_layout

\begin_layout Standard
The players have to collect food items. A food item has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
value : INTEGER
\family default
 
\end_layout

\begin_layout Standard
and the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_value()
\family default
 
\end_layout

\begin_layout Standard
A player takes on the role of a person. A person has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
health : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
strength : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\family default
 
\end_layout

\begin_layout Standard
and the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_health() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
get_strength() 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
eat(food)
\family default
 adds the value of the food to the strength. The code should display the player
\begin_inset Quotes ers
\end_inset

s new strength. 
\end_layout

\begin_layout Itemize

\family typewriter
attack(opponent)
\family default
 
\end_layout

\begin_layout Standard
For the 
\family typewriter
attack
\family default
 method, 
\family typewriter
opponent
\family default
 is another person. 
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to attack and there is no change to 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the attack is successful and 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
r
\family default
. 
\end_layout

\begin_deeper
\begin_layout Itemize
If opponent
\begin_inset Quotes ers
\end_inset

s health is now negative, then opponent has been defeated. 
\end_layout

\end_deeper
\begin_layout Itemize
The player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is decreased by r. 
\end_layout

\begin_layout Standard
There are two subclasses of the 
\family typewriter
Person
\family default
 class – 
\family typewriter
Healer
\family default
 and the 
\family typewriter
Warrior
\family default
.
\end_layout

\begin_layout Standard
Healer has one additional method: 
\end_layout

\begin_layout Itemize

\family typewriter
heal(patient)
\family default
 
\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset


\end_layout

\begin_layout Standard
For the 
\family typewriter
heal
\family default
 method, 
\family typewriter
patient
\family default
 is another person. 
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to heal and there is no change to 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\end_layout

\begin_layout Itemize
If the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the healing is successful and 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is increased by 
\family typewriter
r
\family default
, up to a maximum of 
\family typewriter
100
\family default
. 
\end_layout

\begin_layout Standard

\family typewriter
Warrior
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
attack
\family default
 method is twice as effective, meaning that if the player has enough strength to attack, 
\family typewriter
opponent
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
2*r
\family default
, while the player
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
strength
\family default
 is decreased by 
\family typewriter
r
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Food
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Person
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
attack
\family default
, including the new value of opponent
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Use appropriate inheritance to write program code to define the class 
\family typewriter
Healer
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
heal
\family default
, including the new value of 
\family typewriter
patient
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
health
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.4
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism to write program code to define the class 
\family typewriter
Warrior
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
Test your code with the following steps in order: 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Food
\family default
 item with name 
\family typewriter
'Cheese'
\family default
 and value 
\family typewriter
10
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Warrior
\family default
 with 
\family typewriter
name
\family default
 
\family typewriter
'Sam'
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Healer
\family default
 with name 
\family typewriter
'Alex'
\family default
. 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Person
\family default
 with name 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Jan'
\family default
 attacks 
\family typewriter
'Sam'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 attacks 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Alex'
\family default
 heals 
\family typewriter
'Jan'
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 eats 
\family typewriter
'Cheese'
\family default
. 
\end_layout

\begin_layout Standard
Download your program code and output for Task 1 as 
\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard consists of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 grid of small squares. For this task, the squares are numbered using a coordinate system as a tuple of two integers. The first integer is the column number, starting from 
\family typewriter
1
\family default
 at the left, and the second integer is the row number, starting from 
\family typewriter
1
\family default
 at the bottom.
\end_layout

\begin_layout Standard
A chess knight is a piece that occupies a square, and can then move to another square according to one of the following rules: 
\end_layout

\begin_layout Itemize
moving two squares horizontally and then one square vertically in either direction, or 
\end_layout

\begin_layout Itemize
moving two squares vertically and then one square horizontally in either direction. 
\end_layout

\begin_layout Standard
See the diagram below for examples. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2020-P2-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(2,1)
\family default
 can move to 
\family typewriter
(1,3)
\family default
, 
\family typewriter
(3,3)
\family default
 or 
\family typewriter
(4,2)
\family default
.
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(6,7)
\family default
 can move to 
\family typewriter
(4,6)
\family default
, 
\family typewriter
(4,8)
\family default
, 
\family typewriter
(5,5)
\family default
, 
\family typewriter
(7,5)
\family default
, 
\family typewriter
(8,6)
\family default
 or 
\family typewriter
(8,8)
\family default
.
\end_layout

\begin_layout Standard
Only the starting and ending squares of the knight
\begin_inset Quotes ers
\end_inset

s move are counted as being visited by the knight, and not the squares that the knight passes over while moving.
\end_layout

\begin_layout Standard
A knight
\begin_inset Quotes ers
\end_inset

s tour is a sequence of moves that a chess knight makes on a chessboard, so that it visits every square of the chessboard exactly once. It does not need to return to its starting square.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
For a given value of 
\family typewriter
n
\family default
 and a list of squares, write program code to determine if the list is a knight
\begin_inset Quotes ers
\end_inset

s tour of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
Test your code using the values
\family typewriter
 
\begin_inset Formula $\mathtt{n=7}$
\end_inset


\family default
 and the list of squares given in the files: 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2TOUR.txt
\family default
, which is a valid tour; 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2NOTOUR.txt
\family default
, which is not a valid tour. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
An algorithm to generate a knight
\begin_inset Quotes ers
\end_inset

s tour needs to keep track of the squares already visited, so that the knight does not visit them a second time during the tour.
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Suppose the knight is currently on square square, and a list of squares already visited by the knight is given in 
\family typewriter
lis
\family default
.
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
available(square,lis)
\family default
 that returns a list of squares which the knight can visit on its next move from 
\family typewriter
square
\family default
, and are not currently in 
\family typewriter
lis
\family default
. These are the squares available to the knight as it tries to complete the tour.
\end_layout

\begin_layout Standard
The output should be given in lexicographic order, that is, with the column numbers in ascending order, and, among the squares with the same column number, with the row numbers in ascending order. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
The knight starts at 
\family typewriter
(1,1)
\family default
, the bottom left square, of an 
\begin_inset Formula $8\mathtt{\times}8$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
From each square, the knight moves to the available square from which it has the smallest number of available squares after that. If there is a tie, the square which comes first in lexicographic order is chosen.
\end_layout

\begin_layout Standard
Write program code to generate the knight
\begin_inset Quotes ers
\end_inset

s tour as a list of squares in the order they are visited.
\end_layout

\begin_layout Standard
Download your program code and output for Task 2 as 
\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A text file 
\family typewriter
INVENTORY.txt
\family default
 contains the inventory data for a certain electronics store. Each line in the file contains tab-delimited data that shows the product name, product type, purchase price, selling price and quantity available.
\end_layout

\begin_layout Standard
Each line is in the format
\end_layout

\begin_layout Standard

\family typewriter
Name
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\family default

\end_layout

\begin_layout Standard
where 
\family typewriter

\backslash
t
\family default
 represents the tab character.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Read the inventory data from the text file; 
\end_layout

\begin_layout Itemize
Find the average selling price of products belonging to the 
\family typewriter
Laptop
\family default
 product type and display this value; 
\end_layout

\begin_layout Itemize
Count the number of products in each product type and store it in appropriate data structure called 
\family typewriter
TypeCount
\family default
; 
\end_layout

\begin_layout Itemize
Display the product type with the greatest number of products. If there is a tie, display all of the product types with the greatest number of products. 
\end_layout

\begin_layout Standard
Download your program code and output for Task 3.1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_1_<your name>_<centre number>_<index number>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The profit margin of each product can be calculated by the following equation: 
\end_layout

\begin_layout Standard
\align center
\noindent
Profit margin = selling price – purchase price. 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Calculate and display the total profit the store could make if all products are sold; 
\end_layout

\begin_layout Itemize
Sort the inventory data using a Merge sort algorithm in descending order of profit margin; 
\end_layout

\begin_layout Itemize
Display the sorted inventory data in the format given below. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Product 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Product Type 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Profit Margin 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThinkingPad 14
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Computer 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
300 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Bapple 8 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Phone 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
450
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Download your program code and output for Task 3.2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_2_<your name>_<centre number>_<index number>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
A store manager decided to make some changes to 
\family typewriter
INVENTORY.txt
\family default
 and saved it as 
\family typewriter
INVENTORY_SERIAL.txt
\family default
. Each line in the updated file contains tab-delimited data that shows the serial number, product name, product type, purchase price, selling price and quantity available.
\end_layout

\begin_layout Standard
Each line is in the format:
\end_layout

\begin_layout Standard

\family typewriter
Serial_No
\backslash
tName
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\family default

\end_layout

\begin_layout Standard
where 
\family typewriter

\backslash
t
\family default
 represents the tab character.
\end_layout

\begin_layout Standard
Write program code to insert the data from 
\family typewriter
INVENTORY_SERIAL.txt
\family default
 into a NoSQL database 
\family typewriter
OUTLETS
\family default
 under the collection 
\family typewriter
GEM
\family default
.
\end_layout

\begin_layout Standard
Download your program code for Task 3.3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 3.4
\end_layout

\begin_layout Standard
The database administrator wants to validate that the store manager did not make any errors when he edited the text file. Write program code to check that the database conforms to the below specifications: 
\end_layout

\begin_layout Itemize

\family typewriter
Serial_No
\family default
 consists of one digit followed by two letters, followed by one digit (e.g. 
\family typewriter
1AB7
\family default
); 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 consists of only letters, digits and spaces; 
\end_layout

\begin_layout Itemize

\family typewriter
Quantity
\family default
 is a positive integer. 
\end_layout

\begin_layout Standard
Any document that has an error should be removed from the database. You may assume data fields not specified above are error free. Display the documents that were removed.
\end_layout

\begin_layout Standard
Download your program code for Task 3.4 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_4_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company keeps records of the employees working for it. The following are the information stored in the company
\begin_inset Quotes ers
\end_inset

s database: 
\end_layout

\begin_layout Itemize

\family typewriter
Employee_name
\family default
 – name of the employee 
\end_layout

\begin_layout Itemize

\family typewriter
Employee_ID
\family default
 – unique ID number allocated to each employee 
\end_layout

\begin_layout Itemize

\family typewriter
Job_type
\family default
 – type of job the employee is employed for (
\family typewriter
'Sales'
\family default
 or 
\family typewriter
'Tech_support
\family default
') 
\end_layout

\begin_layout Itemize

\family typewriter
Date_of_employment
\family default
 – date the employee joined the company 
\end_layout

\begin_layout Itemize

\family typewriter
Service_status
\family default
 – whether the employee is still in service (
\family typewriter
'True'
\family default
 means the employee is still in the company, 
\family typewriter
'False'
\family default
 means the employee has left the company) 
\end_layout

\begin_layout Standard
For sales employees, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Total_sales
\family default
 – the amount of sales in dollars made by the employee 
\end_layout

\begin_layout Standard
For tech support employees, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Bugs_resolved
\family default
 – the total number of bugs the employee has resolved 
\end_layout

\begin_layout Standard
The database is expected to be normalised and stored in three different tables:
\end_layout

\begin_layout Standard

\family typewriter
Employee 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Sales 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Tech_support
\family default

\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
records.db
\family default
 with the three tables. Primary keys and foreign keys should be defined where appropriate.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
SALES.txt
\family default
 and 
\family typewriter
TECH_SUPPORT.txt
\family default
 contain information regarding the sales and tech support employees respectively. The information should be inserted into the database.
\end_layout

\begin_layout Standard
For 
\family typewriter
SALES.txt
\family default
, information is given in the following order:
\end_layout

\begin_layout Standard

\family typewriter
Employee_ID
\family default
, 
\family typewriter
Employee_name
\family default
, 
\family typewriter
Date_of_Employment
\family default
, 
\family typewriter
Service_status
\family default
, 
\family typewriter
Total_Sales
\family default

\end_layout

\begin_layout Standard
For 
\family typewriter
TECH_SUPPORT.txt
\family default
, information is given in the following order:
\end_layout

\begin_layout Standard

\family typewriter
Employee_ID
\family default
, 
\family typewriter
Employee_name
\family default
, 
\family typewriter
Date_of_Employment
\family default
, 
\family typewriter
Service_status
\family default
, 
\family typewriter
Bugs_resolved
\family default

\end_layout

\begin_layout Standard
Write a python program to insert all information from the two files into the 
\family typewriter
records
\family default
 database, 
\family typewriter
records.db
\family default
. Run the program.
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
The company wants to filter the employees by 
\family typewriter
Service_status
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
Service_status
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display either 
\end_layout

\begin_deeper
\begin_layout Itemize
an ordered list of employees that are still in service, or 
\end_layout

\begin_layout Itemize
an ordered list of employees that are no longer in service, 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
depending on the 
\family typewriter
Service_status
\family default
 string entered by the user. 
\end_layout

\end_deeper
\begin_layout Standard
The list should be sorted in alphabetical order.
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\end_layout

\begin_layout Standard
Run the web application. Save the output of the program when 
\family typewriter
'TRUE'
\family default
 is entered as the 
\family typewriter
Service_status
\family default
 as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html
\family default
. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Given an array of numbers 
\family typewriter
A
\family default
, count the minimum number of 'bubble sort' swaps (swap between pair of consecutive items) needed to sort the array in ascending order.
\end_layout

\begin_layout Standard
For example, if 
\family typewriter
A = [3, 2, 1, 4]
\family default
, we need 3 'bubble sort' swaps to sort A in ascending order i.e.
\end_layout

\begin_layout Standard

\family typewriter
swap(3, 2)
\family default
 to get 
\family typewriter
[
\family default

\family typewriter

\bar under
2, 3
\bar default

\family default

\family typewriter
, 1, 4] 
\family default

\end_layout

\begin_layout Standard

\family typewriter
swap(3, 1)
\family default
 to get 
\family typewriter
[2, 
\family default

\family typewriter

\bar under
1, 3
\bar default

\family default

\family typewriter
, 4]
\family default

\end_layout

\begin_layout Standard

\family typewriter
swap(1, 2)
\family default
 to get 
\family typewriter
[
\family default

\family typewriter

\bar under
1, 2
\bar default

\family default

\family typewriter
, 3, 4]
\family default
 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n^{2})$
\end_inset

 algorithm using bubble sort to count the number of 'bubble sort' swaps. 
\end_layout

\begin_layout Enumerate
Devise an 
\begin_inset Formula $O(n\log n)$
\end_inset

 algorithm to count the number of 'bubble sort' swaps. 
\end_layout

\begin_layout Standard
You should also explain why each algorithm has its efficiency. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Would you expect insertion sort to perform better or worse than bubble sort in (a)? Explain your answer with respect to the number of comparisons needed using the above example.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Why is quick sort not a suitable algorithm in part (b)? Illustrate your answer with a suitable example. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You have been tasked to use a suitable data structure to manage the preliminary exam results of students in Dunman High School. Each student is identified by its centre and index numbers, each of which is 4-digit. For example, Lim Ah Seng's identification number is 30420188. A typical range of students' identification numbers are from 30420001 to 30420450, since each graduating cohort will have about 450 students.
\end_layout

\begin_layout Standard
The preliminary examination details to be stored are as follows: 
\end_layout

\begin_layout Itemize
Subject code (4-digit) eg 9569 
\end_layout

\begin_layout Itemize
Subject name eg H2 Computing 
\end_layout

\begin_layout Itemize
Subject grade (1-character eg 'A') You may assume that each student will have a valid subject grade in the range of ['A', 'B', 'C', 'D', 'E', 'S', 'U', 'T', '0'], where 'T' stands for terminated and '0' stands for absent. 
\end_layout

\begin_layout Standard
Using suitable examples, evaluate the pros and cons using each of the following data structure to store the required information: 
\end_layout

\begin_layout Enumerate
dictionary 
\end_layout

\begin_layout Enumerate
hash table 
\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The information in Question 2 will also be stored in a relational database. 
\end_layout

\begin_layout Enumerate
Why is a relational database model more suitable than a NoSQL database model for storing the required information? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Produce the specification for the tables. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Using examples in this context, explain the significance of the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
1NF
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
2NF
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
3NF 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What is the relationship between the data structures in Question 2 and a relational database? 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following diagram shows the contents with some data inserted. 
\end_layout

\begin_layout Enumerate
State two possible insertion orders of data to this BST.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Generalise how data can be inserted to produce a balanced BST.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
The BST is to be implemented using a 1D array T. Write pseudocode to show how data can be represented in T with suitable initial values for an empty BST. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to insert to this BST. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Devise a recursive algorithm to check if T is a BST. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Convert the recursive algorithm in part (e) to an iterative one using a suitable data structure which you should name and justify. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the items in T that are within a given range [a, b] inclusive in ascending order.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Devise an algorithm to output the contents of the leaves of T in descending order.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Despite its memory overhead, why is recursion often used in BSTs? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Why is recursion less often used in linked lists?
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A student came up with the following Python program to implement a linked list data structure:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}

\end_inset

class Node: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

def __init__(self, data): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

self.data = data 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

self.link = None 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset

def insert(data): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

global head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if head == None: # empty linked list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

head = Node(data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: # insert to front 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_node = Node(data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_node.link = head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

head = new_node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

def display(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

global head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr = head 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

while curr: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(curr.data) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

curr = curr.link 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}

\end_inset

# main 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}

\end_inset

head = None 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Ali
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Tom
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}

\end_inset

insert(
\begin_inset Quotes qrd
\end_inset

Mary
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27
\begin_inset space \qquad{}

\end_inset

display() 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
What will be the output of line 27?
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Comment on the programming paradigms used and identify any potential pitfalls in the above program.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Why is OOP appropriate in the implementation of data structures such as linked lists?
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The above program maintains an unordered linked list. Devise an algorithm to insert to an ordered linked list.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
A linked list can be ordered or unordered. Draw a UML class diagram to illustrate the concepts of encapsulation, inheritance and polymorphism.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
Explain how polymorphism is applied to the 
\family typewriter
insert()
\family default
 rather than the 
\family typewriter
display()
\family default
 method in this context.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
On 14 September 2020, it was reported that GrabCar was fined S$10,000 for a 4th user data privacy violation. The Personal Data Protection Commission (PDPC) said the update risked the personal data of 21,541 drivers and passengers, including profile pictures, names and vehicle plate numbers.
\end_layout

\begin_layout Standard
GrabCar rolled back the app to the previous version within about 40 minutes and took other remedial action, PDPC said.
\end_layout

\begin_layout Standard
On Aug 30, 2019, GrabCar notified the PDPC that profile data of 5,651 GrabHitch drivers was exposed to the risk of unauthorised access by other GrabHitch drivers for a 
\begin_inset Quotes qld
\end_inset

short period of time on the same day
\begin_inset Quotes qrd
\end_inset

 through the Grab app.
\end_layout

\begin_layout Standard
Grab's investigations traced the cause of the breach to a deployment of an update to the app on the same day. The purpose of the update was to address a potential vulnerability discovered within the Grab app.
\end_layout

\begin_layout Standard
In PDPC's findings, the application programming interface URL which allowed GrabHitch drivers to access their data, had contained a 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 portion that could potentially be manipulated to allow access to other drivers' data. According to GrabCar, there was no evidence that this vulnerability was exploited.
\end_layout

\begin_layout Standard
To fix the vulnerability, the update removed the 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 from the URL, which shortened it to a hard-coded 
\begin_inset Quotes qld
\end_inset

users/profile
\begin_inset Quotes qrd
\end_inset

. However, it failed to take into account the URL-based caching mechanism in the app, which was configured to refresh every 10 seconds.
\end_layout

\begin_layout Standard
The mechanism served cached content in response to data requests, so as to reduce the load of direct access to GrabCar's database.
\end_layout

\begin_layout Standard
With the update, all URLs in the Grab app ended with 
\begin_inset Quotes qld
\end_inset

users/profile
\begin_inset Quotes qrd
\end_inset

. Without the 
\begin_inset Quotes qld
\end_inset

userID
\begin_inset Quotes qrd
\end_inset

 in the URL, which directed data requests to the correct GrabHitch driver's accounts, the caching mechanism could no longer differentiate between drivers.
\end_layout

\begin_layout Standard
Thus, the mechanism provided the same data to all GrabHitch drivers for 10 seconds before new data was retrieved from GrabCar's database and cached for the next 10 seconds.
\end_layout

\begin_layout Standard
PDPC said GrabCar did not put in place 
\begin_inset Quotes qld
\end_inset

sufficiently robust processes
\begin_inset Quotes qrd
\end_inset

 to manage changes to its IT system that may put personal data it was processing at risk.
\end_layout

\begin_layout Standard

\begin_inset Quotes qld
\end_inset

This was a particularly grave error given that this is the second time the (GrabCar) is making a similar mistake, albeit with respect to a different system,
\begin_inset Quotes qrd
\end_inset

 he said.
\end_layout

\begin_layout Standard
In a statement in response to Reuters' query, Grab said: 
\begin_inset Quotes qld
\end_inset

To prevent a recurrence, we have since introduced more robust processes, especially pertaining to our IT environment testing, along with updated governance procedures and an architecture review of our legacy application and source codes.
\begin_inset Quotes qrd
\end_inset


\end_layout

\begin_layout Standard
In 2019, GrabCar was ordered to pay a financial penalty of S$16,000 after it sent out more than 120,000 marketing emails to customers containing the name and mobile phone number of another customer.
\end_layout

\begin_layout Standard
The PDPC had found that GrabCar 
\begin_inset Quotes eld
\end_inset

failed to make reasonable security arrangements
\begin_inset Quotes erd
\end_inset

 to detect the errors in their database when sending out the emails.
\end_layout

\begin_layout Standard
Source: Reuters/CNA/lk
\end_layout

\begin_layout Standard
Adapted from https://www.channelnewsasia.com/news/business/grab-car-hitch-pdpc-personal-data-risk-fin e-13108144 
\end_layout

\begin_layout Enumerate
For each of the following, suggest two ways in which the data leaks could have been exploited by a malicious hacker with reference to 
\end_layout

\begin_deeper
\begin_layout Enumerate
profile pictures, names and vehicle plate numbers of drivers and passengers
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
name and mobile phone number of customers 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
What could have caused 
\end_layout

\begin_deeper
\begin_layout Enumerate
the URL related data leak? 
\end_layout

\begin_layout Enumerate
the marketing emails related data leak? 
\end_layout

\begin_layout Enumerate
the repeated data leaks? 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
You should provide a balance of technical and human related reasons. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
How can Grab ensure and assure PDPC that sufficiently robust processes have been put in place? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
On 28 June 2020, nearly 10,000 TraceTogether tokens were distributed to vulnerable seniors. The TraceTogether token supplements the TraceTogether mobile app by extending contact tracing to groups in the community who do not have smart phones and those whose phones do not work well with the TraceTogether app.
\end_layout

\begin_layout Standard
The TraceTogether token is designed to capture proximity data based on Bluetooth signals. Every five minutes, it scans to detect other TraceTogether users on the token or the app. The more 'hits' between two TraceTogether users, the more likely they are in close proximity for an extended period of time. Proximity can be estimated by the strength of the Bluetooth signal. The closer users are to one another, the stronger the signal and vice versa.
\end_layout

\begin_layout Standard
There are only four types of data contained in the token: 
\end_layout

\begin_layout Itemize
user's randomised ID 
\end_layout

\begin_layout Itemize
randomised ID of any other user in proximity 
\end_layout

\begin_layout Itemize
Bluetooth signal measured using RSSI* 
\end_layout

\begin_layout Itemize
timestamp of the encounter. 
\end_layout

\begin_layout Standard
*Received Signal Strength Indicator (RSSI) is a measure of the power level at the receiver. A more negative number indicates a device is further away. For example, a value of -20 to -30 indicates a device is close while a value of -120 indicates it is near the limit of detection.
\end_layout

\begin_layout Standard
It is important to note that these IDs do not refer to NRIC number, but randomised and anonymised IDs linked to a personal identifier like a mobile number. Also, no data is extracted unless a user has tested positive for COVID-19. From there, MOH has a special software key that can unlock the device and reveal the data for use in contact tracing.
\end_layout

\begin_layout Standard
A senior is tested positive for COVID-19 and MOH needs to perform contact tracing. With the user's permission, data from its TraceTogether token is retrieved and extracted to the file 
\family typewriter
TOKEN.txt
\family default
 and has the following structure:
\end_layout

\begin_layout Standard

\family typewriter
UserRandomisedID, OtherRandomisedID, RSSI, Timestamp
\family default

\end_layout

\begin_layout Standard
Timestamp is in the format YYYY-MM-DD HH:MM:SS.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Prolonged exposure is currently defined as being in close contact for at least 15 minutes within a single session. For simplicity, you may assume close contact as a Bluetooth signal strength of greater than or equal to -30. Generate the list of close contacts' randomised IDs which MOH needs to perform contact tracing. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Another 3 seniors with randomised ID 75348257, 45174591 and 02548147 have also been tested as COVD-19 positive. Write a Boolean function 
\family typewriter
is_close_contact(rid1, rid2)
\family default
 to determine if they are close contacts of 57345286. If yes, your function should also return the date(s) they are under prolonged exposure with each other, the start and end times as well as the total time in hours and minutes they are in close contact. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Write a program that sorts a list of student last names, but the sort only uses the first two letters of the name. Nothing else in the name is used for sorting. However, if two names have the same first two letters, they should stay in the same order as in the input (this is known as a 'stable sort'). Sorting is case sensitive based on ASCII order (with uppercase letters sorting before lowercase letters i.e. A<B<…<Z<a<b<…<z).
\end_layout

\begin_layout Subsubsection*
Input 
\end_layout

\begin_layout Standard
The input file 
\family typewriter
LASTNAMES.txt
\family default
 consists of a sequence of up to 500 test cases. Each case starts with a line containing an integer 
\begin_inset Formula $1\le n\leq200$
\end_inset

. After this follow 
\begin_inset Formula $n$
\end_inset

 last names made up of only letters (a–z, lowercase or uppercase), one name per line. Names have between 2 and 20 letters. Input ends when 
\begin_inset Formula $n=0$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Output 
\end_layout

\begin_layout Standard
For each case, print the last names in sort-of-sorted order, one per line. Print a blank line between cases.
\end_layout

\begin_layout Subsubsection*
Sample Input 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mozart 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Beethoven 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Bach 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hilbert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Godel
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Poincare 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ramanujan 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pochhammmer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Sample Output 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Bach 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Beethoven 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mozart 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Godel 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Hilbert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Poincare 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pochhammmer
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ramanujan 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You should make use of an appropriate data structure and one or more suitable sorting algorithms from the syllabus. Indicate as comments your choice of how you have adapted them or your case for designing and implementing your own. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school needs a web application for teachers to use during English lessons to record and view students' marks for weekly in-class presentations.
\end_layout

\begin_layout Standard
The teacher should be required to login and should only be able to input and view any information for students of the classes they teach.
\end_layout

\begin_layout Standard
The maximum score per presentation is 100. Each English lesson is always taught by the same teacher, each English lesson would only have one teacher, and each class would only have one English lesson per day.
\end_layout

\begin_layout Standard
In a training session conducted for teachers, a demo version of the app would be prepopulated with demo data as shown in the following table. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher's username 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Teacher's password 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Index number of student 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student's class 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Date of presentation 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Marks obtained
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_raj 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cr53aYJP 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S306 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
95
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_james 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8orjqiZc 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S301 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
60
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mdm_rahayu 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7iqndCjW
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S302 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200315 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35.5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
mr_james 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8orjqiZc 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
11 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
19S304 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
20200325
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
60
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
You have been tasked to create this web application. The data file 
\family typewriter
DEMOAPP.txt
\family default
 contains the demo data.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create the user interface using HTML and CSS for the application. The fields should include: 
\end_layout

\begin_layout Itemize
TeacherUsername 
\end_layout

\begin_layout Itemize
TeacherPassword 
\end_layout

\begin_layout Itemize
StudentIndex 
\end_layout

\begin_layout Itemize
Class 
\end_layout

\begin_layout Itemize
PresentationDate 
\end_layout

\begin_layout Itemize
Marks The information should be presented in a tabular form. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Create a normalised relational database scheme for this application. Provide the SQL statements for the creation of the tables. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Populate the table(s) with the demo data described above. Provide SQL statements for the insertion of the records in 
\family typewriter
task3.sql
\family default
.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Provide the processing logic in 
\family typewriter
app.py
\family default
 and the associated template file(s). 
\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Using SQL or otherwise, determine and display the total marks scored by each class to the appropriate template file. 
\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A dental clinic wishes to manage its patients' information using a NoSQL database.
\end_layout

\begin_layout Standard
There are 2 rooms in the clinic: Room 1 and Room 2.
\end_layout

\begin_layout Standard
There are 3 dentists in the clinic: Doctor 1, Doctor 2, Doctor 3.
\end_layout

\begin_layout Standard
Information about the patients is stored in the data file PATIENTS.txt in the following format:
\end_layout

\begin_layout Standard

\family typewriter
PatientID,Name,Appointment Date,Appointment Start Time,Doctor Assigned,Room Number,Amount Charged 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
PatientID
\family default
 is an integer 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 is made up of letters and space only 
\end_layout

\begin_layout Itemize

\family typewriter
Appointment Date
\family default
 is in DDMMYYYY format 
\end_layout

\begin_layout Itemize

\family typewriter
Appointment Start
\family default
 Time is HHMM in 24-hour format 
\end_layout

\begin_layout Itemize

\family typewriter
Doctor Assigned
\family default
 is either Doctor 1, Doctor 2 or Doctor 3 
\end_layout

\begin_layout Itemize

\family typewriter
Room Number
\family default
 is either Room 1 or Room 2 
\end_layout

\begin_layout Itemize

\family typewriter
Amount Charged
\family default
 is a float to 2 decimal places 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to convert and import the data from 
\family typewriter
PATIENTS.txt
\family default
 into a MongoDB database Clinic under the collection 
\family typewriter
Patient
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code to allow the Admin Clerk to add new patients by requesting for the following information: 
\end_layout

\begin_layout Itemize
New patient's Name 
\end_layout

\begin_layout Itemize
Appointment Date in DDMMYYYY format 
\end_layout

\begin_layout Itemize
Appointment Start Time in 24-hour HHMM format 
\end_layout

\begin_layout Itemize
Doctor to be Assigned 
\end_layout

\begin_layout Standard
The program should automatically assign a 
\family typewriter
PatientID
\family default
. Your program should perform the necessary validation for each field. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
The Admin Clerk wants to know if there are issues with appointments. Write program code to output appointments clashes and double bookings. If an appointment clash occurs, reschedule the latter appointment to the nearest available appointment on the same date. If a double booking occurs, delete the latter duplicate booking. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write program code for the Admin Clerk to determine the top 3 paying patients. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
The Admin Clerk realised that there are patients with the same name. Write program code to identify patients with the same names and output their 
\family typewriter
PatientID
\family default
s. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 characteristics of client-server network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of client-server network compared to peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Briefly explain how Domain Name Server (DNS) works. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the DHCP server
\begin_inset Quotes ers
\end_inset

s process to allocate an IP address to a client. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Computing technology was adopted worldwide during the recent pandemic. 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 positive and 
\series bold
one
\series default
 negative impact you have observed.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
The national task force sets a code of conduct for all computing professionals working on contact tracing, data analysis, etc. Describe two rules that you would expect to be included. For each of your rules, give an example of the unethical behaviour it is designed to prevent. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Using real-life examples, explain the terms data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe how data is transmitted in a packet switching network, and give two advantages of packet switching over circuit switching network.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain the purpose of layering in TCP/IP model. List the layers in order and describe each layer
\begin_inset Quotes ers
\end_inset

s major function. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The ASCII code in denary for the character 
\begin_inset Quotes els
\end_inset


\family typewriter
1
\family default

\begin_inset Quotes ers
\end_inset

 is 
\family typewriter
49
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Using 7 bits, express the ASCII code for the character 
\begin_inset Quotes els
\end_inset


\family typewriter
4
\family default

\begin_inset Quotes ers
\end_inset

 in binary.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Express the character 
\begin_inset Quotes els
\end_inset


\family typewriter
4
\family default

\begin_inset Quotes ers
\end_inset

 as a hexadecimal number. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Convert 
\family typewriter
4B1
\family default
 hexadecimal number to a binary number stored as two bytes. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In a restaurant, every membership account number is made up of five digits followed by a letter e.g. 
\family typewriter
36514C
\family default
 where the letter is a modulus-eleven check digit for the account number. Each digit is weighted, with the first digit having a weight of 
\family typewriter
7
\family default
 and each subsequent digit decreases its weight by 
\family typewriter
1
\family default
. Valid check digits are in the range of letter C to letter M, with C corresponding to the value of 1, D corresponds to 2 and so on. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the purpose of including a check digit at the end of each membership account number? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Write, in 
\series bold
pseudocode
\series default
, an algorithm which checks whether a membership account number is valid. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using your algorithm, determine whether a person with the account number 
\family typewriter
47938K
\family default
 is a member of the restaurant. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q5] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Run-length encoding is a simple data compression technique that can be effective when repeated values occur at adjacent positions within a string. Compression is achieved by replacing groups of repeated values with one copy of the value, followed by the number of times the value should be repeated. For example, 
\begin_inset Quotes eld
\end_inset


\family typewriter
AAAAABBBAAAB
\family default

\begin_inset Quotes erd
\end_inset

 would be compressed as 
\begin_inset Quotes eld
\end_inset


\family typewriter
A5B3A3B1
\family default

\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
Write, in 
\series bold
pseudocode
\series default
, a function that implements the run-length compression technique described above. The function will take a string argument and return the run-length compressed string. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using 
\series bold
pseudocode
\series default
, write a detailed algorithm for a function which will take two string values, called 
\family typewriter
P
\family default
 and 
\family typewriter
Q
\family default
, and will search the string value 
\family typewriter
P
\family default
 for the first occurrence of the string value 
\family typewriter
Q
\family default
 within it. The value returned is the start position of the first occurrence of 
\family typewriter
Q
\family default
 in 
\family typewriter
P
\family default
, or zero if there is no occurrence. Assume the string index starts at 1. For example, if 
\family typewriter
P
\family default
 is '
\family typewriter
bananas
\family default
' and Q is '
\family typewriter
na
\family default
' then the function would give the result 3, because '
\family typewriter
na
\family default
' first occurs in '
\family typewriter
bananas
\family default
' starting at character position three. [6] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q6] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 key characteristics of a recursive function, and when is it suitable to be used. [3] 
\end_layout

\begin_layout Enumerate
The procedure 
\family typewriter
MoveTower(n,i,j)
\family default
 shown below simulates the movement of moving 
\family typewriter
n
\family default
 discs from peg 
\family typewriter
i
\family default
 to peg 
\family typewriter
j
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE MoveTower(n, i, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF n = 1 OUTPUT (
\begin_inset Quotes qrd
\end_inset

Move disc from peg
\begin_inset Quotes qrd
\end_inset

, i, 
\begin_inset Quotes qld
\end_inset

to peg
\begin_inset Quotes qrd
\end_inset

, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MoveTower(n-1, i, 6-i-j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT (
\begin_inset Quotes qrd
\end_inset

Move disc from peg
\begin_inset Quotes qrd
\end_inset

, i, 
\begin_inset Quotes qld
\end_inset

to peg
\begin_inset Quotes qrd
\end_inset

, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MoveTower(n-1, 6-i-j, j) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Dry-run the procedure and show the output that is produced when the task is to move 3 discs from peg 1 to peg 3. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Assuming a stack is used for passing parameters to the procedure, show also the contents of the stack, excluding the return address, after each of the first 
\series bold
five
\series default
 procedure calls. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate
If a procedure is to be able to call itself recursively, it is usual for the values of any variables used in the procedure to be held in a stack rather than in fixed storage. Why is this? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A linked list ADT has the following operations defined: 
\end_layout

\begin_layout Itemize

\family typewriter
Create(x) 
\family default
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- creates an empty linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Insert(x,item,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts new value, 
\family typewriter
item
\family default
, into linked list 
\family typewriter
x
\family default
 so that it is at position 
\family typewriter
p
\family default
 in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Delete(x,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- deletes the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Read(x,p)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Length(x)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns the number of items in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmptyList(x)
\family default
 -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns 
\family typewriter
True
\family default
 if linked list 
\family typewriter
x
\family default
 is empty, otherwise returns 
\family typewriter
False
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear(x)
\family default
 – empties the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that have two parts: the item data and a pointer to the next item in the list. In addition, there is a 
\family typewriter
Start
\family default
 pointer which points to the first item in the list. 
\end_layout

\begin_layout Enumerate
Write algorithms that could be used to implement the 
\begin_inset Quotes els
\end_inset


\family typewriter
Delete
\family default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\family typewriter
Insert
\family default

\begin_inset Quotes ers
\end_inset

 operation. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
A stack ADT has the following operations: 
\end_layout

\begin_layout Itemize

\family typewriter
Create()
\family default
 - creates a new stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Push(item)
\family default
 - adds 
\family typewriter
item
\family default
 onto the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Pop()
\family default
 - deletes and returns item from the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 – if the stack is empty returns True, otherwise False; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear()
\family default
 – removes all items in the stack; 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Show how to implement 
\begin_inset Quotes els
\end_inset


\family typewriter
Create
\family default

\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset


\family typewriter
Push
\family default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\family typewriter
Pop
\family default

\begin_inset Quotes ers
\end_inset

 operation using the list ADT operations.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The stack implementation above is used to implement the undo/redo mechanism of a text editor.
\end_layout

\begin_layout Standard
An Undo stack is used to keep the edit history of the editor and the Redo stack is used to keep the history of the undo operations. The content of the text editor is stored as a string in the Undo stack and Redo stack.
\end_layout

\begin_layout Standard
When an undo is invoked, the Undo stack is popped and the content is pushed into the Redo Stack. When a redo is invoked, the Redo stack is popped and the content is pushed into the Undo Stack. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Using the stack ADT operations, show how to implement the following functions which return the contents. Assume that 
\family typewriter
undoStack
\family default
 and 
\family typewriter
redoStack
\family default
 are created. 
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
FUNCTION Undo() RETURNS STRING
\family default
 
\end_layout

\begin_layout Enumerate

\family typewriter
FUNCTION Redo() RETURNS STRING
\family default

\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
S-Cut offers haircut service at a price based on age group at 60 outlets located around Singapore. S-Cut has engaged you to develop an application that runs on kiosk stationed at their outlets. The application uses a relational database to store the data. Customers need to register as a regular member with their name, contact number and price. They can purchase a haircut service using the kiosks provided. The service record should contain date of service, member information and the outlet information. Based on the requirements given above, design the database that consists of 3 tables: Member, Outlet and ServiceRecord. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the tables in third normal form (3NF) and their relationships between them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName( 
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, …) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. Using the information given, write table descriptions for the tables you have identified in part 
\series bold
(a)(i)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
To attract more customers, some outlets offer 20% discount on Saturday and Sunday. Write the table description with the changes to the database to capture the change in price per haircut on Saturday and Sunday. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
S-Cut offers platinum membership which entice members to additional benefits. Platinum member needs to credit $100 to their account which entitles them to 12 sessions of haircut services, in addition they will receive a birthday gift on their birthday month. To ensure greater productivity in development of the membership system, object oriented design is used. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram for member class(es) which exhibit the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
Suitable classes with appropriate properties and methods 
\end_layout

\begin_layout Itemize
Inheritance 
\end_layout

\begin_layout Itemize
Polymorphism 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the term 
\series bold
encapsulation
\series default
 and how it is applied in your design in (c)(i). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the term 
\series bold
polymorphism
\series default
 and how it is applied in your design in (c)(i). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
An alternative way to develop an application that runs on the kiosk would be a web-based application. State 
\series bold
two
\series default
 differences between a native application and a web-based application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
S-Cut collects data from the customer, describe 
\series bold
two
\series default
 data protection obligations on how S-Cut must comply with the Personal Data Protection Act (PDPA). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
COVID19.TXT
\family default
 stores the cumulative total number of confirmed covid-19 cases in Singapore from 14 April 2020 till 15 May 2020.
\end_layout

\begin_layout Standard
A sample record is:
\end_layout

\begin_layout Standard

\family typewriter
1704
\family default
, 
\family typewriter
5050 
\family default

\end_layout

\begin_layout Standard
This means that as of 17 April 2020, a cumulative total of 5050 confirmed covid-19 cases were reported.
\end_layout

\begin_layout Standard
The task is to determine the dates with the highest and lowest number of the confirmed new covid-19 cases in Singapore and the longest ascending streak during the period.
\end_layout

\begin_layout Standard
Note: You cannot use the built-in 
\family typewriter
sort()
\family default
, 
\family typewriter
min()
\family default
 and 
\family typewriter
max()
\family default
 functions.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the data from the text file 
\end_layout

\begin_layout Itemize
calculate the number of new covid-19 cases per day (from 15 April 2020 to 15 May 2020) 
\end_layout

\begin_layout Itemize
output the dates with the highest and lowest numbers of new covid-19 cases, excluding the first day on 14 April 2020. 
\end_layout

\begin_layout Itemize
If more than one dates exists with the highest/lowest number of new covid-19 cases, all dates are reported. 
\end_layout

\begin_layout Subsubsection*
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
Highest # cases (1426) is on 20 April 2020 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Lowest # cases (447) is on 15 April 2020, 2 May 2020
\family default
 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Determine the ascending streak of new covid-19 cases 
\end_layout

\begin_layout Itemize
output the longest ascending streak of new cases across the period from 15 April 2020 to 15 May 2020 inclusive. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="18" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cumulative Total Cases 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New Cases 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1404 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3252 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1504 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3699 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
447 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1604 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4427 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
728 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1704 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5050 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
623 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1804 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5992 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
942 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1904 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6588 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
596 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18205 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
657 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18778 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
573 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19410 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
632 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20198 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
788 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
20939 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
741 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1205 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
24671 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
884 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1305 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25346 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
675 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3-day ascending streak
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1405 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26098 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
752 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1505 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
26891 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
793 
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection*
Sample output:
\end_layout

\begin_layout Standard

\family typewriter
Longest ascending streak is 3 days
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
COUNTRY1.TXT
\family default
 stores a list of country names.
\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using the country name, a hash address is calculated from a hashing function as follows: 
\end_layout

\begin_layout Itemize
the ASCII code is calculated for each character (in lowercase) within the country name 
\end_layout

\begin_layout Itemize
the total of ASCII values is calculated 
\end_layout

\begin_layout Itemize
the total is divided by 30 and the remainder is the hash address for this country 
\end_layout

\begin_layout Standard
For example, the hash address for 
\family typewriter
Brazil
\family default
 is 14
\end_layout

\begin_layout Standard
Write program code for the hashing function using the following specification
\end_layout

\begin_layout Standard

\family typewriter
FUNCTION HashKey (Country: STRING): INTEGER 
\family default

\end_layout

\begin_layout Standard
This function has a single parameter 
\family typewriter
Country
\family default
 and returns the hash address as an integer. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
The hash table is implemented as a list with 30 elements. Elements are written to and read from the hash table using the above hash function with the country name as the input parameter.
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
Read all country names from 
\family typewriter
COUNTRY1.TXT
\family default
 
\end_layout

\begin_layout Itemize
Use the function 
\family typewriter
HashKey
\family default
 to calculate the hash address for each country 
\end_layout

\begin_layout Itemize
Store each country name in the hash table 
\end_layout

\begin_layout Standard
You must ensure that when a collision occurs, your program design will deal with this situation by searching sequentially from the calculated hash address for an empty location and storing the country name at this empty location. The program will generate an error message if the hash table is full. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code for a procedure SearchCountry using the following specification
\end_layout

\begin_layout Standard

\family typewriter
PROCEDURE SearchCountry (Country: STRING, HashTable: LIST)
\family default

\end_layout

\begin_layout Standard
This procedure has two parameters, 
\family typewriter
Country
\family default
 and 
\family typewriter
HashTable
\family default
, and does the following: 
\end_layout

\begin_layout Itemize
Calculate the hash address for the country 
\end_layout

\begin_layout Itemize
Locate the country name in the hash table 
\end_layout

\begin_layout Itemize
Report whether or not this country name was found. If found, also output the address of the hash table where the country was found. 
\end_layout

\begin_layout Standard
You must ensure that your program can deal with collision when searching. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Devise a set of 
\series bold
three
\series default
 test cases with the country to be used. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 2.4 
\end_layout

\begin_layout Standard
The file 
\family typewriter
COUNTRY2.TXT
\family default
 stores a list of countries with their corresponding numbers of confirmed cases and death cases of COVID19 pandemic on May 16, 2020.
\end_layout

\begin_layout Standard
Each record has the following format: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<country>,<no. of confirmed cases>,<no. of death case> 
\family default
 
\end_layout

\begin_layout Standard
A sample record is 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
Brazil, 233142, 15633 
\family default
 
\end_layout

\begin_layout Standard
Death rate for each country is calculated as the number of death cases / the number of confirmed cases. This rate is output as a percentage to 1 decimal place. For the example above, the death rate of Brazil is 
\begin_inset Formula $15633/233142=6.7\%$
\end_inset

.
\end_layout

\begin_layout Standard
Write program code which does the following: 
\end_layout

\begin_layout Itemize
Read the data from 
\family typewriter
COUNTRY2.TXT 
\family default
 
\end_layout

\begin_layout Itemize
Implement 
\series bold
bubble sort
\series default
 to arrange the countries from highest to lowest death rate 
\end_layout

\begin_layout Itemize
Generate a text file 
\family typewriter
RATE.TXT
\family default
 to display the list of countries and their death rate. Each record has the format 
\family typewriter
<country>, <death rate>
\family default
. 
\end_layout

\begin_layout Standard
If two countries have the same death rate, their order in the list does not matter. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bakery currently keeps records on paper of all its products it sells in the shop. It decided to trial a database to manage its products. It is expected that the database should be normalized. The following information of the bakery is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
ProductCode
\family default
 – Unique code of the item 
\end_layout

\begin_layout Itemize

\family typewriter
Name
\family default
 – Name of the item 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 – The type of product – 
\family typewriter
'Cake'
\family default
, 
\family typewriter
'Loaf'
\family default
, 
\family typewriter
'Bun'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Location
\family default
 – The location at which the product is made – 
\family typewriter
'North'
\family default
, 
\family typewriter
'South'
\family default
, 
\family typewriter
'East'
\family default
, 
\family typewriter
'West'
\family default
 Kitchen 
\end_layout

\begin_layout Itemize

\family typewriter
Price
\family default
 – The selling price of the product 
\end_layout

\begin_layout Standard
For cakes, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
ServingSize
\family default
 – the estimated number of servings per cake 
\end_layout

\begin_layout Itemize

\family typewriter
Shape
\family default
 – Shape of the cake – 
\family typewriter
'Square'
\family default
, 
\family typewriter
'Circle'
\family default
, 
\family typewriter
'Roll'
\family default
 
\end_layout

\begin_layout Standard
For loaves, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Weight
\family default
 – weight of loaf in gram 
\end_layout

\begin_layout Standard
For buns, the following additional information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
PiecesPerPackage
\family default
 – number of pieces per package 
\end_layout

\begin_layout Standard
The information is to be stored in four different tables:
\end_layout

\begin_layout Standard

\family typewriter
Product 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cake 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Loaf 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Bun
\family default

\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create a SQL file named 
\family typewriter
Task3_1_<your_name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
bakery.db
\family default
 with the four tables. The table, 
\family typewriter
Product
\family default
, must use the 
\family typewriter
ProductCode
\family default
 as its 
\series bold
primary key
\series default
. The other tables must refer to the 
\family typewriter
ProductCode
\family default
 as a 
\series bold
foreign key
\series default
.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task3_1_<your_name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
CAKES.TXT
\family default
, 
\family typewriter
LOAVES.TXT
\family default
 and 
\family typewriter
BUNS.TXT
\family default
 contain information about the bakery
\begin_inset Quotes ers
\end_inset

s cakes, loaves and buns respectively for insertion into the bakery database. Each row in the three files is a comma-separated list of information about a single product.
\end_layout

\begin_layout Standard
For 
\family typewriter
CAKES.TXT
\family default
, the information about each cake is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, ServingSize, Shape 
\family default
 
\end_layout

\begin_layout Standard
For 
\family typewriter
LOAVES.TXT
\family default
, the information about each loaf is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, Weight 
\family default
 
\end_layout

\begin_layout Standard
For 
\family typewriter
BUNS.TXT
\family default
, the information about each bun is given in the following order: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
ProductCode, Name, Location, Price, PiecesPerPackage
\family default
 
\end_layout

\begin_layout Standard
Write a Python program to insert all information from the three files into the bakery database, bakery.db. Run the program.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task3_2_<your_name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write SQL code to show the 
\family typewriter
ProductCode
\family default
, 
\family typewriter
Name
\family default
, 
\family typewriter
Location
\family default
, 
\family typewriter
Price
\family default
 and the 
\family typewriter
ServingSize
\family default
 of each cake with 
\family typewriter
'Circle'
\family default
 Shape. Run the query.
\end_layout

\begin_layout Standard
Save this code as
\end_layout

\begin_layout Standard

\family typewriter
Task3_3_<your_name>_<centre number>_<index number>.sql 
\family default

\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
The bakery wants to filter the products by 
\family typewriter
Location
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
Location
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display a table tabulating the details of the product based on the 
\family typewriter
Location
\family default
 in ascending order of 
\family typewriter
Price
\family default
. The table will display the following columns: 
\family typewriter
Name
\family default
, 
\family typewriter
Type
\family default
, 
\family typewriter
Price
\family default
. 
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
Task3_4_<your_name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files/sub-folders as needed in a folder named Task3_4_<your_name>_<centre number>_<index number>
\end_layout

\begin_layout Standard
Run the web application. Save the output of the program when 
\family typewriter
'North'
\family default
 is entered as the 
\family typewriter
Location
\family default
 as
\end_layout

\begin_layout Standard

\family typewriter
Task3_4_<your_name>_<centre number>_<index number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is writing a program to manipulate different data structures using Object-Oriented Programming.
\end_layout

\begin_layout Standard
The superclass, 
\family typewriter
LinkedStructure
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize
A linear linked list of data items held in an 
\series bold
array
\series default
 of size 10. Array index starts at 1. 
\end_layout

\begin_layout Itemize
Head pointer, pointing to the first element in the linked list 
\end_layout

\begin_layout Itemize
Tail pointer, pointing to the last element in the linked list 
\end_layout

\begin_layout Itemize
Free pointer, pointing to the first element in the free list 
\end_layout

\begin_layout Standard
The diagram shows the linked structure after four items have been added and the unused nodes are linked together. 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\end_layout

\begin_layout Standard
This superclass has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Initialise()
\family default
 method sets up an empty linked list. Should link all nodes to form the free list. Initialise values for head pointer, tail pointer and free pointer 
\end_layout

\begin_layout Itemize

\family typewriter
Add(item)
\family default
 appends the parameter into its correct 
\series bold
alphabetical
\series default
 order in the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
Remove(item)
\family default
 removes the parameter from the ordered linked list 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 displays the data items in the linked list in alphabetical order 
\end_layout

\begin_layout Itemize

\family typewriter
PrintStructure()
\family default
 displays the current state of all pointers and the array contents in index order 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 tests for empty linked list 
\end_layout

\begin_layout Itemize

\family typewriter
IsFull()
\family default
 tests for no unused nodes 
\end_layout

\begin_layout Standard
The superclass is used to implement a linear queue.
\end_layout

\begin_layout Standard
The subclass 
\family typewriter
Queue
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
Add(item)
\family default
 appends the parameter to the queue and overrides the 
\family typewriter
LinkedStructure
\family default
 add method . 
\end_layout

\begin_layout Itemize

\family typewriter
Remove()
\family default
 returns and removes the next item in the queue 
\end_layout

\begin_layout Itemize

\family typewriter
Display()
\family default
 method should display the queue contents in order (e.g. the earliest added item first) and should override the 
\family typewriter
LinkedStructure
\family default
 display method. 
\end_layout

\begin_layout Standard
Each method updates its appropriate pointers, and produces suitable errors (or returns different values) to indicate if the actions are not possible, e.g. if the structure is empty.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example:
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the superclass 
\family typewriter
LinkedStructure
\family default
. 
\begin_inset space \hfill{}

\end_inset

[20]
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
create a 
\family typewriter
LinkedStructure
\family default
 object 
\end_layout

\begin_layout Itemize
add the following three data items in the order shown to the ordered linked list 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
Japan, Singapore, China 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
output all pointers and array contents using the 
\family typewriter
PrintStructure()
\family default
 method after adding the items 
\end_layout

\begin_layout Itemize
output the current contents of the linked list using the 
\family typewriter
Display()
\family default
 method 
\end_layout

\begin_layout Itemize
remove two data items 
\family typewriter
China
\family default
, 
\family typewriter
Japan
\family default
 in that order from the linked list 
\end_layout

\begin_layout Itemize
output all pointers and array contents using the 
\family typewriter
PrintStructure()
\family default
 method after the removal of the items. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code for the subclass 
\family typewriter
Queue
\family default
.
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism in your designs. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 4.4
\end_layout

\begin_layout Standard
The file 
\family typewriter
QUEUE.TXT
\family default
 stores data to test your program.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
create a new queue and add the data in the file QUEUE.TXT to the queue 
\end_layout

\begin_layout Itemize
output the current contents of the queue 
\end_layout

\begin_layout Itemize
remove and output two items from the queue 
\end_layout

\begin_layout Itemize
output all pointers and the array contents of the queue after the removal of the items. 
\end_layout

\begin_layout Standard
All outputs should have appropriate messages to indicate what they are showing. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A one-dimensional array 
\family typewriter
X
\family default
 will be used to record the timings of the participating teams racing in a 200 metres dragon boat race event. Five dragon boat teams will compete in the event, and the timing (in seconds) of each team will be captured as records in 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timing, seconds 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
58.61 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
48.54 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
59.32 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
49.78
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A segment of the pseudocode to perform bubble sort is given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Line 1: 
\begin_inset space \qquad{}

\end_inset

flag <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 2: 
\begin_inset space \qquad{}

\end_inset

WHILE flag = TRUE DO 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 3: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

flag <- FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 4: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR i = 1 to N //N is the size of array X 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 5: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF X[i] > X[i+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 6: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 7: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SWAP(X[i], X[i+1])//swaps value of items 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 8: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

flag <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 9: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 10: 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT i 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Line 11: 
\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\end_inset

An error is detected in the pseudocode above. 
\end_layout

\begin_layout Enumerate
Identify the error by stating the line number, and the type of error.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\series bold
Without
\series default
 changing the order and the types of constructs used, rectify the error in 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Using the race timings of the dragon boat event given above, use a trace table to illustrate that the amended algorithm works. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe the worst case scenario, and state the worst case time complexity for performing the bubble sort using the algorithm given above. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In the worst case scenario, state the total number of comparisons made by the bubble sort algorithm if 10 lanes are used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q10] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program written using object-oriented programming has 
\family typewriter
point
\family default
, 
\family typewriter
circle
\family default
, and 
\family typewriter
cone
\family default
 as its defined classes. The following diagram below shows the attributes and methods of the class 
\family typewriter
point
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
point 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Properties: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROTECTED: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
x-value: REAL 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
y-value: REAL 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PUBLIC: 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor() 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getCoordinates(): TUPLE 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setCoordinates(x, y: REAL)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw an inheritance diagram for 
\series bold
all
\series default
 the 
\series bold
three
\series default
 classes defined in the program. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain the differences between 
\end_layout

\begin_deeper
\begin_layout Enumerate
private and protected attributes/ methods of a class, 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
an object and a class. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q11] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A clinic manages patients
\begin_inset Quotes ers
\end_inset

 medical and financial records through an Internet-based information management portal. Due to several security incidents related to unintended disclosure of patients
\begin_inset Quotes ers
\end_inset

 information, the clinic
\begin_inset Quotes ers
\end_inset

s management has decided to migrate the portal to a local area network (LAN) that consists only 
\series bold
four
\series default
 computers and 
\series bold
one
\series default
 printer. Information of patients
\begin_inset Quotes ers
\end_inset

 medical and financial records can only be accessed by authorised staff on one of the four computers. 
\end_layout

\begin_layout Enumerate
Describe the meaning of the term local area network (LAN). 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why ring networks today rarely use physical layout of a ring? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the functions of a multi-station access unit used in a Token Ring network. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe how token passing enables a computer to send data to the printer in this Token Ring network. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every sales transaction made in JPJC supermarket is stored as a record in a serial file for auditing purposes. At the end of each day, a copy of the daily serial file, sorted by transaction amount in descending order will be archived into the main database. 
\end_layout

\begin_layout Enumerate
State what is meant by a serial file? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain how an archive file is different from a backup file, and describe how a backup file for sales transactions can be created for JPJC supermarket.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Merge sort algorithm is used to arrange the sales transaction records by ordering them in descending order of transaction amounts. The algorithm will first read all the daily unsorted sales transactions into 
\family typewriter
A
\family default
, a fixed size array of records with index starting from 1. Then, 
\family typewriter
mergesort
\family default
 will be applied to sort 
\family typewriter
A
\family default
. The pseudocode for 
\family typewriter
mergesort
\family default
 is given below,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE mergesort(A: ARRAY of RECORDS, x, y: INTEGERS)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF x < y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

m x + ((y - x) DIV 2) //DIV performs integer division 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(A, x, m) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(A, m + 1, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

merge(A, x, m, y) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
//-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-main program-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
mergesort(A, x, y) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given that array 
\family typewriter
A = [39.10, 17.50, 35.40, 42.68, 8.90, 35.40]
\family default
, and 
\family typewriter
merge(A, x, m, y)
\family default
 will sort and combine elements of 
\family typewriter
A[x:m]
\family default
, and 
\family typewriter
A[m+1:y]
\family default
 into 
\family typewriter
A[x:y]
\family default
 in descending order. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State the values of 
\family typewriter
x
\family default
, and 
\family typewriter
y
\family default
 when 
\family typewriter
mergesort
\family default
 is called in the main program.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State the total number of times 
\family typewriter
mergesort
\family default
 and 
\family typewriter
merge
\family default
 are called in the entire program.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The following diagram shows an incomplete trace tree diagram of the array of sales transaction records represented by its sales amount. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Draw and complete the trace tree diagram above by applying merge sort to the unsorted array of records A. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

The time complexity for merge sort is 
\begin_inset Formula $O(N\log_{2}N)$
\end_inset

. Explain why this time complexity is applicable to the best, average and worst case scenarios.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a recursive algorithm? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the difference between an iterative algorithm and a recursive algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Design a recursive algorithm 
\family typewriter
SumOfCubes(n)
\family default
 using pseudocode, that returns the integer value of series 
\begin_inset Formula \[
1^{3}+2^{3}+3^{3}+\ldots+(n-1)^{3}+n^{3},
\]
\end_inset

where 
\begin_inset Formula $n=1,2,3,\ldots$
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain what will happen when the value of 
\family typewriter
n 
\family default
gets too large. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The elections department of a town wishes to store the records of its voters in a linked list. The stored records are first ordered by the voter
\begin_inset Quotes ers
\end_inset

s age (in years), followed by voter
\begin_inset Quotes ers
\end_inset

s name in alphabetical order. The voters list is maintained with the record of the youngest voter at the start of the list. 
\end_layout

\begin_layout Enumerate
Explain why the sequence of nodes in a linked list does not always reflect how the data is stored in the memory of the computer. [2] 
\begin_inset space \quad{}

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Age
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Name
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Link
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Tim Tan
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
23
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Annie Hao
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
a
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
45
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Bob Boon
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Lester Moh
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
b
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
5
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
18
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ari Bello
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
c
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
52
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Helen How
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
7
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
23
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Cindy Ku
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
d
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
8
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
55
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Charles Chu
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
9
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
53
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Mimi Lee
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
e
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
10
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
40
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Jenny Tsai
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
f
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Head
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
g
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Free
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Two linked lists are kept to manage the actual data, and the free spaces. When a new item is added, a node is taken from the head of the free space list, and when a node is deleted, the deleted node will be returned to the tail of the free space list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Given that 
\family typewriter
Ari Bello
\family default
 is the youngest voter, state the values of 
\family typewriter
a
\family default
, 
\family typewriter
b
\family default
, 
\family typewriter
c
\family default
, 
\family typewriter
d
\family default
, 
\family typewriter
e
\family default
, 
\family typewriter
f
\family default
, and 
\family typewriter
g
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw the 
\series bold
linked list diagram
\series default
 to show its state right after each of the following successive operations: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Insert 
\family typewriter
18
\family default
 years old, 
\family typewriter
Ahmad Ali
\family default
. 
\end_layout

\begin_layout Enumerate
Delete 
\family typewriter
23
\family default
 years old, 
\family typewriter
Cindy Ku
\family default
. 
\end_layout

\begin_layout Enumerate
Insert 
\family typewriter
37
\family default
 years old, 
\family typewriter
Tania Tan
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of using a linked list over a static array. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The stack is a first in last out data structure where the items are inserted to and deleted from the top of the stack. The items of the stack are globally stored in a fixed length array 
\family typewriter
S
\family default
 of size 20. A stack pointer 
\family typewriter
sp
\family default
 points to the top item in the stack, and is initialised to 0. The three basic methods of the stack are: 
\end_layout

\begin_layout Itemize

\family typewriter
PUSH(X) //inserts X as new item on the top of STACK S 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
POP() 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

//removes and returns item at the top of STACK S. 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
PEEK() 
\begin_inset space ~

\end_inset

//returns value of the item on top of STACK S without removing it. 
\family default
 
\end_layout

\begin_layout Enumerate
Write the pseudocode for the algorithms 
\family typewriter
PUSH(X)
\family default
, 
\family typewriter
POP()
\family default
, and 
\family typewriter
PEEK()
\family default
.
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
The precedence order of the operators from highest to lowest is as follows: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Parenthesis 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 '^' 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
'*'
\family default
 or 
\family typewriter
'/'
\family default
 with equivalent level of priority 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 '+'
\family default
 or 
\family typewriter
'-'
\family default
 with equivalent level of priority 
\end_layout

\begin_layout Standard
The pseudocode below shows a stack-based function 
\family typewriter
InfixToPostfix
\family default
 that converts and returns an input expression represented in infix notation to its postfix form.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION InfixToPostfix(infix: STRING) RETURNS postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Scan through infix expression one token at a time from leftmost. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Initialise empty STACK S 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Initialise empty STRING postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR token read from infix item by item 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CASE of token: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

operand : postfix <- postfix + token
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

'(' : PUSH(token) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

')' : REPEAT postfix <- postfix + POP() UNTIL POP() = '(' operator:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE S not empty 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF token = '(' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

BREAK 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF PEEK() is higher or equal precedence than token THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

postfix <- postfix + POP() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PUSH(token) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

END CASE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

NEXT token 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

postfix <- postfix + POP() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

UNTIL S is empty 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN postfix 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Complete the trace table given below for 
\family typewriter
InfixToPostfix(
\begin_inset Quotes qrd
\end_inset

A/(B-C)*D^E
\begin_inset Quotes qrd
\end_inset

)
\family default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
token 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Description 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING postfix 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Stack, S
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Appends to postfix 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
empty
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/ 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Push to S 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
( 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Push to S 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
/,(
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
… 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
…………… 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
…………… 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
……………
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Show, with the aid of diagrams, how the computer uses a stack to directly evaluate the value of the postfix expression 
\family typewriter
895-/12+*4-
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Traversal was performed on the binary tree given below. 
\end_layout

\begin_layout Enumerate
List the nodes, in the order, that are visited for, 
\end_layout

\begin_deeper
\begin_layout Enumerate
in-order traversal, 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
pre-order traversal, and 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
post-order traversal.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A binary search tree is considered as an ordered binary tree where the key values of nodes in the left sub-tree are less than the value of its parent (root) node's key, and key values of nodes in the right sub-tree are greater than the value of its parent (root) node
\begin_inset Quotes ers
\end_inset

s key. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a recursive algorithm can be used to locate a node with key value 
\family typewriter
search_key
\family default
 by returning 
\family typewriter
TRUE
\family default
 when 
\family typewriter
search_key
\family default
 is found, and 
\family typewriter
FALSE
\family default
 otherwise. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 advantage of using binary search tree as data structure over linked list, and describe a situation that would negate this advantage.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Car owners who wish to purchase or renew their insurance policy with XYZ Motor Insurance are required to accumulate not more than 6 demerit points in their driving records. Under this demerit points system, a driver who clocks up more than 20 demerit points will have his/her driving license revoked, thus denying the person from driving and from purchasing any vehicle insurance. Drivers who have not made any insurance claims for the past 3 years can get 2 demerit points off, and current employees of XYZ Motor Insurance can get 1 demerit point deducted. In addition, drivers awarded with certificate of merit can get 1 demerit point off as well. XYZ Motor Insurance only allows drivers to receive a maximum deduction of 3 demerit points per year. Draw a decision table to reflect the eligibility of car owners who wish to purchase or renew a car insurance policy with XYZ Motor Insurance. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company currently uses a computerised flat file to keep track of the monthly claims submitted by its employee, and has decided to use a relational database to store and manage the claims submitted by the employees instead. The following table shows the details of the computerised flat file.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Claims ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Item Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staff ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Staff Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Department 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Amount
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2818 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Phone charger 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P212 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
John Lee 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Production 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$53.23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3291 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Car Transport 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S281 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Chan, Molly 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sales 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$31.40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3998 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Meal, Lunch 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
O323 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Omar Hairi 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operations 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$7.20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4820 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
AAA Batteries 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E493 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muthu K. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Engineering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$10.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6322 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hard Drive 3TB 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A550 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Jervois F. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accounts 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$27.99
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7384 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Medical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M438 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zudin B Ali 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Marketing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
$48.00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
….
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
State and justify 
\series bold
one
\series default
 reason made by the company to migrate its claims information from the existing flat file system to a relational database management system. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 other fields which would be useful for the company to capture. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Given that the every claim is associated with one item, write the table descriptions of the relational database in 
\series bold
first normal form
\series default
 and 
\series bold
second normal form
\series default
. You are to include the fields in 
\series bold
(b)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P1/Q9] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the denary value of hexadecimal ABCD? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
An integer variable of size 4 bytes is used to keep track of the number of commuters who travel to work from Jurong bus interchange. State the maximum number of commuters this variable can keep track. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Jurong Pioneer Primary School uses buses to transport students to school. There are six bus routes labelled 
\family typewriter
A
\family default
 to 
\family typewriter
F
\family default
. A survey was conducted to analyse the punctuality statistics of these buses over a four-week period.
\end_layout

\begin_layout Standard
The data from the survey is stored in the file 
\family typewriter
SURVEY.TXT
\family default
. The format of the data in the file is: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<Day>,<A>,<B>,<C>,<D>,<E>,<F>
\family default
 
\end_layout

\begin_layout Standard
Positive numbers represent minutes early, negative numbers represent minutes late and 0 represents the bus having been on time.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write the program code that: 
\end_layout

\begin_layout Itemize
reads the entire contents of 
\family typewriter
SURVEY.TXT
\family default
 into an appropriate data structure called 
\family typewriter
Records
\family default
, and 
\end_layout

\begin_layout Itemize
displays the contents of 
\family typewriter
Records
\family default
 in neat columns. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsection*
Task 1.2 
\end_layout

\begin_layout Standard
Extend your program so that the following statistics for the four-week period may be calculated and output: 
\end_layout

\begin_layout Itemize
the number of late arrivals for each bus route, 
\end_layout

\begin_layout Itemize
the average number of minutes late for each bus route, using only data from days on which it was late, and 
\end_layout

\begin_layout Itemize
the bus route(s) with the highest number of days late. 
\end_layout

\begin_layout Standard
All the results should be displayed with appropriate annotation. The following is an example run of the program: 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsection*
Task 1.3
\end_layout

\begin_layout Standard
Additional code is to be written for the user to input a specific day, for example: 
\family typewriter
Fri3
\family default
, to be used for the analysis of data. Find and display how many buses were late on this day and for each late bus, display the route label and how late the bus was on this day.
\end_layout

\begin_layout Standard
Test your code using the following test data:
\end_layout

\begin_layout Standard

\family typewriter
Tue1
\family default

\end_layout

\begin_layout Standard

\family typewriter
Thu2
\family default

\end_layout

\begin_layout Standard
Download your program code for Task 1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your class>_<your name>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In linear queue data structure, elements are inserted until the queue becomes full. However, after the queue becomes full, new elements cannot be inserted until all the existing elements are removed from the queue. Although there are empty spaces in the queue, they remain unused. This is a disadvantage of a linear queue.
\end_layout

\begin_layout Standard
After inserting all the elements into a linear queue: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

John
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Amy
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Chetan
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Xin Xin
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Evan
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Front}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Rear}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Linear queue is still considered full after elements have been dequeued: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

John
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Amy
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Chetan
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Xin Xin
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes eld
\end_inset

Evan
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Front}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\overset{\uparrow}{\text{Rear}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
To overcome this disadvantage, a circular queue data structure may be implemented. The next element added to the queue will be stored at index 0 
\end_layout

\begin_layout Standard
\align center
\noindent
<INSERT_IMAGE_HERE> 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="14" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Queue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Items
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[0:4] OF STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stores the elements of queue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of the first item added to the queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index of the last item added to the queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Instantiates a 
\family typewriter
Queue
\family default
 object.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is empty and 
\family typewriter
FALSE
\family default
 otherwise.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is full and 
\family typewriter
FALSE
\family default
 otherwise.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enqueue(STRING)
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Inserts a new item to the queue. Displays a suitable message if the queue is full.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dequeue():STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns the item removed from the queue or 
\begin_inset Quotes eld
\end_inset


\family typewriter
NONE
\family default

\begin_inset Quotes erd
\end_inset

 if the queue is empty.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Outputs items from the front to the rear of the queue.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
CircularQueue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Methods
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Identifier 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Instantiates a 
\family typewriter
CircularQueue
\family default
 object.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
TRUE
\family default
 if the queue is full and 
\family typewriter
FALSE
\family default
 otherwise.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Enqueue(STRING)
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Inserts a new item to the queue. Displays a suitable message if the queue is full.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dequeue():STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Returns the item removed from the queue or 
\begin_inset Quotes eld
\end_inset


\family typewriter
NONE
\family default

\begin_inset Quotes erd
\end_inset

 if the queue is empty.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Outputs items from the front to the rear of the queue.Overrides the method in parent class.
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Implement the classes 
\family typewriter
Queue
\family default
 and 
\family typewriter
CircularQueue
\family default
 with object-oriented programming. The first item added to an empty queue is stored at index 0. The attributes of each object is reinitialised when the queue becomes empty.
\begin_inset space \hfill{}

\end_inset

 [20]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
There are two printers in the General Office. One of the printers implements a linear queue while the other implements a circular queue.
\end_layout

\begin_layout Standard
Write the code to instantiate a 
\family typewriter
Queue
\family default
 object and a 
\family typewriter
CircularQueue
\family default
 object. Test your code, on both queues, using the following steps: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
i.
\end_layout

\end_inset

Enqueue five users in the order given in the diagram. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

Dequeue twice. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

Enqueue 
\begin_inset Quotes eld
\end_inset

Mohan
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iv.
\end_layout

\end_inset

Display the queue. 
\end_layout

\begin_layout Standard
Download your program code for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your class>_<your name>.ipynb
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The library in Jurong Pioneer Primary School uses a hybrid data structure to keep track of its inventory. Each record in the hash table stores a simple list 
\family typewriter
[<Category>, <Binary Search Tree object>]
\family default
. Each node in the Binary Search Tree (BST) stores the ISBN number and title of a book. The nodes in each BST share the same book category and are sorted, in ascending order, according to their ISBN numbers.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write the object-oriented code for the 
\family typewriter
BST
\family default
 and 
\family typewriter
BSTNode
\family default
 classes described above. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
A checksum is applied to determine the Hash Value for each 
\family typewriter
<Category>
\family default
, where the ASCII value of each character in the title is multiplied by its position in the 
\family typewriter
<Category>
\family default
 string (starting from left to right), and then summed.
\end_layout

\begin_layout Standard
For example, given the category 
\begin_inset Quotes eld
\end_inset

classics
\begin_inset Quotes erd
\end_inset

, the summed value would thus be: 
\begin_inset Formula $99\times1+108\times2+97\times3+115\times4+115\times5+105\times6+99\times7+115\times8=3884$
\end_inset

.
\end_layout

\begin_layout Standard

\begin_inset Formula $(3884\mod19)+1=9$
\end_inset


\end_layout

\begin_layout Standard
A weighted modulus 19 operation is then applied and 1 is added to the remainder to determine the final Hash Value.
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write the code for the function 
\family typewriter
CalcHash(my_string)
\family default
, which takes in a string argument and returns its resultant Hash Value. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write the code to declare and initialise 
\family typewriter
HashTable
\family default
, an empty hash table array that may store up to 19 records. [2]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard

\family typewriter
CATEGORIES.TXT
\family default
 is a text file containing the book categories. Read the entire contents of 
\family typewriter
CATEGORIES.TXT
\family default
 and update the records in the hash table. Collisions are handled using 
\series bold
linear probing
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\family typewriter
BOOKS.TXT
\family default
 holds the details of books in the library. The format of the data in the file is: 
\family typewriter
<Category>
\family default
,
\family typewriter
 <ISBN>
\family default
,
\family typewriter
 <Title>
\family default
.
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the lines from the file, 
\end_layout

\begin_layout Itemize
extract the 
\family typewriter
<Category>
\family default
, 
\family typewriter
<ISBN>
\family default
 and 
\family typewriter
<Title>
\family default
 values, and 
\end_layout

\begin_layout Itemize
add each book to the BST of its category. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsection*
Task 3.6 
\end_layout

\begin_layout Standard
Write the code to display the ISBN and title of each book belonging to 
\family typewriter

\begin_inset Quotes eld
\end_inset

classics
\begin_inset Quotes erd
\end_inset


\family default
 category. The output is sorted according to the ISBN numbers. Ensure your output uses headings to identify the data displayed.
\end_layout

\begin_layout Standard
Download your program code for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your class>_<your name>.ipynb
\family default

\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer company has several offices throughout Singapore, each with several salespersons. Each salesperson is assigned to one office only. A record of the sales made by each salesperson has been set up using a relational database.
\end_layout

\begin_layout Standard
The following tables hold the data:
\end_layout

\begin_layout Standard

\family typewriter
CUSTOMER (
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, Email, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
OFFICE (
\family default

\family typewriter

\bar under
OfficeID
\bar default

\family default

\family typewriter
, PostalCode, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALE (
\family default

\family typewriter

\bar under
SalesPersonID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
CustomerID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SaleDate
\bar default

\family default

\family typewriter
, Amount) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALESPERSON (
\family default

\family typewriter

\bar under
SalesPersonID
\bar default

\family default

\family typewriter
, SalesPersonName, OfficeID*) 
\family default

\end_layout

\begin_layout Standard

\series bold
Note
\series default
: Underlined field indicates primary key. Asterisk (*) indicates a foreign key.
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write the SQL code to create the four tables in the database named 
\family typewriter
computercompany.db
\family default
.
\end_layout

\begin_layout Standard
Save the SQL file as 
\family typewriter
TASK4_1_<your class>_<your name>.sql
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
CUSTOMER.CSV
\family default
, 
\family typewriter
OFFICE.CSV
\family default
, 
\family typewriter
SALE.CSV
\family default
 and 
\family typewriter
SALESPERSON.CSV
\family default
 contain information exported by their spreadsheets files. Write Python code to migrate them to the database.
\end_layout

\begin_layout Standard
Save your Python code as 
\family typewriter
TASK4_2_<your class>_<your name>.py
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write SQL code to show the 
\family typewriter
SaleDate
\family default
, 
\family typewriter
SalesPersonName
\family default
, 
\family typewriter
CustomerName
\family default
 and 
\family typewriter
Amount
\family default
 of all sale transactions performed at the office with ID 
\family typewriter
1
\family default
.
\end_layout

\begin_layout Standard
Save the SQL file as 
\family typewriter
TASK4_3_<your class>_<your name>.sql
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
A report is produced to show the top salesperson in each office each month.
\end_layout

\begin_layout Standard
Write Python code to: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
i.
\end_layout

\end_inset

generate a web form that allows a user to enter the month (
\family typewriter
1
\family default
 to 
\family typewriter
12
\family default
) and year, 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

use the data submitted by the web form to query the database, and 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

return a HTML page with the report displayed. 
\end_layout

\begin_layout Standard
The following is a sample report for March, 2020. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Top Performers in March 2020
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Office ID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Salesperson
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Total Amount S$
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Low Kok Kheong 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7880
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Mindy Tan 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6935
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Monish Chandr 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10700
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Save your Python program as 
\family typewriter
TASK4_4_<your class>_<your name>.py
\family default
 with any additional files/ sub-folders as needed in a zipped folder named
\end_layout

\begin_layout Standard

\family typewriter
Task4_<your class>_<your name>.zip
\family default
.
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Subsection*
Task 4.5 
\end_layout

\begin_layout Standard
Deploy the web app on your local host and enter the following data: 
\end_layout

\begin_layout Enumerate
month – 
\family typewriter
8
\family default
, and 
\end_layout

\begin_layout Enumerate
year – 
\family typewriter
2020
\family default
. 
\end_layout

\begin_layout Standard
Save the screenshot of table generated as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_5_<your class>_<your name>.jpg
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Figure 1
\series default
 shows ten numbers stored in an array 
\family typewriter
L
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="10">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\series bold
Figure 1
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
L
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[10]
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
34
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
27
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
35
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
63
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
56
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
16
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
24
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The numbers in 
\family typewriter
L
\family default
 are to be sorted.
\end_layout

\begin_layout Standard

\series bold
Figure 2
\series default
 shows an 
\series bold
incomplete
\series default
 structure chart that has been created while developing a solution to the problem of sorting the numbers in 
\family typewriter
L
\family default
.
\end_layout

\begin_layout Standard
The constant 
\family typewriter
MAX
\family default
 has been used to represent the size of the array. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 2
\series default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the goal of this problem. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
How should the curved arrow 
\series bold
(a)
\series default
 in 
\series bold
Figure 2
\series default
 be labelled? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What should be written in box 
\series bold
(b)
\series default
 in 
\series bold
Figure 2
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
What should be written in box
\series bold
 (c)
\series default
 in 
\series bold
Figure 2
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
A new Bubble Sort routine is developed using the structure chart shown in 
\series bold
Figure 2
\series default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

What value will be in 
\family typewriter
L[1] 
\family default
when this Bubble Sort routine has finished executing on the array 
\family typewriter
L
\family default
 shown in 
\series bold
Figure 1
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

A Bubble Sort routine, based on the structure chart in 
\series bold
Figure 2
\series default
, always completes 
\family typewriter
MAX - 1
\family default
 passes through the array. Often, this number of passes is not required, as the contents of the array will be sorted after fewer passes have been made. If a pass is made through the array during which no swaps need to be made, then the array has been sorted.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the changes that need to be made to the Bubble Sort routine so that it will only complete the minimum number of passes through the array that are needed to fully sort the contents of the array. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The Bubble Sort routine can also be implemented using recursion. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Define what is meant by a recursive function. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Using pseudocode, write a recursive Bubble Sort routine.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Explain a disadvantage of a recursive Bubble Sort function over an iterative one.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Name and describe another recursive sort algorithm. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In Morse code, each letter of the alphabet is represented by a unique combination of dots and dashes. Study the following table carefully: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Letter
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Morse Code
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
. -
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dot dash
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . . .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dot dot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . - .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dash dot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- . . .
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
dash dot dot
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A binary tree is used to represent this coding system. Each node, except the root node, contains a letter of the alphabet. The position of each letter in the tree is determined by its Morse code. Moving from one node to another down the tree is done by traversing either a left branch or a right branch. A left branch corresponds to a . (dot) and a right branch corresponds to a – (dash).
\end_layout

\begin_layout Standard
The first three levels of the tree are shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
What are the Morse codes for the letters N and Y? 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Draw a diagram of the binary tree which clearly shows the position of the letters D, C and B in the tree.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why this binary tree representation is not the most suitable data structure for performing English to Morse code conversion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe a better alternative and explain how the Morse code of a letter could be found. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The algorithm represented using pseudo-code in 
\series bold
Figure 3
\series default
 describes a method to convert two hexadecimal numbers into decimal. The subroutine 
\family typewriter
ToDecimal
\family default
 used in
\series bold
 Figure 3
\series default
 is shown in 
\series bold
Figure 4
\series default
 and the built-in subroutine 
\family typewriter
ASCII
\family default
 is explained in 
\series bold
Table 1
\series default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 3
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FOR Count <- 1 TO 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

INPUT HexString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Number <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

FOR EACH HexDigit IN HexString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- ToDecimal(HexDigit) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Number <- Number * 16 + Value 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDFOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

OUTPUT Number 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFOR
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
FOR EACH
\family default
 command steps through each character in a string working from left to right. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 4
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
SUBROUTINE ToDecimal(HexDigit)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF HexDigit = 
\begin_inset Quotes qld
\end_inset

A
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

B
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 11
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

C
\begin_inset Quotes qrd
\end_inset

 THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 12
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit = 
\begin_inset Quotes qld
\end_inset

D
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 13
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit * 
\begin_inset Quotes qld
\end_inset

E
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 14
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDlgit = 
\begin_inset Quotes qld
\end_inset

F
\begin_inset Quotes qrd
\end_inset

 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- 15
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSEIF HexDigit IN (
\begin_inset Quotes qrd
\end_inset

0
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

l
\begin_inset Quotes qrd
\end_inset

, ..., 
\begin_inset Quotes qld
\end_inset

9
\begin_inset Quotes qrd
\end_inset

] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- ASCII(HexDigit) - 48
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Value <- -1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDSUBROUTINE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Table 1
\series default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Subroutine used in Figure 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII(Char) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the ASCII code or the chal passed as a parameter. Example: 
\family typewriter
ASCII (
\begin_inset Quotes qrd
\end_inset

l
\begin_inset Quotes qrd
\end_inset

)
\family default
 returns 
\family typewriter
49
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Copy and complete the following table by hand-tracing the algorithm in Figure 3. Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
A2
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
1G
\family default

\begin_inset Quotes qrd
\end_inset

 as input strings. You may not need to use all the rows. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Count
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
HexString
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Number
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
HexDigit
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Value
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
Output
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how the algorithm in Figure 3 has attempted to deal with the conversion of 
\begin_inset Quotes qld
\end_inset


\family typewriter
1G
\family default

\begin_inset Quotes qrd
\end_inset

 into decimal and why this method is not fully effective. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Other than a trace table, describe two other debugging methods a programmer can use to find bugs in his code. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Company X sells merchandise to wholesale and retail outlets. Wholesale customers receive a two percent discount on all orders. The company also encourages both wholesale and retail customers to pay cash on delivery by offering a two percent discount for this method of payment. Another two percent discount is given on orders of 50 or more units. Discounts can be stacked for each order. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Write pseudo-code to implement a function 
\family typewriter
ComputeDiscount
\family default
 that takes in the appropriate parameters and returns the message 
\begin_inset Quotes eld
\end_inset


\family typewriter
Discount rate is X%
\family default

\begin_inset Quotes erd
\end_inset

 where 
\family typewriter
X
\family default
 is the calculated discount. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Draw a system flowchart of your pseudo-code in 
\series bold
(b)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Athletes, who are members of teams, compete in running events, which are held at fixtures throughout the year. For example, athlete 15 might compete in the Girls
\begin_inset Quotes ers
\end_inset

 1500m Under 18 race in the fixture at National Stadium on 12 September 2020.
\end_layout

\begin_layout Standard
A relational database is used to store the details of which athletes enter each event at each fixture. The relations used in the database are shown in 
\series bold
Figure 5
\series default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 5
\series default
 
\end_layout

\begin_layout Standard

\family typewriter
Athlete(
\family default

\family typewriter

\bar under
AthleteID
\bar default

\family default

\family typewriter
, Surname, Forename, DateOfBirth, Gender, TeamName) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventType(
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
, Gender, Distance, AgeGroup) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Fixture(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, FixtureDate, LocationName) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventAtFixture(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
EventEntry(
\family default

\family typewriter

\bar under
FixtureID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
EventTypeID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
AthleteID
\bar default

\family default

\family typewriter
) 
\family default
 
\end_layout

\begin_layout Itemize
Each 
\family typewriter
Athlete
\family default
, 
\family typewriter
EventType
\family default
 and 
\family typewriter
Fixture
\family default
 is identified by a unique identity number, for example 
\family typewriter
AthleteID
\family default
 for athletes. 
\end_layout

\begin_layout Itemize
An 
\family typewriter
EventType
\family default
 is a type of event, such as Boys
\begin_inset Quotes ers
\end_inset

 100m Under 15 race. 
\end_layout

\begin_layout Itemize
If an athlete wants to take part in an event at a particular fixture, then an entry is created in the 
\family typewriter
EventEntry
\family default
 relation to represent this. 
\end_layout

\begin_layout Standard

\series bold
Figure 6
\series default
 shows an incomplete entity-relationship diagram for part of the database. 
\end_layout

\begin_layout Standard
\align center
\noindent

\series bold
Figure 6
\series default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Copy and draw lines on 
\series bold
Figure 6
\series default
 to show the degree of any 
\series bold
three
\series default
 relationships that exist between the four entities shown. [3] 
\end_layout

\begin_layout Enumerate
The following SQL statement is intended to make a table to represent the Athlete relation. The statement contains some errors. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\series bold
Figure 7
\series default
 
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CREATE TABLE Athlete ( 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

PRIMARY KEY AthleteID, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(50) Surname, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(30) Forename, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DATE DateOfBirth, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(6) Gender, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

VARCHAR(30) TeamName 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
You may assume that all of the data types used in 
\series bold
Figure 7
\series default
 are valid and the field lengths are appropriate. State 
\series bold
two
\series default
 errors that have been made. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
State two reasons why database designs, such as this one, are usually normalised. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A list is to be produced of the names of all athletes who are competing in the fixture that is taking place on 17/09/20. The list must include the 
\family typewriter
Surname
\family default
, 
\family typewriter
Forename
\family default
 and 
\family typewriter
DateOfBirth
\family default
 of these athletes and no other details. The list should be presented in alphabetical order by Surname. With reference to the database design shown in Figure 3, write an SQL query to produce the list. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
An IT consultant is suggesting changing to the use of a NoSQL database instead. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe two advantages that a NoSQL database have over a SQL database. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain with reasons if you agree or disagree with making the change. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Computers connected to the Internet use the TCP/IP suite of protocols for data transmission. 
\end_layout

\begin_layout Enumerate
What is a protocol? [1] 
\end_layout

\begin_layout Enumerate
The TCP/IP stack is divided into four layers. One of these is the application layer protocol. 
\series bold
Table 1
\series default
 shows four different scenarios that all use the TCP/IP protocol. Complete 
\series bold
Table 1
\series default
 by writing the name of the particular 
\series bold
application layer protocol
\series default
 that would be used to transfer data during each operation. You must give a different answer in each case. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\series bold
Table 2
\series default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Operation
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Application Layer Protocol 
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(i)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Managing a server remotely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(ii)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Retrieving e-mail from an e-mail server 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(iii)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Viewing a sports news web page using a web browser 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
(iv)
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accessing your online bank account using a web browser 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
A student uses the following URL to download a copy of a previous year
\begin_inset Quotes ers
\end_inset

s Computing exam paper.
\end_layout

\begin_deeper
\begin_layout Standard

\begin_inset Formula $\mathtt{\underset{A}{\underbrace{https}}://\underset{B}{\underbrace{www.nanyang.moe.sg}}\underset{C}{\underbrace{/gce/computing/2019H2Computing2.pdf}}}$
\end_inset

 
\end_layout

\begin_layout Enumerate
Describe the 
\series bold
three
\series default
 labelled parts (
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
) of this URL.. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State the top-level domain part in the URL. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
To access the exam paper, the student
\begin_inset Quotes ers
\end_inset

s computer might need to make use of a Domain Name System (DNS) query which is transmitted to a DNS server. 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the role of a DNS server? . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
In some circumstances the student
\begin_inset Quotes ers
\end_inset

s computer will not need to contact a remote DNS server to access a resource. Describe 
\family typewriter
two
\family default
 situations when a DNS query will 
\family typewriter
not
\family default
 be sent to a remote DNS server. . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
In the process of requesting a web page, a browser will generate an HTTP GET request. 
\end_layout

\begin_deeper
\begin_layout Enumerate
In which layer of the TCP/IP stack is the browser operating? . 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the student
\begin_inset Quotes ers
\end_inset

s computer might need to make several HTTP GET requests to display one web page. . 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The HTTP GET requests are being sent to port 80 on the remote machine. The browser has been allocated a 
\series bold
client port number
\series default
. What is meant by a client port number?. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Below is a numbered list of the names of some of the legislation that applies in situations where computers are used:
\end_layout

\begin_layout Standard
1. Copyright, Designs and Patents Act
\end_layout

\begin_layout Standard
2. Computer Misuse Act
\end_layout

\begin_layout Standard
3. Regulation of Investigatory Powers Act
\end_layout

\begin_layout Standard
4. Health and Safety Regulations 5. Data Protection Act
\end_layout

\begin_layout Standard
For each of the situations given below, identify the relevant legislation which is being followed. Write the number that corresponds to the appropriate legislation in each situation. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Marcus wanted an MP3 of a recent song so he went to an online music store. After paying he was able to immediately download the purchased song. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
A new workstation is installed in an office and an assessment is performed regarding the lighting for the workstation and the positioning of the desk, monitor and chair. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Mr Smith hands over his 50-character encryption key in response to a request from the authorities investigating a fraud case. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
The operators of a number of multi-storey car parks have installed systems to scan and recognise number plates. The system is used at both the entrance and exit of the car parks so that the arrival and leaving times can be recorded.
\end_layout

\begin_deeper
\begin_layout Standard
Customers can set up an account so that money is automatically debited when their car number plate is recognised as the car leaves the car park. Customers who do not have an account can use their mobile phones to pay the car parking fees by sending a text message to a specified number with their number plate details and length of stay.
\end_layout

\begin_layout Standard
As these car parks are based around Singapore, the company also collects location specific data. 
\end_layout

\begin_layout Enumerate
The company will need to follow the Data Protection Act as they will be storing personal data. What is meant by personal data? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Why might the storing of number plate details, mobile phone numbers and location specific data be a concern for privacy campaigners? 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain with specific examples why a code of conduct for computing professionals is necessary. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to implement a hash table to retrieve data about waste disposal in Singapore.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol '
\family typewriter
#
\family default
', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The file 
\family typewriter
waste.csv
\family default
 contains the following fields in each line:
\end_layout

\begin_layout Standard

\family typewriter
Year – 
\begin_inset Quotes eld
\end_inset

YYYY
\begin_inset Quotes erd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Waste Disposed Of – 
\begin_inset Quotes eld
\end_inset

Numeric
\begin_inset Quotes erd
\end_inset

 (Million Tons) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Waste Recycled – 
\begin_inset Quotes eld
\end_inset

Numeric
\begin_inset Quotes erd
\end_inset

 (Million Tons) 
\family default

\end_layout

\begin_layout Standard
The first line of the file contains the headings.
\end_layout

\begin_layout Subsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write a program to: 
\end_layout

\begin_layout Itemize
read data from 
\family typewriter
waste.csv
\family default
 
\end_layout

\begin_layout Itemize
into a hash table of size 20 
\end_layout

\begin_layout Itemize
by creating a function 
\family typewriter
GetKeyAddress(Year)
\family default
 to generate the hash address 
\end_layout

\begin_layout Itemize
and directly inserting the data into the correct location in the hash table 
\end_layout

\begin_layout Itemize
taking care of any potential collisions using any suitable methods 
\end_layout

\begin_layout Standard
Display the contents of the hash table showing the data from the first slot to the last slot. 
\begin_inset space \hfill{}

\end_inset

[14]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
Create a menu with the following options: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Get Waste Disposed and Recycled by year 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 Display year(s) where Recycled waste > Waste disposed 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
 Return Average waste disposed between two years 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 -1 to Exit 
\family default
 
\end_layout

\begin_layout Itemize
implement the functions for each menu choice. 
\end_layout

\begin_layout Itemize
use only direct access to retrieve data for options 1 and 3. 
\end_layout

\begin_layout Itemize
option 1 and 3 requires asking users to input in the year(s). 
\end_layout

\begin_layout Itemize
validate the user input. 
\end_layout

\begin_layout Itemize
test option 1 with the year 2007 and show the output. 
\end_layout

\begin_layout Itemize
test option 3 with the range 2002 to 2008 and show the output. 
\end_layout

\begin_layout Itemize
show the output for option 2. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
Save your program code and output for Task 1 as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your name>.ipynb 
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school library stores the following data in a file named 
\family typewriter
story.csv
\family default
:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Field
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Format
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
book_title 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text subject 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
author_name 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
text
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
published 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Quotes els
\end_inset

YYYY
\begin_inset Quotes ers
\end_inset

 (year) 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Merge sort is an efficient sorting algorithm which falls under divide and conquer paradigm and produces a stable sort. It operates by dividing a large array into two smaller subarrays and then recursively sorting the subarrays.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol '
\family typewriter
#
\family default
', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read data from 
\family typewriter
story.csv
\family default
 into an array of records. 
\end_layout

\begin_layout Itemize
ask user to input in which field to sort the records by. 
\end_layout

\begin_layout Itemize
validate that the choice must be 
\family typewriter

\begin_inset Quotes els
\end_inset

B
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

S
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

A
\begin_inset Quotes ers
\end_inset


\family default
, or 
\family typewriter

\begin_inset Quotes els
\end_inset

P
\begin_inset Quotes ers
\end_inset


\family default
 representing 
\family typewriter
book_title
\family default
, 
\family typewriter
subject
\family default
, 
\family typewriter
author_name
\family default
 and 
\family typewriter
published
\family default
 fields. 
\end_layout

\begin_layout Itemize
implement a 
\family typewriter
MergeSort(ArrayData, Sortby)
\family default
 function that takes in two parameters, 
\family typewriter
ArrayData
\family default
 (array of records) and 
\family typewriter
Sortby
\family default
, and sorts the records in ascending order according to the specified field. 
\family typewriter
MergeSort(ArrayData, Sortby)
\family default
 will return the sorted 
\family typewriter
ArrayData
\family default
 using a mergesort algorithm to do the sorting. 
\end_layout

\begin_layout Itemize
display 
\family typewriter
ArrayData
\family default
. 
\end_layout

\begin_layout Itemize
test your program twice and show your output for sorting by 
\family typewriter
subject
\family default
 and by 
\family typewriter
author_name
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [12] 
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
implement a 
\family typewriter
QuickSort(ArrayData)
\family default
 function that uses the quicksort algorithm to sort the 
\family typewriter
ArrayData
\family default
 by 
\family typewriter
book_title
\family default
 in descending order. 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Standard
Design 2 test cases to test your QuickSort(ArrayData) function and explain the purpose of the test data. Show the output of your test cases. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Save your program code and output for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are to create a song playlist using a doubly linked list implemented using Object-Oriented Programming (OOP). The doubly linked list data structure is a linked list made up of nodes with two pointers pointing to the next and previous element. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A doubly linked list allows traversal of nodes in both direction which is not possible in a singly linked list. For example, a user can go forward or backwards to play the next or previous song.
\end_layout

\begin_layout Standard
The 
\family typewriter
node
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
title (str) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
prev (node) 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
next (node)
\family default
 
\end_layout

\begin_layout Standard
The class, 
\family typewriter
SongPlaylist
\family default
, will store the following data: 
\end_layout

\begin_layout Itemize
a doubly linked list of 
\family typewriter
node
\family default
 objects. 
\end_layout

\begin_layout Itemize

\family typewriter
head
\family default
 pointer, pointing to the first 
\family typewriter
node
\family default
 in the doubly linked list. 
\end_layout

\begin_layout Standard
The class 
\family typewriter
SongPlaylist
\family default
 has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
insert(SongPlaylist, title: str)
\family default
 adds a song title at the beginning of the list. 
\end_layout

\begin_layout Itemize

\family typewriter
insertafter(SongPlaylist, searchtitle: str, newtitle: str)
\family default
 adds a song title after 
\family typewriter
searchtitle
\family default
. 
\end_layout

\begin_layout Itemize

\family typewriter
display(SongPlaylist)
\family default
 outputs out the playlist. 
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol '#', to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to define classes to implement the song playlist. The figures below show the links that must be updated for the insert and insertafter methods:
\end_layout

\begin_layout Standard
Inserting at the beginning of the list 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Inserting after a given node 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q3-3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent

\color white
.
\color inherit

\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Standard
The program has the following menu: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset


\family typewriter
 Create New Song Playlist 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset


\family typewriter
 Add a song in front 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset


\family typewriter
 Add a song after 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset


\family typewriter
 Display Playlist 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
5.
\end_layout

\end_inset


\family typewriter
 -1 to End 
\family default
 
\end_layout

\begin_layout Standard
Option 1 will prompt the user to enter the name of the new playlist.
\end_layout

\begin_layout Standard
Option 2 will prompt the user to enter the song title and the name of the playlist.
\end_layout

\begin_layout Standard
Option 3 will prompt the user to enter the name of the playlist, existing song title, and the new song title to be inserted after the existing song title.
\end_layout

\begin_layout Standard
Option 4 will prompt the user to enter the name of the playlist to be displayed and output accordingly.
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
display the main menu. 
\end_layout

\begin_layout Itemize
input the choice by the user. 
\end_layout

\begin_layout Itemize
run the appropriate code to carry out the task for the choice made. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Test your program by creating a new playlist called 
\family typewriter
MJ
\family default
 and add in the following titles in order: 
\family typewriter

\begin_inset Quotes eld
\end_inset

Heal the World
\begin_inset Quotes erd
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes eld
\end_inset

Thriller
\begin_inset Quotes erd
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes eld
\end_inset

Beat It
\begin_inset Quotes erd
\end_inset


\family default
. Show your output by displaying the playlist.
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Extend your program by writing a function 
\family typewriter
insertionSort(Playlist)
\family default
 that will sort the song titles in ascending order.
\end_layout

\begin_layout Standard
The algorithm for this 
\family typewriter
insertionSort
\family default
 is given below: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1)
\end_layout

\end_inset

Create an empty 
\family typewriter
sorted
\family default
 doubly linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2)
\end_layout

\end_inset

Traverse the given doubly linked list, do following for every node. - Insert current node in sorted way in 
\family typewriter
sorted
\family default
 doubly linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3)
\end_layout

\end_inset

Change head of given linked list to head of 
\family typewriter
sorted
\family default
 list. 
\end_layout

\begin_layout Standard
Write program code to implement 
\family typewriter
insertionSort(Playlist)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
Save your program code and output for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school wants to create a database to allow students to register for different enrichment activities that will be held on the school
\begin_inset Quotes ers
\end_inset

s Enrichment Day. An enrichment activity falls under one of three categories – Arts, Cultural, and Sports.
\end_layout

\begin_layout Standard
It is expected that the database should be normalised.
\end_layout

\begin_layout Standard
When a student registers for an activity, the following information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
StudentID
\family default
 - unique 6-digit register number of the student. 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 - type of activity (
\family typewriter
'A
\begin_inset Quotes ers
\end_inset


\family default
, 
\family typewriter

\begin_inset Quotes els
\end_inset

C
\begin_inset Quotes ers
\end_inset


\family default
 or 
\family typewriter
'S'
\family default
). 
\end_layout

\begin_layout Itemize

\family typewriter
Venue
\family default
 - where the activity will be held. 
\end_layout

\begin_layout Itemize

\family typewriter
Session
\family default
 - whether the activity is conducted in the morning or afternoon (
\family typewriter
'AM'
\family default
 means the morning session, and 
\family typewriter
'PM'
\family default
 means the afternoon session). 
\end_layout

\begin_layout Standard
For the Arts category, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Performance
\family default
 – 
\begin_inset Quotes eld
\end_inset


\family typewriter
True
\family default

\begin_inset Quotes erd
\end_inset

 for performance arts, 
\begin_inset Quotes eld
\end_inset


\family typewriter
False
\family default

\begin_inset Quotes erd
\end_inset

 for visual arts. 
\end_layout

\begin_layout Standard
For Cultural, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Race
\family default
 – which race the culture belongs to. 
\end_layout

\begin_layout Standard
For Sports, the following extra information is recorded: 
\end_layout

\begin_layout Itemize

\family typewriter
Contact
\family default
 – 
\begin_inset Quotes eld
\end_inset

C
\begin_inset Quotes erd
\end_inset

 to denote contact sports, 
\begin_inset Quotes eld
\end_inset

NC
\begin_inset Quotes erd
\end_inset

 to denote non-contact sports. 
\end_layout

\begin_layout Itemize

\family typewriter
Cost
\family default
 - the amount of money in dollars (not more than $50) the student must pay the instructor. 
\end_layout

\begin_layout Standard
The information is to be stored in four different tables:
\end_layout

\begin_layout Standard

\family typewriter
Registration 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Arts
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cultural 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Sports 
\family default

\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called
\family typewriter
 TASK4_l_<your name>.sql
\family default
 to show the SQL code to create the database
\family typewriter
 register.db
\family default
 with the four tables. The table, 
\family typewriter
Registration
\family default
, must use 
\family typewriter
StudentID
\family default
 as its 
\series bold
primary key
\series default
. The other tables must refer to the 
\family typewriter
StudentID
\family default
 as a 
\series bold
foreign key
\series default
.
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>.sql
\family default

\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
The school wants to allow students to register over the internet. The form design for the webpage is shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2020-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
accepts the input from the web form (assume input is keyed in correctly) 
\end_layout

\begin_layout Itemize
updates the registration details into 
\family typewriter
register.db
\family default
 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display a table tabulating the 
\family typewriter
StudentID
\family default
 and 
\family typewriter
Type
\family default
 of activity registered for the morning session. 
\end_layout

\begin_layout Standard
Save your Python program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>.py
\family default
 with any additional files / sub-folders as needed in a folder named 
\family typewriter
TASK4_2_<your name>
\family default
 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsection*
Task 4.3 
\end_layout

\begin_layout Standard
Test your web application by entering the following records via the form
\begin_inset Quotes ers
\end_inset

s submit button:
\end_layout

\begin_layout Standard

\family typewriter
192701, A, Hall, AM, True 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192703, A, MPR, PM, False 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192723, S, Field, AM, C, 20 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192803, C, 5-56, AM, Malay 
\family default

\end_layout

\begin_layout Standard

\family typewriter
192820, S, 5-60, PM, NC, 15 
\family default

\end_layout

\begin_layout Standard

\family typewriter
193005, C, LT4, PM, Chinese 
\family default

\end_layout

\begin_layout Standard

\family typewriter
193006, C, LT4, PM, Chinese
\family default

\end_layout

\begin_layout Standard
Save the output of the program when the user clicks on the 
\begin_inset Quotes eld
\end_inset

Generate Report
\begin_inset Quotes erd
\end_inset

 button as 
\family typewriter
TASK4_3_<your name>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write SQL code to count the number of different races for the cultural activities. Run this query.
\end_layout

\begin_layout Standard
Save this code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A list of data items is stored in a hash table using an array 
\family typewriter
Values
\family default
. The following pseudocode describes an algorithm for searching the table using the hashing function 
\family typewriter
Hash
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Index <- Hash(Key) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 WHILE Values[Index] <> Key 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

Index <- Index + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 Return Values[Index] 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the situations when 
\begin_inset Quotes qld
\end_inset


\family typewriter
Values[Index] <> Key
\begin_inset Quotes qrd
\end_inset


\family default
 in line 
\family typewriter
02
\family default
 will be 
\family typewriter
True
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
describe the two problems with this algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Without writing any program code, describe the modifications required to overcome each of the problems stated in (b). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An array 
\family typewriter
seq
\family default
 contains a list of sorted data items except the last element. 
\family typewriter
[1,2,5,8,9,6]
\family default
 is an example of such an array.
\end_layout

\begin_layout Standard
The function 
\family typewriter
sortInner
\family default
 takes two parameters, the array 
\family typewriter
seq
\family default
 and the index position 
\family typewriter
j
\family default
 of the last element, and returns the mutated array 
\family typewriter
seq
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def sortInner(seq, j): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if j == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return seq 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if seq[j] <= seq[j-1]: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

seq[j], seq[j-1] = seq[j-1], seq[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return sortInner(seq, j-1)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by a recursive function.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe what happens when the function 
\family typewriter
sortInner([1,2,5,8,9,6],5)
\family default
 is executed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Write a recursive function 
\family typewriter
insertionSort
\family default
 for the Insertion Sort algorithm by using the given function 
\family typewriter
sortInner(seq,j
\family default
).
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain whether the Insertion Sort algorithm in 
\series bold
(c)
\series default
 is performing an 
\begin_inset Quotes qld
\end_inset

in-place
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

non in-place
\begin_inset Quotes qrd
\end_inset

 sorting and whether it is stable or unstable.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
State and explain the efficiencies of the Insertion Sort algorithm in 
\series bold
(c)
\series default
 in the worst case scenario, using the Big-O notation for the time complexity. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A wildlife information application is being developed to store and display information about birds. The application uses a binary search tree to store the name of the bird. 
\end_layout

\begin_layout Enumerate
The binary search tree has its data inserted in the following order.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Magpie 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Cockatiel 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Jay 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Pigeon 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Mynah 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Crow 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Albatross 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Quail 
\family default

\end_layout

\begin_layout Standard
Draw the binary search tree. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The binary search tree in part 
\series bold
(a)
\series default
 can be implemented using object-oriented programming that involves the use of two pointers and an array. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the purpose of the two pointers in the implementation of the binary search tree class. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the array in the implementation of the binary search tree class. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
List the nodes, in order, that are visited for an in-order traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the property exhibited by the list of items produced in part (c)(i). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe an algorithm, using pseudocode, which uses a stack to perform an in- order traversal for the tree 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\emph on
HoLi Tea
\emph default
 is a popular chain selling a wide variety of bubble tea. Each drink is categorised by the flavor (e.g. brown sugar, peppermint, lemon …), the type of tea leaves used (e.g. green tea, red tea, black tea …), the pearl options (e.g. black pearl, white pearl, or no pearl) and the price.
\end_layout

\begin_layout Standard
There are two variants of bubble tea: Milk Tea and Fruit Tea. Each milk tea has a specific type of milk used (e.g. fresh milk, condensed milk) and some milk tea come with pudding. Some fruit tea include cultured milk.
\end_layout

\begin_layout Standard
The owner of HoLi Tea intends to use object-oriented programming language to store and process the information on the types of drink in the self-ordering web application system.
\end_layout

\begin_layout Standard
The base class 
\family typewriter
BUBBLE_TEA
\family default
 has a method to display the properties of the bubble tea. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a UML class diagram showing:
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_deeper
\begin_layout Itemize
any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
the properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
suitable methods to support the system with at least one getter and one setter method 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why polymorphism is useful in object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard

\emph on
HoLi Tea
\emph default
 has a loyalty programme to reward their regular customers. Members are entitled to a 20% discount for their purchases and a free drink on their birthday. To pay tribute to the frontline workers during the COVID-19 pandemic, all frontline workers are entitled to a 20% discount for their purchases, and those who are also members will receive a free drink on any day. 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
YI restaurant serves a variety of local dishes at reasonable prices and plans to provide food delivery services to its customers via a web application. A customer places an online order and an employee will be assigned by the system to deliver the order to the customer. The customer can choose to pay online when ordering or make cash payment upon delivery. Customers can choose more than one dish in the same online order and each order has a unique ID.
\end_layout

\begin_layout Standard
At the time of ordering, the application records the following data: 
\end_layout

\begin_layout Itemize
Customer name, delivery address and email, if the customer has not placed an online order before 
\end_layout

\begin_layout Itemize
Customer ID 
\end_layout

\begin_layout Itemize
Order date 
\end_layout

\begin_layout Itemize
Order time 
\end_layout

\begin_layout Itemize
Payment mode 
\end_layout

\begin_layout Itemize
Dish and quantity 
\end_layout

\begin_layout Standard
The following shows an example of the order receipt which will be sent to the customer
\begin_inset Quotes ers
\end_inset

s email address. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The restaurant assigns a unique ID to each employee and maintains its employees
\begin_inset Quotes ers
\end_inset

 information, such as their name, contact number and bank account number. The restaurant keeps a record of the employees
\begin_inset Quotes ers
\end_inset

 delivery assignments, the date and time when the order is successfully delivered to the customer. 
\end_layout

\begin_layout Enumerate
The company wants to model this application using a relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the customers
\begin_inset Quotes ers
\end_inset

 food order: 
\family typewriter
CUSTOMER
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
FOOD
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The database needs three tables to store the data for the employees
\begin_inset Quotes ers
\end_inset

 delivery assignment: 
\family typewriter
EMPLOYEE
\family default
, 
\family typewriter
ORDER
\family default
 and 
\family typewriter
ASSIGNMENT
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw the overall Entity-Relationship (E-R) diagram showing the five tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3,...)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Foreign keys are indicated using an asterisk or dashed underline.
\end_layout

\begin_layout Standard
Write table descriptions for the five tables.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a method to protect data from loss or corruption.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain how Singapore
\begin_inset Quotes ers
\end_inset

s Personal Data Protection Act (PDPA) protects the personal data of the customers and employees stored in the database. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the impact of such food delivery applications on the society and economy.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
With an increase in demand for food delivery, the restaurant wishes to enhance the food delivery services to cater to the larger volume of orders and to include more features in the application such as real time location tracking of the food order and customers
\begin_inset Quotes ers
\end_inset

 review of the dishes, yet ensuring that the application maintains fast performance. The restaurant is now considering using a NoSQL DBMS instead of a relational database.
\end_layout

\begin_deeper
\begin_layout Standard
State and explain 
\series bold
two
\series default
 reasons why NoSQL DBMS may be more suitable for the proposed scenario.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A Web Developer is designing an online Sales portal for a company. The customer needs to submit an online form to register before ordering through the portal. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q6.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain the difference between data validation and data verification. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two validation checks that the above form should perform for the customer's inputs.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe, with a specific example, how the customer's inputs are being verified. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The web developer intends to use CAPTCHA for the above form 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q6-2.png
	width 30page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain what this added feature helps to verify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe the required server scripting to process the customer's input on his email address and password. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe the differences between a web application and a native application. Explain how the developer should decide between designing a web or a native application.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The College
\begin_inset Quotes ers
\end_inset

s local area network (LAN) is connected to the MOE Headquarter
\begin_inset Quotes ers
\end_inset

s LAN over the internet. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P1-Q7.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A staff in the college, Alan, sends an email to Charles who works in the MOE Headquarter. 
\end_layout

\begin_layout Enumerate
The following questions should take reference from the above network diagram. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the function of the Domain Name System (DNS) server.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how the router identifies that the MOE's Mail server is residing in another network.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe in detail how Alan's email is delivered and kept in the MOE's Mail server.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe how Charles eventually receive Alan
\begin_inset Quotes ers
\end_inset

s email.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Charles forwards Alan
\begin_inset Quotes ers
\end_inset

s email to his colleague, David. Describe how David could receive the email even when he is away from the office. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a Battleship game, a player fires missiles within a region measuring 6 metres by 6 metres, represented with full-stops (
\begin_inset Quotes qrd
\end_inset

.
\begin_inset Quotes qrd
\end_inset

), to sink the ships. Each ship is represented by 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

. The region is represented on the screen by a rectangular grid. Each square metre of the region is represented by an x-coordinate and a y-coordinate. The top left square metre of the region display has 
\family typewriter
x = 0
\family default
 and 
\family typewriter
y = 0
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
In one of the games, three ships were positioned in the region as given in the text file 
\family typewriter
GAME.TXT
\family default
. Write a program to read in the data from this file, store it in a suitable data structure and display on the screen as shown.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
X X X . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. X X X . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
During the game, the player cannot see the ships in the region.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write program code to allow the player to fire 5 missiles targeting at specific locations, one at a time after observing each outcome. The player will input an x-coordinate and y-coordinate for each targeted location.
\end_layout

\begin_layout Standard
If the missile strikes any part of a ship, the damaged square metre will be represented with an 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

, otherwise an 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent it has missed. A sunken ship will be represented by 
\begin_inset Quotes qld
\end_inset


\family typewriter
SSS
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
one missile which missed the ship
\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
O . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
another missile which struck the ship
\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
O . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. S . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program code should also display the positions of all the ships at the end of the game.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
O . . . . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
S S S . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . X . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. X X S . . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
. . . . . .
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
Download your program code and output for Task 1.1 and 1.2 as
\end_layout

\begin_layout Standard

\family typewriter
Task1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Write server and client program for this asymmetric Battleship game where a server display the region and the player (the client) selects the target locations for his missiles. After firing each missile, the server returns an updated display for the region indicating a strike or a miss. Once the player fires his last missile, the server will display the positions of all the ships, together with the damages and misses, and both the client and server quit the game. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
Download your server and client program code for Task 1.3 as
\end_layout

\begin_layout Standard

\family typewriter
Task1_server_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task1_client_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
SONG.TXT
\family default
 contains the lyrics of the song, Count on me Singapore. The task is to read every word from the file, store it in a suitable data structure, sort the words and perform searches based on word and count.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the words from the file and store them in a suitable data structure, 
\end_layout

\begin_layout Itemize
sort the words in alphabetical order using 
\series bold
quick sort
\series default
, 
\end_layout

\begin_layout Itemize
write each word and their number of occurrence in a text file, WORDCOUNT.TXT, where the next word is on a new line. [12] 
\end_layout

\begin_layout Standard
A sample of the 
\family typewriter
WORDCOUNT.TXT
\family default
 for the first 5 lines is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
a 5 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
achieve 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
air 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
all 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
and 9
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the words and counts from the 
\family typewriter
WORDCOUNT.TX
\family default
T file 
\end_layout

\begin_layout Itemize
allow the user to select the following options:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
1. Search for a word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2. Search for word(s) based on count
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3. Quit program
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
take in user input for the word or the count 
\end_layout

\begin_layout Itemize
if found, display the word and its count, else 
\end_layout

\begin_layout Itemize
display 
\begin_inset Quotes qld
\end_inset


\family typewriter
Not Found
\family default

\begin_inset Quotes qrd
\end_inset

 display appropriate error messages for invalid user input 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Design test data for your program written in 
\series bold
Task 2.2
\series default
, provide evidence of testing that includes: 
\end_layout

\begin_layout Itemize
search for a word that is contained in the file 
\end_layout

\begin_layout Itemize
search for a word that is not contained in the file 
\end_layout

\begin_layout Itemize
search for word(s) with a count that is contained in the file 
\end_layout

\begin_layout Itemize
search for word(s) with a count that is not contained in the file 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
Download your program code and output for Task 2 as
\end_layout

\begin_layout Standard

\family typewriter
Task2_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store words in nodes that is contained within a linked list data structure. A node contains a word, the word category and a next pointer. The pointers link the word items in proper grammatical order based on their word category (
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

: noun, 
\begin_inset Quotes els
\end_inset

V
\begin_inset Quotes ers
\end_inset

: verb, 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

: determiner, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

: adjective). The unused nodes are linked as shown below. The first unused node is the position where the new word item is to be stored. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the words and their respective category inserted in the following order: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
'little', 'J' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'tough', 'J' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'boy', 'N' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'The', 'D' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'runs', 'V' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'race', 'N' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
'a', 'D'
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
the unused nodes linked together 
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class Node. The class Node has the following UML class diagram: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

Node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
word: STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
category: STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
next: INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_word(w: STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_category(c: STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_next(n: INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_word(): STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_category(): STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_next(): INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
LinkedList
\family default
 class is implemented as follows: 
\end_layout

\begin_layout Itemize
Attributes 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
sentence : ARRAY[0:9] of Node -
\family default
 The linked list data structure that contains 10 nodes. 
\end_layout

\begin_layout Itemize

\family typewriter
start : INTEGER
\family default
 - Index for the start position of the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
nextfree : INTEGER
\family default
 - Index for the next unused node. 
\end_layout

\end_deeper
\begin_layout Itemize
Methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
__init__ : PROCEDURE
\family default
 - Sets all the node data values to 
\begin_inset Quotes els
\end_inset

empty string
\begin_inset Quotes ers
\end_inset

. Set pointers to indicate all nodes are unused and linked. Initialise values for start and nextfree. 
\end_layout

\begin_layout Itemize

\family typewriter
isempty : FUNCTION RETURNS BOOLEAN
\family default
 - Tests for empty linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
isfull : FUNCTION RETURNS BOOLEAN
\family default
 - Tests for no unused nodes. 
\end_layout

\begin_layout Itemize

\family typewriter
display : PROCEDURE
\family default
 - Displays the contents of sentence in index order. 
\end_layout

\begin_layout Itemize

\family typewriter
insert : PROCEDURE
\family default
 - Adds a new word and its category to the linked list. 
\end_layout

\begin_layout Itemize

\family typewriter
traversal : PROCEDURE
\family default
 - Displays the simple sentence obtained from the linked list. 
\end_layout

\end_deeper
\begin_layout Standard
The index of the first available node is indicated by 
\family typewriter
nextfree
\family default
. The initial values of 
\family typewriter
start
\family default
 and 
\family typewriter
nextfree
\family default
 is -1 and 0 respectively.
\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to define the 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
 classes.
\end_layout

\begin_layout Standard
Do not attempt to write the methods 
\family typewriter
insert
\family default
 and 
\family typewriter
traversal
\family default
 at this stage. 
\begin_inset space \hfill{}

\end_inset

 [10]
\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code to create a LinkedList object and run the display method to confirm the initial values of the pointers, word and category values when the linked list is empty. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
A simple sentence contains words from different category arranged in the manner as illustrated:
\end_layout

\begin_layout Standard
(
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

: noun, 
\begin_inset Quotes els
\end_inset

V
\begin_inset Quotes ers
\end_inset

: verb, 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

: determiner, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

: adjective)
\end_layout

\begin_layout Standard
Verb come between two nouns.
\end_layout

\begin_layout Standard
Determiner comes before a noun, adjective comes before a noun and after a determiner. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
little 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
tough 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In order to aid the process of inserting the words in their correct position in the linked list, the code letter 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

Y
\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset

Z
\begin_inset Quotes ers
\end_inset

 is used in place of the second set of 
\begin_inset Quotes els
\end_inset

D
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

J
\begin_inset Quotes ers
\end_inset

, 
\begin_inset Quotes els
\end_inset

N
\begin_inset Quotes ers
\end_inset

 respectively, so that the correct position can be determined by comparing the category when traversing down the linked list. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
little 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
boy 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
runs 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
tough 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
race
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
V 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
X 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Y 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Z
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The following pseudocode (available in PSEUDOCODE_TASK_3_3.TXT ) can be used to add a word and its category to the linked list.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE insert(new_word, new_category)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

//check if Linked List is full 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF nextfree = -1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 'Linked List is Full' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

//linked list is not full, safe to insert new word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

sentence[nextfree].word <- new_word 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

sentence[nextfree].category <- new_category
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF start = -1 THEN //inserting into empty list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

start <- nextfree
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[start].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[start].next <- -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// traverse down the linked list to search for position to
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

// insert 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- start //pointer of current node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- -1 //pointer of previous node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

inserted <- FALSE //flag to check for insertion
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE current > -1 AND inserted = FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF sentence[current].category > new_category THEN 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//position found, insert before current node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF current = start THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

//check if current equals to start
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

start <- nextfree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[previous].next <- nextfree
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[nextfree].next
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].next <- current
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

inserted <- TRUE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELIF sentence[current].category < new_category THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- sentence[current].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'N' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'Z'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'D' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'X' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF new_category = 'J' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_category <- 'Y' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

previous <- current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current <- sentence[current].next
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].category <- new_category
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF inserted = False THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[previous].next <- nextfree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp <- sentence[nextfree].next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sentence[nextfree].next <- -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

nextfree <- temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code to implement 
\family typewriter
insert
\family default
 method from this pseudocode. You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_3.TXT
\family default
 as a basis for writing your code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsection*
Task 3.4:
\end_layout

\begin_layout Standard
Write code to insert the following into the linked list created in 
\series bold
Task 3.2
\series default
 and display its contents: 
\end_layout

\begin_layout Itemize
'little', 'J' 
\end_layout

\begin_layout Itemize
'tough', 'J' 
\end_layout

\begin_layout Itemize
'boy', 'N' 
\end_layout

\begin_layout Itemize
'The', 'D' 
\end_layout

\begin_layout Itemize
'runs', 'V' 
\end_layout

\begin_layout Itemize
'race', 'N' 
\end_layout

\begin_layout Itemize
'a', 'D' 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsection*
Task 3.5:
\end_layout

\begin_layout Standard
Write code to implement traversal method which displays the simple sentence obtained from traversing the linked list and run it.
\end_layout

\begin_layout Standard
The expected output should look like this: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
The little boy runs a tough race. 
\family default

\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
Download your program code and output for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
Task3_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2020/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\emph on
SafeEnter
\emph default
 is a digital check-in system that tracks the people visiting the public places, to prevent and control the transmission of COVID-19 through contact tracing. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-1.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
Create a HTML file called 
\family typewriter
index.html
\family default
 to display the Check-In form for people to input their particulars and other details. (Use the picture 
\family typewriter
IN.JPG
\family default
 provided.) [5] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-2.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Check-In Form 
\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code, 
\family typewriter
server.py
\family default
, for the back-end server to display the Check-In form on the clients
\begin_inset Quotes ers
\end_inset

 browser when they scan a QR-code which links to the SafeEnter website. The server script should include a route 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkin
\family default

\begin_inset Quotes ers
\end_inset

 to receive the inputs from the client, the program code should: 
\end_layout

\begin_layout Itemize
prevent the user from accessing the 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkin
\family default

\begin_inset Quotes ers
\end_inset

 route directly 
\end_layout

\begin_layout Itemize
receive all the inputs in the Check-In form 
\end_layout

\begin_layout Itemize
reject empty or null inputs 
\end_layout

\begin_layout Itemize
append the new entry into the 
\family typewriter
event
\family default
 table in the given database 
\family typewriter
covid.db 
\family default
 
\end_layout

\begin_layout Itemize
reply by sending a 
\family typewriter
checkout.html
\family default
 page back to the client
\begin_inset Quotes ers
\end_inset

s browser, displaying the following Check-Out form, which is to be used when leaving the venue (Use the picture 
\family typewriter
OUT.JPG
\family default
 provided.)
\family typewriter
 
\family default

\begin_inset space \hfill{}

\end_inset

[12] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2020-P2-Q4-3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent
Check-Out Form 
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Modify the program code, 
\family typewriter
server.py
\family default
, and include an additional route 
\begin_inset Quotes els
\end_inset


\family typewriter
/checkout
\family default

\begin_inset Quotes ers
\end_inset

 to receive the inputs from the client
\begin_inset Quotes ers
\end_inset

s Check-Out form when they leave the venue. The program code should: 
\end_layout

\begin_layout Itemize
allow the user from accessing the 
\begin_inset Quotes els
\end_inset

/checkout
\begin_inset Quotes ers
\end_inset

 route directly 
\end_layout

\begin_layout Itemize
receive all the inputs in the Check-Out form 
\end_layout

\begin_layout Itemize
reject empty or null inputs 
\end_layout

\begin_layout Itemize
update the corresponding entry in the 
\family typewriter
event
\family default
 table in the 
\series bold
given
\series default
 database 
\family typewriter
covid.db 
\family default

\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Standard
Download the files for your program codes for Task 4 as
\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_index.html 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_checkout.html
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_server.py 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Task4_<your name>_<centre number>_<index number>_covid.db
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A famous restaurant only accommodates one seating daily from 6.00 pm to 8.00 pm. It has 10 tables, each with a maximum capacity between 2 and 8 people. Advanced reservation is required to dine in at the restaurant.
\end_layout

\begin_layout Standard
The owner of the restaurant decides to write a program to handle reservations. As a trial, it can only take a booking for one evening only.
\end_layout

\begin_layout Standard
A procedure to initialise the arrays 
\family typewriter
MaxSize
\family default
, 
\family typewriter
IsBooked
\family default
 and 
\family typewriter
GroupSize
\family default
 has been defined. The indexes of each array corresponds to the table number.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Index
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
MaxSize
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsBooked
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
FALSE
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
GroupSize
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The procedure 
\family typewriter
BookTable
\family default
 is shown below. When a booking enquiry is made, the number of customers is keyed in.
\end_layout

\begin_layout Standard

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE BookTable 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

DECLARE NumberOfCustomers, TableNumber : INTEGERS 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

DECLARE Found : BOOLEAN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

INPUT NumberOfCustomers 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

TableNumber ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

FOUND ← False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TableNumber ← TableNumber + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF MaxSize[TableNumber] > NumberOfCustomers AND IsBooked[TableNumber] = FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found ← TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset

UNTIL Found = TRUE AND TableNumber = 10 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Found = FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

No tables with enough seats available.
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

GroupSize[TableNumber] ← NumberOfCustomers 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

Booking is successful! Table no:
\begin_inset Quotes qrd
\end_inset

, TableNumber 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 ENDPROCEDURE
\family default

\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
There are two errors and one missing line of code in the procedure above. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Name the type of the errors. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe the errors and the changes required to correct them. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write the missing line of code and state where it should be located. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Once the procedure 
\family typewriter
BookTable
\family default
 is able to run correctly, the owner decides to improve its functionality.
\end_layout

\begin_deeper
\begin_layout Standard
The procedure should ask the user to input the name and the mobile number of the person making the reservation when a table with enough seats can be found.
\end_layout

\begin_layout Standard
Name and describe two data validation techniques that can be applied to any of the inputs mentioned above.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the difference in the type of memory allocation for an array and a linked list. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A hash table has 8 spaces to store strings, indexed from 1 to 8 inclusive.
\end_layout

\begin_layout Standard
The hash function finds the ASCII number of the first letter of the string, then counts the number of 1s in its binary representation. This is the index in which the string will be inserted into the hash table.
\end_layout

\begin_layout Standard
For example, the string 
\family typewriter
'Arlington'
\family default
 will have index 2 because the ASCII number of '
\family typewriter
A
\family default
' is 65, which is 
\family typewriter
1000001
\family default
 in binary, and there are two 
\family typewriter
1
\family default
s.
\end_layout

\begin_layout Standard
The following strings are to be inserted into the hash table in the order given.
\end_layout

\begin_layout Standard

\family typewriter
'Grover', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Horsburgh', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Island',
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Jordan', 
\family default

\end_layout

\begin_layout Standard

\family typewriter
'Kalman'
\family default
 
\end_layout

\begin_layout Enumerate
Find the output of the hash function for each of the strings. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Suppose collisions in the hash table are to be resolved using open hashing.
\end_layout

\begin_deeper
\begin_layout Standard
Draw the hash table after all five strings are inserted. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Suppose instead that collisions in the hash table are to be resolved using closed hashing, where spaces 6 to 8 (inclusive) are used as the overflow storage.
\end_layout

\begin_deeper
\begin_layout Standard
Draw the hash table after all five strings are inserted. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Explain why the space with index 1 in the hash table will never be occupied unless there is a collision. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The diagram below shows a flowchart for performing a search through a binary tree. The algorithm searches through 
\family typewriter
Tree
\family default
 for 
\family typewriter
Searchfor
\family default
. If it finds a node whose data is equal to 
\family typewriter
Searchfor
\family default
, it outputs 
\family typewriter
Found
\family default
. Otherwise, it outputs 
\family typewriter
Not Found
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q3-1.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate
Given the input 
\family typewriter
Tree
\family default
 below and a 
\family typewriter
Searchfor
\family default
 value of 5, draw a trace table to illustrate the algorithm. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q3-2.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
State whether this is a depth-first search or a breadth-first search. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Draw a flowchart to illustrate how the other kind of search in (ii) can be carried out using the same input parameters. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Given the same input 
\family typewriter
Tree
\family default
 and the same 
\family typewriter
Searchfo
\family default
r value of 5, draw a trace table to illustrate the algorithm in (iii). 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Merge sort and bubble sort are two sorting algorithms that can be applied to sort a list of integers in ascending order. 
\end_layout

\begin_layout Enumerate
By briefly comparing the operation of merge sort and bubble sort, state which algorithm would be more efficient. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
The pseudocode for the recursive 
\family typewriter
MergeSortDesc
\family default
 function is shown below, which takes in a list of integers and returns a new list with the integers sorted in descending order. It makes use of the 
\family typewriter
MergeDesc
\family default
 function in line 
\family typewriter
10
\family default
 that merges two lists of integers sorted in descending order into a single list of integers sorted in descending order as well.
\end_layout

\begin_layout Standard

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION MergeSortDesc(MyList: LIST) RETURNS LIST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

MaxIndex ← LENGTH(MyList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ......A...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Half ← ......B...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LeftList ← LEFT(MyList, Half) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RightList ← RIGHT(MyList, Half) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SortedLeftList ← MergeSortDesc(LeftList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SortedRightList ← MergeSortDesc(RightList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Result ← MergeDesc(SortedLeftList, SortedRightList) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

......C...... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Result 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 ENDFUNCTION
\family default

\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State what is meant by a 
\series bold
recursive
\series default
 function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write the pseudocode for 
\family typewriter
A
\family default
, 
\family typewriter
B
\family default
 and 
\family typewriter
C
\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe the operation of the 
\family typewriter
MergeDesc
\family default
 function.
\end_layout

\begin_deeper
\begin_layout Standard
Assume that the function does not modify the two input lists.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A gym organises various classes and runs a loyalty membership programme with four tiers: Bronze, Silver, Gold and Diamond
\end_layout

\begin_layout Standard
Upon joining, each member is given a unique membership number and starts with a Bronze membership. Each member can sign up for multiple classes at a reduced rate based on the membership tier.
\end_layout

\begin_layout Standard
Each class has a unique class name. Some classes are offered at three different levels: Beginner, Intermediate and Advanced
\end_layout

\begin_layout Standard
Each instructor is identified with a unique three-character code and can take one or more classes.
\end_layout

\begin_layout Standard
A relational database is to be created to store data about members, employees and classes.
\end_layout

\begin_layout Standard
Part of the table 
\family typewriter
MEMBER
\family default
, which is a first attempt at the database design, is shown below.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberNo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
MemberTier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ClassName 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
InstCode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lindy White
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Silver 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Body Pump 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
WAY 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yoga (Beginner) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DAV 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zumba 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ROG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
78 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Derek Davis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bronze 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muay Thai (Beginner) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
CHA 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… … … 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
132
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
John Chua 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Diamond 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Circuits (Intermediate) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
JON 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muay Thai (Intermediate) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LEX 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yoga (Advanced) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DAV 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Zumba 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ROG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The table 
\family typewriter
MEMBER
\family default
 is not normalised. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
one
\series default
 potential issue that may be encountered when the data are maintained in such a non-normalised table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the table is not in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A second attempt at the database design gives rise to two tables:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
MEMBER(MemberNo, MemberName, MemberTier)
\family default

\end_layout

\begin_layout Standard

\family typewriter
MEMBERCLASSES(MemberNo, ClassName, Instructor)
\family default

\end_layout

\begin_layout Standard
The primary keys are not shown. 
\end_layout

\begin_layout Enumerate
State what is meant by a 
\series bold
primary key
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
By referring to the relationship between the tables 
\family typewriter
MEMBER
\family default
 and 
\family typewriter
MEMBERCLASSES
\family default
, state how the relationship is implemented.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Write an SQL query to create the table MEMBER with the appropriate constraints.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Another attempt at the database design needs to be made to ensure that all the tables are in third normal form (3NF).
\end_layout

\begin_deeper
\begin_layout Standard
In addition, the following data need to be recorded in the database: 
\end_layout

\begin_layout Itemize
the date on which each member signs up for the gym membership; 
\end_layout

\begin_layout Itemize
the attendance of each member in any classes taken; 
\end_layout

\begin_layout Itemize
the original fee, i.e. before discount, of each class; 
\end_layout

\begin_layout Itemize
the name and the salary of each instructor. 
\end_layout

\begin_layout Enumerate
State the total number of 3NF tables required and give their names. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the 3NF tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A table description can be written as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName(
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, ...) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk.
\end_layout

\begin_layout Standard
Using the information provided, write table descriptions for all the 3NF tables you identified in 
\series bold
(c)(i)
\series default
.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Making backups and archives are performed to prevent the loss of data.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the difference between a backup and an archive.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A driving simulator is programmed using Object-Oriented Programming (OOP).
\end_layout

\begin_layout Standard
The diagram below shows a UML Class Diagram with 
\series bold
some
\series default
 of the classes, attributes, and methods used in the simulator. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q6.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate
State the relationship between the 
\family typewriter
CAR
\family default
 class and the 
\family typewriter
VEHICLE
\family default
 class. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain briefly, in this context, how each of the following features of Object-Oriented Programming help the simulation to be developed more efficiently. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Abstraction 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Inheritance 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The petrol use rate depends on the speed at which the vehicle is travelling, as well as the mass of the vehicle and the contents of the vehicle – the number of passengers in a car, or the mass of the load in a truck. Explain how polymorphism can be used in this case to write the simulation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A new social media platform is to be created. In years to come, it is expected to be as popular globally as other trending social media platforms. 
\end_layout

\begin_layout Enumerate
Give two reasons why a NoSQL database is likely to be more suitable than an SQL database for the social media platform. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
A basic login page that controls access to user accounts is shown below. The password field masks the user input with a dot (•) replacing each of the characters supplied. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P1-Q7.png
	scale 50

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

When the login button is clicked, the program processes the username and password supplied by the user.
\end_layout

\begin_deeper
\begin_layout Standard
It displays an error message if the username entered does not exist in the database. If the password entered matches the registered password for the username, login is granted. Otherwise, the program displays an error message to indicate the user of the incorrect password entered.
\end_layout

\begin_layout Standard
The account will be locked if the user enters the correct username, but enters the wrong password three times. 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

It is known that users tend to have different problems associated with passwords.
\end_layout

\begin_deeper
\begin_layout Standard
Besides the error message to tell the user when an incorrect password is entered, describe 
\series bold
two
\series default
 examples based on usability principles that can be applied to improve the functionality of the login page. [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain why the HTTP POST method should be used instead of the HTTP GET method for the login request. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a hypothetical scenario, a data security company is helping a client company manage a database of the client company
\begin_inset Quotes ers
\end_inset

s customers. The data security company notices a possible vulnerability in the database.
\end_layout

\begin_layout Standard
Further investigation shows that the vulnerability is obscure and that none or few of the programmers anticipated it. Since the vulnerability is obscure, they determine that the chances of the database being breached are minimal, and decide not to tell the client company about it.
\end_layout

\begin_layout Standard
Instead, the data security company waits until the next time the database is due for scheduled maintenance to attempt to fix the vulnerability. By doing so, they can give themselves enough time to learn how to fix the vulnerability and avoid causing unnecessary panic within the client company or among the customers, which could lead to a potential loss of business.
\end_layout

\begin_layout Standard
Describe how each of the following ethical guidelines was breached by the data security company. 
\end_layout

\begin_layout Enumerate
Integrity 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Responsibility 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Competence 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Professionalism 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
The Universal Product Code (UPC) system is used for tracking trade items in shipping, inventory, and sales. Each item is given a 12-digit identification number. The validity of this identification number can be checked using a checksum. If 
\begin_inset Formula $x_{i}$
\end_inset

 represents the 
\begin_inset Formula $i$
\end_inset

th digit (starting with 
\begin_inset Formula $i=1$
\end_inset

 as the leftmost digit), then a valid identification number satisfies the condition that
\end_layout

\begin_layout Standard
\noindent

\begin_inset Formula \[
3x_{1}+x_{2}+3x_{3}+x_{4}+3x_{5}+x_{6}+3x_{7}+x_{8}+3x_{9}+x_{10}+3x_{11}+x_{12}
\]
\end_inset


\end_layout

\begin_layout Standard
\noindent
has a remainder of 0 when divided by 10.
\end_layout

\begin_layout Standard
\noindent
The identification number can be encoded into a barcode. For this Task, the barcode will be represented as a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's, where '
\family typewriter
0
\family default
' represents a white stripe and '
\family typewriter
1
\family default
' represents a black stripe.
\end_layout

\begin_layout Standard
\noindent
The barcode is divided into seven sections. From left to right, they are 
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes els
\end_inset

quiet zone
\begin_inset Quotes ers
\end_inset

 consisting of nine '
\family typewriter
0
\family default
's; 
\end_layout

\begin_layout Itemize
A start pattern which is always '
\family typewriter
101
\family default
'; 
\end_layout

\begin_layout Itemize
The first six digits of the identification number are encoded using the table below; 
\end_layout

\begin_layout Itemize
A middle pattern which is always '
\family typewriter
01010
\family default
'; 
\end_layout

\begin_layout Itemize
The last six digits of the identification number are encoded using the table below; 
\end_layout

\begin_layout Itemize
An end pattern which is always '
\family typewriter
101
\family default
'; 
\end_layout

\begin_layout Itemize
A 
\begin_inset Quotes els
\end_inset

quiet zone
\begin_inset Quotes ers
\end_inset

 consisting of nine '
\family typewriter
0
\family default
's. 
\end_layout

\begin_layout Standard
\noindent
The table below shows the encoding system for the digits. Note that depending on whether the digit occurs in the first six digits or the last six digits, it would be encoded differently. However, the two encodings are optical inverses of each other – a '
\family typewriter
0
\family default
' is changed into a '
\family typewriter
1
\family default
', and vice versa. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Digit 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First six digits 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Last six digits
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0001101' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1110010'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0011001' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1100110'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0010011'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1101100'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0111101' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1000010' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0100011' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1011100' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0110001' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1001110'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0101111' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1010000'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0111011'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1000100' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0110111' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1001000'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'0001011' 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'1110100'
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reason for encoding the first and last six digits differently is that the barcode may inadvertently be scanned upside down. Notice that in the first six digits, the encoding for each digit contains an odd number of '
\family typewriter
1
\family default
's, while in the last six digits, the encoding for each digit contains an even number of '
\family typewriter
1
\family default
's. This allows the scanning software to detect if the barcode has been placed upside down and correct it. 
\begin_inset space \quad{}

\end_inset


\end_layout

\begin_layout Standard
\noindent
For example, the UPC identification number 036000 291452 would be encoded as:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
000000000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0111101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0101111 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quiet 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Start 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0001101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01010 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1101100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1110100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1100110
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Middle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1011100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1001110 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1101100 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
000000000 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
End 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quiet
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P2-Q1.png
	scale 80

\end_inset

 
\end_layout

\begin_layout Standard
\noindent
(Notice that in an actual barcode, the stripes for the start, middle and end pattern are usually slightly longer than the surrounding stripes. This is to help humans to read it.)
\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
\noindent
Write a function to determine the validity of any input string as an identification number. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 1.2
\end_layout

\begin_layout Standard
\noindent
Write a function to convert a valid identification number, given as a string, into a barcode (a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's). 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 1.3
\end_layout

\begin_layout Standard
\noindent
Write a function that takes in a string, check whether it represents a valid barcode, and converts it to an identification number if it does. Note that the barcode may be upside down. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Standard
\noindent
Download your program code and output for Task 1 as 
\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A file compression algorithm reduces file sizes so that files can be sent more quickly. One such algorithm is the Huffman algorithm for text files, which will be implemented in this task.
\end_layout

\begin_layout Standard
\noindent
Unlike ASCII, which assigns a fixed size of 8 bits for each character, the Huffman algorithm assigns fewer bits to more common characters and more bits to less common characters. For example, in a long text written in English, characters such as '
\family typewriter
e
\family default
' and '
\family typewriter
t
\family default
' will have fewer bits assigned to them than characters such as '
\family typewriter
q
\family default
' and '
\family typewriter
z
\family default
'. If the text is long enough, this will use fewer bits in total to encode the text compared to ASCII.
\end_layout

\begin_layout Standard
\noindent
To know which sequence of bits to encode for each character, the 
\series bold
frequency
\series default
 of each character, which is the number of times each character appears in the text file, is tabulated.
\end_layout

\begin_layout Standard
\noindent
The characters are put into a tree. A node is created for each character. The following steps are then repeated until there is only one node without a parent: 
\end_layout

\begin_layout Enumerate
Identify the two nodes, without parents, which have the lowest frequency. 
\end_layout

\begin_layout Enumerate
Create a new node whose left and right children are the two nodes identified in Step 1. The frequency of the new node is the total of the frequency of its children. 
\end_layout

\begin_layout Standard
\noindent
The diagram on the following page shows the process of creation of a tree for a file with only five distinct characters ('
\family typewriter
A
\family default
', '
\family typewriter
E
\family default
', '
\family typewriter
I
\family default
', '
\family typewriter
O
\family default
' and '
\family typewriter
U
\family default
'), in five stages.
\end_layout

\begin_layout Standard
\noindent
The bit sequence assigned to a character will be the path from the root to the node corresponding to that character, where going left corresponds to '
\family typewriter
0
\family default
' and going right corresponds to '
\family typewriter
1
\family default
'. For example, '
\family typewriter
A
\family default
' is encoded as '
\family typewriter
10
\family default
' and '
\family typewriter
O
\family default
' is encoded as '
\family typewriter
011
\family default
'.
\end_layout

\begin_layout Subsection*
Task 2.1
\end_layout

\begin_layout Standard
\noindent
Create a Node class that has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
, which is determined when the node is initialized 
\end_layout

\begin_layout Itemize

\family typewriter
left
\family default
, a pointer to another node, 
\end_layout

\begin_layout Itemize

\family typewriter
right
\family default
, a pointer to another node 
\end_layout

\begin_layout Standard
\noindent
When the node is initialised, left and right do not point to anything. The class also has setter methods for left and right, and getter methods for all three attributes. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsection*
Task 2.2
\end_layout

\begin_layout Standard
\noindent
Write code that takes an input 
\family typewriter
.txt
\family default
 file and creates a dictionary whose keys are the characters in the file, including spaces, punctuation and line breaks ('
\family typewriter

\backslash
n
\family default
'), and the value of a key is its frequency in the file. Uppercase and lowercase letters should be considered as different characters.
\end_layout

\begin_layout Standard
\noindent
Create a node for each character in the file, and put the nodes into a list in ascending order of frequency. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
\noindent
Create a tree using the algorithm described above. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 2.4
\end_layout

\begin_layout Standard
\noindent
Create a dictionary whose keys are the characters, and the value of a key is the bit sequence of that character, expressed as a string of '
\family typewriter
0
\family default
's and '
\family typewriter
1
\family default
's.
\end_layout

\begin_layout Standard
\noindent
Carry out Tasks 2.2 to 2.4 on the file 
\family typewriter
HAMLET.txt
\family default
. Compress the file by replacing each character with its bit sequence and writing the output to a new file, 
\family typewriter
HAMLET_compressed.txt
\family default
. [8]
\end_layout

\begin_layout Standard
\noindent
Download your program code and output for Task 2 as 
\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
\noindent
Diagram showing how the tree is created based on the frequency of each character: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-ACJC-2021-P2-Q2.png
	scale 80

\end_inset


\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A community centre is required to keep COVID-19 vaccination records of its members in a NoSQL database. The CoviDie vaccine, which requires two doses to be taken at least 21 days apart, has been secured for all members of this particular community centre.
\end_layout

\begin_layout Standard
\noindent
As everyone needs to be vaccinated before the end of 2021, we shall only consider the year 2021, which is a non-leap year. The table below shows the number of days available in the twelve months of 2021. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Month 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
02 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
03 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
04 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
05 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
06
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Days 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
28 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Month 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
08 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
09 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Days 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
31
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 3.1
\end_layout

\begin_layout Standard
\noindent
Write a function 
\family typewriter
second_dose_date(date)
\family default
 that: 
\end_layout

\begin_layout Itemize
Takes a string value 
\family typewriter
date
\family default
 in the format 
\family typewriter
YYYYMMDD
\family default
, where 
\family typewriter
YYYY
\family default
 represents the year, 
\family typewriter
MM
\family default
 represents the month and 
\family typewriter
DD
\family default
 represents the day 
\end_layout

\begin_layout Itemize
determines the date that is 21 days after the input date 
\end_layout

\begin_layout Itemize
returns the result date in the format 
\family typewriter
YYYYMMDD
\family default
 
\end_layout

\begin_layout Standard
\noindent
Assume that the result date does not go beyond 
\family typewriter
20211231
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
\noindent
Test the function using the following three calls: 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210105') 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210212') 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
second_dose_date('20210919')
\family default
 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\noindent
Save your program code as
\end_layout

\begin_layout Standard
\noindent

\family typewriter
TASK3_1_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Subsection*
Task 3.2
\end_layout

\begin_layout Standard
\noindent
The list of members under the management committee of the community centre is stored in the text file 
\family typewriter
VACCINATION.txt
\family default
. Some members have not taken the vaccination at all, some others have only taken the first dose, while the rest have taken both doses.
\end_layout

\begin_layout Standard
\noindent
Each line of the text file is of the following format: 
\family typewriter
_id,name,date_first_dose,date_second_dose,remarks
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
_id
\family default
 is a unique integer ID assigned to the member 
\end_layout

\begin_layout Itemize

\family typewriter
name
\family default
 is the name of the member 
\end_layout

\begin_layout Itemize

\family typewriter
date_first_dose
\family default
 and 
\family typewriter
date_second_dose
\family default
, if any, represent the date of the first dose and the date of the second dose respectively in the format 
\family typewriter
YYYYMMDD
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
remarks
\family default
, if any, shows the pre-existing condition of the member 
\end_layout

\begin_layout Standard
\noindent
Write program code to insert the data from 
\family typewriter
VACCINATION.txt
\family default
 into a NoSQL database 
\family typewriter
community_centre
\family default
 under the collection 
\family typewriter
management_committee
\family default
. The program should clear the collection 
\family typewriter
management_committee
\family default
 if it exists inside the database. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
\noindent
Save your program code as T
\family typewriter
ASK3_2_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Subsection*
Task 3.3
\end_layout

\begin_layout Standard
\noindent
The community centre needs a program to check the vaccination status of its members. The program should also allow for the downloading of vaccination certificates for members who are fully vaccinated, i.e. they have taken the two doses.
\end_layout

\begin_layout Standard
\noindent
Write program code to: 
\end_layout

\begin_layout Itemize
prompt the user to input a member ID, and keep prompting until the user keys in numeric character(s) 
\end_layout

\begin_layout Itemize
if the member ID is available in the NoSQL database, perform either one of the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
if the member is fully vaccinated, write the vaccination certificate to an output text file and update the record in the NoSQL database by including a field and an appropriate value to indicate that the certificate has been downloaded 
\end_layout

\begin_layout Itemize
if the member has only taken the first dose, output a message to show the date from which the member can take the second dose 
\end_layout

\begin_layout Itemize
if the member has not taken the vaccination at all, output a message to tell that the member should take the first dose as soon as possible 
\end_layout

\end_deeper
\begin_layout Itemize
otherwise, if the member ID is not available in the NoSQL database, display an appropriate message and terminate the program 
\end_layout

\begin_layout Standard
\noindent
The format of the vaccination certificate is as follows.
\end_layout

\begin_layout Standard
\noindent

\family typewriter
VACCINATION CERTIFICATE
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Name: <name> 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Vaccine type: CoviDie 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Date of first dose: <date_first_dose> 
\family default

\end_layout

\begin_layout Standard
\noindent

\family typewriter
Date of second dose: <date_second_dose>
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
\noindent
Save your program code as 
\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
Test your program for the member with 
\family typewriter
member_id = 24
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
\noindent
The output text file should be saved as 
\family typewriter
TASK3_3_<your name>_<centre number>_<index number>.txt
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ACJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
A company specialising in bento boxes wishes to trial a relational database management system to manage its data. It is expected that the database should be normalised to third normal form (3NF).
\end_layout

\begin_layout Standard
\noindent
The company owns four kiosks. For each of the kiosks, the following information is to be recorded in the table 
\family typewriter
Kiosk
\family default
: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID
\family default
 – the unique integer assigned to the kiosk 
\end_layout

\begin_layout Itemize

\family typewriter
Location
\family default
 – the area where the kiosk is located 
\end_layout

\begin_layout Itemize

\family typewriter
Rating
\family default
 – the average rating of the kiosk between 0.0 and 5.0 inclusive 
\end_layout

\begin_layout Standard
\noindent
The company offers eight different types of bento boxes. Some of them may contain egg, nut, seafood or a combination of them. For each of the bento boxes, the following information is to be recorded in the table 
\family typewriter
BentoBox
\family default
: 
\end_layout

\begin_layout Itemize

\family typewriter
BentoName
\family default
 – the unique name of the bento box 
\end_layout

\begin_layout Itemize

\family typewriter
ProductionCost
\family default
 – the cost incurred in producing the bento box in dollars and cents 
\end_layout

\begin_layout Itemize

\family typewriter
ContainEgg
\family default
 – an integer 0 for not containing egg and 1 for containing egg 
\end_layout

\begin_layout Itemize

\family typewriter
ContainNut
\family default
 – an integer 0 for not containing nut and 1 for containing nut 
\end_layout

\begin_layout Itemize

\family typewriter
ContainSeafood
\family default
 – an integer 0 for not containing seafood and 1 for containing seafood 
\end_layout

\begin_layout Standard
\noindent
Each of the four kiosks sells all eight bento boxes at different mark-up prices. Another table 
\family typewriter
KioskBento
\family default
 is needed to record the following information: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID
\family default
 – the unique integer assigned to the kiosk 
\end_layout

\begin_layout Itemize

\family typewriter
BentoName
\family default
 – the unique name of the bento box 
\end_layout

\begin_layout Itemize

\family typewriter
SellPrice
\family default
 – the price at which the bento box is sold at the kiosk in dollars and cents 
\end_layout

\begin_layout Subsection*
Task 4.1
\end_layout

\begin_layout Standard
\noindent
Create an SQL file called 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 to show the SQL code to create the database 
\family typewriter
bento_company.db
\family default
 with the three tables. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
\noindent
Save your SQL code as 
\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default

\end_layout

\begin_layout Subsection*
Task 4.2
\end_layout

\begin_layout Standard
\noindent
The files 
\family typewriter
KIOSK.txt
\family default
 and 
\family typewriter
BENTOBOX.txt
\family default
 contain information about the company
\begin_inset Quotes ers
\end_inset

s kiosks and bento boxes respectively for insertion into the database. Each row in the two files is a comma-separated list of information.
\end_layout

\begin_layout Standard
\noindent
For 
\family typewriter
KIOSK.txt
\family default
, information about each kiosk is given in the following order: 
\family typewriter
KioskID
\family default
, 
\family typewriter
location
\family default
, 
\family typewriter
rating
\family default

\end_layout

\begin_layout Standard
\noindent
For 
\family typewriter
BENTOBOX.txt
\family default
, information about each bento box is given in the following order: 
\family typewriter
BentoName
\family default
, 
\family typewriter
ProductionCost
\family default
, 
\family typewriter
ContainEgg
\family default
, 
\family typewriter
ContainNut
\family default
, 
\family typewriter
ContainSeafood
\family default

\end_layout

\begin_layout Standard
\noindent
The mark-up price for each kiosk has been set as follows: 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 1
\family default
 sells each bento box at a price that is $2.60 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 2
\family default
 sells each bento box at a price that is $2.90 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 3
\family default
 sells each bento box at a price that is $2.40 higher than the production cost 
\end_layout

\begin_layout Itemize

\family typewriter
KioskID = 4
\family default
 sells each bento box at a price that is $3.10 higher than the production cost 
\end_layout

\begin_layout Standard
\noindent
Write program code to insert all the required information into the database 
\family typewriter
bento_company.db
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
\noindent
Save your program code as 
\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
Run your program.
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
\noindent
The company wishes to create a form to display the bento boxes sold at a particular kiosk and their prices in a web browser. The form should allow customers to indicate egg, nut and seafood allergies, if any, and filter out the bento boxes that they cannot consume.
\end_layout

\begin_layout Standard
\noindent
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
receives input from a HTML form that includes: 
\end_layout

\begin_deeper
\begin_layout Itemize
a text box to enter the 
\family typewriter
location
\family default
 of the kiosk 
\end_layout

\begin_layout Itemize
three checkboxes to indicate egg, nut and seafood allergies, if any 
\end_layout

\end_deeper
\begin_layout Itemize
returns a HTML document to display only the bento boxes that the customers can consume based on the allergies indicated, if any, and their prices for the given 
\family typewriter
location
\family default
 
\end_layout

\begin_layout Standard
\noindent
Input validation is not required. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
\noindent
Save your Python program as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py
\family default

\end_layout

\begin_layout Standard
\noindent
with any additional files / sub-folders as needed in a folder named 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\end_layout

\begin_layout Standard
\noindent
Run and test the web application using the following input: 
\end_layout

\begin_layout Itemize

\family typewriter
'Woodlands'
\family default
 entered as the 
\family typewriter
location
\family default
 
\end_layout

\begin_layout Itemize
checkboxes indicating egg and seafood allergies ticked 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
\noindent
Save the output of the program as 
\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html 
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A cosmic ray striking computer memory at just the right time can flip a bit, turning a 0 into a 1 or vice versa.
\end_layout

\begin_layout Standard
Bit flips had caused plane accidents, software glitches, and at times, the Blue Screen of Death (BSoD) on personal computers. 
\end_layout

\begin_layout Enumerate
The hexadecimal number 
\family typewriter
D4
\family default
 had been changed to 
\family typewriter
9A
\family default
. Suggest the minimum number of times a bit flip could have affected it and explain why. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why Unicode characters, as compared to ASCII characters, are more likely to be altered after a cosmic ray strike.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Define what a backup and archive is, and explain which should be prioritised if a company is warned of a global cosmic ray strike occurring in a week. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain how TCP/IP layers help to fulfil the purpose of the TCP/IP model. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Suggest and explain a consequence on network communication when a data packet is affected by a bit flip occurring at the Internet Layer
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why the consequence of a bit flip occurring at the Internet Layer and the Transport Layer would be the same as the consequence as a bit flip occurring at the Internet Layer only. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An array stores 16 powers of 2 integers in ascending order:
\end_layout

\begin_layout Standard
1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768 
\end_layout

\begin_layout Enumerate
If the array is searched by means of a binary search, state which elements would be accessed, and in what order, 
\end_layout

\begin_deeper
\begin_layout Enumerate
when searching for the number 4096 (which is present), and 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
when searching for the number 3 (which is not present). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw a program flowchart of an iterative binary search algorithm. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Explain why binary search could be more efficient than linear search. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the time complexities of hash table search and binary search and explain which is more efficient with reference to their time complexities in the above scenario. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A mobile network provider
\begin_inset Quotes ers
\end_inset

s management of customer
\begin_inset Quotes ers
\end_inset

s overdue bills include an automated emailing and SMS system. 
\end_layout

\begin_layout Itemize
If a mobile bill is overdue, a daily system generated reminder is emailed to the user indicating the overdue details. 
\end_layout

\begin_layout Itemize
If the user has 1 mobile bill that is more than 6 days overdue, in place of the daily reminder email, a warning email and SMS will be sent to the user. 
\end_layout

\begin_layout Itemize
If a user has more than 4 bills which are more than 14 days overdue, the user will incur a penalty fee for every additional week starting from the 14th day of being overdue. 
\end_layout

\begin_layout Itemize
If a user has incurred more than 3 penalty fees, the user
\begin_inset Quotes ers
\end_inset

s mobile service will be terminated. 
\end_layout

\begin_layout Itemize
Penalty fees could be incurred as a result of other actions such as accessing illegal websites. 
\end_layout

\begin_layout Itemize
Each bill issued to a customer represents the past month
\begin_inset Quotes ers
\end_inset

s usage. 
\end_layout

\begin_layout Enumerate
Create a decision table showing all possible outcomes and results for bill(s) that are overdue. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify the decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
A user interface is designed for a program for customers to check their bills and overdue status. State a usability principle and describe how the user interface of the program should be designed to demonstrate this principle.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a linked list data structure could be more suitable than an array data structure to implement a binary tree. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
(b) Suggest and justify one circumstance where an array structure is more appropriate than a linked structure. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The diagram shows a binary tree before and after an inversion. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q4-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Each node has these attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
right
\family default
 which is the pointer to right subtree 
\end_layout

\begin_layout Itemize

\family typewriter
data
\family default
 which is the value contained in each respective node displayed above 
\end_layout

\begin_layout Itemize

\family typewriter
left
\family default
 which is the pointer to the left subtree 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write pseudocode for procedure 
\family typewriter
insert
\family default
 which will add a node to the post-inverted tree (which may be empty) in such a way that if the new value of the node is 
\series bold
less
\series default
 than the value at the current node, the new node will be added to the 
\series bold
right
\series default
 subtree, or else it will be added to the left subtree. 
\family typewriter
insert
\family default
 takes in values 
\family typewriter
node_data
\family default
 and 
\family typewriter
root_node
\family default
 which is the value to be added to the tree and the instance of the root node of the tree respectively. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d) 
\end_layout

\end_inset

A function 
\family typewriter
invertTree
\family default
 takes in the root node of the above pre-inverted tree, uses recursion to invert it into the post-inverted tree, and returns the root node of the post-inverted tree. Write pseudocode for the function and visualise it in a trace diagram. An incomplete trace diagram is provided for you to begin with. Copy and complete it. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q4-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
(Note: Should be invertTree, not insertTree) 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Consider the following data which shows a single Civics Group record used in COVID19 vaccination tracking. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-DHS-2021-P1-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Derive a set of tables to show the above data in first, second and third normal form. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Draw an ER diagram for a normalised database design. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Using examples in the above context, explain the significance of the following terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
primary key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
foreign key 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
With reference to the above context, describe or suggest a scenario where a NoSQL database would be more appropriate. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Long-distance optical fibre lines and submarine cables which are a vital part of the global internet infrastructure are vulnerable to solar superstorms which happen once in a century. The last solar superstrom was in 1921. 
\end_layout

\begin_layout Enumerate
State and explain why websites would or would not be accessible by web browsers if a solar superstorm shuts down all DNS servers. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain packet switching and its importance in ensuring global internet connectivity when some parts of the earth are hit by a solar superstorm. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
An international company based in many countries updates its network structure to ensure Internet connectivity during solar superstorms.
\end_layout

\begin_layout Standard
Employees can now access files on a shared virtual space which is made up of 3 servers located in the United States, Europe, and Asia. All servers hold identical information (any changes made on one server would update the other servers immediately) so even if one server is affected by the solar superstorm, employees still can access their files on the other servers.
\end_layout

\begin_layout Standard
Employees must be connected physically to the company
\begin_inset Quotes ers
\end_inset

s intranet network at each country
\begin_inset Quotes ers
\end_inset

s office to access the virtual space. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw a network diagram of the above configuration and label the LAN, internet, router(s), WAN link(s), intranet, servers, and employee laptops. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Why is version control vital when employees from different countries work in teams? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A divide and conquer approach is used by merge sort to successively divide a list into half, forming two sublists, until each sublist is of length 1. The sublists are then sorted and merged into larger sublists until they are recombined into a single sorted list. An algorithm for merge sort to perform an ascending sort is given below. It will be used to sort large or small data sizes.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE mergesort(mergelist : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ← LENGTH(mergelist) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ← 0 TO (mid - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

lefthalf[index] ← mergelist[index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

right_len ← LENGTH(mergelist) - mid
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ← 0 TO (right_len - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

righthalf[index] ← mergelist[right_len + index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← lefthalf[i]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
33
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
39
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist(k] ← righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
46 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The following array of numbers is to be sorted using 
\family typewriter
mergesort
\family default
: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\family typewriter
mergelist = [2, 4, 2, 8, 2, 8, 9, 1, 3]
\family default
 
\end_layout

\begin_layout Standard
What are the first two lists to be merged? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain what a logic error is, give the line number for the logic error in the above code, and rewrite the line correctly. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The procedure
\family typewriter
 sorting_proc
\family default
 uses an optimised bubble sort to sort an array
\family typewriter
 input_array
\family default
 in an ascending order. It is used within 
\family typewriter
modified_mergesort
\family default
 which is a modified version of 
\family typewriter
mergesort
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE sorting_proc(input_array : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

length ← LENGTH(input_array) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ← FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR curr_elem_index ← 1 to length – 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF input_array [curr_elem_index - 1] > input_array [curr_elem_index] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SWAP (input_array [curr_elem_index - 1], input_array [curr_elem_index]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ← TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

length ← length – 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset

UNTIL NOT swapped 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE modified_mergesort(mergelist : ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF LENGTH(mergelist) < 5 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

sorting_proc(mergelist) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ← LENGTH(mergelist) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ← 0 TO (mid - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

lefthalf[index] ← mergelist[index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

right_len ← LENGTH(mergelist) - mid 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR index ← 0 TO (right_len - 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

righthalf[index] ← mergelist[right_len + index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NEXT index 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergesort(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
29 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) AND j < LENGTH(righthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
30 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF lefthalf[i] > righthalf[j] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
31 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
32 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
33 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
34 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← righthalf[j]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
35 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
36 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
37 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
38 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
39 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
40 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE i < LENGTH(lefthalf) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
41 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← lefthalf[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
42 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

i ← i + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
43 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
44 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
46 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE j < LENGTH(righthalf)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
47 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mergelist[k] ← righthalf[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
48 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j ← j + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
49 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

k ← k + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
50 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
51 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
52 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
53 ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Would the above modification of mergesort improve the algorithm
\begin_inset Quotes ers
\end_inset

s overall efficiency? Support your answer with a description on how and explanation on why its efficiency is affected. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The procedure 
\family typewriter
insertionSort
\family default
 is an algorithm which uses insertion sort.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE insertionSort(input_array: ARRAY) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

current_elem_index ← 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

current_elem_index ← current_elem_index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

compared_item_index ← -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ← FALSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

compared_item_index ← compared_item_index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF input_array[current_elem_index] < input_array[compared_item_index] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp ← input_array[current_elem_index]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

the value of each element of input_array from compared_item_index to (current_elem_index – 1) is sequentially assigned to each element of input_array from (compared_item_index + 1) to current_elem_index
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
18 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
19 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

input_array[compared_item_index] ← temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
20 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
21 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

swapped ← TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
22 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
23 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
24 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL swapped ← TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
25 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
26 
\begin_inset space \qquad{}

\end_inset

UNTIL current_elem_index = LENGTH(input_array) - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
27 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
28 ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Modify 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 to count and store the number of comparisons made in a variable named 
\family typewriter
comparisons
\family default
. Instead of copying all the pseudocode statements, state the line number(s) you want to modify or insert any pseudocode at, followed by the pseudocode statement(s) to be added/modified. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Trace the modified algorithms 
\family typewriter
insertionSort
\family default
 and 
\family typewriter
sorting_proc
\family default
 for the array 
\family typewriter
[5, 2, 3, 4]
\family default
 showing the value of all variables for each step by completing the following tables.
\end_layout

\begin_deeper
\begin_layout Standard
Trace table for 
\family typewriter
insertionSort
\family default
:
\end_layout

\begin_layout Standard

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
current_elem _index 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
compared_item_index 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
comparisons
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
input_array
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
swapped
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
TRUE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FALSE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Trace table for 
\family typewriter
sorting_proc
\family default
:
\end_layout

\begin_layout Standard

\family typewriter

\family default

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
current_elem _index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
compared_item_index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
input_array
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
arr_length
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
swapped
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
TRUE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2,5,3,4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FALSE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
...
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
... 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
...
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

In the context of 
\family typewriter
mergesort
\family default
, suggest scenario(s) where using the current optimised bubble sort algorithm for 
\family typewriter
sorting_proc
\family default
 would be better than using the 
\family typewriter
insertionSort
\family default
 algorithm above. Support your answer by designing 3 test cases (normal and boundary) and comparing the number of 
\family typewriter
comparisons
\family default
 made by each algorithm for each test case. Display your output. 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 1
\series default

\end_layout

\begin_layout Standard
For this task, submit all code as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
\end_layout

\begin_layout Standard
The Taliban
\begin_inset Quotes ers
\end_inset

s takeover of Afghanistan had seen the United States (US) evacuating people. The Republic of Singapore Air Force offers its A330 Multi-Role Tanker Transport plane (A330 MRTT) to help the US airlift groups of evacuees from Afghanistan.
\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
To prevent Taliban interference, messages sent between evacuees and the A330 MRTT are encrypted.
\end_layout

\begin_layout Standard
The encryption converts each character of the message into its ASCII number representation, adds the ASCII number representation of a character of a secret key which is in the same position, and then converts it back into ASCII text.
\end_layout

\begin_layout Standard
Secret keys are generated from passwords known only by the sender and receiver. Passwords that are shorter in length than the message are lengthened to match by repeating the password until the same length as the message is achieved.
\end_layout

\begin_layout Standard
For example, given that the inputs are
\end_layout

\begin_layout Standard

\family typewriter
password : 
\begin_inset Quotes qld
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
message 
\begin_inset space ~

\end_inset

: 
\begin_inset Quotes qld
\end_inset

hello
\begin_inset Quotes qrd
\end_inset


\family default

\end_layout

\begin_layout Standard
Step 1 - Extend password by repeating until matches length of message
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

 -> 
\begin_inset Quotes qld
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Step 2 - Convert each character of password and message into ASCII number representation
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

 -> 104, 101, 108, 108, 111 
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 -> 99, 97, 116, 99, 97 
\family default

\end_layout

\begin_layout Standard
Step 3 - Add the ASCII number representation of same positions together
\end_layout

\begin_layout Standard

\family typewriter
104+99, 101+97, 108+116, 108+99, 111+97 -> 203, 198, 224, 207, 208 
\family default

\end_layout

\begin_layout Standard
Step 4 - Convert each number to its ASCII character
\end_layout

\begin_layout Standard

\family typewriter
203, 198, 224, 207, 208 -> 
\begin_inset Quotes qld
\end_inset

ËÆàÏÐ
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Therefore, the results are
\end_layout

\begin_layout Standard

\family typewriter
Secret key : 
\begin_inset Quotes qld
\end_inset

catca
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Encrypted message : 
\begin_inset Quotes qld
\end_inset

ËÆàÏÐ
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generateKey(password, message)
\family default
 that takes in two argument strings 
\family typewriter
message
\family default
 and 
\family typewriter
password
\family default
 and returns the secret key.
\end_layout

\begin_layout Standard
Test your function using 
\family typewriter
generateKey(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write functions 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 that takes in 
\family typewriter
password
\family default
 and message strings and returns the encrypted or decrypted 
\family typewriter
message
\family default
. It should use the above function 
\family typewriter
generateKey(password, message)
\family default
 to obtain the secret key before performing the encryption.
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
decrypt(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

, encrypt(
\begin_inset Quotes qrd
\end_inset

cat
\begin_inset Quotes qrd
\end_inset

,
\begin_inset Quotes qrd
\end_inset

hello
\begin_inset Quotes qrd
\end_inset

))
\family default
. Show your output. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Since the A330 MRTT plane can only take a maximum of 266 passengers at once, implement a 
\family typewriter
Queue
\family default
 to manage incoming pickup requests and dropoffs. Write a class Queue with the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
enqueue(string)
\family default
 which takes in a string and adds it to the queue or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is full!
\begin_inset Quotes qrd
\end_inset


\family default
 if queue is full 
\end_layout

\begin_layout Itemize

\family typewriter
dequeue
\family default
 which removes the next item for the queue or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is empty!
\begin_inset Quotes qrd
\end_inset


\family default
 if the queue is empty 
\end_layout

\begin_layout Itemize

\family typewriter
display
\family default
 which returns a string of queue items in sequence from head to tail or returns 
\family typewriter

\begin_inset Quotes qrd
\end_inset

Queue is empty!
\begin_inset Quotes qrd
\end_inset


\family default
 if the queue is empty 
\end_layout

\begin_layout Itemize

\family typewriter
current_size
\family default
 which returns an integer of the number of items in the queue. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Subsubsection*
Task 1.4 
\end_layout

\begin_layout Standard
Using socket programming, write the client program for the evacuee teams (client) in Afghanistan and the A330 MRTT plane (server) to communicate. The program should 
\end_layout

\begin_layout Itemize
use the above queue data structure to manage the requests 
\end_layout

\begin_layout Itemize
request the user to set a password for encryption at the start of the program 
\end_layout

\begin_layout Itemize
present the user with incoming pickup requests and pickup details (Team name and group size) as well as queue details (size of current queue) 
\end_layout

\begin_layout Itemize
allow the user(server) to accept/reject pickup requests 
\end_layout

\begin_layout Itemize
encrypt all information sent and received using 
\family typewriter
encrypt(password, message)
\family default
 and 
\family typewriter
decrypt(password, message)
\family default
 functions. 
\end_layout

\begin_layout Standard
You are provided with the client program in 
\family typewriter
client.py
\family default
. Write and submit the server program as 
\family typewriter
T1_<index number>_<name>.py
\family default
.
\end_layout

\begin_layout Standard
Study the following sample program output to determine your code design, output format and socket protocol. User inputs are underlined.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\series bold
Sample server program:
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password: Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
2
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Queue is empty! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
Y
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Added to queue. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Items in queue now are: Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 151 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You do NOT have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's Team name: Team3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 19 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
N
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Checking client's secret key… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Client's secret key is correct!
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Client's Team name: Team4 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size: 15 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
No. of passengers in queue: 143 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
You have capacity for them. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Confirm pickup? Y/N? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:
\family default

\family typewriter

\bar under
Y
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Added to queue. Items in queue now are: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team1, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from the next pickup location client 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
2
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 How many to dequeue? 143
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Items in queue now are: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, Team4, 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\family typewriter

\bar under
1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Awaiting connection from pickup client... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Receiving data from client… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong secret key. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 Next action? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Menu: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1) Wait for connection from client for next pickup request 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2) Dequeue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Type an option:
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Sample client programs (in sequence): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 1 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4 
\bar default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team1
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size?
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
143
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 2
\emph default

\series default

\family default

\family typewriter

\emph on
 
\emph default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 solver(
\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset

)
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team2
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
151
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 3
\emph default

\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team3
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
19
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup rejected! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 4 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
WDIB4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team4
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
15
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup confirmed! Please wait for pickup to arrive. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\series bold

\emph on
CLIENT 4 
\emph default

\series default

\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please set a password. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
FEWF
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
What is your Team Name? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
Team5
\bar default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Group size? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer: 
\family default

\family typewriter

\bar under
10
\bar default

\family default

\family typewriter
 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Establishing connection... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection established! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Data sent! 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Waiting for the server to confirm your request… 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Pickup cancelled. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong password or request rejected. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Please try again. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Connection disconnected.
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 2
\series default

\end_layout

\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<index_number>_<name>.ipynb 
\family default

\end_layout

\begin_layout Standard
You will be writing a Math game program for Form Teachers to play with students in school. The game auto-generates math expressions and tracks scoring.
\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Using a stack data structure, write a function 
\family typewriter
solver(expr)
\family default
 that takes in a string of a mathematical expression expr such as 
\family typewriter

\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset


\family default
 and returns 
\family typewriter
13
\family default
. You may assume that the entire expression would never have spaces, and would always be enclosed in an opening and closing parenthesis 
\begin_inset Quotes qld
\end_inset

( )
\begin_inset Quotes qrd
\end_inset

. Do not use the built-in function 
\family typewriter
eval()
\family default
. Test your function with 
\family typewriter
solver(
\begin_inset Quotes qrd
\end_inset

((1*7)+6)
\begin_inset Quotes qrd
\end_inset

)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
generate_expression
\family default
 that takes in an integer 
\family typewriter
operator_count
\family default
 and returns a string of a mathematical expression which has the specified number of operators (i.e. 
\family typewriter
+ - * /
\family default
 ) in 
\family typewriter
operator_count
\family default
. The function should use 
\series bold
recursion
\series default
 to form up the operators and operands. The operands, operators and positions of operands and operators should be random.
\end_layout

\begin_layout Standard
For example, 
\family typewriter
generate_expression(5)
\family default
 would output 
\begin_inset Quotes qld
\end_inset


\family typewriter
(4*(6-(2+((1*7)+6))))
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\family typewriter
generate_expression(5
\family default
) would output 
\begin_inset Quotes qld
\end_inset


\family typewriter
((8+(6+((2*4)-3)))+6)
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
Test your function with 
\family typewriter
generate_expression(5)
\family default
 and show your output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Implement the following using object-oriented programming: 
\end_layout

\begin_layout Itemize

\family typewriter
Person
\family default
, a class, which 
\end_layout

\begin_deeper
\begin_layout Itemize
initialises with these attributes 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
name: string 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
gender: string
\family default
 where male is 
\begin_inset Quotes qld
\end_inset


\family typewriter
M
\family default

\begin_inset Quotes qrd
\end_inset

 and female is 
\begin_inset Quotes qld
\end_inset


\family typewriter
F
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize

\family typewriter
score: integer 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which displays the 
\family typewriter
Person
\family default

\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
, 
\family typewriter
gende
\family default
r and 
\family typewriter
score
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
1. eg 
\begin_inset Quotes qld
\end_inset


\family typewriter
Nelson(M)
\begin_inset Quotes ers
\end_inset

s score is 3.
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
attempts()
\family default
 which 
\end_layout

\begin_deeper
\begin_layout Itemize
1. uses the function 
\family typewriter
generate_expression
\family default
 from Task 2.2 to generate and display a random math expression of 2 operators 
\end_layout

\begin_layout Itemize
2. queries the user to give an answer rounded up to the nearest integer 
\end_layout

\begin_layout Itemize
3. displays 
\begin_inset Quotes qld
\end_inset


\family typewriter
Good job!
\family default

\begin_inset Quotes qrd
\end_inset

 if the input is correct or 
\begin_inset Quotes qld
\end_inset


\family typewriter
Wrong answer. (Correct answer: <answer>)
\family default

\begin_inset Quotes qrd
\end_inset

 where 
\family typewriter
<answer>
\family default
 is the correct answer. 
\end_layout

\begin_layout Itemize
4. increases the score of the student by 
\family typewriter
1
\family default
 if the answer is correct 
\end_layout

\begin_layout Itemize
5. displays the user
\begin_inset Quotes ers
\end_inset

s latest 
\family typewriter
sc
\family default
ore 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
Student
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following attribute 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
role: string
\family default
 which is 
\begin_inset Quotes qld
\end_inset


\family typewriter
no role
\family default

\begin_inset Quotes qrd
\end_inset

 by default unless the 
\family typewriter
Student
\family default
 has a class committee role such as 
\begin_inset Quotes qld
\end_inset


\family typewriter
chairperson
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Itemize
also has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
student_role()
\family default
 which returns a string describing the 
\family typewriter
role
\family default
 of the 
\family typewriter
Student
\family default
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
FormTeacher
\family default
, a subclass of 
\family typewriter
Person
\family default
, which 
\end_layout

\begin_deeper
\begin_layout Itemize
also has the following methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
display_info()
\family default
 which uses polymorphism to display the
\family typewriter
 FormTeacher
\family default

\begin_inset Quotes ers
\end_inset

s information with salutation to the FormTeacher
\begin_inset Quotes ers
\end_inset

s name 
\end_layout

\begin_deeper
\begin_layout Itemize
1. eg: 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ms. Norah's score is 0
\family default
.
\begin_inset Quotes qrd
\end_inset

 where 
\begin_inset Quotes qld
\end_inset


\family typewriter
Norah
\family default

\begin_inset Quotes qrd
\end_inset

 is her name, and 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ms
\family default
.
\begin_inset Quotes qrd
\end_inset

 corresponds to her gender. 
\begin_inset space \hfill{}

\end_inset

 [14] 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Subsubsection*
Task 2.4
\end_layout

\begin_layout Standard
Write driver code to test the earlier class you created. Also, create 
\family typewriter
groups
\family default
 which is a list that uses a 2-dimensional array to store and associate each instance created below with his/her civics group. Use this 2-dimensional array to display the scores of all persons in each civics group indicating the student chairperson
\begin_inset Quotes ers
\end_inset

s name (if any). Test your code with the following steps in order: 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Melvin
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Susan
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 whose role is 
\begin_inset Quotes qld
\end_inset


\family typewriter
chairperson
\family default

\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Itemize
Create an instance information of 
\family typewriter
FormTeacher
\family default
 with 
\family typewriter
name
\family default
 
\begin_inset Quotes qld
\end_inset


\family typewriter
Norah
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
5C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
Student
\family default
 with name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Ben
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Create an instance of 
\family typewriter
FormTeacher
\family default
 with name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Jimmy
\family default

\begin_inset Quotes qrd
\end_inset

 in civics group 
\family typewriter
6C35
\family default
 
\end_layout

\begin_layout Itemize
Display the information of Melvin 
\end_layout

\begin_layout Itemize
Display the information of Susan 
\end_layout

\begin_layout Itemize
Display the information of Norah 
\end_layout

\begin_layout Itemize
Melvin attempts a math question 
\end_layout

\begin_layout Itemize
Susan attempts a math question 
\end_layout

\begin_layout Itemize
Jimmy attempts a math question 
\end_layout

\begin_layout Itemize
Display the scores of all persons in each civics group with a header for each class 
\end_layout

\begin_layout Standard
Here is a sample of an expected output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ms. Norah's score is 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Melvin : ((5/7)+8) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer. (Correct answer: 9 ) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Susan : (3*(5*6)) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:90 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Good job! 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
New total score for Susan is 1 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
To Jimmy : ((6-2)-6) ? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Answer:3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Wrong answer. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
(Correct answer: -2 ) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total score is still 0. 
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
5C35
\begin_inset Quotes ers
\end_inset

s scores:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Melvin(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Susan(F)'s score is 1. (Chairperson) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ms. Norah's score is 0.
\begin_inset VSpace bigskip
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
6C35
\begin_inset Quotes ers
\end_inset

s scores:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Ben(M)'s score is 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Mr. Jimmy's score is 0. 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Run your program and save your output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 3
\series default

\end_layout

\begin_layout Standard
In 2021, Singapore's Health Science Authority (HSA) recalled 18 brands of hand sanitisers due to high levels of acetaldehyde and/or methanol. The HSA keeps information on current hand sanitisers and uses it to monitor the types of chemical ingredients used to make the sanitisers.
\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Create an SQL file to show the SQL code to create database 
\family typewriter
sanitisers.db
\family default
 with the single table, 
\family typewriter
sanitisers
\family default
.
\end_layout

\begin_layout Standard
The table will have the following fields: 
\end_layout

\begin_layout Itemize

\family typewriter
product_name
\family default
 which is the primary key 
\end_layout

\begin_layout Itemize

\family typewriter
active_ingredient
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
alcohol-based
\family default
 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
sanitisers.txt
\family default
, contains data items for a number of sanitisers. It contains a header line. Each data item is separated by a comma, with each item data on a new line, as follows: 
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
active ingredient used to make the sanitiser product 
\end_layout

\begin_layout Itemize

\begin_inset Quotes qld
\end_inset

Yes
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

No
\begin_inset Quotes qrd
\end_inset

 to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
sanitisers.txt
\family default
, and insert all the information into the 
\family typewriter
sanitisers.db
\family default
 database. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
The information is to be displayed in a web browser.
\end_layout

\begin_layout Standard
Write a python program and the necessary files to create a web application that enables the list of sanitisers to be displayed.
\end_layout

\begin_layout Standard
For each record the web page should include the: 
\end_layout

\begin_layout Itemize
product name 
\end_layout

\begin_layout Itemize
ingredients used to make the sanitiser product 
\end_layout

\begin_layout Itemize

\begin_inset Quotes qld
\end_inset

Yes
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

No
\begin_inset Quotes qrd
\end_inset

 to indicate if the product is alcohol-based 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.py
\family default

\end_layout

\begin_layout Standard
with any additional files/subfolders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>
\family default

\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_OUTPUT_<index_number>_<name>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
HSA wants a form on the web page that allows users to enter in the name of an active ingredient and, upon submission, will display all the information of the products with the matching active ingredient.
\end_layout

\begin_layout Standard
Update your application to include this form feature so that users will be able to use the form after seeing the list of sanitisers displayed as required in Task 3.3.
\end_layout

\begin_layout Standard
Run the web application, test your program with the ingredient 
\begin_inset Quotes qld
\end_inset


\family typewriter
Triclosan
\family default

\begin_inset Quotes qrd
\end_inset

 and save the output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Save, zip up and submit your program code and all related files for Task 3 as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<index_number>_<name>.zip
\family default

\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[DHS/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 4
\series default

\end_layout

\begin_layout Standard
Name your Jupyter Notebook and save all parts for this task as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_<index_number>_<name>.ipynb 
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write a program to help staff of an events company to insert data into a NoSQL database products under the collection 
\family typewriter
balloons
\family default
.
\end_layout

\begin_layout Standard
The data is provided for you in 
\family typewriter
balloons.json
\family default
 as well as in the table below where the first row are headers for the fields. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
design 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
amount 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
helium
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
colours
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
car 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
88 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, yellow
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cloud 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
blue, green
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
flower 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
75 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
yes 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, blue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bag 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
38 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
no 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red, blue, black
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Each colour in 
\family typewriter
colours
\family default
 field should be an item in an array. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write code to print the 
\family typewriter
amount
\family default
 of the product with the design 
\begin_inset Quotes qld
\end_inset


\family typewriter
car
\family default

\begin_inset Quotes qrd
\end_inset

.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write code to update the field 
\family typewriter
helium
\family default
 to have the value 
\begin_inset Quotes qld
\end_inset


\family typewriter
n
\family default
o
\begin_inset Quotes qrd
\end_inset

 for all documents which do not have a field or value for 
\family typewriter
helium
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write code to display the 
\family typewriter
design
\family default
(s) which do not contain helium and have colours that either contain 
\family typewriter
green
\family default
 or do not contain 
\family typewriter
black
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Run the program.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An E-Commerce company stores the following data of customers in the system. 
\end_layout

\begin_layout Itemize
Name 
\end_layout

\begin_layout Itemize
Contact 
\end_layout

\begin_layout Itemize
Address 
\end_layout

\begin_layout Standard
It categories its customers into 2 types of loyalty programs. 
\end_layout

\begin_layout Itemize
Spend-based loyalty program 
\end_layout

\begin_layout Itemize
Paid loyalty program 
\end_layout

\begin_layout Standard
Customers of Spend-based loyalty program earn one point for every block of $10 spent in a single order, whereas customers of Paid loyalty program pay a monthly or annual fee. Customers of Paid loyalty program will enjoy the benefits of having early access to sales events and free delivery for purchases above $30.
\end_layout

\begin_layout Standard
For Spend-based loyalty program, the additional data stored include: 
\end_layout

\begin_layout Itemize
Points earned 
\end_layout

\begin_layout Standard
For Paid loyalty program, the additional data stored include: 
\end_layout

\begin_layout Itemize
Payment schedule (monthly or annually) and corresponding fee 
\end_layout

\begin_layout Itemize
Next payment date, computed based on payment schedule and the date of enrollment to the program 
\end_layout

\begin_layout Standard
Object-oriented programming will be used to model the customers. 
\end_layout

\begin_layout Enumerate
Draw a class diagram that shows the following for the requirement described above. 
\end_layout

\begin_deeper
\begin_layout Itemize
the superclass 
\end_layout

\begin_layout Itemize
any subclasses 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_layout Itemize
appropriate methods 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard
The company makes changes to the Paid loyalty program to allow the customer in the program to earn ten points for every block of $20 spent in a single order, in addition to the current benefits. The points earned do not expire. For Spend- based loyalty program, all points earned will expire on the anniversary of the date of enrolment to the program. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Suggest changes required to the class diagram to enable the changes.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard
To attract customers to enrol to its Paid loyalty program, the company launches an invitation campaign to invite Spend-based loyalty program customers who qualified the following conditions: 
\end_layout

\begin_layout Itemize
Customer who earned more than 2000 points in a year and has an average of at least one order per month will be contacted by staff. 
\end_layout

\begin_layout Itemize
Customer who has enrolled for at least a year and has an average of at least one order per month will be sent an invitation email. 
\end_layout

\begin_layout Itemize
Otherwise, no invitation will be sent. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Create a decision table showing all the possible outcomes and results. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Simplify your decision table by removing redundancies.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q2]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Merge Sort is a Divide and Conquer algorithm. It divides the unsorted array 
\family typewriter
A[low..high]
\family default
 into two halves, calls itself for the two halves, until each half is of length 1. It then merges the two sorted halves. An algorithm for Merge Sort is given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE MergeSort(A, low, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF low < high 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

mid ← (low + high) DIV 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MergeSort(A, low, mid) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

MergeSort(A, mid+1, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Merge(A, low, mid, high) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write in 
\series bold
pseudocode
\series default
, an algorithm for the merge procedure, 
\family typewriter
Merge(A, low, mid, high)
\family default
 that is called by the 
\family typewriter
MergeSort
\family default
 algorithm. The merge procedure should merge the sorted subarrays in 
\family typewriter
A[low..mid]
\family default
 and 
\family typewriter
A[mid+1..high]
\family default
 into a single sorted subarray in 
\family typewriter
A[low..high]
\family default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
Give and justify the time complexity of Merge Sort. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q3]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An abstract Data Type (ADT) consists of both data type and associated operations.
\end_layout

\begin_layout Standard
A stack ADT has the following operations defined: 
\end_layout

\begin_layout Itemize
Create(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- creates an empty stack S, 
\end_layout

\begin_layout Itemize
Insert(S, Item) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- inserts new value, Item, onto stack S, 
\end_layout

\begin_layout Itemize
Retrieve(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- removes and returns item from the stack S, 
\end_layout

\begin_layout Itemize
EmptyStack(S) -
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- returns true if stack S is empty. 
\end_layout

\begin_layout Enumerate
Devise an algorithm that converts a non-negative integer from decimal to hexadecimal, by making use of the stack operations given above. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Three items, L1, L2 and L3, are to be inserted into a stack in its original order, but the output would be in the order of L1, L3 and L2.
\end_layout

\begin_deeper
\begin_layout Standard
Write an algorithm, using the operations given above, that would use a stack R to carry this out. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Some algorithms can be written using recursion. 
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 features of recursion. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the use of a stack when the recursive procedure executes. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write a recursive function using 
\series bold
pseudocode
\series default
 that returns the sum of the digits in an integer. For example, the sum of the digits of the integer 
\family typewriter
12345
\family default
 is 
\family typewriter
5+4+3+2+1=15
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q5]
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Vaccination centres are located across the island to facilitate the national vaccination programme. At each vaccination centre, data is uploaded to the central system of Ministry of Health. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the name of this network structure. Describe 
\series bold
on
\series default
e disadvantage and suggest 
\series bold
one
\series default
 method to resolve it. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 rules of conduct for the staff handling data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain each of the following terms and how it works: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Digital signature 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Enumerate
Transmission Control Protocol 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Domain Name System
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q6]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Check digit is one technique of data validation. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Give 
\series bold
two
\series default
 other techniques of data validation.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(ii)
\end_layout

\end_inset

With 
\series bold
one
\series default
 example of data verification, explain the difference between data verification and data validation. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
A student ID consists of 5 digits and a check digit. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iii)
\end_layout

\end_inset

One way to calculate the check digit is to use the unit
\begin_inset Quotes ers
\end_inset

s digit of the sum of all 5 digits. For example, suppose the 5 digits are 50879. Since 5 + 0 + 8 + 7 + 9 = 29, the check digit is 9, and the student ID is 508799.
\end_layout

\begin_deeper
\begin_layout Standard
Explain, with 
\series bold
two
\series default
 examples, why this method is inadequate. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
The check digit is calculated from the 5 digits using the modulus 11 system. It can be digits 
\family typewriter
0 - 9 
\family default
or character 
\family typewriter
'X'
\family default
. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(iv)
\end_layout

\end_inset

Showing your working, determine the check digit for 30526. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(v)
\end_layout

\end_inset

Write an algorithm to check if a student ID is valid. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(vi)
\end_layout

\end_inset

A function is designed to read a student ID and determine if it is valid. State the data types of its input parameter and justify. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q7]
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
What is a flowchart? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Draw a flowchart to find the factorial of a given positive integer 
\family typewriter
N
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
You have a row of 
\family typewriter
2
\family default
n disks of two colors, 
\family typewriter
n
\family default
 black and 
\family typewriter
n
\family default
 white. They alternate: black, white, black, white, and so on. You want to get all the black disks to the right-hand end, and all the white disks to the left-hand end. The only moves you are allowed to make are those that interchange the positions of two neighboring disks. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q7.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Assume that there is an array 
\family typewriter
A
\family default
 of size 
\family typewriter
2n
\family default
 representing the alternating disks. Write, in 
\series bold
pseudocode
\series default
, an algorithm to solve this puzzle and determine the number of moves it takes. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P1/Q8]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The school is designing a website to allow ordering of meal. The database stores data about 
\end_layout

\begin_layout Itemize
students 
\end_layout

\begin_layout Itemize
meal information 
\end_layout

\begin_layout Itemize
order information 
\end_layout

\begin_layout Standard
An order contains one meal only.
\end_layout

\begin_layout Standard
Each meal can be purchased by different students.
\end_layout

\begin_layout Standard
A student never places more than one meal on any day.
\end_layout

\begin_layout Standard
The data is stored in a relational database. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q8-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain why the table is not in first normal form (1NF). 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P1-Q8-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

State suitable primary key(s) for each table.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain the reasons for reducing data redundancy in a relational database. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Draw an entity-relationship (E-R) diagram showing the degree of the relations. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

State which table is not in third normal form (3NF) and explain why. [2] 
\end_layout

\begin_layout Standard
A table description can be expressed as: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, …) 
\family default
 
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Write table descriptions for the required tables in the databases so they are in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Write an SQL query to output the student names and date of order of all the orders for the meal 
\begin_inset Quotes eld
\end_inset


\family typewriter
Japanese Bento with green tea
\family default

\begin_inset Quotes erd
\end_inset

.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q1]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
Task1_<your name>_<centre number>_<index number>.ipynb
\family default

\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
The file 
\family typewriter
INTEGERS.txt
\family default
 stores 100 integers. Write a program to read the integers, arrange them in ascending order using quick sort, and write the sorted integers to a file called
\end_layout

\begin_layout Standard

\family typewriter
SORTED_<your name>_<centre number>_<index number>.txt
\family default
 
\begin_inset space \hfill{}

\end_inset

 [15]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
BinarySearch(list_of_integers, target)
\family default
 that 
\end_layout

\begin_layout Itemize
takes a list of ascending integers, 
\family typewriter
list_of_integers
\family default
 and an integer 
\family typewriter
target
\family default
 
\end_layout

\begin_layout Itemize
performs a binary search 
\end_layout

\begin_layout Itemize
prints out if 
\family typewriter
target
\family default
 is found in 
\family typewriter
list_of_integers
\family default
 
\end_layout

\begin_layout Itemize
returns the number of comparisons during the binary search 
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write a program to read the list of integers from
\end_layout

\begin_layout Standard

\family typewriter
SORTED_<your name>_<centre number>_<index number>.txt
\family default

\end_layout

\begin_layout Standard
obtained in Task 1.1. Generate 50 random integers between 1 and 200 (inclusive) and perform a binary search for each of these random integers in this sorted list. Output the average number of comparisons of these 50 binary searches. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
Save your Jupiter Notebook for Task 1.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q2]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
FlexiMSG provides messaging services. Information of the messages are logged into a file. The log records contain the phone numbers or IP address of the sender, the date which the service is being accessed, the status indicating whether the message has been sent and the type of application used. There are two different formats used:
\end_layout

\begin_layout Standard

\family typewriter
<IP address> <DD/MMM/YYYY> <Status> <App> 
\family default

\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout Standard

\family typewriter
<Phone number> <DD/MMM/YYYY> <Status>
\family default

\end_layout

\begin_layout Standard
Below is the log records in the file, 
\family typewriter
LOG.txt
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
54.36.149.41 22/Jan/2021 200 WA 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
188.226.164.216 22/Jan/2021 0 FB 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
92783423 22/Jan/2021 200 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
188.226.164.216 23/Jan/2021 0 FB 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
88188293 23/Jan/2021 0 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write the SQL code to create database 
\family typewriter
ServiceLog.db
\family default
 with the single table, 
\family typewriter
Log
\family default
.
\end_layout

\begin_layout Standard
The table will have the following fields of the given SQLite types: 
\end_layout

\begin_layout Itemize

\family typewriter
LogID
\family default
 - primary key, an auto-incremented integer 
\end_layout

\begin_layout Itemize

\family typewriter
Sender
\family default
 - the client internet address or phone number, text 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate
\family default
 - the access date, text 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 - the status, integer 
\end_layout

\begin_layout Itemize

\family typewriter
AppType
\family default
 - application type, text 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
Task2_1_<your name>_<center number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
FlexiMSG wants to use Python programming language and object-oriented programming to update the information in the log file into the database.
\end_layout

\begin_layout Standard
Create the class 
\family typewriter
ServiceRecord
\family default
 that will store the following: 
\end_layout

\begin_layout Itemize

\family typewriter
Sender
\family default
 - stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate
\family default
 - stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 - stored as integer, 
\family typewriter
0
\family default
 or 
\family typewriter
200
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AppTy
\family default
pe - stored as string value 
\family typewriter
'WA'
\family default
 or 
\family typewriter
'FB'
\family default
 
\end_layout

\begin_layout Standard
The class has the following methods: 
\end_layout

\begin_layout Itemize

\family typewriter
isSuccess()
\family default
- returns a Boolean value to indicate whether the message has been sent. 
\end_layout

\begin_deeper
\begin_layout Itemize
returns 
\family typewriter
True
\family default
 if the 
\family typewriter
Status
\family default
 is 200, otherwise returns 
\family typewriter
False
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
getAppType()-
\family default
 returns a string value to indicate the type of messaging application. 
\end_layout

\begin_deeper
\begin_layout Itemize
returns the value of 
\family typewriter
AppType
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Write program code to read in the information from 
\family typewriter
LOG.txt
\family default
, creating an instance of the 
\family typewriter
ServiceRecord
\family default
 class for each record and insert the information into 
\family typewriter
ServiceLog.db
\family default
 database.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task2_2_<your name>_<center number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
FlexiMSG wants to publish the database content on a web page.
\end_layout

\begin_layout Standard
Create class 
\family typewriter
AppServiceRecord
\family default
 which inherits from 
\family typewriter
ServiceRecord
\family default
, such that: 
\end_layout

\begin_layout Itemize

\family typewriter
getAppType()
\family default
- returns the following values based on the value of 
\family typewriter
AppType
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
WA
\family default
 - returns 
\family typewriter
'WHATSAPP'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
FB
\family default
 - returns 
\family typewriter
'FACEBOOK MESSENGER' 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
getSuccess()
\family default
- returns the following values based on the returned value of isSuccess() 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
True
\family default
 - returns 
\family typewriter
'SUCCESS'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
False
\family default
 - returns 
\family typewriter
'FAILED'
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Create class 
\family typewriter
SmsServiceRecord
\family default
 which inherits from 
\family typewriter
ServiceRecord
\family default
, such that: 
\end_layout

\begin_layout Itemize

\family typewriter
getAppType()
\family default
- always returns 
\family typewriter
'SHORT MESSAGE SERVICE' 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
getSuccess()
\family default
- returns the following values based on the returned value of 
\family typewriter
isSuccess() 
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
True
\family default
 - returns 
\family typewriter
'SUCCESS'
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
False
\family default
 - returns 
\family typewriter
'FAILED'
\family default
 
\end_layout

\end_deeper
\begin_layout Standard
Save your program code to 
\family typewriter
Task2_3_<your name>_<center number>_<index number>.py
\family default

\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsubsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that enables the list of log records to be displayed.
\end_layout

\begin_layout Standard
For each record, the web page should include the: 
\end_layout

\begin_layout Itemize

\family typewriter
Sender 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AccessDate 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
AppType
\family default
 (either 
\family typewriter
WHATSAPP
\family default
,
\family typewriter
 FACEBOOK MESSENGER 
\family default
or
\family typewriter
 SHORT MESSAGE SERVICE
\family default
) 
\end_layout

\begin_layout Itemize

\family typewriter
Status
\family default
 (
\family typewriter
SUCCESS
\family default
 or 
\family typewriter
FAILED
\family default
) 
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files/sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>
\family default
.
\begin_inset space \hfill{}

\end_inset

 [9]
\end_layout

\begin_layout Standard
Run the web application and save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
Task2_4_<your name>_<center number>_<index number>.html
\family default

\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q3]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to implement a priority queue using Object-Oriented Programming.
\end_layout

\begin_layout Standard
A priority queue is an extension of queue with the following properties. 
\end_layout

\begin_layout Itemize
Every element has a priority associated with it. Smaller integer value has a higher priority. 
\end_layout

\begin_layout Itemize
An element with high priority leaves the queue before an element with low priority. 
\end_layout

\begin_layout Itemize
If two elements have the same priority, they are served according to their order in the queue, i.e. the earlier element will be served before the later element (FIFO). 
\end_layout

\begin_layout Standard
For example, the emergency room in a hospital assigns patients with priority numbers. The patient with the highest priority is treated first, regardless of the order of arrival.
\end_layout

\begin_layout Standard
An example of operations on a priority queue is shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q3-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
A 
\series bold
priority queue
\series default
 abstract data type (ADT) is to be implemented as a linked list using object- oriented programming. Two classes 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
 have been identified. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Priority
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates priority of node. Smaller value has higher priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pointer to next node in queue.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="13" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: PQueue
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisPQueue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[1:10] Of Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The priority queue data.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Front
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for front node of queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Rear
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for rear node of queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Initialise()
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Set pointers to indicate all nodes are unused and linked. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Initialise values for 
\family typewriter
Front
\family default
, 
\family typewriter
Rear
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PQInsert(NewItem, Priority)
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Assign 
\family typewriter
NewItem
\family default
 and 
\family typewriter
Priority
\family default
 passed as parameters to a node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Insert the node to the rear of the priority queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PQDelete()
\family default

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Remove a node of highest priority from the priority queue.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- Return the 
\family typewriter
Data
\family default
 attribute of the node that is removed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayPQueue()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the values of 
\family typewriter
Front
\family default
, 
\family typewriter
Rear
\family default
, 
\family typewriter
NextFree
\family default
 and the contents of 
\family typewriter
ThisPQueue
\family default
 array in index order.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the data items 
\family typewriter
'Ben'
\family default
, 
\family typewriter
'May'
\family default
, 
\family typewriter
'Anne'
\family default
 and 
\family typewriter
'Jim'
\family default
 (inserted in that order) in the priority queue 
\end_layout

\begin_layout Itemize
the unused nodes linked together 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
PQueue
\family default
, including the 
\family typewriter
Initialise
\family default
, 
\family typewriter
PQInsert
\family default
, 
\family typewriter
PQDelete
\family default
 and 
\family typewriter
DisplayPQueue
\family default
 methods. The code should follow the specification given. 
\begin_inset space \hfill{}

\end_inset

[17]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
The program is to be tested.
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
create a 
\family typewriter
PQueue
\family default
 object 
\end_layout

\begin_layout Itemize
read from file 
\family typewriter
PATIENTS.txt
\family default
 all the data items with its priorities into the priority queue by calling 
\family typewriter
PQInsert
\family default
 method. 
\end_layout

\begin_layout Itemize
output the priority queue by calling 
\family typewriter
DisplayPQueue
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write additional code in your main program to do the following in order by calling the appropriate methods from 
\family typewriter
PQueue
\family default
 class. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
No. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operation 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Priority
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add patient Carol 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Carol
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Remove patient 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display priority queue 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
- 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
-
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Save your Jupiter Notebook for Task 3. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[HCI/PRELIM/9569/2021/P2/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to write program code for a Tic-Tac-Toe-Tomek game for two players.
\end_layout

\begin_layout Standard
Tic-Tac-Toe-Tomek is a game played on a 4 x 4 square board. The board starts empty, except that a single 'T' symbol may appear in one of the 16 squares. There are two players: X and O. They take turns to make moves, with X starting. In each move a player puts her symbol in one of the empty squares. Player X's symbol is 
\family typewriter
'X'
\family default
, and player O's symbol is 
\family typewriter
'O'
\family default
.
\end_layout

\begin_layout Standard
After a player's move, if there is a row, column or a diagonal containing 4 of that player's symbols, or containing 3 of her symbols and the 
\family typewriter
'T'
\family default
 symbol, she wins and the game ends. Otherwise the game continues with the other player's move. If all of the fields are filled with symbols and nobody won, the game ends in a draw.
\end_layout

\begin_layout Standard
Given the 4 x 4 board description containing 
\family typewriter
'X'
\family default
, 
\family typewriter
'O'
\family default
, 
\family typewriter
'T'
\family default
 and 
\family typewriter
'.'
\family default
 characters (where 
\family typewriter
'.'
\family default
 represents an empty square). The following examples show the various winning positions. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-HCI-2021-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[2]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.2
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[3]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.3
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[4]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.4
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[5]:
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 4.5
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
initialize the data structure to represent the 4 x 4 square board, using the identifier 
\family typewriter
board
\family default
 
\end_layout

\begin_layout Itemize
generate a pair of random numbers between 1 and 4 
\end_layout

\begin_layout Itemize
place 
\family typewriter
'T'
\family default
 at that random position on the board 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
displayBoard
\family default
 that will display the game board clearly to the players. You should use the 
\family typewriter
board
\family default
 as a parameter in 
\family typewriter
displayBoard
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
getPlayerMove
\family default
 to get players to make their move (by marking 
\family typewriter
'X'
\family default
 or 
\family typewriter
'O'
\family default
) on the board. You should include validation on player
\begin_inset Quotes ers
\end_inset

s input and check that the space is not already occupied. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
checkWin
\family default
 that checks all the conditions for winning a game and returns 
\family typewriter
True
\family default
 if a player has won the game, otherwise returns 
\family typewriter
False
\family default
. Use 
\family typewriter
board
\family default
 as a parameter. You may include any other suitable parameters. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 4.5 
\end_layout

\begin_layout Standard
Write a 
\family typewriter
main
\family default
 function that makes use of the identifiers and functions from Task 4.1 to Task 4.4 and allows two players, X and O, to play a game of Tic-Tac-Toe-Tomek.
\end_layout

\begin_layout Standard
The 
\family typewriter
main
\family default
 function should include the following: 
\end_layout

\begin_layout Itemize
display the initial game board with the single 
\family typewriter
'T
\family default
' displayed in it 
\end_layout

\begin_layout Itemize
start with player X to make the first move 
\end_layout

\begin_layout Itemize
ensure players X and O take turns to make their move 
\end_layout

\begin_layout Itemize
display the game board after every move made by a player 
\end_layout

\begin_layout Itemize
check for winner 
\end_layout

\begin_layout Itemize
display message on which player has won the game or whether the game ends in a draw. 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard
Run your 
\family typewriter
main
\family default
 function and produce outputs of 
\series bold
three
\series default
 games where player X wins one game, player O wins another game, and a drawn game.
\end_layout

\begin_layout Standard
Copy and paste all outputs in a text file as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_5_<your name>_<centre number>_<index number>.txt
\family default
 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 4.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Your program code and output for Task 1 should be saved in a single 
\family typewriter
.ipynb
\family default
 file.
\end_layout

\begin_layout Standard
Name your Jupyter Notebook as 
\family typewriter
TASK1_<your name>_<class>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The file 
\family typewriter
marathon.CSV
\family default
 contains the full list of athletes who took part in the 42.195km marathon race. The first line in the file is the heading for the records. Each subsequent line is a record of a runner in the form: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
<name of athlete>,<country code>,<timing in h:mm:ss>
\family default
 
\end_layout

\begin_layout Standard
For example, 
\family typewriter
Abdi ABDIRAHMAN,USA,2:18:27
\family default

\end_layout

\begin_layout Standard
Several athletes did not complete the race and their timing is recorded as 'DNF' to indicate 
\begin_inset Quotes els
\end_inset

did not finish
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
For example: 
\family typewriter
Alemu BEKELE,BRN,DNF 
\family default

\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to find out the number of athletes who did not finish the race and output the following three statements:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Number of DNF: x 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Total number of athletes: y 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Percentage of athletes who finished race: z 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
x
\family default
 is the number of athletes who did not finish the race,
\end_layout

\begin_layout Standard

\family typewriter
y
\family default
 is the total number of athletes who participated in the marathon race,
\end_layout

\begin_layout Standard
and 
\family typewriter
z
\family default
 is the percentage (rounded to 1 decimal place) of athletes who finished the race.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
insertionSort
\family default
 that takes an unsorted list as a parameter, sorts the list using the insertion sort algorithm, and returns the sorted list. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
By making use of the 
\family typewriter
insertionSort
\family default
 function from Task 1.2, or otherwise, find out the top 20 athletes and list them in order of rank under the heading (Rank, Country, Name, Timing). 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Sample Output:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Rank Country Name 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Timing 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
1 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

ABC 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Harry TAN 
\begin_inset space ~

\end_inset

2:08:38 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

XYZ 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

Andy LEE 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

2:09:58 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

... 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Python file as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>_<class>_<index number>.py
\family default

\end_layout

\begin_layout Standard
You will build a simplified, one-player version of the classic board game Battleship. Refer to 
\family typewriter
Task2_Client_SampleOutput.JPG
\family default
 for the sample output.
\end_layout

\begin_layout Standard
In this version of the game: 
\end_layout

\begin_layout Itemize
The
\series bold
 server program
\series default
 initialises a grid measuring 4 metres by 5 metres. 
\end_layout

\begin_layout Itemize
The grid is to be represented on the screen by a rectangular grid. 
\end_layout

\begin_layout Itemize
Each square metre of the grid is represented by an 
\family typewriter
x
\family default
-coordinate and a 
\family typewriter
y
\family default
-coordinate. 
\end_layout

\begin_layout Itemize
The top left square metre of the grid display has 
\family typewriter
x = 0
\family default
 and 
\family typewriter
y = 0
\family default
. 
\end_layout

\begin_layout Itemize
Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent an unoccupied space. 
\end_layout

\begin_layout Itemize
There will be a single ship hidden in a random location. 
\end_layout

\begin_layout Itemize
The ship only occupies one square metre of the grid. 
\end_layout

\begin_layout Itemize
The 
\series bold
client program
\series default
 allows the player to input guesses to sink the ship. After each guess, 
\begin_inset Quotes qld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

 represents the incorrect position guessed while 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

 represents the sunken ship. 
\end_layout

\begin_layout Itemize
The ship will not appear if it has not been sunk. 
\end_layout

\begin_layout Itemize
The game is terminated by the server program when 
\series bold
three
\series default
 guesses are used or the player has guessed the correct position. 
\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write the code for the following functions and procedures for the 
\series bold
server program
\series default
. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subroutine Header
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
InitialiseGrid(): ARRAY[0:3, 0:4] OF CHAR 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialises a 4 by 5 two-dimensional array and returns the array. Use 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 to represent blank.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayGrid(arr: ARRAY[0:3, 0:4] OF CHAR) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sends the encoded grid to the client. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ValidateRow(row: INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
True
\family default
 if the row is valid and 
\family typewriter
False
\family default
 otherwise.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ValidateCol(col: INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns 
\family typewriter
True
\family default
 if the column is valid and 
\family typewriter
False
\family default
 otherwise. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckResult(row,col:INTEGER): BOOLEAN 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Checks if the guess is correct. If the guess is correct, uses 
\begin_inset Quotes qld
\end_inset


\family typewriter
S
\family default

\begin_inset Quotes qrd
\end_inset

 to represent the sunken ship. Otherwise, uses 
\begin_inset Quotes qld
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

 to represent incorrect guess. Returns 
\family typewriter
True
\family default
 for the correct guess and returns 
\family typewriter
False
\family default
 for the wrong guess.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
The following client program is given in 
\family typewriter
Battleship_Client.py
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
import socket 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket = socket.socket() 
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
address = input('Enter IPv4 address of server: ') 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
port = int(input('Enter port number of server: ')) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket.connect((address, port)) 
\family default

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
while True: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

data = client_socket.recv(1024)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if b
\begin_inset Quotes qrd
\end_inset

Enter
\begin_inset Quotes qrd
\end_inset

 in data: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

choice = input(data.decode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

client_socket.sendall(choice.encode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

print(data.decode()) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if b
\begin_inset Quotes qrd
\end_inset

GAME OVER
\begin_inset Quotes qrd
\end_inset

 in data or b
\begin_inset Quotes qrd
\end_inset

YOU WON
\begin_inset Quotes qrd
\end_inset

 in data: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

break 
\family default

\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
client_socket.close() 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write the corresponding server program that: 
\begin_inset space \hfill{}

\end_inset

[16] 
\end_layout

\begin_layout Itemize
Instantiates the server socket. 
\end_layout

\begin_layout Itemize
Binds the socket to localhost and port number 6789. 
\end_layout

\begin_layout Itemize
Listens for incoming request, accepts incoming request and establishes connection with the client. 
\end_layout

\begin_layout Itemize
Generates a random position for the hidden ship. 
\end_layout

\begin_layout Itemize
Sends a 
\begin_inset Quotes eld
\end_inset

Welcome to Battleship!
\begin_inset Quotes erd
\end_inset

 message to the client. 
\end_layout

\begin_layout Itemize
Uses the subroutines coded in Task 2.1 to play the game. 
\end_layout

\begin_layout Itemize
Sends 
\begin_inset Quotes qld
\end_inset


\family typewriter
YOU WON!
\family default

\begin_inset Quotes qrd
\end_inset

 to the client for the correct guess and ends the game. 
\end_layout

\begin_layout Itemize
Sends 
\begin_inset Quotes qld
\end_inset


\family typewriter
GAME OVER…
\family default

\begin_inset Quotes qrd
\end_inset

 to the client if three guesses are used. 
\end_layout

\begin_layout Itemize
Closes the sockets. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Your program code and output for Task 3 should be saved in a single 
\family typewriter
.ipynb
\family default
 file.
\end_layout

\begin_layout Standard
Name your Jupyter Notebook as 
\family typewriter
TASK3_<your name>_<class>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
JP Fitness Club is a gym that keeps details of its members. You are tasked to help the club manage the members
\begin_inset Quotes ers
\end_inset

 details and store them in a SQL database.
\end_layout

\begin_layout Standard
There are two types of membership: normal and annual. Each member has a unique membership number, first name, surname, contact number and last visit date recorded.
\end_layout

\begin_layout Standard
A normal member deposits a selected amount into their account. Each time the member visits the gym, the entrance fee is deducted from the amount held in his account. The member may top up the account any time.
\end_layout

\begin_layout Standard
An annual member pays a fixed fee per year, starting from the date of registration. He may then visit the gym any number of times for the whole year without paying the entrance fee.
\end_layout

\begin_layout Standard
Three classes have been identified: 
\family typewriter
Member
\family default
, 
\family typewriter
NormalMember
\family default
, 
\family typewriter
AnnualMember
\family default
.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Member
\family default
 has these attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
memberID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 digit membership number. First four digits represent the year of joining gym and last four digits are used to make the 
\family typewriter
memberID
\family default
 unique, e.g. 
\family typewriter
20210357
\family default
. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
first_name 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
First name of member, at most 15 characters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
surname 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Surname of member, at most 15 characters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
contact_number 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 digit contact number.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
last_visit 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The date when member last visited the gym, in the format
\family typewriter
 YYYY-MM-DD
\family default
. Initialises to today
\begin_inset Quotes ers
\end_inset

s date. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
memberType
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates type of membership, either 
\begin_inset Quotes eld
\end_inset

normal
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

annual
\begin_inset Quotes erd
\end_inset

. Initialises to None. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember() 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Outputs member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
isActive() 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Boolean 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Indicates whether a member is active or not. Returns True if the last visit date is within 30 days, otherwise returns False.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The class 
\family typewriter
NormalMember
\family default
 inherits from 
\family typewriter
Member
\family default
 and has these additional attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
stored_value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Float 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
stored in member
\begin_inset Quotes ers
\end_inset

s account. Display in 2 decimal places. Initialise to $0.00.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output 
\family typewriter
memberType
\family default
 in addition to member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The class 
\family typewriter
AnnualMember
\family default
 also inherits from 
\family typewriter
Member
\family default
 and has these additional attributes and methods defined on it.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Attribute
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
annual_fee 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Annual fee paid by member. Initialises to $500
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
date_register
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
String 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date when member joins annual membership, in format 
\family typewriter
YYYY-MM-DD
\family default
. Initialises to today
\begin_inset Quotes ers
\end_inset

s date.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Method
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
showMember()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
None 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Outputs 
\family typewriter
memberType
\family default
 in addition to member
\begin_inset Quotes ers
\end_inset

s membership number, first name, surname, contact number and last visit date. 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code using object-oriented programming for the classes 
\family typewriter
Member
\family default
, 
\family typewriter
NormalMember
\family default
, and 
\family typewriter
AnnualMember
\family default
. Include all the identifiers stated and other appropriate methods to access and modify the attributes. 
\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
members.TXT
\family default
, contains data items for a number of members. Each data item is separated by a comma, with each member
\begin_inset Quotes ers
\end_inset

s data on a new line as follows: 
\end_layout

\begin_layout Itemize
membership number 
\end_layout

\begin_layout Itemize
first name 
\end_layout

\begin_layout Itemize
surname 
\end_layout

\begin_layout Itemize
contact number 
\end_layout

\begin_layout Itemize
member type 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
member.txt
\family default
, creating an instance of the appropriate class for each member, storing each instance in the same list.
\end_layout

\begin_layout Standard
Run 
\family typewriter
showMember
\family default
 method to display each of the members
\begin_inset Quotes ers
\end_inset

 details. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
The members
\begin_inset Quotes ers
\end_inset

 details are to be stored in a SQL database.
\end_layout

\begin_layout Standard
The file 
\family typewriter
JPgym.SQL
\family default
 contains the SQL code to create database 
\family typewriter
JPgym.db
\family default
 with the single table, 
\family typewriter
Member
\family default
. The table will have the following fields: 
\end_layout

\begin_layout Itemize
MemberID – primary key, text 
\end_layout

\begin_layout Itemize
FirstName – first name of member, text 
\end_layout

\begin_layout Itemize
Surname – surname of member, text 
\end_layout

\begin_layout Itemize
ContactNo – contact number of member, text 
\end_layout

\begin_layout Itemize
LastVisit – date that member last visited gym, text 
\end_layout

\begin_layout Itemize
MemberType – indicates 
\begin_inset Quotes els
\end_inset

normal
\begin_inset Quotes ers
\end_inset

 or 
\begin_inset Quotes els
\end_inset

annual
\begin_inset Quotes ers
\end_inset

 membership, text 
\end_layout

\begin_layout Standard
Copy and paste this SQL code into your Python program to create the database and table.
\end_layout

\begin_layout Standard
Also, write program code in Python to insert all the information from the file into the 
\family typewriter
JPgym.db
\family default
 database.
\end_layout

\begin_layout Standard
Run your program and check that all information has been inserted using SQLite database software. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write a SQL query code in Python to display all members with 
\begin_inset Quotes eld
\end_inset

normal
\begin_inset Quotes erd
\end_inset

 membership in ascending order of 
\family typewriter
FirstName
\family default
.
\end_layout

\begin_layout Standard
Display only the following fields from the query: 
\family typewriter
FirstName
\family default
, 
\family typewriter
Surname
\family default
, 
\family typewriter
ContactNo
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[JPJC/PRELIM/9569/2021/P2/Q4]
\series default

\end_layout

\begin_deeper
\begin_layout Standard
JP Mobile sells mobile phones and manages its inventory using a NoSQL database. Information about the mobile phones is stored in the JSON file 
\family typewriter
items.JSON
\family default
.
\end_layout

\begin_layout Standard
The following fields are recorded: 
\end_layout

\begin_layout Itemize
brand of mobile phone, 
\end_layout

\begin_layout Itemize
model, 
\end_layout

\begin_layout Itemize
colour(s) available, 
\end_layout

\begin_layout Itemize
price in dollar, 
\end_layout

\begin_layout Itemize
quantity in stock. 
\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code to import the information from the JSON file into a MongoDB database. Save the information under the 
\family typewriter
phone
\family default
 collection in the 
\family typewriter
jp_mobile
\family default
 database. Ensure that the collection only stores the information from the JSON file.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
TASK4_<your name>_<class>_<index number>.py 
\family default

\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
The shop decides to include one or more free gifts for new batches of mobile phones it sells.
\end_layout

\begin_layout Standard
Write program code for a user to insert information of a mobile phone by getting user input of the following: brand, model, colour, price, quantity, free gift(s).
\end_layout

\begin_layout Standard
Your code should allow user to input one or more free gifts.
\end_layout

\begin_layout Standard
If a phone
\begin_inset Quotes ers
\end_inset

s brand, model and colour already exists, add the new quantity to the existing quantity in the database, and replace the existing price with the new price.
\end_layout

\begin_layout Standard
Run your program and insert the following 2 documents: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
No. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Brand 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Model 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Colour 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Price 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Quantity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Free gift(s)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
orange 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
22 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
black 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
900 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
power bank
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
solo 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A33 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
red 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1300 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
power bank, earbuds
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Add your program code to 
\family typewriter
TASK4_<your name>_<class>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
display_all
\family default
 that will display all the information in the 
\family typewriter
phone
\family default
 collection under these fields: 
\family typewriter
brand
\family default
, 
\family typewriter
model
\family default
, 
\family typewriter
colour
\family default
, 
\family typewriter
price
\family default
, 
\family typewriter
quantity
\family default
, 
\family typewriter
free gift(s)
\family default
.
\end_layout

\begin_layout Standard
If no free gift comes with the phone, print a 
\family typewriter
None
\family default
 statement.
\end_layout

\begin_layout Standard
Include a final statement that shows the total number of documents in the collection.
\end_layout

\begin_layout Standard
Run the 
\family typewriter
display_all
\family default
 function to show your output.
\end_layout

\begin_layout Standard
Add your program code to 
\family typewriter
TASK4_<your name>_<class>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
The shop uses a web browser to display the database content. The manager wants to filter the mobile phones by 
\family typewriter
brand
\family default
 and display the results in a web browser.
\end_layout

\begin_layout Standard
Write additional Python code and the necessary files to create a web application that 
\end_layout

\begin_layout Itemize
receives a 
\family typewriter
brand
\family default
 string from a HTML form, then 
\end_layout

\begin_layout Itemize
creates and returns a HTML document that enables the web browser to display an ordered list of mobile phones sorted by 
\family typewriter
price
\family default
. 
\end_layout

\begin_layout Standard
For each document, the web page should include the: 
\end_layout

\begin_layout Itemize
brand as the heading 
\end_layout

\begin_layout Itemize
model, 
\end_layout

\begin_layout Itemize
colour, 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>_<class>_<index number>.py
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_4_<your name>_<class>_<index number>
\family default

\end_layout

\begin_layout Standard
Run the web application and input brand as 
\begin_inset Quotes els
\end_inset


\family typewriter
solo
\family default

\begin_inset Quotes ers
\end_inset

 in the webpage.
\end_layout

\begin_layout Standard
Save the output of the program as
\end_layout

\begin_layout Standard
TASK4_4_<your name>_<class>_<index number>.html
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q1] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
The TCP/IP networking model comprises 4 layers. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Copy and complete the below diagram for the TCP/IP stack. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Transport Layer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

\backslash
hline
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of the Transport Layer in the TCP/IP network model. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the reserved port range used in the Transport Layer. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A certain port number in binary form is 
\family typewriter
00000100
\family default
 
\family typewriter
00011000
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Express this value in denary (decimal) form. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain how it may be checked if this binary port value is within the reserved port range, without converting it to decimal.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State which layer of the TCP/IP model the Domain Name System (DNS) protocol belongs to.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the DNS protocol. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q2] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Validation and verification are used in data entry. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the purpose of validation. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the purpose of verification. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard
A network program using TCP needs to check if a port number is within an acceptable range of values. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Is this fulfilled by validation or verification? Explain your answer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Provide three sets of suitable test values for the above check. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A printing shop needs to set up a print queue system to serve its customers. This print queue will manage print tasks, by sending them one at a time to available printers.
\end_layout

\begin_layout Standard
For all print tasks, the data that will be stored include:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
User
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Printer address
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Job name
\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Status 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The print queue itself stores the following data:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
Number of jobs
\end_layout

\begin_layout Standard
When a print task is added to the queue: 
\end_layout

\begin_layout Itemize
The task is stored inside the queue, in FIFO order 
\end_layout

\begin_layout Itemize
The jobs count is incremented by one 
\end_layout

\begin_layout Standard
When a print task is sent to a printer: 
\end_layout

\begin_layout Itemize
The print task is removed from the queue, in FIFO order 
\end_layout

\begin_layout Itemize
The jobs count is decremented by one 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram that shows the following for the situation described above. 
\end_layout

\begin_deeper
\begin_layout Itemize
The classes 
\end_layout

\begin_layout Itemize
properties 
\end_layout

\begin_layout Itemize
appropriate methods 
\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the meaning of the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

inheritance 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

polymorphism 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
The printing shop wishes to implement a circular queue to limit the maximum number of pending jobs and improve the performance of their system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State two differences between a linear queue and a circular queue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Suggest whether inheritance or polymorphism is a more suitable principle to apply in the implementation of both linear queue and circular queue in the same program. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Using a suitable diagram, pseudocode, or other method, show how an item would be added to a circular queue implemented with a static array. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An algorithm for sorting an array of elements is shown.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR i = 1 to Array.LENGTH - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

FOR j = 1 to Array.LENGTH - 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Array[j] > Array[j+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

t = Array[j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Array[j] = Array[j+1] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Array[j+1] = t 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ENDFOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDFOR 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the algorithm represented. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
tate the time complexity of this algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Copy and complete the trace table below with the value of 
\family typewriter
Array
\family default
 at the end of each iteration of 
\family typewriter
i
\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initial 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
[2, 3, 4, 5, 6, 1]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 improvements that could be made to the above algorithm to improve its efficiency. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Explain why insertion sort is usually used instead of bubble sort, although both have the same time efficiency.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A school database has some data in the following table: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
StudentID
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Student Name 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Class 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Subjects
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Wong Yong Ming 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1917 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2PHY, H2CHEM, H2ECON
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vikram Singh 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1911 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2CHEM, H2ECON,H1GEOG
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Muhd Bashir bin Ramdan 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1911 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H2MATH, H2CHEM, H2ECON, H1ELIT
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State and explain if the above table is in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Describe two advantages that normalised data has over redundant data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
In an effort to improve the school database, the IT administrator came up with an ER diagram. Part of the full ER diagram is as shown. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-NYJC-2021-P1-Q5.png
	width 15page%

\end_inset

 
\end_layout

\begin_layout Standard
Each of the three entities in the ER diagram has a name attribute. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Write table descriptions to implement the above ER diagram. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
Write an SQL query to retrieve only the student name and class name for all students in the level 
\family typewriter
JC2
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A fast-growing startup is writing code to provide a new service. The user needs have not yet been fully determined, and the data schema is likely to undergo further changes before being finalised. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Suggest if SQL or NoSQL is more suitable for the needs of this startup. Give 
\series bold
two
\series default
 reasons to support your answer.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
two
\series default
 challenges the startup will face in using NoSQL databases.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The startup is concerned that a hardware failure may wipe out critical data and leave them unable to continue operating.
\end_layout

\begin_deeper
\begin_layout Standard
Suggest what the startup should do to 
\series bold
ensure
\series default
 that they are safe against data loss in such a scenario.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Alice, a programmer, is implementing a DNS cache using a hash table. 
\end_layout

\begin_layout Enumerate
Explain the purpose of the hash function in a hash table. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The description for a particular hashing algorithm using rolling polynomials is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
For each character in the data, do the following: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Let 
\family typewriter
i
\family default
 represent the position of the character (1st char = 1, 2nd char = 2, ...) 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Let 
\family typewriter
ascii
\family default
 represent the ASCII value of the character 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Calculate the sum of 
\family typewriter
i
\family default
×(31^
\family typewriter
ascii
\family default
) for all characters 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Implement this algorithm in pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard
You may assume that the function 
\family typewriter
Ord()
\family default
 is available, which takes in a single character and returns the ASCII value of the character. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Bob, another programmer, suggests that a Binary Search Tree would be a more appropriate data structure for the DNS cache. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe one advantage of using a hash table for the DNS cache.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe one advantage of using a Binary Search Tree for the DNS cache.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the algorithm used to retrieve the sorted contents of a cache from a Binary Search Tree.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Using any appropriate diagrams, pseudocode, or other appropriate method, show how this algorithm might be carried out. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate
Explain why the Binary Search Tree might need to be periodically recreated.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
A text file, 
\family typewriter
TIDES.TXT
\family default
, contains the low and high tide information for a coastal location for each day of a month. Each line contains tab-delimited data that shows the date, the time, whether the tide is high or low and the tide height in metres.
\end_layout

\begin_layout Standard
Each line is in the format:
\end_layout

\begin_layout Standard

\family typewriter
YYYY-MM-DD
\backslash
tHH:mm
\backslash
tTIDE
\backslash
tHEIGHT
\backslash
n 
\family default
 
\end_layout

\begin_layout Itemize
The date is in the form YYYY-MM-DD, for example, 2019-08-03 is 3rd August, 2019 
\end_layout

\begin_layout Itemize
The time is in the form HH:mm, for example, 13:47 
\end_layout

\begin_layout Itemize
TIDE is either HIGH or LOW 
\end_layout

\begin_layout Itemize
HEIGHT is a positive number shown to one decimal place 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
t
\family default
 represents the tab character 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
n
\family default
 represents the newline character 
\end_layout

\begin_layout Standard
The text file is stored in ascending order of date and time.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 1.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the tide data from a text file 
\end_layout

\begin_layout Itemize
find the highest high tide and print this value 
\end_layout

\begin_layout Itemize
find the lowest low tide and print this value 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 1.
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
The tidal range is the difference between the heights of successive tides; from a high tide to the following low tide or from a low tide to the following high tide.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
output the largest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Itemize
output the smallest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK2_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to implement a todo list using a linkedlist data structure. For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset


\family typewriter
#
\family default

\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 2.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
The class 
\family typewriter
TodoList
\family default
 represents a LinkedList and has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
__head
\family default
 – a pointer to the first node of the LinkedList; if empty, it has a value of 
\family typewriter
None
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
__tail
\family default
 – a pointer to the last node of the LinkedList; if empty, it has a value of 
\family typewriter
None
\family default
 
\end_layout

\begin_layout Standard

\family typewriter
TodoList
\family default
 has the following methods defined on it: 
\end_layout

\begin_layout Itemize

\family typewriter
add(item)
\family default
 – wraps 
\family typewriter
item
\family default
 in a 
\family typewriter
TodoItem
\family default
 instance, and adds it to the end of the LinkedList 
\end_layout

\begin_layout Itemize

\family typewriter
remove(item)
\family default
 – removes the first 
\family typewriter
TodoItem
\family default
 containing 
\family typewriter
item
\family default
 from the LinkedList 
\end_layout

\begin_layout Itemize

\family typewriter
list()
\family default
 – returns a Python list containing each 
\family typewriter
item
\family default
 in the TodoList 
\end_layout

\begin_layout Standard
The class 
\family typewriter
TodoItem
\family default
 represents a Node of the LinkedList and has the following attributes: 
\end_layout

\begin_layout Itemize

\family typewriter
title
\family default
 – a short description of the todo item 
\end_layout

\begin_layout Itemize

\family typewriter
__next
\family default
 – a pointer to the next node in the LinkedList; if this is the last node, it has a value of None 
\end_layout

\begin_layout Standard

\family typewriter
TodoItem
\family default
 has the following methods defined on it: 
\end_layout

\begin_layout Itemize
l
\family typewriter
ink_to(todoitem)
\family default
 – links this 
\family typewriter
TodoItem
\family default
 instance to 
\family typewriter
todoitem
\family default
, another instance of the TodoItem class 
\end_layout

\begin_layout Standard
Implement the above classes. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Add the following items to a new 
\family typewriter
TodoList
\family default
: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy milk
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy flour
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy eggs
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Bake cake
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Display the contents of the 
\family typewriter
TodoList
\family default
. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Remove the following items from the 
\family typewriter
TodoList
\family default
: 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy milk
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

Buy eggs
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard
Display the contents of the 
\family typewriter
TodoList
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 2.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Name your Jupyter Notebook as
\end_layout

\begin_layout Standard

\family typewriter
TASK3_<your name>_<centre number>_<index number>.ipynb 
\family default

\end_layout

\begin_layout Standard
The task is to write a function that takes a sequence of characters representing a colour, and translates the colour into a different number base.
\end_layout

\begin_layout Standard
8-bit colours are represented with three numbers, indicating the level of the colours red (R), green (G), and blue (B) respectively. Each number is an integer from 0 to 255. 255 represents the fully saturated colour, while 0 represents zero saturation (black).
\end_layout

\begin_layout Standard
In HTML, these colours may be represented using hex code as well. In hex code, the R, G, and B values are converted to hexadecimal. Hex codes begin with the symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

 followed by the three R, G, and B hexadecimal values.
\end_layout

\begin_layout Standard
For example, the hex code #0A0B0C represents a colour with RGB values 10, 11, and 12 respectively.
\end_layout

\begin_layout Standard
For each of the sub-tasks, add a comment statement, at the beginning of the code using the hash symbol 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

, to indicate the sub-task the program code belongs to, for example: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
In[1]:
\family default

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
# Task 3.1
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Program Code
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write a function called 
\family typewriter
task3_1(hex)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes 
\family typewriter
hex
\family default
, a string representing a hex code, beginning with a 
\begin_inset Quotes els
\end_inset

#
\begin_inset Quotes ers
\end_inset

 symbol followed by three valid hexadecimal values between 00 and FF 
\end_layout

\begin_layout Itemize
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
a 3-integer tuple representing RGB values
\end_layout

\begin_deeper
\begin_layout Standard
or 
\end_layout

\end_deeper
\begin_layout Itemize
the error message, 
\begin_inset Quotes qld
\end_inset


\family typewriter
invalid data
\family default

\begin_inset Quotes qrd
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
Test the function fully with suitable test data.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_1(
\begin_inset Quotes qrd
\end_inset

#FFFFFF
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Standard
should return and display 
\family typewriter
(255, 255, 255)
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
Some image programs do not represent colours using 8-bit integers. Instead, they represent them as a normalised float value. In this representation, a value of 1.0 represents the fully saturated colour and a value of 0 represents zero saturation (black).
\end_layout

\begin_layout Standard
Write a second function 
\family typewriter
task3_2(rgb)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes a 3-integer tuple rgb representing RGB values 
\end_layout

\begin_layout Itemize
returns and displays either: 
\end_layout

\begin_deeper
\begin_layout Itemize
a 3-float tuple representing normalised RGB
\end_layout

\begin_deeper
\begin_layout Standard
or 
\end_layout

\end_deeper
\begin_layout Itemize
the error message, 
\begin_inset Quotes qld
\end_inset

invalid data
\begin_inset Quotes qrd
\end_inset

 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\end_deeper
\begin_layout Standard
Test the function fully with suitable test data.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_2((128, 128, 128))
\family default

\end_layout

\begin_layout Standard
should return and display
\family typewriter
 (0.50196, 0.50196, 0.50196) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
task3_2((255, 255, 255)) 
\family default

\end_layout

\begin_layout Standard
should return and display
\family typewriter
 (1.0, 1.0, 1.0)
\family default

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Image filters are functions that take in image data and change the RGB values of its colours according to an algorithm. The algorithm for converting an image to grayscale calculates the average of the RGB values and sets the R, G, and B values to this average.
\end_layout

\begin_layout Standard
Write a third function 
\family typewriter
task3_3(hex)
\family default
 that: 
\end_layout

\begin_layout Itemize
takes hex, a string representing a hex code 
\end_layout

\begin_layout Itemize
returns and displays a 3-float tuple representing normalised RGB of the colour converted to grayscale 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Test the function fully with 
\series bold
two
\series default
 suitable values.
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
task3_3(
\begin_inset Quotes qrd
\end_inset

#FF8000
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Standard
should return and display 
\family typewriter
(0.5, 0.5, 0.5)
\family default

\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Standard
Save your Jupyter Notebook for Task 3.
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[NYJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bookstore uses a text file to store data about its inventory of books. The bookshop carries two kinds of books: printed books and virtual books. The bookshop wishes to transfer this information into a database.
\end_layout

\begin_layout Standard
The bookshop also wishes to create an online bookstore that allows users to add books to a shopping cart for purchase.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
TASK4_1_<centre number>_<index number>.sql
\family default
 to show the SQL code to create database 
\family typewriter
bookstore.db
\family default
 with three tables: 
\family typewriter
Book
\family default
, 
\family typewriter
Printed
\family default
, and 
\family typewriter
Virtual
\family default
. The Printed and Virtual tables represent physical and virtual books respectively, and stores properties unique to each type of book.
\end_layout

\begin_layout Standard
The 
\family typewriter
Book
\family default
 table will have the following fields: 
\end_layout

\begin_layout Itemize

\family typewriter
BookID
\family default
 – the primary key, an integer value 
\end_layout

\begin_layout Itemize

\family typewriter
Title
\family default
 – the title of the book 
\end_layout

\begin_layout Itemize

\family typewriter
Price
\family default
 – the price of the book, in cents 
\end_layout

\begin_layout Itemize

\family typewriter
Type
\family default
 – the type of book: 
\begin_inset Quotes qld
\end_inset

physical
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

virtual
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Standard
The 
\family typewriter
Printed
\family default
 table will have the following additional field: 
\end_layout

\begin_layout Itemize

\family typewriter
Weight
\family default
 – the weight of the book 
\end_layout

\begin_layout Standard
The 
\family typewriter
Virtual
\family default
 table will have the following additional field: 
\end_layout

\begin_layout Itemize

\family typewriter
DownloadLink
\family default
 – the download link for the book 
\end_layout

\begin_layout Standard
Save your SQL code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_1_<your name>_<centre number>_<index number>.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Python programming language and object-oriented programming will be used to implement the online bookstore and shopping cart on a web page.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Book
\family default
 will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
title
\family default
 – stored as a string 
\end_layout

\begin_layout Itemize

\family typewriter
price
\family default
 – stored as an integer 
\end_layout

\begin_layout Standard
The class 
\family typewriter
Cart
\family default
 will store the following data: 
\end_layout

\begin_layout Itemize

\family typewriter
items
\family default
 – stored as a list of 
\family typewriter
Book
\family default
 objects 
\end_layout

\begin_layout Standard
The class 
\family typewriter
Cart
\family default
 has a method defined on it: 
\end_layout

\begin_layout Itemize

\family typewriter
total_price()
\family default
 – returns an integer representing the total price of books in the cart 
\end_layout

\begin_layout Standard
Save your program code as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
The 
\family typewriter
PrintedBook
\family default
 class inherits from 
\family typewriter
Book
\family default
, and stores the following additional data: 
\end_layout

\begin_layout Itemize
weight – stored as an integer 
\end_layout

\begin_layout Standard

\family typewriter
Virtu
\family default
alBook class inherits from 
\family typewriter
Bo
\family default
ok, and stores the following additional data: 
\end_layout

\begin_layout Itemize
download_link – stored as a string 
\end_layout

\begin_layout Standard
Add your program code to
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 [3]
\end_layout

\begin_layout Standard
The text file, 
\family typewriter
bookstore.txt
\family default
, contains data items for books stocked by the bookstore. Each data item is separated by a comma, with each book
\begin_inset Quotes ers
\end_inset

s data on a new line as follows: 
\end_layout

\begin_layout Itemize
book title 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Itemize
type 
\end_layout

\begin_layout Itemize
weight 
\end_layout

\begin_layout Itemize
download link 
\end_layout

\begin_layout Standard
Write program code to read in the information from the text file, 
\family typewriter
bookstore.txt
\family default
, creating an instance of the appropriate class for each book (either 
\family typewriter
PrintedBook
\family default
 or 
\family typewriter
VirtualBook
\family default
). 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard
Write program code to insert all information from the file into the 
\family typewriter
bookstore.db
\family default
 database.
\end_layout

\begin_layout Standard
Run the program. Add your program code to
\end_layout

\begin_layout Standard

\family typewriter
TASK4_2_<your name>_<centre number>_<index number>.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
The data from the text file, 
\family typewriter
bookstore.txt
\family default
, is to be used to implement a shopping cart in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
displays a list of books stocked by the bookstore 
\end_layout

\begin_layout Itemize
enables the user to add books to a shopping cart using an ID 
\end_layout

\begin_layout Itemize
displays the contents of the shopping cart 
\end_layout

\begin_layout Itemize
shows the total price of items in the shopping cart 
\end_layout

\begin_layout Standard
For each book displayed the web page should include the: 
\end_layout

\begin_layout Itemize
book ID 
\end_layout

\begin_layout Itemize
book title 
\end_layout

\begin_layout Itemize
price 
\end_layout

\begin_layout Standard
Save your program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.py 
\family default

\end_layout

\begin_layout Standard
with any additional files / sub-folders as needed in a folder named
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>
\family default

\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Standard
Run the web application and add the following books to the shopping cart: 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Northanger Abbey
\begin_inset Quotes qrd
\end_inset

, Price: 13.99, Type: Physical, Weight: 178g 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

War and Peace
\begin_inset Quotes qrd
\end_inset

, Price: 17.49, Type: Physical, Weight: 432g 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Computer Programs
\begin_inset Quotes qrd
\end_inset

, Price: 20.99, Type: Virtual, Link: https://mybookstore.com/dJHtFy 
\end_layout

\begin_layout Itemize
Title: 
\begin_inset Quotes qld
\end_inset

Data Science
\begin_inset Quotes qrd
\end_inset

, Price: 14.99, Type: Virtual, Link: https://mybookstore.com/fJynJk 
\end_layout

\begin_layout Standard
Save the output of the program as
\end_layout

\begin_layout Standard

\family typewriter
TASK4_3_<your name>_<centre number>_<index number>.html
\family default
 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Draw a reduced decision table based on the following conditions regarding how John should go to school. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Itemize
If it is a Monday, John always takes his dad
\begin_inset Quotes ers
\end_inset

s car to school if he does not oversleep. 
\end_layout

\begin_layout Itemize
If John oversleeps, he always takes Taxi to school. 
\end_layout

\begin_layout Itemize
Otherwise, if it is a rainy day, John takes Taxi to school. If not, by MRT. 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive function below helps to check if a password string 
\family typewriter
pw
\family default
 satisfies certain requirements. The meaning of the function parameters 
\family typewriter
pw
\family default
, 
\family typewriter
digit
\family default
s, 
\family typewriter
upper_l
\family default
, 
\family typewriter
lower_l
\family default
 and 
\family typewriter
length
\family default
 are password string, minimum number of digits, minimum number of uppercase letters, minimum number of lowercase letters and minimum length of the password respectively.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def check_pw(pw, digits, upper_l, lower_l, length): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(pw) == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

char = pw[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isdigit(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits-1, upper_l, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

elif char.isalpha(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isupper():
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits, upper_l-1, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw[1:], digits, upper_l, lower_l-1, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return False 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the values of all arguments in each recursive function call when the following code is executed. Then, state the value that the function returns.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> check_pw(
\begin_inset Quotes qrd
\end_inset

SP500
\begin_inset Quotes qrd
\end_inset

, 3, 1, 1, 5)
\family default
 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard
The function in 
\series bold
2a)
\series default
 is rewritten in such a way that string slicing on the password string pw is removed. A new function parameter 
\family typewriter
i
\family default
 is added to help the recursive function to keep track of the position in 
\family typewriter
pw
\family default
 in which it is currently checking.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def check_pw(pw, i, digits, upper_l, lower_l, length): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
if
\family default

\family typewriter

\series bold
 
\series default

\family default

\family typewriter

\series bold

\bar under
A
\bar default

\series default

\family default

\family typewriter
: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return digits < 1 and upper_l < 1 and lower_l < 1 and length < 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default

\family typewriter

\series bold

\bar under
B
\bar default

\series default

\family default

\family typewriter
 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if char.isdigit(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits-1, upper_l, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

elif char.isalpha(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if char.isupper(): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits, upper_l-1, lower_l, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return check_pw(pw, C, digits, upper_l, lower_l-1, length-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return False 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
State the code in 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe clearly or write in Python the modification needed for the function 
\family typewriter
check_pw()
\family default
 to also display a suggestion of a new password if the password requirements are not met. For example, if 
\family typewriter
pw
\family default
 does not have enough digits, it will append digits to 
\family typewriter
pw
\family default
 so that it can satisfy the requirement.
\end_layout

\begin_deeper
\begin_layout Standard
For example,
\end_layout

\begin_layout Standard

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> check_pw(
\begin_inset Quotes qrd
\end_inset

WoBeiShiGeDa
\begin_inset Quotes qrd
\end_inset

, 0, 2, 6, 7, 15) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Suggested password: WoBeiShiGeDa33Uxxx 
\family default

\end_layout

\begin_layout Standard

\family typewriter
False 
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Quotes qrd
\end_inset

33Uxxx
\begin_inset Quotes qrd
\end_inset


\family default
 is added to 
\family typewriter

\begin_inset Quotes qrd
\end_inset

WoBeiShiGeDa
\begin_inset Quotes qrd
\end_inset


\family default
 so that the password passes the requirements. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following recursive procedure is created to encode a character 
\family typewriter
char
\family default
 based on a 
\family typewriter
shift
\family default
 value. For example, if letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
a
\family default

\begin_inset Quotes qrd
\end_inset

 is shifted by 
\family typewriter
3
\family default
, it will become letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
d
\family default

\begin_inset Quotes qrd
\end_inset

; and if shifted by 
\family typewriter
-3
\family default
, it will become letter 
\begin_inset Quotes qld
\end_inset


\family typewriter
x
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Standard
The 
\family typewriter
ORD
\family default
 and 
\family typewriter
CHR
\family default
 function will help to convert the character to its ASCII value and vice versa.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE ENCODE_CHAR(char: STRING, shift: INT): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF shift == 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN char 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ELSE IF shift > 0: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

DECLARE new_char: STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

new_char = CHR((ORD(char) + 1) % 26) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

shift -= 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ENCODE_CHAR(new_char, shift) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ELSE: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Shift += 26 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ENCODE_CHAR(char, shift) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

END IF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 END PROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Identify one error from the above code, state the type of the error, including its definition and explain how the errors can be fixed. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Assume the above error has been fixed. Copy the following trace table to your answer booklet. State the line number each time one of the return statements is called and complete it based on the following function call.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
ENCODE_CHAR(
\begin_inset Quotes qrd
\end_inset

y
\begin_inset Quotes qrd
\end_inset

, -24) 
\family default

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Line No. 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
char 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
shift 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
new_char 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Answer all questions. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the network architecture model of A and B as shown in the diagram below.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State an advantage of model A over B in the diagram above.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State and explain if each of the following statements are correct. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_deeper
\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

One of the functionalities of the DNS is that different users can simultaneously receive different IP translations for the same domain name.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The 4 top layers of TCP/IP model are application, internet, data link and physical.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The internet layer is not responsible for reliable transmission. It makes no guarantees about the proper arrival of packets.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

2C:54:91:G8:F9:E3 is a valid MAC address.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

2001:0db8:0001:0ab9:C0A8:0102 is a valid IPv6 address.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Itemize

\begin_inset Quotes eld
\end_inset

The internet and the World Wide Web are the same thing.
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
State the purpose of HTTP and explain how the protocol works. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain packet switching. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State an ethical issue related to artificial intelligence.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the purpose of defining the code of conduct for computer use. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State a difference between data validation and data verification.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The implementation of a Binary Search Tree (BST) using three 1D arrays is shown below.
\end_layout

\begin_layout Standard
Each unused node that are not in the logical BST is initially connected in a singly linked list manner using the 
\family typewriter
leftPtr
\family default
 array. The first position of this linked list is indicated by the variable 
\family typewriter
nextFree
\family default
.
\end_layout

\begin_layout Standard
When a piece of data is inserted into the BST, a node will be disconnected from the linked list and added to the logical BST. The root of this logical BST is indicated by the variable 
\family typewriter
root
\family default
. The logical structure of the BST is managed by 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 which are the positions of the left and right child of the node respectively.
\end_layout

\begin_layout Standard
Below is an illustration for such BST with a 0-based index array.
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
nextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
leftPtr 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
rightPtr 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the logical BST at this point of time. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the post order traversal of the BST 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the values of 
\family typewriter
root
\family default
, 
\family typewriter
nextFree
\family default
 and the values in the arrays 
\family typewriter
data
\family default
, 
\family typewriter
leftPtr
\family default
 and 
\family typewriter
rightPtr
\family default
 after the 
\series bold
each
\series default
 of the following BST operations are executed sequentially. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Add 8
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
Recursive Delete 6 
\family default
 
\end_layout

\end_deeper
\begin_layout Enumerate
State an advantage of BST over Hash table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain what can make a Hash Table Search inefficient besides a bad hash function and how to overcome it. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State 2 characteristics of a good hash function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Study the following sorting code carefully.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def sort(lst): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

if len(lst)<=1: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return lst 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

pivot = lst[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

smaller = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

larger = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

for i in range (1, len(lst)): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if lst[i] < pivot: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

smaller.append(lst[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

larger.append(lst[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

return sort (smaller) + [pivot,] + sort (larger) 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State the name of the above sorting algorithm. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the above sorting algorithm is inefficient when it is used on a nearly sorted array. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how you can modify the code to improve the efficiency. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
Bubble sort and insertion sort are both used to sort a nearly sorted integer array of size 1000 and there are only 5 integers in the array that are not in the correct position. 
\end_layout

\begin_layout Enumerate
State and explain why insertion sort generally perform better than bubble sort for nearly sorted array. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Draw a flow chart for the algorithm described below. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_deeper
\begin_layout Standard
Given an integer 
\family typewriter
k
\family default
 and an array 
\family typewriter
arr[]
\family default
 representing the destination floors for 
\family typewriter
n
\family default
 people waiting currently at the ground floor and 
\family typewriter
k
\family default
 is the capacity of the elevator. It takes 1 unit time for the elevator to reach any consecutive floor from the current floor. The algorithm finds the minimal time taken to get all the people to their destination floor and then return to the ground floor.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
def minTime(n, k, arr) : 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Sort in descending order 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

arr.sort(reverse = True) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

minTime = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Iterate through the groups 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

for i in range(0, n, k) : 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# Update the time taken for 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

# each group 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

minTime += (2 * arr[i]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

# Return the total time taken 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

return minTime
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q7] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A relational database is created to store data about contractors engaging workers to perform renovation jobs.
\end_layout

\begin_layout Standard
The database designers are told that: 
\end_layout

\begin_layout Itemize
each contractor can recruit different workers to perform various jobs. 
\end_layout

\begin_layout Itemize
each worker can have skills to perform different jobs. 
\end_layout

\begin_layout Itemize
each job can have different levels of skills 
\begin_inset Quotes qld
\end_inset

A
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

B
\begin_inset Quotes qrd
\end_inset

 or 
\begin_inset Quotes qld
\end_inset

C
\begin_inset Quotes qrd
\end_inset

 and their hourly rate is calculated based on their skill level for the job. 
\end_layout

\begin_layout Standard
A first attempt is represented by the following table: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-1.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Enumerate
Explain why this table is not in first normalized form. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The following is an attempt to reduce data redundancy: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P1-Q7-2.png
	width 65page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain what a composite key is. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State a suitable primary key for Worker table and explain why the table is not in second normal form. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, …) 
\family default

\end_layout

\begin_layout Standard
The primary keys are indicated using a solid underline and foreign keys are indicated by using a dashed underline/asterisk. Write table descriptions for the required tables in the database so that they are in third normal form (3NF). 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Create an entity-relationship (ER) diagram showing the degree of all relations. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Using the above example, elaborate why a relational database model has advantage in maintaining data integrity over a flat file system. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

The homeowner would like to know a schedule of the renovation jobs performed to their house. They are 
\series bold
NOT
\series default
 interested in knowing the exact worker
\begin_inset Quotes ers
\end_inset

s name. Write an SQL query to output the 
\series bold
contractor
\begin_inset Quotes ers
\end_inset

s name
\series default
, 
\series bold
worker
\begin_inset Quotes ers
\end_inset

s job
\series default
, 
\series bold
worker
\begin_inset Quotes ers
\end_inset

s skill level
\series default
 and 
\series bold
date
\series default
 based on the contractor
\begin_inset Quotes ers
\end_inset

s name 
\begin_inset Quotes qld
\end_inset


\family typewriter
Su Ming De
\family default

\begin_inset Quotes qrd
\end_inset

. The output is to be in the ascending order based on the date of job performed. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P1/Q8] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
You are also to design an Object-Oriented solution for the above-mentioned project. Both contractor and workers are to create a 
\family typewriter
User
\family default
 account on the platform, with details such as 
\family typewriter
user_id
\family default
, 
\family typewriter
password
\family default
 and 
\family typewriter
gender
\family default
.
\end_layout

\begin_layout Standard
The contractors will have to register their company details such as company 
\family typewriter
name
\family default
 and 
\family typewriter
address
\family default
, while the workers need to register their bank 
\family typewriter
account
\family default
 number. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\series bold
User
\series default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-classes, 
\end_layout

\begin_layout Itemize
inheritance, 
\end_layout

\begin_layout Itemize
the properties required, 
\end_layout

\begin_layout Itemize
appropriate methods, including but not limited to the 
\series bold
constructor
\series default
 methods, and at least 
\series bold
one
\series default
 pair of 
\begin_inset Quotes els
\end_inset


\series bold
get
\series default

\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset


\series bold
set
\series default

\begin_inset Quotes ers
\end_inset

 methods for each class, 
\end_layout

\begin_layout Itemize
circle the polymorphed methods. 
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Using the above example, state the definition of inheritance and explain its purpose/advantage in object-oriented programing. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
The platform hopes to expand its function to allow register of homeowner accounts. The homeowners can view which are the workers came to their home address for renovation work on the date/time specified by the contractors. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

State how this would affect the class, properties and methods in the current example. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State how this would affect the tables, attributes and relationships of the relational database stated in 
\series bold
7(d)
\series default
 and 
\series bold
(e)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Explain how NoSQL addresses shortcomings of relational databases. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
Some homeowners request to have access to the hourly rate and personal contact of renovation workers. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

From the perspective of the company, explain to the homeowners how such a feature is against the data protection obligations stated in the Personal Data Protection Act (PDPA). 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 1.1
\series default

\end_layout

\begin_layout Standard
Write a function 
\family typewriter
task1_1(name_A, name_B)
\family default
 where 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are strings which consists of only alphabet letters and spaces. The function will return 
\family typewriter
True
\family default
 if 
\end_layout

\begin_layout Itemize
the alphabet letters combination used in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are the same and 
\end_layout

\begin_layout Itemize
the spaces in string 
\family typewriter
name_A
\family default
 and 
\family typewriter
name_B
\family default
 are at the same locations. 
\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\begin_layout Standard
For example,
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Deabc
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde Fgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcd Efgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
>\SpecialChar ligaturebreak
>\SpecialChar ligaturebreak
> match_names(
\begin_inset Quotes qrd
\end_inset

Abcde Fzh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
False
\family default
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Test your program with the following test data:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Deabc
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde Fgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcd Efgh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
print(task1_1(
\begin_inset Quotes qrd
\end_inset

Abcde Fzh I
\begin_inset Quotes qrd
\end_inset

, 
\begin_inset Quotes qld
\end_inset

Ihgfe Dcb A
\begin_inset Quotes qrd
\end_inset

))
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write the function 
\family typewriter
task1_2()
\family default
 to read the names in file 
\family typewriter

\begin_inset Quotes qrd
\end_inset

namelist_A.txt
\begin_inset Quotes qrd
\end_inset


\family default
 and find a matching name in 
\begin_inset Quotes qld
\end_inset


\family typewriter
namelist_B.txt
\family default

\begin_inset Quotes qrd
\end_inset

 that satisfied the conditions stated in 
\series bold
Task 1.1
\series default
. If a matching name cannot be found in 
\begin_inset Quotes qld
\end_inset


\family typewriter
namelist_B.txt
\family default

\begin_inset Quotes qrd
\end_inset

, it will just display 
\begin_inset Quotes qld
\end_inset


\family typewriter
***********No match***********
\family default

\begin_inset Quotes qrd
\end_inset

. Your results should be displayed in the following manners. The time-complexity of your program code matters. 
\begin_inset space \hfill{}

\end_inset

[13] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 2.1
\series default

\end_layout

\begin_layout Standard
Complete the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 by implementing both the 
\family typewriter
insert
\family default
 and 
\family typewriter
delete
\family default
 class functions. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
insert(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 as input and inserts it at the tail of the linked list. Take note that the attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 of 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 are both 
\family typewriter
None
\family default
 before the insertion. 
\end_layout

\begin_layout Itemize
The class function 
\family typewriter
delete(node)
\family default
 takes a 
\family typewriter
Node
\family default
 instance 
\family typewriter
node
\family default
 which exists in the linked list as input. The function removes/detaches 
\family typewriter
node
\family default
 from the linked list and returns it. The 
\family typewriter
node
\family default
 returned has both its attributes 
\family typewriter
prev
\family default
 and 
\family typewriter
next
\family default
 set to 
\family typewriter
None
\family default
, but data remains unchanged. 
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
The class 
\family typewriter
LRUQ
\family default
 uses the doubly linked list class 
\family typewriter
Doubly_LL
\family default
 to implement its least recently used queue (
\family typewriter
lruq
\family default
). 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\begin_layout Itemize
The attribute hashmap is a dictionary object that takes the node's data as key and the node instance itself in lruq as value. 
\end_layout

\begin_layout Itemize
The attribute size is the max number of nodes that lruq can have. 
\end_layout

\begin_layout Itemize
The attribute count is the number of nodes that lruq currently have. 
\end_layout

\begin_layout Standard
Complete the least recently used queue class 
\family typewriter
LRUQ
\family default
 by implementing the 
\family typewriter
use
\family default
 function. The class function 
\family typewriter
use(value)
\family default
 takes an integer 
\family typewriter
value
\family default
 as input. 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is in 
\family typewriter
lruq
\family default
 (referenced by hashmap), it removes the node in the 
\family typewriter
lruq
\family default
 and re-insert it to the end of the 
\family typewriter
lruq
\family default
. 
\end_layout

\begin_layout Itemize
If 
\family typewriter
value
\family default
 is not in 
\family typewriter
lruq
\family default
 (not referenced by hashmap), it references 
\family typewriter
value
\family default
 in hashmap and inserts a new 
\family typewriter
Node
\family default
 instance with value as its data to the end of 
\family typewriter
lruq
\family default
. If 
\family typewriter
count
\family default
 > 
\family typewriter
size
\family default
, it removes the least recently used node in 
\family typewriter
lruq
\family default
 and de-references it in 
\family typewriter
hashmap
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
Hint: To de-reference a key in 
\family typewriter
hashmap
\family default
, you can call the following. 
\family typewriter
self.hashmap.pop(key, None)
\family default
 where 
\family typewriter
self.hashmap
\family default
 is a dictionary object. 
\end_layout

\end_deeper
\begin_layout Standard
The test function 
\family typewriter
test2_2()
\family default
 is provided for you in 
\family typewriter
task2.ipynb
\family default
. The expected outcome of this test function is shown on the next page. Take note that the size of the least recently used queue is 
\family typewriter
6
\family default
 in this test function.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 3 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 8 2 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 3 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 45 3
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Print from head: 8 2 3 45 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 31 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
8 2 3 45 12 31 
\family default

\series bold
//Queue is full at this point
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 42 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 12 31 42 
\family default

\series bold
//8 is removed because it is the least used 
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
2 3 45 31 42 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Latest item used: 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
From least recently used to most recently used: Print from head: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
3 45 31 42 12 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

-
\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

- 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Task 3.1
\series default

\end_layout

\begin_layout Standard
Write program code to read the csv file 
\begin_inset Quotes qld
\end_inset


\family typewriter
health_facilities.csv
\family default

\begin_inset Quotes qrd
\end_inset

 and insert all information in the file as documents into a NoSQL MongoDB database called 
\begin_inset Quotes qld
\end_inset


\family typewriter
Health
\family default

\begin_inset Quotes qrd
\end_inset

 with one collection called 
\begin_inset Quotes qld
\end_inset


\family typewriter
facilities
\family default

\begin_inset Quotes qrd
\end_inset

. The 
\begin_inset Quotes qld
\end_inset


\family typewriter
_id
\family default

\begin_inset Quotes qrd
\end_inset

 of the documents in the database should start from 
\family typewriter
1
\family default
, 
\family typewriter
2
\family default
, 
\family typewriter
3
\family default
 and 
\family typewriter
4
\family default
 etc. The correct data type of each field is expected to be inserted into the database. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query to retrieve all public acute hospital documents with their corresponding number of beds more than 7200. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Write program code to bubble sort the results retrieved in 
\series bold
Task 3.2 a)
\series default
 according to the average number of beds per facility. Then, display the top 3 years which has the highest average number of beds per facility using the format below.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
The three years that have the highest average number of beds per facility are: _____, _____ and _____. 
\family default

\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[7] 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Enumerate
Write a MongoDB Pymongo query and program code to display all 
\begin_inset Quotes qld
\end_inset


\family typewriter
_id
\family default

\begin_inset Quotes qrd
\end_inset

s of Not-for-Profit health facilities documents that have no facility. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Write MongoDB Pymongo code to update the fields 
\begin_inset Quotes qld
\end_inset


\family typewriter
no_of_facilities
\family default

\begin_inset Quotes qrd
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
no_beds
\family default

\begin_inset Quotes qrd
\end_inset

 of only 3 documents retrieved in 
\series bold
Task 3.3 a)
\series default
 to 
\family typewriter
1
\family default
 and a random number from 
\family typewriter
10
\family default
 to 
\family typewriter
20
\family default
 respectively. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[RVHS/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard

\series bold
Car Loaning System 
\series default

\end_layout

\begin_layout Standard
CaRent is a company providing electronic car rental services. The company engages you to design a web application using Flask microframework to aid in the car rental process.
\end_layout

\begin_layout Standard
The following information of each Customer is stored:
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 – auto increment integer value to keep track of the ID of customer.
\end_layout

\begin_layout Standard

\family typewriter
Name
\family default
 – name of customer.
\end_layout

\begin_layout Standard

\family typewriter
Gender
\family default
 – gender of customer, to be stored as a single character, using either '
\family typewriter
M
\family default
' or '
\family typewriter
F
\family default
'.
\end_layout

\begin_layout Standard

\family typewriter
Contact
\family default
 – contact number of customer.
\end_layout

\begin_layout Standard
The following information of each Car is stored:
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 – vehicle identification number (VIN) of the car.
\end_layout

\begin_layout Standard

\family typewriter
Brand
\family default
 – brand of the car.
\end_layout

\begin_layout Standard

\family typewriter
Vehicle Type
\family default
 – type of the car, can be 
\family typewriter
'Sedan'
\family default
, 
\family typewriter
'Hatchback'
\family default
, 
\family typewriter
'SUV'
\family default
 or 
\family typewriter
'MPV'
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
Energy Source
\family default
 – type of energy source the engine is running on, can be 
\family typewriter
'Diesel'
\family default
, 
\family typewriter
'Gasoline'
\family default
, 
\family typewriter
'Hybrid'
\family default
 or 
\family typewriter
'Electricity'
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
DailyPrice
\family default
 – daily price for renting the car.
\end_layout

\begin_layout Standard

\family typewriter
Availability
\family default
 – availability of the car, can be 
\family typewriter
'Available'
\family default
 or 
\family typewriter
'Unavailable'
\family default
.
\end_layout

\begin_layout Standard
The following information of each RentalPoint is stored:
\end_layout

\begin_layout Standard

\family typewriter
PointID
\family default
 – auto increment integer value to keep track of the ID of rental service point.
\end_layout

\begin_layout Standard

\family typewriter
Address
\family default
 – address of the rental point.
\end_layout

\begin_layout Standard

\family typewriter
OpWeekDay
\family default
 – weekdays that the rental point is open, stored as a 7-digits string, starting from Sunday to Saturday, with 
\family typewriter
'1'
\family default
 indicating open and 
\family typewriter
'0'
\family default
 indicating closed. E.g. 
\family typewriter
'0111110'
\family default
 means it is open on weekdays and closed on weekend.
\end_layout

\begin_layout Standard

\family typewriter
OpStartHr
\family default
 – starting time of daily operation, stored as a 4 digits string, using 24hour time format.
\end_layout

\begin_layout Standard

\family typewriter
OpEndHr
\family default
 – ending time of daily operation, stored as a 4 digits string, using 24hour time format.
\end_layout

\begin_layout Standard
The following information of each 
\family typewriter
RentalRecord
\family default
 is stored:
\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 – ID of customer.
\end_layout

\begin_layout Standard

\family typewriter
VIN
\family default
 – VIN of car.
\end_layout

\begin_layout Standard

\family typewriter
StartDate
\family default
 – start date for the rental service.
\end_layout

\begin_layout Standard

\family typewriter
CollectionPointID
\family default
 – ID of the collection point.
\end_layout

\begin_layout Standard

\family typewriter
ReturnDate
\family default
 – return date for the rental service.
\end_layout

\begin_layout Standard

\family typewriter
ReturnPointID
\family default
 – ID of the return point.
\end_layout

\begin_layout Standard
The information is to be stored in four tables:
\end_layout

\begin_layout Standard

\family typewriter
Customer
\family default

\end_layout

\begin_layout Standard

\family typewriter
Car
\family default

\end_layout

\begin_layout Standard

\family typewriter
RentalPoint
\family default

\end_layout

\begin_layout Standard

\family typewriter
RentalRecord
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Create an SQL file called 
\family typewriter
Task4_1.sql
\family default
 to show the SQL code to create the database 
\family typewriter
car_rental.db
\family default
 with the three tables.
\end_layout

\begin_layout Standard
The table 
\family typewriter
Customer
\family default
 must use 
\family typewriter
CustomerID
\family default
 as its primary key, the table 
\family typewriter
Car
\family default
 must use 
\family typewriter
VIN
\family default
 as its primary key, and the table 
\family typewriter
RentalPoint
\family default
 must use 
\family typewriter
PointID
\family default
 as its primary key.
\end_layout

\begin_layout Standard
The table 
\family typewriter
RentalRecord
\family default
 should use 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
StartDate
\family default
 as a composite key, while 
\family typewriter
CustomerID
\family default
, 
\family typewriter
VIN
\family default
 and 
\family typewriter
CollectionPointID/ReturnPointID
\family default
 must refer to 
\family typewriter
CustomerID
\family default
 in 
\family typewriter
Customer
\family default
, 
\family typewriter
VIN
\family default
 in 
\family typewriter
Car
\family default
 and 
\family typewriter
PointID
\family default
 in 
\family typewriter
RentalPoint
\family default
 as foreign keys.
\end_layout

\begin_layout Standard
Save your SQL code as 
\family typewriter
Task4_1.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
The files 
\family typewriter
customers.csv
\family default
, 
\family typewriter
cars.csv
\family default
, 
\family typewriter
rental_points.csv
\family default
 and 
\family typewriter
rental_records.csv
\family default
 contains information about the customers, cars, rental points and the past rental records. The first row of each file contains the header of the respective columns. Each row in the files is a comma- separated list of information.
\end_layout

\begin_layout Standard
Write a Python program to insert all information from the three files into the 
\family typewriter
database car_rental.db
\family default
. Run the program.
\end_layout

\begin_layout Standard
Save your program code as 
\family typewriter
Task4_2.py
\family default
 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
You are tasked to implement a function to search and display all past rental records of a customer. Using the customer
\begin_inset Quotes ers
\end_inset

s name 
\family typewriter

\series bold
'Goh Yi Xi'
\series default

\family default
, query and display a list of data with the following fields as shown in the table, sorted in the ascending order according to the start date. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="6">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Contact 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
VehicleType 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
StartDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ReturnDate 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
DailyPrice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
…
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write the SQL code required.
\end_layout

\begin_layout Standard
Save this code as 
\family typewriter
Task4_3.sql
\family default
 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
The company wants to implement a function to register new cars for rental into the database. Office staff can register new cars by adding the values of the attributes in the 
\family typewriter
Car
\family default
 table.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application that: 
\end_layout

\begin_layout Itemize
Receive the following information: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
VIN
\family default
, 
\family typewriter
Brand
\family default
, 
\family typewriter
VehicleType
\family default
, 
\family typewriter
EnergySource
\family default
, and 
\family typewriter
DailyPrice
\family default
 of a car through a HTML form. 
\end_layout

\begin_layout Itemize

\family typewriter
Availability
\family default
 should be set to the default value of 
\family typewriter
'Available'
\family default
. 
\end_layout

\begin_layout Itemize
Note that 
\family typewriter
VehicleType
\family default
 and 
\family typewriter
EnergySource
\family default
 should be in 
\series bold
dropdown
\series default
 list format to improve data validity. 
\end_layout

\end_deeper
\begin_layout Itemize
Check if the 
\family typewriter
VIN
\family default
 is valid based on the following algorithm: 
\end_layout

\begin_deeper
\begin_layout Itemize
Step 1: Translate all letters to integer values using the following table (
\family typewriter
I
\family default
, 
\family typewriter
O
\family default
, and 
\family typewriter
Q
\family default
 are not allowed in a valid 
\family typewriter
VIN
\family default
): 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
B
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
E
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
F
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
G
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
H
\series default
: 8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
J
\series default
: 1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
K
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
L
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
M
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
P
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
R
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
N/A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
S
\series default
: 2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
T
\series default
: 3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
U
\series default
: 4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
V
\series default
: 5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
W
\series default
: 6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
X
\series default
: 7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Y
\series default
: 8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Z
\series default
: 9
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Step 2: Use the following weight factor for each position in the VIN. 
\series bold
The 9th position is that of the check digit
\series default
. Its weight factor has been substituted with a 
\family typewriter
0
\family default
, which will cancel it out in the multiplication step. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="18">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Position 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
5
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
7
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
8
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
9
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
10
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
11
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
12
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
13
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
14
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
15
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
16
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
17
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Weight 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The sum of product of the letter/digit with their corresponding weight factor is then divided by 
\family typewriter
11
\family default
. 
\end_layout

\begin_layout Itemize
The remainder is the check digit. If the remainder is 
\family typewriter
10
\family default
, the check digit will use 
\family typewriter
X
\family default
 instead. 
\end_layout

\begin_layout Itemize
E.g. the 
\family typewriter
VIN
\family default
 with values 1
\family typewriter
M8GDM9A_KP042788
\family default
 will produce a check digit of 
\family typewriter
X
\family default
 and hence 
\family typewriter
1M8GDM9AXKP042788
\family default
 is a valid 
\family typewriter
VIN
\family default
. 
\end_layout

\end_deeper
\begin_layout Itemize
If 
\family typewriter
VIN
\family default
 is valid, create a new car record in the 
\family typewriter
Car
\family default
 table, and display the record in the confirmation page. 
\end_layout

\begin_layout Itemize
Otherwise, inform the user that the VIN is invalid. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-RVHS-2021-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
You may assume: 
\end_layout

\begin_layout Itemize
All inputs are in valid format. 
\end_layout

\begin_layout Itemize
VIN: 1M8GDM9AXKP042788 is a new record to the database 
\end_layout

\begin_layout Standard
Save your program as 
\family typewriter
Task4_4.py 
\family default

\end_layout

\begin_layout Standard
With additional files or sub-folders as needed in a folder named 
\family typewriter
Task4_4 
\family default

\end_layout

\begin_layout Standard
Run the web application. Enter the values based on the sample input above.
\end_layout

\begin_layout Standard
Then save the output of the program as 
\family typewriter
Task4_4.html
\family default
. 
\begin_inset space \hfill{}

\end_inset

[15]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An iterative function Fn has two parameters, Arr and Object, and returns an integer. The pseudocode is as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION Fn(Arr: ARRAY, Object: STRING) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Current ← 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Object = Arr[Current] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Object > Arr[Current] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Next ← 1 + Current * 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Next ← Current * 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current ← Next 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset

UNTIL Current > LENGTH(Arr) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset

RETURN -1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 ENDFUNCTION 
\family default

\end_layout

\end_inset

A binary search tree is used to store the names of the 12 Chinese Zodiac animals. The order in which these names were added into the tree follows the order in the array 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array X
\family default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rat'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Tiger' 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Monkey'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Dog'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Snake'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Horse'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Dragon'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[10]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Ox'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Pig'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[11]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rabbit'
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Sheep'
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
X[12]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
'Rooster'
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary tree using the array 
\family typewriter
X
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Complete the trace table templates provided for the following function calls and state the RETURN value after each function call: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current] 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current] 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Function call: 
\family typewriter
Fn(X,'Sheep')
\family default
 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Function call: 
\family typewriter
Fn(X,'Duck')
\family default
 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe the purpose of function 
\family typewriter
Fn
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain why this function 
\family typewriter
Fn
\family default
 is more efficient than linear search.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
It is found that one of the Zodiac animals should be named as 
\begin_inset Quotes els
\end_inset

Goat
\begin_inset Quotes ers
\end_inset

 instead of 
\begin_inset Quotes els
\end_inset

Sheep
\begin_inset Quotes ers
\end_inset

. Design another array 
\family typewriter
Y
\family default
 such that the function 
\family typewriter
Fn
\family default
 can be used with the correct list of the Chinese Zodiac animals.
\end_layout

\begin_deeper
\begin_layout Standard
Complete the template provided for the array 
\family typewriter
Y
\family default
.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Description
Template
\begin_inset space ~

\end_inset

for
\begin_inset space ~

\end_inset

Question
\begin_inset space ~

\end_inset

1(b) 
\begin_inset space ~

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Function call: 
\family typewriter
Fn(X,'Sheep')
\family default

\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(ii)
\end_layout

\end_inset

Function call: 
\family typewriter
Fn(X,'Duck')
\family default
 
\end_layout

\begin_deeper
\begin_layout Standard
\align left
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object = Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Object > Arr[Current]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Next
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Output:
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Description
Template
\begin_inset space ~

\end_inset

for
\begin_inset space ~

\end_inset

Question
\begin_inset space ~

\end_inset

1(e) 
\begin_inset space ~

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Array Y
\family default

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rat'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[7]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Tiger'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Monkey'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[8]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Dog'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Snake'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[9]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Horse'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Dragon'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[10]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Ox'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[5]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Pig'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[11]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rabbit'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[6]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Sheep'
\color inherit

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Y[12]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\color white
'Rooster'
\color inherit

\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A merge sort algorithm consists of the function 
\family typewriter
merge_sort(seq)
\family default
 that takes in an unsorted list 
\family typewriter
seq
\family default
 as an input and returns a sorted list. The function uses the helper function 
\family typewriter
merge(left,right)
\family default
 which merges the two sorted lists, 
\family typewriter
left
\family default
 and 
\family typewriter
right
\family default
, and returns a sorted list.
\end_layout

\begin_layout Standard
The following is the pseudocode for the function 
\family typewriter
merge(left,right)
\family default
:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION merge(left: LIST, right: LIST) RETURNS LIST 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF LENGTH(left) = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN right 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 IF LENGTH(right) = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN left 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset

IF left[0] < right[0] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

 RETURN [left[0]] + merge(left[1:], right) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN [right[0]] + merge(left, right[1:]) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
16 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain why this is a recursive function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State whether this 
\family typewriter
merge
\family default
 implementation is stable or unstable and explain with an example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Complete the merge sort algorithm by writing the pseudocode for the function 
\family typewriter
merge_sort(seq)
\family default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of a merge sort algorithm over a bubble sort algorithm. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain whether using a merge sort algorithm or a bubble sort algorithm will be more efficient in arranging the data list 
\family typewriter
[2,1,3,4,6,5,8,7,9,10,12,11]
\family default
 in an ascending order. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stack is a last-in-first-out (LIFO) abstract data type (ADT) in which all the elements are inserted and removed from one end.
\end_layout

\begin_layout Standard
It is common to either use a linked list or an array to implement a stack 
\end_layout

\begin_layout Itemize
In the linked list implementation, a root pointer points to the top of a stack and a data structure. The data structure contains the value of the data and a pointer pointing to the next node in the stack. 
\end_layout

\begin_layout Itemize
In the array implementation, a fixed size array is used to store the elements. 
\end_layout

\begin_layout Standard
The basic stack operations of 
\family typewriter
push()
\family default
, 
\family typewriter
pop()
\family default
 and 
\family typewriter
peek()
\family default
 are provided in both implementations. 
\end_layout

\begin_layout Itemize

\family typewriter
push()
\family default
 is used to insert an element into the stack. 
\end_layout

\begin_layout Itemize

\family typewriter
pop()
\family default
 removes an element from the stack and returns the value of the element. 
\end_layout

\begin_layout Itemize

\family typewriter
peek()
\family default
 returns the value of the element at the top of the stack without removing it. 
\end_layout

\begin_layout Enumerate
Describe what an abstract data type is and how it benefits the user.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
State one advantage and one disadvantage of implementing the stack ADT using a linked list. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State one advantage and one disadvantage of implementing the stack ADT using an array.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe how a 
\family typewriter
push()
\family default
 operation is done in a stack ADT which is implemented using a linked list. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Describe how the number of elements within a stack can be counted using only the basic stack operations provided. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
The following program code uses a Python list as an array with the built-in functions
\family typewriter
 <list>.insert()
\family default
 and 
\family typewriter
<list>.pop()
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 def add(seq): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

stk = [] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

def InsertOne(item): 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

if stk==[] or item < stk[0]:
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

stk.insert(0,item) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

else: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

temp = stk.pop(0) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

InsertOne(item) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

stk.insert(0,temp) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

for ele in seq: 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

InsertOne(ele) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset

return stk 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
The above is an example of implementing a stack using an array. State and explain how the program code adds all the elements in the sequence 
\family typewriter
seq
\family default
 into the stack. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Modify the above program code such that it uses only the basic stack ADT operations provided. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following shows a sample of a student
\begin_inset Quotes ers
\end_inset

s result slip for the Preliminary Examination. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P1-Q4.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
The college wishes to manage this result information using a relational database. The normalised database design requires to have a number of tables. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram showing these tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2*, Attribute3, …) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes. Foreign keys are indicated by using a dashed underline/asterisk. Write table descriptions for the tables you identified in 
\series bold
part (a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
Under the Personal Data Protection Act (PDPA), the NRIC/FIN can no longer be used as a unique identifier for each student. Suggest and justify a suitable alternative unique identifier for each student. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Write an SQL query to output the names, civics groups and grades of students who have obtained at least 60 marks for H2 Computing. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The Food Services Industry Digital Plan (IDP) was recently launched by the Minister of State for Trade and Industry to help F&B businesses adopt more digital technologies in their daily operations. The manager of a Iocal restaurant engaged a consultant to propose a digital solution for his restaurant operations.
\end_layout

\begin_layout Standard
After conducting a comprehensive study, the consultant proposed a web-based solution using a client-server model. The solution requires the following hardware to access the web server wirelessly in the local area network (LAN): 
\end_layout

\begin_layout Itemize
A tablet device on each table for customers to browse the menu and order their food items. 
\end_layout

\begin_layout Itemize
Multiple large monitors for the chefs in the kitchen to read the ordered food items. 
\end_layout

\begin_layout Itemize
A computer station for the service staff to check the table number before serving the food to the customers. 
\end_layout

\begin_layout Itemize
A computer in the manager
\begin_inset Quotes ers
\end_inset

s office to update the menu in the web server and print the daily sales report. 
\end_layout

\begin_layout Standard
When a customer decides to pay the bill, a QR code will be generated on the tablet device for him to scan and make online payment using his personal mobile device. 
\end_layout

\begin_layout Enumerate
Explain the meaning of the term client-server model. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe the main software components to be developed for the web server to host this service for the restaurant. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe how the customer would use the client tablet device to browse and order the food items. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Suggest 
\series bold
one
\series default
 feature on the digital form that will provide a positive experience for the customers when using the tablet device to order their food. Describe the usability principle applied in this feature. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The manager recommends the proposed solution to the shareholders, but a number of social issues associated with the solution have been raised. Describe 
\series bold
two
\series default
 possible issues that could have been raised.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
An alternative to this web-based solution would be to develop a native application programme for the customers to download and install on their mobile devices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 feature that is only available in the native application solution and how it is relevant to the solution proposed for the restaurant. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The restaurant
\begin_inset Quotes ers
\end_inset

s manager is also keen to expand his business to accept online ordering for takeaways. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Explain 
\series bold
one
\series default
 benefit of the web-based solution in this situation.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Draw the network diagram for the proposed web-based solution and include all the required hardware for the restaurant to accept online ordering.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 benefits for the restaurant in implementing this solution. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(j)
\end_layout

\end_inset

For online ordering, the restaurant needs to collect the customer's name, address and contact number. State and describe 
\series bold
two
\series default
 data protection obligations that the manager needs to comply under the Personal Data Protection Act. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P1/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A fantasy card game was developed using object-oriented programming (OOP) to store its cards
\begin_inset Quotes ers
\end_inset

 data. A card can either be a minion or a weapon. Each card has a name, mana cost, health or durability and attack power.
\end_layout

\begin_layout Standard
In order to play a card, a player must spend a certain amount of mana as specified in the card
\begin_inset Quotes ers
\end_inset

s mana cost. When the card has been played, the player may decide whether to use it to attack another minion or not.
\end_layout

\begin_layout Standard
A minion may belong to one of the following races: beast, demon, dragon or elemental. When a minion is attacked, its health would decrease according to the attacking card
\begin_inset Quotes ers
\end_inset

s attack power. Once the health of a minion decreases to zero, it is destroyed and removed from the game.
\end_layout

\begin_layout Standard
Instead of health, a weapon has durability and it cannot be attacked. When a weapon is used for an attack, its durability would decrease by one. Once the durability of a weapon decreases to zero, it is destroyed and removed from the game. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
the base class 
\family typewriter
CARD
\family default
, 
\end_layout

\begin_layout Itemize
any sub-classes and inheritance from the base class, 
\end_layout

\begin_layout Itemize
the properties for the base class and sub-classes, 
\end_layout

\begin_layout Itemize
appropriate methods with at least one getter and one setter method.
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\end_deeper
\begin_layout Enumerate
In relation to your diagram in part 
\series bold
(a)
\series default
, explain the terms: 
\end_layout

\begin_deeper
\begin_layout Enumerate
encapsulation, 
\end_layout

\begin_layout Enumerate
inheritance, 
\end_layout

\begin_layout Enumerate
polymorphism. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why OOP is a preferred programming paradigm in the development of this game. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
During a contact tracing exercise, the TraceTogether token
\begin_inset Quotes ers
\end_inset

s tag number, the user
\begin_inset Quotes ers
\end_inset

s name and the user
\begin_inset Quotes ers
\end_inset

s mobile number are stored in an Abstract Data Type (ADT) 
\family typewriter
Person
\family default
. The information are stored as a three element tuple as follows: 
\end_layout

\begin_layout Standard
\align center
\noindent

\family typewriter
(tag: INTEGER, name: STRING, hp: STRING) 
\family default
 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Function 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Return Type 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
make_person(tag,name,hp) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Person ADT 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A Constructor to create the 
\family typewriter
Person
\family default
 ADT.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_tag(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the tag number of the user. 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_name(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the name of the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_hp(Person) 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Returns the mobile number of the user.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1 
\end_layout

\begin_layout Standard
Write program code to implement the ADT 
\family typewriter
Person
\family default
 with the above constructor and accessors.
\begin_inset space \hfill{}

\end_inset

 [4]
\end_layout

\begin_layout Subsubsection*
Task 1.2 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
read_file()
\family default
 to read all the 21 users
\begin_inset Quotes ers
\end_inset

 information from the file 
\family typewriter
PEOPLE.csv
\family default
 and return a list containing all the 
\family typewriter
Person
\family default
 ADTs.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 1.3 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
insertion_sort(lst)
\family default
 that takes the list 
\family typewriter
lst
\family default
 obtained from 
\series bold
Task 1.2
\series default
 and sort them according to their tag numbers in an ascending order using the insertion sort algorithm.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard
Searching for a tag number in a large list of users may be slow and tedious. However, if the list is sorted, performing a binary search would be more efficient.
\end_layout

\begin_layout Subsubsection*
Task 1.4 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
search(lst,num)
\family default
 that searches for a tag number 
\family typewriter
num
\family default
 in the sorted list 
\family typewriter
lst
\family default
 obtained from 
\series bold
Task 1.3
\series default
. The code should 
\end_layout

\begin_layout Itemize
perform a binary search on the sorted list. 
\end_layout

\begin_layout Itemize
return the 
\family typewriter
Person
\family default
 ADT if the tag number 
\family typewriter
num
\family default
 exists. Otherwise, return 
\family typewriter
None
\family default
. 
\end_layout

\begin_layout Itemize
print the number of comparisons made in the searching process.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every user is required to carry a tracing token inside an indoor sports facility so that the sensing device system can detect the token to read the position of the users and their temperature. The data is stored as records in the file 
\family typewriter
POSRECORDS.txt
\family default
, with the following entries separated by commas: 
\end_layout

\begin_layout Itemize
the tag number (
\family typewriter
INTEGER
\family default
) of the tracing token which could be used to identify the user 
\end_layout

\begin_layout Itemize
the temperature (
\family typewriter
FLOAT
\family default
) of the user measured in degree Celsius 
\end_layout

\begin_layout Itemize
the location 
\begin_inset Formula $(x,y)$
\end_inset


\family typewriter
 (FLOAT,FLOAT)
\family default
 of the user which consists of the perpendicular 
\family typewriter
x-
\family default
 and 
\family typewriter
y-
\family default
distances, measured in metres, from the walls A and B respectively 
\end_layout

\begin_layout Standard
The diagram below shows two locations 
\begin_inset Formula $(x_{1},y_{1})$
\end_inset

 and 
\begin_inset Formula $(x_{2},y_{2})$
\end_inset

: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
The distance between two locations can be calculated using the formula:
\end_layout

\begin_layout Standard

\begin_inset Formula \[
\text{Distance}=\sqrt{(x_{2}-x_{1})^{2}+(y_{2}-y_{1})^{2}}
\]
\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1 
\end_layout

\begin_layout Standard
Create an empty array 
\family typewriter
all_records
\family default
 of size 20 and paste the data from the text file 
\family typewriter
POSRECORDS.txt
\family default
 into your program code.
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
distance(user1,user2)
\family default
 that takes in two records and returns the distance between the two users in metres, correct to 2 decimal places. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Standard
For safety reasons during the Covid-19 pandemic, two users are considered to be in close proximity if the distance between them is less than 1.5 m apart.
\end_layout

\begin_layout Subsubsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
analyse(user1)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
, calculates the distances between 
\family typewriter
user1
\family default
 and all other users in the array, and returns a list of tag numbers of the users who are in close proximity to 
\family typewriter
user1
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard
Under the Safe Management Measures, people with a temperature of more than 37.5 degree Celsius will be flagged out as RED cases and the people who are in close proximity to these RED cases will be flagged out as YELLOW cases. The facility manager needs to submit both lists to the authority daily for follow-up actions.
\end_layout

\begin_layout Subsubsection*
Task 2.3 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
red_list(all_records)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
 and returns a list of tag numbers belonging to the RED cases. 
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 2.4 
\end_layout

\begin_layout Standard
Write program code for the function 
\family typewriter
yellow_list(red_cases,all_records)
\family default
 that iterates through all the records in the array 
\family typewriter
all_records
\family default
 to check for people who were in close proximity to any of the RED cases. The function returns a list of tag numbers belonging to the YELLOW cases.
\end_layout

\begin_layout Standard
Those people flagged out as RED cases in 
\series bold
Task 2.3
\series default
 should not appear in the list of YELLOW cases even though they may be in close proximity to another RED case.
\end_layout

\begin_layout Standard
You may use the functions written in Task 2.1 and Task 2.2 for the program code in this task. 
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Shoppe e-Commerce has a mobile application for customers to make purchases through its online platform. All the customers
\begin_inset Quotes ers
\end_inset

 details, product data and ordering records are kept in the database 
\family typewriter
shoppe.db
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write program code for the webpage 
\family typewriter
index.html
\family default
 for the customer to log in to their account. The 
\family typewriter
/login
\family default
 route in the server code should verify the customer
\begin_inset Quotes ers
\end_inset

s username and password using the data in the 
\family typewriter
Account
\family default
 table in the database. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-1.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
If the log-in details are valid, the customer will receive the webpage 
\family typewriter
display.html
\family default
. Otherwise, the customer will be redirected back to the log-in page. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code for the webpage 
\family typewriter
display.html 
\family default
to display the customer
\begin_inset Quotes ers
\end_inset

s details, with the profile picture, and a menu for the customer to choose the option to update the profile picture or to check the shopping cart. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Standard
A customer, John, does not have a profile picture and he now wishes to upload the file 
\family typewriter
mypic.png
\family default
. This picture file will be renamed as 
\family typewriter
John.png
\family default
 before storing in the web server.
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write program code for the customer to select and upload a picture file, and it should include the following: 
\end_layout

\begin_layout Itemize

\family typewriter
/menu
\family default
 route in the server code to provide the customer with a webpage 
\family typewriter
profile.html
\family default
 when the option to update the profile picture is chosen 
\end_layout

\begin_layout Itemize

\family typewriter
profile.html
\family default
 to allow the customer to upload a profile picture in the 
\family typewriter
.png
\family default
 format 
\end_layout

\begin_layout Itemize

\family typewriter
/update
\family default
 route in the server code to receive the uploaded picture file and rename it as 
\family typewriter
<username>.png
\family default
 before storing in the server
\begin_inset Quotes ers
\end_inset

s 
\family typewriter

\backslash
static
\backslash
photo
\backslash

\family default
 directory 
\end_layout

\begin_layout Itemize

\family typewriter
success.html
\family default
 to display a webpage informing the customer that the profile picture has been successfully uploaded 
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\begin_layout Standard
The Shoppe customers usually browse through the available products on the platform and add them to their shopping carts. When they have decided on their purchase, they will select some or all the items in the shopping cart before checking out to make payment. 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q3-3.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write program code for the customer to select the items to check out for payment, and it should include the following: 
\end_layout

\begin_layout Itemize

\family typewriter
/menu
\family default
 route in the server code to query the 
\family typewriter
Cart
\family default
 table in the 
\family typewriter
shoppe.db
\family default
 when the customer chooses the option to check the shopping cart 
\end_layout

\begin_layout Itemize

\family typewriter
cart.html
\family default
 to display the list of items in the shopping cart and let the customer select them for checking out; the customer will also be required to indicate the preferred date and address for delivery 
\end_layout

\begin_layout Itemize

\family typewriter
/checkout
\family default
 route in the server code to receive the customer
\begin_inset Quotes ers
\end_inset

s inputs and insert a record into the
\family typewriter
 Orders
\family default
 table in the
\family typewriter
 shoppe.db 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
success.html
\family default
 to display the 
\series bold
total cost
\series default
 and inform the customer that the purchase has been successfully recorded.
\begin_inset space \hfill{}

\end_inset

 [14] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[YIJC/PRELIM/9569/2021/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Lessonology is a learning management system that utilises gamification elements to motivate students to complete their assignments. The Linked List data structure is used to store the students
\begin_inset Quotes ers
\end_inset

 names and their total experience points. Each node contains a student
\begin_inset Quotes ers
\end_inset

s name, the student
\begin_inset Quotes ers
\end_inset

s total experience points, and a pointer to the next node. The nodes are linked together according to the order provided in the 
\family typewriter
DATA.txt
\family default
 file.
\end_layout

\begin_layout Standard
A program is to be written to implement nodes as an instance of the class 
\family typewriter
Node
\family default
. The class 
\family typewriter
Node
\family default
 has the following properties and method: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Name
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node
\begin_inset Quotes ers
\end_inset

s value for a student
\begin_inset Quotes ers
\end_inset

s name.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Exp
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node
\begin_inset Quotes ers
\end_inset

s value for the student
\begin_inset Quotes ers
\end_inset

s total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Pointer
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer to the next node.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Method
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SetPointer()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Set the pointer to point at the next node or point to 
\family typewriter
None
\family default
 when it is the last node.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
StudentList
\family default
. The class 
\family typewriter
StudentList
\family default
 has the following property and methods: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: StudentList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer at the start of the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initialise the linked list with the pointer 
\family typewriter
Start
\family default
 assigned to 
\family typewriter
None
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Add()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add a new node into the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Update()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Update the value for the total experience points of a student
\begin_inset Quotes ers
\end_inset

s node in the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Delete()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Delete a node in the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Display()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current content of the linked list in table form.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
StudentList
\family default
, including the 
\family typewriter
Constructor
\family default
,
\family typewriter
 Add() 
\family default
and 
\family typewriter
Display()
\family default
 methods. The code should follow the specification given. Do not write the 
\family typewriter
Update()
\family default
 and 
\family typewriter
Delete()
\family default
 methods yet.
\end_layout

\begin_layout Standard
The 
\family typewriter
Add(node)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class should add the 
\family typewriter
node
\family default
 containing a student
\begin_inset Quotes ers
\end_inset

s name and the student
\begin_inset Quotes ers
\end_inset

s total experience points to the linked list, according to the order given in the 
\family typewriter
DATA.txt
\family default
 file.
\end_layout

\begin_layout Standard
Test your code by reading the data from the file 
\family typewriter
DATA.txt
\family default
 and adding them as nodes into the linked list. The diagram below shows a portion of the expected output when using the 
\family typewriter
Display()
\family default
 method on the populated linked list: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q4-1.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Standard
Each time a student completes an assignment, points will be awarded and the student
\begin_inset Quotes ers
\end_inset

s total experience points will be updated.
\end_layout

\begin_layout Standard
Write program code for the 
\family typewriter
Update(name,points)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class that takes a student
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
 and the awarded 
\family typewriter
points
\family default
 as inputs to update the student
\begin_inset Quotes ers
\end_inset

s total experience points in the node. (You may assume that the node containing the student exists in the linked list.)
\end_layout

\begin_layout Standard
For example, 
\family typewriter
Update('BRIAN',100)
\family default
 will update the total experience points of a student whose name is 
\family typewriter
'BRIAN'
\family default
 from 
\family typewriter
20404
\family default
 to 
\family typewriter
20504
\family default
. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Standard
Write program code to implement the 
\family typewriter
Delete(name)
\family default
 method for the 
\family typewriter
StudentList
\family default
 class to search and remove a node, containing a particular student
\begin_inset Quotes ers
\end_inset

s 
\family typewriter
name
\family default
, in the linked list. Return 
\family typewriter
True
\family default
 if the node is found and removed; otherwise return 
\family typewriter
False
\family default
. (You may assume that the students
\begin_inset Quotes ers
\end_inset

 names are unique in the linked list.) 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Standard
Another linked list which has pointers linking the nodes in decreasing order of the experience points is implemented as an instance of the class 
\family typewriter
Leaderboard
\family default
.
\end_layout

\begin_layout Standard
The class 
\family typewriter
Leaderboard
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Leaderboard
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The pointer at the start of the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Constructor
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Inherit the property and all the methods from the class 
\family typewriter
StudentList
\family default
. Initialise the linked list with the pointer 
\family typewriter
Start
\family default
 assigned to 
\family typewriter
None
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Add()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modify the 
\family typewriter
Add()
\family default
 method in the parent class to add a new node in decreasing order of total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Update()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Modify the 
\family typewriter
Update()
\family default
 method in the parent class such that the linked list is still in decreasing order of experience points after updating a student
\begin_inset Quotes ers
\end_inset

s total experience points.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayTop()
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the content of the nodes in the linked list for the top students based on their total experience points.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
Leaderboard
\family default
 to inherit the properties and methods from the class 
\family typewriter
StudentList
\family default
 with the modified 
\family typewriter
Add()
\family default
 and 
\family typewriter
Update()
\family default
 methods. The additional 
\family typewriter
DisplayTop(n)
\family default
 method should display the top 
\family typewriter
n
\family default
 number of students in the linked list, based on their total experience points. (You may assume that no two students have the same total experience points.)
\end_layout

\begin_layout Standard
Test your code by reading the data from the file 
\family typewriter
DATA.txt
\family default
 and adding them as nodes into this linked list. The diagram below shows the expected output when using the 
\family typewriter
DisplayTop(5)
\family default
 method on the linked list: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9569-YIJC-2021-P2-Q4-2.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
