#LyX file created by tex2lyx 2.3
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin C:/Users/Admin/Desktop/Github/question_bank/LyX/
\textclass article
\begin_preamble

\usepackage{enumitem}
\usepackage{amsthm}



\usepackage{enumitem}
\setenumerate[1]{label=\textbf{\arabic*}}
\setenumerate[2]{label=\textbf{(\alph*)}}
\setenumerate[3]{label=\textbf{(\roman*)}}
\setlist[enumerate]{align=right}

\setcounter{page}{2}

%for upright integrals
\usepackage[integrals]{wasysym}


%to be used in conjunction with fancyfoot for last page
\usepackage{zref-totpages}


%fancyhrd settings
\usepackage{fancyhdr}

\fancyhf{}

\fancypagestyle{laststyle}
{
   \fancyhf{}
   \chead{\thepage}
   \fancyfoot[L]{\copyright NJC }
   \fancyfoot[R]{\textbf{END}} %Put \thispagestyle{laststyle} in the last page
}

%%centering page number
\chead{\thepage}

\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

%%footer settings, different footer for ODD and EVEN pages, also for the LASTPAGE
\fancyfoot[LO]{Generated with Python Script by BRW\hfill \textbf{[Turn Over}}
\fancyfoot[LE]{Generated with Python Script by BRW }

%%shameless self-plug BRW



\usepackage{babel}

\end_preamble
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "default" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing double
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\leftmargin 1.5cm
\topmargin 1.8cm
\rightmargin 2cm
\bottommargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The files 
\family typewriter
WORDS1.TXT
\family default
 and 
\family typewriter
WORDS2.TXT
\family default
 store a list of single word computing terms used in a textbook.
\end_layout

\begin_layout Standard
Each entry has the following format:
\end_layout

\begin_layout Standard

\family typewriter
<computing term>
\family default

\end_layout

\begin_layout Standard

\family typewriter
<number>
\family default

\end_layout

\begin_layout Standard
One of the file entries (in both files) is:
\end_layout

\begin_layout Standard

\family typewriter
program 
\family default

\end_layout

\begin_layout Standard

\family typewriter
52
\family default

\end_layout

\begin_layout Standard
This means that after a complete scan of the textbook the word 'program' was found 52 times.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to find and output the term with the highest number of occurrences. Use the file 
\family typewriter
WORDS1.TXT
\family default
 to test your program.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Screenshot of output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Amend your program code so that if more than one term exists with the highest number of occurrences, all terms are reported. Use the file 
\family typewriter
WORDS2.TXT
\family default
 to test your program.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Screenshot of output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company keeps data about its employees. The employee surname and employee ID are recorded.
\end_layout

\begin_layout Standard
All employee IDs are unique and have the format C999 where C is any uppercase letter and 9 is a digit.
\end_layout

\begin_layout Standard
A program is to be produced to search by either: 
\end_layout

\begin_layout Itemize
The surname, which then reports the matching employee ID 
\end_layout

\begin_layout Itemize
The employee ID, which then reports the matching surname 
\end_layout

\begin_layout Standard
The programmer stores the data a two 1-dimensional arrays and produces the following search algorithm to search a string array and output the matching value from the second array.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
INPUT SearchItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR Index ‚Üê 1 TO UpperBound 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF SearchItem = Array1[Index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN OUTPUT Array2[Index] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFOR
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
This search algorithm is inefficient.
\end_layout

\begin_layout Standard
The programmer uses the following design to produce the program code: 
\end_layout

\begin_layout Itemize
code to search by surname 
\end_layout

\begin_layout Itemize
The search algorithm has 
\family typewriter
Surname
\family default
 as 
\family typewriter
Array1
\family default
 and 
\family typewriter
EmployeeID
\family default
 as 
\family typewriter
Array2
\family default
 followed by code to search by employee ID 
\end_layout

\begin_layout Itemize
The search algorithm has 
\family typewriter
EmployeeID
\family default
 as 
\family typewriter
Array1
\family default
 and 
\family typewriter
Surname
\family default
 as 
\family typewriter
Array2
\family default
 
\end_layout

\begin_layout Standard
This design would produce repetition of code.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code which performs each of the searches: 
\end_layout

\begin_layout Itemize
Search by surname 
\end_layout

\begin_layout Itemize
Search by employee ID 
\end_layout

\begin_layout Standard
Your code should address the issues of inefficiency and repetition of code described in the scenario above.
\end_layout

\begin_layout Standard
Use the sample array data available from the text file 
\family typewriter
EMPLOYEEDATA.txt
\family default
 and paste this into your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [11]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Devise a set of four test cases with the data to be used.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
A screenshot for each test case you considered. Annotate the screenshot explaining the purpose of each test. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to store a dataset (maximum size 20 items) as a binary tree structure. You should assume that the data items are unique.
\end_layout

\begin_layout Standard
The program will use a user-defined type Node for each node defined as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left pointer for the node
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Data
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node's data value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightP
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right pointer for the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is maintained of all the unused nodes which do not form part of the tree. The first available node which is used for a new term is indicated by NextFreePosition. Items in the unused list are linked using their left pointers.
\end_layout

\begin_layout Standard
The binary tree and linked list are implemented using variables as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisTree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[20] : Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The tree data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position of the 
\family typewriter
ThisTree
\family default
 array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreePosition
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER 
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next unused node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the binary tree and linked list after four values have been added.
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to declare all the required variables and create the initial linked list which contains all 20 nodes. Add statement(s) to initialise the empty tree.
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code for Task 3.1. [11]
\end_layout

\begin_layout Standard
The following (incomplete) pseudocode inserts a data value into the binary tree structure.
\end_layout

\begin_layout Standard
The 
\family typewriter
LastMove
\family default
 variable holds the direction of the previous traversal move as follows:
\end_layout

\begin_layout Standard
X - no move yet made
\end_layout

\begin_layout Standard
L - move was to the left
\end_layout

\begin_layout Standard
R - move was to the right
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddItemToBinaryTree(NewFreeItem)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Root = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Root ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the tree to find the position for the new value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê Root
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'X'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

PreviousPosition ‚Üê CurrentPosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewFreeItem < ThisTree[CurrentPosition].Data
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move left
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'L'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].LeftP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move right
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LastMove ‚Üê 'R'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition ‚Üê ThisTree[CurrentPosition].RightP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL CurrentPosition = 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LastMove = 'R'
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].RightP ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ThisTree[PreviousPosition].LeftP ‚Üê NextFreePosition
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

NextFreePosition ThisTree[NextFreePosition].LeftP
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: The above text is available in the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write non-recursive code to implement the 
\family typewriter
AddItemToBinaryTree
\family default
 procedure. You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The given pseudocode is incomplete as: 
\end_layout

\begin_layout Itemize
it does not initially test that there is space available for a new item 
\end_layout

\begin_layout Itemize
it does not assign 
\family typewriter
NewTreeItem
\family default
 to the data field of the 
\family typewriter
ThisTree
\family default
 array 
\end_layout

\begin_layout Standard
Add these requirements to your program solution.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code for Task 3.2.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write a procedure
\family typewriter
 OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreePosition
\family default
 and the contents of 
\family typewriter
ThisTree
\family default
 in index order.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for Task 3.3. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Write a main program to: 
\end_layout

\begin_layout Itemize
Input new data items and add them to the binary tree by calling procedure 
\family typewriter
AddItemToBinaryTree
\family default
. The input is terminated with value 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

. Do not attempt to validate the input of the country names. 
\end_layout

\begin_layout Itemize
Your program will then call procedure 
\family typewriter
OutputData
\family default
. 
\end_layout

\begin_layout Standard
Run the program with the input of the single value 
\begin_inset Quotes qld
\end_inset


\family typewriter
XXX
\family default

\begin_inset Quotes qrd
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Test your program using the following data items input in the order shown: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
INDIA, NEPAL, MALAYSIA, SINGAPORE, BURMA, CANADA, LATVIA, XXX
\family default
 
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Provide screenshot test evidence for Task 3.5. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Further program code is required to carry out an 
\series bold
in-order traversal
\series default
.
\end_layout

\begin_layout Subsubsection*
Task 3.6
\end_layout

\begin_layout Standard
Write a recursive procedure to carry out an in-order tree traversal.
\end_layout

\begin_layout Standard
Include a call to the procedure from your main program.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Produce a screenshot for the Task 3.5 dataset confirming the output of the countries in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \quad{}

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The task is to input data for a frequency distribution and then output to the screen a horizontal bar chart.
\end_layout

\begin_layout Standard
The data is input as an X value followed by its frequency. Assume the frequency is always in the range 0 to 60 and there are no more than six X values.
\end_layout

\begin_layout Standard
The input shown below shows the number of sweatshirts sold in a retail shop over a one week period; for example there were 39 XL items sold
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XS 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 12 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> S 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 22 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> M 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 45 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> L 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 56 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 39 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> XXL
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency ... 11 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Next X value ... <ZZZ to END> ZZZ
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++++++++++++++++++++++++
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Frequency distribution 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++++++++++++++++++++++++
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XS 
\begin_inset space ~

\end_inset

@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
S 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
M 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
L 
\begin_inset space ~

\end_inset


\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XL 
\begin_inset space ~

\end_inset

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
XXL @@@@@@@@@@@
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write a program which inputs a set of X values and frequencies and produces output in the format shown.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code for Task 4.1.
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
A screenshot to confirm the dataset used and the output produced. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The appearance of the bar chart display is to be improved as follows: 
\end_layout

\begin_layout Itemize
Each bar is to be represented by more than one line of the same character to that its bar width is increased. 
\end_layout

\begin_layout Itemize
Each bar will be shown with the same number of lines. 
\end_layout

\begin_layout Itemize
The complete bar chart, including the heading, is to take up no more than 40 lines. 
\end_layout

\begin_layout Itemize
The line width for the output is exactly 80 characters. 
\end_layout

\begin_layout Itemize
Its appearance could be improved by changing the @ character. 
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write code to produce a new chart for the data used in Task 4.1 showing the maximum possible bar width and any other refinements you have introduced.
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Your program code for Task 4.2. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
A screenshot showing the data entry followed by the bar chart. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
Some datasets will have a frequency which is greater than 60 and so the frequencies of the dataset can no longer be shown with a corresponding number of characters in the line. The frequencies will need to be scaled before the output is attempted.
\end_layout

\begin_layout Standard
The bar chart would benefit by the inclusion of a horizontal axis labelled with a scale showing the frequency values.
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Revise your program code to meet these new requirements.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
Your program code for Task 4.3.
\begin_inset space \hfill{}

\end_inset

 [8]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshots demonstrating: 
\end_layout

\begin_layout Itemize
Dataset 1 as used in Task 4.1 which needs no scaling 
\end_layout

\begin_layout Itemize
Dataset 2 of your choice to demonstrate frequencies which must be scaled 
\end_layout

\begin_layout Itemize
Dataset 3 of your choice to demonstrate frequencies which must be scaled differently to Dataset 2 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A dental practice currently uses a computer system to store details of its patients, staff and appointments in separate files.
\end_layout

\begin_layout Standard
The practice manager and the receptionist have their own computers for accessing and updating the files.
\end_layout

\begin_layout Standard
The system produces a small number of reports.
\end_layout

\begin_layout Standard
An updated system is to be produced by a software company. The updated system will use a database. In the updated system the dentists will be given a hand-held device to use in their rooms for accessing and updating the patient records. The new system will also be capable of producing additional reports.
\end_layout

\begin_layout Standard
The software company has software engineers who have expert skills in specific areas of software development. A number of the engineers will be involved in the development of the updated system. 
\end_layout

\begin_layout Enumerate
Describe and justify three methods which can be used to determine what further reports are required from the updated computer system. [6] 
\end_layout

\begin_layout Enumerate
The work to update the system is partly managed by the following Program Evaluation and Review Technique (PERT) chart.
\end_layout

\begin_deeper
\begin_layout Standard
A - investigation
\end_layout

\begin_layout Standard
B - analysis
\end_layout

\begin_layout Standard
C - design of database
\end_layout

\begin_layout Standard
D - design of reports
\end_layout

\begin_layout Standard
E - design of screen displays for dentists
\end_layout

\begin_layout Standard
F - transfer of data from files into database
\end_layout

\begin_layout Standard
G - documentation produced
\end_layout

\begin_layout Standard
H - acceptance testing
\end_layout

\begin_layout Standard
I - hand over to customer
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the updated system could be operational. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
For activity E state the 
\end_layout

\begin_deeper
\begin_layout Itemize
earliest Start time 
\end_layout

\begin_layout Itemize
earliest Finish time 
\end_layout

\begin_layout Itemize
latest Start time 
\end_layout

\begin_layout Itemize
latest Finish time
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset


\color white
_
\color inherit
 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q1-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The Gantt chart above is based on the information in part 
\series bold
(b)
\series default
. The timing of two activities is missing and also the timing of one of the activities shown is incorrect.
\end_layout

\begin_layout Standard
Draw a sketch of the Gantt chart to show the correct version. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how the Gantt chart can help with the work that the software engineers have to carry out. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
A small team is put together to consider security aspects of the updated system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Identify 
\series bold
two
\series default
 possible members of the team and justify your choice.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
The team have to produce a report to which they all make a contribution. The report is stored on a network. Each member of the team has access to allow them to add their contribution. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii
\end_layout

\end_inset

Give 
\series bold
two
\series default
 examples of unethical behaviour by a team member.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Name and describe 
\series bold
two
\series default
 types of documentation produced for this project.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
End-User documentation 
\end_layout

\begin_layout Itemize
for actual users of system to learn about features and how to use them 
\end_layout

\begin_layout Itemize
minimum/recommended hardware and software system requirements (operating system, version, processor, amount of RAM and hard disk space, etc.) 
\end_layout

\begin_layout Itemize
installation guide + step by step guide of how to perform a task or use a feature 
\end_layout

\begin_layout Itemize
frequently asked questions (FAQ) for common troubleshooting problems and solutions 
\end_layout

\begin_layout Itemize
support contact information, safety instructions, warranty information 
\end_layout

\begin_layout Plain Layout
Technical documentation 
\end_layout

\begin_layout Itemize
for developers to document technical requirements and features of system 
\end_layout

\begin_layout Itemize
system objectives and scope 
\end_layout

\begin_layout Itemize
input and output/report specifications 
\end_layout

\begin_layout Itemize
data storage/database specification 
\end_layout

\begin_layout Itemize
modules/processes and algorithms 
\end_layout

\begin_layout Itemize
user interfaces and application programming interfaces (APIs) 
\end_layout

\begin_layout Itemize
testing 
\end_layout

\begin_layout Itemize
implementation/deployment 
\end_layout

\begin_layout Itemize
bugs report and known issues 
\end_layout

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
The hand-held devices the dentists use in their practice rooms will be networked. Both client-side scripting and server-side scripting will be used in the new software which is produced. An intranet with a web server will be created. Web browsers will be used on the hand-held devices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe three possible uses of the device.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

For each scripting method, client-side scripting and server-side scripting, give an appropriate example. Justify your response.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Examination centres receive examination results for their candidates as a printed report. The report lists the candidates in order based on their Index Number. For each candidate their results occupy one row of the report. Each row displays the results for all subjects that the candidate sat in the examination. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2013-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Candidates can only take examinations at one centre in a particular session.
\end_layout

\begin_layout Standard
Currently the candidate results for each centre are stored in a separate file. The software that produces the above report is written in a programming language. 
\end_layout

\begin_layout Enumerate
Describe, using an example, why this file has data redundancy.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
An extra field is added to the file, but the report will not include this new field.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the problem that will arise. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
A normalised database solution to this problem is designed, which has a number of tables. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Draw an E-R diagram that shows these tables and the relationships between them.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

When the data are stored in a database, privacy is of great concern.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A hash table has an index range of 1 to 900. The following pseudocode describes an algorithm for searching the table using the hashing function Hash. It is assumed that the key is present in the table.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Index <- Hash(Key) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 WHILE Table[Index, 1] <> Key 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

Index <- Index + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 Value <- Table[Index, 2]
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Explain the purpose of: 
\end_layout

\begin_deeper
\begin_layout Enumerate
line 3 
\end_layout

\begin_layout Enumerate
line 5
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a problem that might occur with a key which, when hashed, produces an index of 900. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What modification to the algorithm is required to overcome this problem? 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
Explain how a new item can be added to this hash table. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A software development company currently hosts its own email server. The company is considering a replacement webmail service, using cloud computing. 
\end_layout

\begin_layout Enumerate
(a) State two advantages of this change.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
(b) State one disadvantage of this change. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The company is also considering other uses of the cloud. These include collaborative activities between employees of the company and also assistance in developing new software. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe an example of how employees of the company may use the cloud to work collaboratively.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe how the cloud can be beneficial to the company when developing new software for a client. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Bank customers are allowed to withdraw money from their accounts at an ATM. They cannot withdraw more than the current balance in their account. There is a daily limit on the amount that can be withdrawn. In some circumstances a charge is made for the transaction. The rules are: 
\end_layout

\begin_layout Itemize
the transaction is rejected if the withdrawal amount requested is greater than the current balance 
\end_layout

\begin_layout Itemize
the transaction is rejected if the withdrawal amount exceeds the daily limit 
\end_layout

\begin_layout Itemize
if the current balance before the transaction is carried out is less than 50 dollars then any successful transaction incurs a fixed charge 
\end_layout

\begin_layout Enumerate
Create a decision table showing all the possible conditions and actions. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Using your answer in (b) write a function using pseudocode. The function returns: 
\end_layout

\begin_deeper
\begin_layout Itemize
-1 to indicate a rejection; 
\end_layout

\begin_layout Itemize
0 for a charge-free successful transaction; 
\end_layout

\begin_layout Itemize
the charge for a chargeable successful transaction.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
State two ways in which your answer in (c) demonstrates clarity of code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2013/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The ASCII code for the character 'Z', expressed as a denary integer, is 90. 
\end_layout

\begin_layout Enumerate
Express the denary integer 90 as: 
\end_layout

\begin_deeper
\begin_layout Enumerate
an eight-bit binary number 
\end_layout

\begin_layout Enumerate
a hexadecimal number 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give two reasons why hexadecimal numbers are used in computing. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State the ASCII code for 'X' in denary. Explain your answer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain why the Unicode encoding system has replaced ASCII. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe a method of storing strings of characters of variable length in a computer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Many applications require the user to search for a data item from a file or one-dimensional array.
\end_layout

\begin_layout Standard

\family typewriter
JARGON.TXT
\family default
 is a text file containing computing terms with one term per line. The program will read all the terms from 
\family typewriter
JARGON.TXT
\family default
 into an array.
\end_layout

\begin_layout Standard
The user will choose if the type of search is to find: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

An exact match 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

A match at the beginning of the term text 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

A match anywhere within the term text 
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
Read the entire contents of 
\family typewriter
JARGON.TXT
\family default
 into an array 
\end_layout

\begin_layout Itemize
Allow the user to repeatedly select the type of search, then input a term 
\end_layout

\begin_layout Itemize
Output the matching term(s) found 
\end_layout

\begin_layout Itemize
Output a count of the number of matches 
\end_layout

\begin_layout Itemize
End with the input of term 
\begin_inset Quotes qld
\end_inset

XXX
\begin_inset Quotes qrd
\end_inset

 
\end_layout

\begin_layout Standard
A typical run of the program is shown below:
\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?1 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?firewall 
\family default

\end_layout

\begin_layout Standard

\family typewriter
firewall 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 1 matching term(s)
\family default

\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?2 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?data 
\family default

\end_layout

\begin_layout Standard

\family typewriter
data flow diagram 
\family default

\end_layout

\begin_layout Standard

\family typewriter
database management system 
\family default

\end_layout

\begin_layout Standard

\family typewriter
data file 
\family default

\end_layout

\begin_layout Standard

\family typewriter
database 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 4 matching term(s)
\family default

\end_layout

\begin_layout Standard

\family typewriter
+++++++++++++++++++++++ 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1. Exact match 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2. Start of term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3. Within term 
\family default

\end_layout

\begin_layout Standard

\family typewriter
++++++++++++++++++
\family default

\end_layout

\begin_layout Standard

\family typewriter
Choice ?3 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Term?box 
\family default

\end_layout

\begin_layout Standard

\family typewriter
white box testing 
\family default

\end_layout

\begin_layout Standard

\family typewriter
black box testing 
\family default

\end_layout

\begin_layout Standard

\family typewriter
There were 2 matching term(s)
\family default

\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Study the contents of 
\family typewriter
JARGON.TXT
\family default
 and then design four test cases to thoroughly test the working of your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
State the test data used in Task 1.2 and show screenshots to confirm the successful testing of each of your four test cases. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary search (binary chop) is a technique to search for a value in an ordered dataset.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Study the identifier table and incomplete recursive algorithm.
\end_layout

\begin_layout Standard
The missing parts of the algorithm are labelled A, B and C. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Variable 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ThisArray
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY OF STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Array containing the the dataset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FindValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Item to be found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Low
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lowest index of the considered list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
High
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Highest index of the considered list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Middle
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The array index for the middle position of the current list considered
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION BinarySearch(ThisArray, FindValue, Low, High) RETURNS INTEGER
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

DECLARE Middle : INTEGER
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF ............... A ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN -1 // not found
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// calculate new Middle value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Middle ‚Üê ............... B ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisArray[Middle] > FindValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN BinarySearch(ThisArray, FindValue, Low, Middle - 1)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisArray[Middle] < FindValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

............... C ...............
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Middle // found at position Middle
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
What are the three missing lines in this pseudocode? 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Write a program to implement binary search.
\end_layout

\begin_layout Standard
The program will 
\end_layout

\begin_layout Itemize
Call procedure InitialiseAnimals 
\end_layout

\begin_layout Itemize
Input an animal name 
\end_layout

\begin_layout Itemize
Use the function BinarySearch 
\end_layout

\begin_layout Itemize
Report whether or now this animal name was found. If found, also output the index position. 
\end_layout

\begin_layout Standard
The array in the program has identifier 
\family typewriter
MyAnimal
\family default
.
\end_layout

\begin_layout Standard
Use the dataset given in the file 
\family typewriter
ANIMALS.TXT
\family default
. You should paste the contents of this file into your program. The statements will form the basis of the code for the procedure 
\family typewriter
InitialiseAnimals
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Program code for Task 2.2 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot to confirm that an animal wich is present in the list was found with its index position displayed. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Amend the program as follows:
\end_layout

\begin_layout Standard
The program must also output the number of function calls carried out.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
The amended program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Screenshots showing the amended ouput for runs of the program where: 
\end_layout

\begin_layout Itemize
the animal is found 
\end_layout

\begin_layout Itemize
the animal is not found. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to represent and implement a linked list of nodes. Each node contains a string data value and a pointer. The pointers link the data items in alphabetical order.
\end_layout

\begin_layout Standard
The unused nodes are linked as shown below. The first unused node is the position where the next new data item is to be stored. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P1-Q3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the items MANGO, ORANGE, BANANA and LEMON (added in that order). 
\end_layout

\begin_layout Itemize
the unused nodes linked together. 
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class
\family typewriter
 ListNode
\family default
. The class 
\family typewriter
ListNode
\family default
 has the following properties: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: ListNode
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PointerValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
LinkedList
\family default
. The class 
\family typewriter
LinkedList
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Class
\family typewriter
: LinkedList
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Node
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY[30] OF ListNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The linked list data structure ‚Äî data values and pointers.The array index starts at 1.For testing purposes the dataset has a maximum of 30 items.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Start
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the node at the start of the linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFree
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index position of the next unused node 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Initialise
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sets all the node data values to 
\begin_inset Quotes els
\end_inset

empty string
\begin_inset Quotes ers
\end_inset

.
\end_layout

\begin_layout Standard
Set pointers to indicate all nodes are unused and linked.
\end_layout

\begin_layout Standard
lnitialise values for 
\family typewriter
Start
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
AddNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Add a new data item to the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Traversal
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the data items in order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ReverseTraversal
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the data items in reverse order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DisplayLinkedList
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
PROCEDURE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Display the current state of pointers and the array contents.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsEmpty
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tests for empty linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
IsFull
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
FUNCTION RETURNS BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tests for no unused nodes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code that repeatedly: 
\end_layout

\begin_layout Itemize
displays a menu with the following choices: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

Add an item 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

Traverse the linked list of used nodes and output the data values 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

Output all pointers and data values 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4.
\end_layout

\end_inset

Exit 
\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure depending on the user's choice. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Program code for Task 3.1.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 including the 
\family typewriter
IsEmpty
\family default
 method. The code should follow the specification given.
\end_layout

\begin_layout Standard
Do not attempt to write the methods 
\family typewriter
AddNode
\family default
, 
\family typewriter
Traversal
\family default
, 
\family typewriter
ReverseTraversal
\family default
 or 
\family typewriter
IsFull
\family default
 at this stage.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes (Task 3.2).
\begin_inset space \hfill{}

\end_inset

 [12]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program.
\end_layout

\begin_layout Standard
Run the program and select menu choice 3 to confirm the initial values of the pointers and data values when the linked list is empty. [10]
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
 object (Task 3.3).
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Consider the 
\family typewriter
AddNode
\family default
 method. The following algorithm will add a new data item to the linked list.
\end_layout

\begin_layout Standard
The algorithm uses the variables below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NewItem
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
New data item input by the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Found
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
BOOLEAN
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Flags to 
\family typewriter
TRUE
\family default
 when the position at which to insert the new item has been found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Current
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Current array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Previous
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Previous array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Temp
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Temporary storage of pointer value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE AddNode 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

INPUT NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Node[NextFree].DataValue <‚Äî NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Start = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Start <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <‚Äî Node[NextFree].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the list - starting at Start to find 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// the position at which to insert the new item 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <‚Äî Node[NextFree].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem < Node[Start].DataValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// new item will become the start of the list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Start <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// the new item is not at the start of the list 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current <‚Äî Start 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <‚Äî False 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF NewItem <= Node[Current].DataValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Previous].PointerValue <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <‚Äî True 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// move on to the next node 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Previous <‚Äî Current 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Current <‚Äî Node[Current].PointerValue 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

UNTIL Found = True OR Current = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Current <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[Previous].PointerValue <‚Äî NextFree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Node[NextFree].PointerValue <‚Äî 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFree <‚Äî Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\family default

\end_layout

\begin_layout Plain Layout
Note: The above pseudocode is available in the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write code to implement for the 
\family typewriter
LinkedList
\family default
 class: 
\end_layout

\begin_layout Itemize
the 
\family typewriter
AddNode
\family default
 method 
\end_layout

\begin_layout Itemize
the 
\family typewriter
IsFull
\family default
 method. 
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\family default
 as a basis for the writing of your code.
\end_layout

\begin_layout Standard
The main program should check each time that the 
\family typewriter
LinkedList
\family default
 object is not full before using the 
\family typewriter
AddNode
\family default
 method.
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard
MANGO, ORANGE. BANANA. LEMON in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 3 to display. 
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Program code for method 
\family typewriter
AddNode
\family default
. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Screenshot showing the pointers and the addition of the four nodes to the linked list.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write program code to implement the 
\family typewriter
LinkedList
\family default
 class method 
\family typewriter
Traversal
\family default
 by calling the 
\family typewriter
TraversalInOrder
\family default
 procedure given below.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE TraversalInOrder(Index)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF Index <> 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT Node[lndex].DataValue
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// follow the pointer to the next data item in the linked list
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TraversalInOrder(Node[Index].PointerValue)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPRCCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Program code for procedures 
\family typewriter
Traversal
\family default
 and 
\family typewriter
TraversalInOrder
\family default
.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 3.6
\end_layout

\begin_layout Standard
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values:
\end_layout

\begin_deeper
\begin_layout Standard
MANGO, ORANGE, BANANA. LEMON in that order. 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 2 to display. 
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Screenshot showing the program execution to test the 
\family typewriter
Traversal
\family default
 method. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 3.7
\end_layout

\begin_layout Standard
Make a copy of the 
\family typewriter
TraversalInOrder
\family default
 and 
\family typewriter
Traversal
\family default
 procedures.
\end_layout

\begin_layout Standard
Paste to form two new procedures 
\family typewriter
TraversalInReverseOrder
\family default
 and 
\family typewriter
ReverseTraversal
\family default
.
\end_layout

\begin_layout Standard
Make the necessary changes/additions to these procedures in order that the data items are output in reverse order by calling the new method 
\family typewriter
ReverseTraversal
\family default
.
\end_layout

\begin_layout Standard
Run the program code from a new menu choice 4.
\end_layout

\begin_layout Standard
Test the method using the four items given in Task 3.6.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code for the new procedures. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Screenshot showing option 4 selected and the resulting output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Design and code a computer program to simulate the following:
\end_layout

\begin_layout Standard
A garden has a rectangular fish pond measuring 15 metres by 8 metres.
\end_layout

\begin_layout Standard
The pond is to be represented on the screen by a rectangular grid. Each square metre of the pond is represented by an x-coordinate and a y-coordinate. The top left square metre of the pond display has x = 1 and y = 1.
\end_layout

\begin_layout Standard
A boy throws a stone into the pond. The user will input the x-coordinate and y-coordlnate of the stone impact position.
\end_layout

\begin_layout Standard
A grid representing the pond is then displayed with the stone's impact position:
\end_layout

\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 9 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 3 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . S . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
The following are the suggested characters to use for the visual representation of the pond: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="3" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
46 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
83 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone impact position
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Decide on the design to be used for: 
\end_layout

\begin_layout Itemize
The data structure to represent the grid 
\end_layout

\begin_layout Itemize
The contents of each square metre of the pond 
\end_layout

\begin_layout Itemize
Procedure(s) and/or function(s)s to be used 
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Show your program design (Task 4.1). 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to display the pond contents after a single stone has been thrown.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshot for a single run of the program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
The boy has been told to stop throwing stones into the pond because the pond now has three fish. The fish randomly swim around. Each fish will occupy a unique grid position.
\end_layout

\begin_layout Standard
Using a random number generator, simulate the positioning of the three fish.
\end_layout

\begin_layout Standard
Use the following character for a fish: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code to show the pond containing the three fish at a particular instance of time. The program will now only display the pond and fish.
\end_layout

\begin_layout Subsubsection*
Evidence 20
\end_layout

\begin_layout Standard
The program code for Task 4.3. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 21
\end_layout

\begin_layout Standard
Screenshot for a single run of the program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
The boy has been asked to feed the fish. He cannot see the fish in the pond. He throws a food pellet into the pond which lands inside one of the square metres. If one of the fish is in this square. it eats the food and becomes a happy fish.
\end_layout

\begin_layout Standard
Use character symbols for the pond
\begin_inset Quotes els
\end_inset

s grid display as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Character 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code (decimal) 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
46 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
P 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
80 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pellet (if not eaten by one of the fish)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
72 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Happy (fed) fish
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Write program code to simulate the boy throwing one food pellet into the pond. The user will input an x-coordinate and y-coordinate for the food pellet position. You should consider the possible reuse of any code from Tasks 4.2 and 4.3.
\end_layout

\begin_layout Subsubsection*
Evidence 22
\end_layout

\begin_layout Standard
The program code.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 23
\end_layout

\begin_layout Standard
Screenshotevldence similar to that shown which shows: 
\end_layout

\begin_layout Itemize
one throw which did not feed a fish
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 2 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 5 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . F . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. P . . . . . . . . F . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . F . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
a second throw where a fish was fed
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 1 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 5 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . . 
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . F
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
H . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . F . . . . . . .
\family default

\end_layout

\begin_layout Standard

\family typewriter
. . . . . . . . . . . . . . .
\family default

\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A supermarket chain wants to encourage customers to return to its store. They operate a scheme of rewards for customers based on how much they spend over a period of time.
\end_layout

\begin_layout Standard
Customers are issued with a card that is readable by a Point of Sale (POS) terminal. When a customer provides their card at the checkout, the system identifies them and stores the products they purchased and how much they spent.
\end_layout

\begin_layout Standard
Currently the only use of this data is to issue the customer with vouchers every three months. Vouchers have a value based on the total amount the customer has spent during the previous three months. The vouchers can only be used in part payment for goods bought in the supermarket.
\end_layout

\begin_layout Standard
The supermarket managers want to make more use of the customer purchase data. They hire a software development company to produce software that will implement new uses of the data.
\end_layout

\begin_layout Standard
Software developers have skills in developing software. The supermarket managers have in depth knowledge of their business. At first, software developers will have little knowledge of the business. 
\end_layout

\begin_layout Enumerate
Explain how the supermarket managers can communicate to the software developers what they require. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Before designing the new software, the software developers need to understand the content and structure of the customer purchase data. Give two methods that can be used for this task, justifying the use of each. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Once the analysis phase has been completed, describe what decisions software developers need to make before coding can begin. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard
The work to implement new uses of the customer data needs to be managed. The following Program Evaluation and Review Technique (PERT) chart is used as a management tool.
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P2-Q1.png
	width 70page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Each activity indicated by a dashed line on the PERT chart is a dummy activity. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the nature and purpose of a dummy activity.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Each of the following activities matches one of the labels A-H on the chart. 
\end_layout

\begin_deeper
\begin_layout Itemize
write user documentation 
\end_layout

\begin_layout Itemize
train users 
\end_layout

\begin_layout Itemize
write code 
\end_layout

\begin_layout Itemize
convert files 
\end_layout

\begin_layout Itemize
test code 
\end_layout

\begin_layout Itemize
end-user testing 
\end_layout

\begin_layout Itemize
test system 
\end_layout

\begin_layout Itemize
install new hardware 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Copy and complete the following table, 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="50col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the significance of the dummy activity that leads into event 8. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

From the PERT chart: 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State the minimum time in which the new software can be developed and implemented.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
The chart omits an activity: 
\series bold
write technical documentation
\series default
. State a starting point and a finishing point for this activity. Justify your choices. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard
Management staff can already access the company network remotely for other software applications. Management are to be given the facility to access, and interact with, the customer data Via the company LAN. However, a decision is made not to allow access to the customer data remotely for this updated system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 methods which can be used to ensure that there is no remote access to customer data by management staff. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
ln the new system, customers will have access to information through a web browser. Each customer will be able to see some information about their purchase history. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Explain what software needs to be developed to provide this customer facility. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

One of the software developers has the task of ensuring that social issues are considered. This developer has to document these issues.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 issues that might be in the document with regard to customers accessing their data. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Consider the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2014-P2-Q2.png
	width 35page%

\end_inset

 
\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for a post-order traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for an inorder traversal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
What property is exhibited by the list of items produced in 
\series bold
part (b)
\series default
? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe an algorithm, using pseudocode, to perform a binary tree search. The output should state whether or not the item is present in the tree. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A network manager for a sales company types the following into his computer:
\end_layout

\begin_layout Standard

\family typewriter
copy C:
\backslash
monthlysales
\backslash
*.dat E
\backslash
:
\backslash
backup
\backslash
junesales /V
\family default
 
\end_layout

\begin_layout Enumerate
State the type of user interface being used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Describe, using the example, two benefits of the user interface named in 
\series bold
(a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
The network manager has a disabled user who cannot use a keyboard but can control a point-and-click device that moves a pointer on the screen. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe a user interface that would allow this user to enter text into a word processor. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The sales company provides a special user interface for this user. State
\series bold
 two
\series default
 benefits to the company. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A small local area network (LAN) in a school consists of one switch, one file server and ten computers. 
\end_layout

\begin_layout Enumerate
Explain why circuit switching could be used in this LAN. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The network has a connection to the lnternet added. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Explain how packet switching is used when a web page is downloaded from the Internet. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
A packet from the web server consists of 256 bytes. One of the bytes is the checksum byte. In each byte one bit is the parity bit. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

If the byte 0 0 1 1 0 1 0 1 results in a parity error, state the type of parity being used. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The receiving computer uses the checksum byte to check whether the packet contains an error. Explain how it does this.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A software developer is given the task of producing software for a college. The software will help to manage information about what students do after finishing at the college.
\end_layout

\begin_layout Standard
The destination of each student after college is classified in one of three possible ways: 
\end_layout

\begin_layout Itemize
University 
\end_layout

\begin_layout Itemize
Employment 
\end_layout

\begin_layout Itemize
Other 
\end_layout

\begin_layout Standard
The college wishes to store: 
\end_layout

\begin_layout Itemize
name 
\end_layout

\begin_layout Itemize
number of A Level passes 
\end_layout

\begin_layout Itemize
destination (U / E / O) 
\end_layout

\begin_layout Itemize
university attended 
\end_layout

\begin_layout Itemize
main subject studied at university 
\end_layout

\begin_layout Itemize
type of employment 
\end_layout

\begin_layout Itemize
what students do when their destination is classified as 'O' 
\end_layout

\begin_layout Standard
The software developer will use an objectoriented approach to developing a solution. 
\end_layout

\begin_layout Enumerate
Draw a class diagram which exhibits the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
suitable classes with appropriate properties and methods 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
polymorphism 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how your solution to (a) demonstrates software reuse.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard
The data on the students is to be stored in a serial text file called STUDENT.DAT. Each line of the file has the same structure:
\end_layout

\begin_layout Standard

\family typewriter
<Name><NoOfPasses><Destination><University><MainSubject><EmpType><Other>
\family default

\end_layout

\begin_layout Standard
with the string NULL stored where appropriate. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Write an algorithm, in pseudocode, to read data from 
\family typewriter
STUDENT.DAT
\family default
 and to output the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
total number of students going to university 
\end_layout

\begin_layout Itemize
average number of passes for the students going to university e total number of students
\begin_inset space \hfill{}

\end_inset

 [7] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A function is to be written that returns the sum of all values held in an array that are greater than a minimum value. The function will be used with arrays of varying size, but never more than a maximum of 50 000 elements.
\end_layout

\begin_layout Standard
A first attempt at writing the program code for the function is given below:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION TotalSum(Results : ARRAY[50000] OF REAL, ArraySize : INTEGER, MinValue : REAL) RETURNS REAL 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

DECLARE Sum, Counter : INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

DECLARE Temp : Real 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Sum = 0.0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

FOR Counter = 1 TOO ArraySize 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp = Results[Counter] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Temp > MinValue THEN Sum = Sum * Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDEOR 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

RETURN Sum 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The function is included in a program specifically written to test the function. The main program outputs the value returned by the function. A compiler was used to compile the source program. 
\end_layout

\begin_layout Enumerate
The compiler reported an error at line 5 in the function. Identify the error and explain why it was flagged as a syntax error. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The compiler also reported an error at line 8. State the type of error reported by the compiler justifying your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The errors indicated in 
\series bold
parts (a)
\series default
 and 
\series bold
(b)
\series default
 were corrected. A successful compilation produces executable code. When the code was executed, the program failed to complete and reports an error at line 7. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the type of error that occurred. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The error described in 
\series bold
part (c) (i)
\series default
 depends on the detection of another type of error. Name this other type of error. How should the code be changed to correct this error?
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
When the program finally runs without error, the test plan needs to be completed. The test plan uses data that tests different sizes of array, different array values and different minimum values.
\end_layout

\begin_layout Standard
The array 
\family typewriter
TempArray
\family default
 is used in the main program as the array to be processed.
\begin_inset space \quad{}

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Each element of 
\family typewriter
TempArray
\family default
 stores a random value between 1.0 and 10.0. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 1000, 5.0)
\family default

\end_layout

\begin_layout Standard
is not an appropriate black box test. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 10, 10.5)
\family default

\end_layout

\begin_layout Standard
is not an appropriate white box test. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

if each element of 
\family typewriter
TempArray
\family default
 stores the value 1.0, state a function call that will be an appropriate black box test. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file 
\family typewriter
ADMISSIONS-DATA.TXT
\family default
 contains the daily total admissions to a theme park over a period of 50 days.
\end_layout

\begin_layout Standard
The task is to read the numbers from the file and display a sorted list.
\end_layout

\begin_layout Standard
You will program two different sort algorithms: 
\end_layout

\begin_layout Enumerate
A bubble sort. 
\end_layout

\begin_layout Enumerate
Either a quick sort or an insertion sort but not both. 
\end_layout

\begin_layout Standard
Task 1.1
\end_layout

\begin_layout Standard
Write code for a procedure to display a menu with the following options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Read file data 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Bubble sort 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Quick sort/ Insertion sort 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4
\end_layout

\end_inset

End Task 
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Write the program code for a procedure to implement menu option 1.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Itemize
The program code for the menu. 
\end_layout

\begin_layout Itemize
Program code for menu option 1. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
Options 2 and 3 will sort and display the sorted data. The algorithm for a bubble sort is given in file 
\family typewriter
BUBBLE.TXT
\family default
.
\end_layout

\begin_layout Standard
Write program code as a procedure to implement the bubble sort.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Itemize
The bubble sort code procedure. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
Write program code as a procedure to implement the quick sort or the insertion sort.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Itemize
Indicate the sort method used. 
\end_layout

\begin_layout Itemize
The program for the sort method used. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Additional code is to be written for each sort procedure. The sort methods will count and display the number of comparisons made in completing the sort process. This will provide an indicator of the efficiency of each algorithm.
\end_layout

\begin_layout Standard
Write the additional code to count and display the number of comparisons made for each sort method.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Itemize
The output from menu option 2. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Itemize
The output from menu option 3. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The pseudocode procedure below is given a denary number. The procedure then outputs the binary equivalent of the denary number.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
PROCEDURE Converter(DenaryNumber : INTEGER) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF DenaryNumber = 0 OR DenaryNumber = 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT DenaryNumber 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT DenaryNumber MOD 2 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Converter(DenaryNumber DIV 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to implement the given procedure.
\end_layout

\begin_layout Standard
Execute the procedure using 56 as the parameter.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Itemize
Program code. 
\end_layout

\begin_layout Itemize
Screenshot showing the output. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
There is an error with the given algorithm.
\end_layout

\begin_layout Standard
Describe the error and the effect it created on the output in Evidence 6.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Itemize
Statement(s) to answer Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Make changes to the procedure Converter which will correct the error.
\end_layout

\begin_layout Standard
Draw up a list of test cases for the testing of the amended code. by completing a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DenaryNumber
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Itemize
The amended PROCEDURE Converter program code. 
\end_layout

\begin_layout Itemize
The completed table. 
\end_layout

\begin_layout Itemize
Screenshots for two of the tests. 
\begin_inset space \hfill{}

\end_inset

[11] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
When buying software. the purchaser is issued with a licence key. The product licence can be purchased for either one or three computers. A file is maintained of all the licence keys currently active and whether the licence was for a single-user or 3-users.
\end_layout

\begin_layout Standard
The licence key is a 10 character code as follows: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
CCCCCCCCCD 
\family default
 
\end_layout

\begin_layout Itemize

\family typewriter
C
\family default
 = a randomly generated uppercase letter. 
\end_layout

\begin_layout Itemize

\family typewriter
D
\family default
 = a check digit character calculated from the preceding nine letters. 
\end_layout

\begin_layout Standard
A new licence key is generated for each purchase.
\end_layout

\begin_layout Standard
An example key is produced as follows: 
\end_layout

\begin_layout Itemize
randomly generated letters: 
\family typewriter
FGKWRDFTA
\family default
 
\end_layout

\begin_layout Itemize
a set of products is calculated as shown: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Randomly generated letter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ASCII code 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Multiplier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Product
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
G
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
71 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
142
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
K
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
75 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
225
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
W
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
87 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
348
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
R
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
82 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
410
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
D
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
68 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
408
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
F
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
70 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
490
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
T
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
84 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
672
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
A
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
65 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
585
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Then the total of the products is calculated: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="1" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Total 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3350
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The total 3350 is then divided by 11 to give remainder 6. which becomes the check digit character. 
\end_layout

\begin_layout Itemize
This gives the complete licence key: 
\family typewriter
FGKWRDFTA6 
\family default
 
\end_layout

\begin_layout Itemize
If the calculation gives remainder 10, the check digit character used is 
\family typewriter
X
\family default
. 
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Design a function 
\family typewriter
LicenceKey
\family default
 to generate a new licence key.
\end_layout

\begin_layout Standard
Write program code to implement the function.
\end_layout

\begin_layout Standard
Test the function for 
\series bold
three
\series default
 new licence keys.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Itemize
Program code for the 
\family typewriter
LicenceKey
\family default
 function. 
\end_layout

\begin_layout Itemize
Screenshot(s) showing the generation of the three new licence keys. 
\begin_inset space \hfill{}

\end_inset

[10] 
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
A file 
\family typewriter
LICENCE-KEYS.TXT
\family default
 is maintained storing all licence keys which are currently active. This test file has 20 licence records.You will need this file for the programming which follows.
\end_layout

\begin_layout Standard
Typical data for two licences are shown:
\end_layout

\begin_layout Standard

\family typewriter
SYNCTKMMF8 1
\family default

\end_layout

\begin_layout Standard
indicates this is a single-user licence.
\end_layout

\begin_layout Standard

\family typewriter
SNPHHUATV7 3 1
\family default

\end_layout

\begin_layout Standard
purchased as a 3-user licence. but currently has only one registered user.
\end_layout

\begin_layout Standard
Write program code for a menu with the following options: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

Purchase of a new licence for either a single-user or a 3-user licence 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Register an additional user to an active 3-user licence 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

End 
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write code as a procedure for menu option 1.
\end_layout

\begin_layout Standard
The requirement will be: 
\end_layout

\begin_layout Itemize
input from the user the type of licence. 
\end_layout

\begin_layout Itemize
Generate the new licence key. 
\end_layout

\begin_layout Itemize
Display licence key issued. 
\end_layout

\begin_layout Itemize
Save the data as a new record in the 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\end_layout

\begin_layout Itemize
Display final contents of 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Itemize
Program code for menu option 1. 
\end_layout

\begin_layout Itemize
Screenshot(s). showing evidence for the issue of the two types of licence, displaying: 
\end_layout

\begin_deeper
\begin_layout Itemize
the licence key issued 
\end_layout

\begin_layout Itemize
the final contents of 
\family typewriter
LICENCE-KEYS.TXT
\family default
 file. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Program menu option 2.
\end_layout

\begin_layout Standard
Carry out three relevant tests.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Itemize
Program code for menu option 2. 
\end_layout

\begin_layout Itemize
Screenshot evidence of three test cases. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Standard
When a licence is purchased, the licence key, licence type (single-user or 3-user), purchase date and name of the purchaser are recorded.
\end_layout

\begin_layout Standard
A registration process then follows for each computer. 
\end_layout

\begin_layout Itemize
The computer to which a licence is registered has its MAC address and the date of registration recorded. 
\end_layout

\begin_layout Standard
The program design to manage purchases and registrations is to be implemented with object-oriented programming with the following three classes: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write program code 
\series bold
only
\series default
 for the three classes shown.
\end_layout

\begin_layout Standard
Do not attempt to develop the application further.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Itemize
Program code for the three classes.
\begin_inset space \hfill{}

\end_inset

[9] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Users of a local area network each have a network account ID. The IDs have the format 2015_NNNN. where N is a digit.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Complete the test case table with the addition of 
\series bold
three
\series default
 more invalid User IDs. The reasons for their invalidity should be different.
\end_layout

\begin_layout Standard
The return value is a code as follows: 
\end_layout

\begin_layout Itemize
0 - valid User lD 
\end_layout

\begin_layout Itemize
1 - the User ID was not 9 characters 
\end_layout

\begin_layout Itemize
you will use other integer numbers for other invalid cases. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top" width="10col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test Number 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Return value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Explanation of the test case
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2015_0987
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Valid User ID
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Itemize
The completed test case table. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code for a function to validate a User ID. The function header has the format: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
FUNCTION ValidateUserID (ThisUserID : STRING) RETURNS INTEGER 
\family default
 
\end_layout

\begin_layout Standard
Write a program to: 
\end_layout

\begin_layout Itemize
Input an ID entered by the user 
\end_layout

\begin_layout Itemize
Validate the input using the function
\family typewriter
 ValidateUserID 
\family default
 
\end_layout

\begin_layout Itemize
Output a message describing the validity of the input. 
\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Itemize
Program code for the function 
\family typewriter
ValidateUserID
\family default
 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Itemize

\series bold
Three
\series default
 screenshots showing the testing of Test Numbers 2, 3, and 4. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
You are to design an object-oriented program which simulates a print queue for a printer on a local area network (LAN).The print queue consists at any time of none, one, or more print jobs.
\end_layout

\begin_layout Standard
Each user can send a print job from any of the terminals on the LAN. Each terminal on the network is identified by an integer number in the range 1 to 172.
\end_layout

\begin_layout Standard
The program you are to design will record for each printjob: 
\end_layout

\begin_layout Itemize
the user lD 
\end_layout

\begin_layout Itemize
the terminal number from which the print request was sent 
\end_layout

\begin_layout Itemize
the file size (integer in Kbytes). 
\end_layout

\begin_layout Standard
In practice, there are several print queues each associated with a different printer. Each printer is identified by a short name, such as 
\family typewriter
Room16
\family default
.
\end_layout

\begin_layout Standard
Task 4.3
\end_layout

\begin_layout Standard
Design and write program code to define one or more classes and other appropriate data structures for this application.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Program code for the class(es). 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Standard
A print queue behaves as a queue data structure.
\end_layout

\begin_layout Standard
Assume, for testing purposes: 
\end_layout

\begin_layout Itemize
there is a single printer on the LAN 
\end_layout

\begin_layout Itemize
the maximum print queue size for the printer is five print jobs. 
\end_layout

\begin_layout Standard
The main program will simulate: 
\end_layout

\begin_layout Itemize
the sending of print jobs to the printer by different users 
\end_layout

\begin_deeper
\begin_layout Itemize
that is, the addition of a print job to the print queue 
\end_layout

\end_deeper
\begin_layout Itemize
the output of a job from the print queue 
\end_layout

\begin_deeper
\begin_layout Itemize
that is, the removal of a print job from the print queue 
\end_layout

\end_deeper
\begin_layout Standard
The program design has the following menu: 
\end_layout

\begin_layout Standard
\align center
\noindent

\begin_inset Box ovalbox
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 0.8pt"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1
\end_layout

\end_inset

New print job added to print queue 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2
\end_layout

\end_inset

Next print job output from printer 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3
\end_layout

\end_inset

Current print queue displayed 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
4
\end_layout

\end_inset

End 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The program simulates the working of the print queue as follows: 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
1.
\end_layout

\end_inset

The empty print queue is initialised. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
2.
\end_layout

\end_inset

The program user selects menu options 1, 2 and 3 in any order. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
3.
\end_layout

\end_inset

The program user selects menu opt
\series bold
two
\series default
ion 4. 
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
display the main menu 
\end_layout

\begin_layout Itemize
input the choice by the user 
\end_layout

\begin_layout Itemize
run the appropriate code for the choice made. 
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
The program code. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 4.5
\end_layout

\begin_layout Standard
Write program code to initialise the print queue for the 
\family typewriter
Room16
\family default
 printer.
\end_layout

\begin_layout Standard
Write program code to display the current state of the print queue.
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
The program code for: 
\end_layout

\begin_layout Itemize
initialising the print queue 
\end_layout

\begin_layout Itemize
output of the current print queue. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Subsubsection*
Task 4.6
\end_layout

\begin_layout Standard
Write program code to add a new print job to the print queue.
\end_layout

\begin_layout Standard
The requirement will be: 
\end_layout

\begin_layout Itemize
program user enters data for the new print job 
\end_layout

\begin_layout Itemize
print job is added to the print queue. 
\end_layout

\begin_layout Standard
Test the code by adding one new print job.
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Itemize
Program code to add a new print job. 
\end_layout

\begin_layout Itemize
Screenshot following menu option 1 then menu option 3. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Subsubsection*
Task 4.7
\end_layout

\begin_layout Standard
Write program code to output the next print job from the printer.
\end_layout

\begin_layout Standard
This code will execute from menu option 2.
\end_layout

\begin_layout Standard
Test the code by: 
\end_layout

\begin_layout Itemize
adding three print jobs 
\end_layout

\begin_layout Itemize
outputting the next print job. 
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Itemize
Program code to output next print job. 
\end_layout

\begin_layout Itemize
Screenshot following menu option 1 three times. then menu option 2, and menu option 3. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The management of a university is keen to implement changes which will result in higher student attainment. The management believes this is possible if it collects more data about its students which is then analysed.
\end_layout

\begin_layout Standard
Possible data that might be collected includes: assignment grades, books taken out of the library, attendance at lectures, attendance at tutorials, meetings with personal tutor, email exchanges with university staff. and participation in sporting and cultural activities.
\end_layout

\begin_layout Standard
University staff are classified as either academic or management. All data about students will be available to academic staff for viewing and editing. Summary information, which does not identify any individual student. will be viewable by some management staff. Students have no access to the data.
\end_layout

\begin_layout Standard
A project working party is to be set up consisting of representatives from across the university. The working party will define the scope of the project. It will consider what data is to be collected. it will also decide what the data is to be used for and consider any potential further use of the data.
\end_layout

\begin_layout Standard
If this project has a successful outcome, the university will market its expertise to other universities. 
\end_layout

\begin_layout Enumerate
Give 
\series bold
three
\series default
 different representative members of the working party. Justify each choice. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The working party has been asked to produce a list of issues that will be considered by the Ethics Committee of the university.
\end_layout

\begin_deeper
\begin_layout Standard
State 
\series bold
two
\series default
 issues that could be on the list.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard
After consideration of the reports from the working party and the Ethics Committee the university management decide to proceed with the project. A project team is put together to design and implement a new software system.
\end_layout

\begin_layout Standard
The initial work of the project team involves an investigation process. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Name 
\series bold
two 
\series default
techniques that can be used by the project team in the investigation process. For each technique, explain how it can be used in this project.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

A detailed report is produced following the investigation.Thls report will form the starting point of the design stage. Describe 
\series bold
two
\series default
 sections of the report.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard
The project team draw up a list of activities that will be required for the completion of the software project: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Activity 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Activity Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected Duration (in weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design solution to project 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Development of solution to project 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Produce documentation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
30
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
implement system 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Acceptance trials 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A first attempt to produce a Program Evaluation and Review Technique (PERT) chart from the activity table is: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 benefits that can be gained by producing a PERT chart from the activity table. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the significance of the dashed line on the PERT chart. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
There are two errors on the PERT chart. identify these errors. Redraw the PERT chart to show the changes needed to correct these errors. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

Using your PERT chart from part 
\series bold
(e)(iii)
\series default
: 
\end_layout

\begin_deeper
\begin_layout Itemize
State the minimum time in which the project could be completed.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Itemize
By how many weeks can the start of the production of documentation be delayed without delaying the whole project? 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Itemize
Describe and give an example of concurrent activities.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Itemize
Describe and give an example of dependent activities. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
Output from the system is made available to permitted staff via the university intranet. However, the university intranet can be accessed by all students and staff. both locally and remotely, via the lnternet. The system needs security measures to prevent all types of unauthorised access. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe
\series bold
 two
\series default
 suitable physical security measures that could be adopted. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 suitable software security measures that could be adopted. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Following the success of the project, management decides that the software system will be marketed to other universities. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Explain how the university's investment in the software can be legally protected. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stock control system requires that each stock item has a unique ID consisting of six digits. The sixth digit is a check digit. This check digit ensures that a value of 0 is the final result of the following series of calculations: 
\end_layout

\begin_layout Itemize
multiply each of the six digits by its position (position 6 is the leftmost position) 
\end_layout

\begin_layout Itemize
sum the resulting six products 
\end_layout

\begin_layout Itemize
find the sum modulo 11. 
\end_layout

\begin_layout Enumerate
Deduce whether the following IDs are valid or not valid. Show your working. 
\end_layout

\begin_deeper
\begin_layout Enumerate
810230 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
371025 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The ID 483095 is a valid lD. Describe 
\series bold
one
\series default
 typical data entry error for this ID. Show how this error would be detected.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Describe a method of verification that can be used when an ID is entered from a data entry form.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A simple queue data structure is implemented using a one-dimensional array and two pointers, Head and Tail, as shown: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="r">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" rightline="true" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\family typewriter
Queue
\family default

\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Mac
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
2
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Ben
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\impliedby$
\end_inset

 
\family typewriter
Head
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
3
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Dog
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
4
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Can
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
5
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Yog
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
6
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Hur
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $\impliedby$
\end_inset

 
\family typewriter
Tail
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
9
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
10
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Show the state of the above queue after: 
\end_layout

\begin_deeper
\begin_layout Itemize
two items, Dap and Eck, are added (in that order) 
\end_layout

\begin_layout Itemize
one item is removed. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
When ten items have been added, this simple queue cannot accept any further items. 
\end_layout

\end_deeper
\begin_layout Enumerate
A first attempt at an algorithm for adding an item to this queue is:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 IF ..............................
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

No more room to add items
\begin_inset Quotes erd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

INPUT 
\begin_inset Quotes qld
\end_inset

New item to be added
\begin_inset Quotes qrd
\end_inset

, NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Queue[..............................] <- NewItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O7 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

.............................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O8 ENDIF 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Write the pseudocode to show the completed lines 01, 06, and 07. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Give the initial value for 
\family typewriter
Tail
\family default
 when the queue is created and justify your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The programmer can reuse the space released after removing an item. This maximises the available space. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe how the algorithm for adding an item should be amended so that the released space is made available. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
An algorithm for converting a number n from denary to octal uses the three built-in functions: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="15col%">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Function 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTMOD(Number,Divisor)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
returns the remainder when the first parameter is divided by the second parameter 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTMOD(7,3) 
\family default
returns 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTDIV(Number,Divisor)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
returns the integer part when thefirst parameteris divided by the second parameter. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTDIV(7,3) 
\family default
returns 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SUBSTR(ThisString,Start,Length)
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
forms a substring from ThisString, starting at Start (with first index in string zero) and taking Length characters 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SUBSTR(
\begin_inset Quotes eld
\end_inset

abcd
\begin_inset Quotes erd
\end_inset

,1,2)
\family default
 returns 
\family typewriter

\begin_inset Quotes eld
\end_inset

bc
\begin_inset Quotes erd
\end_inset


\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Study the following pseudocode:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION DenaryToOctal (n : INTEGER) RETURNS STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

OctalDigits <- 
\begin_inset Quotes qld
\end_inset

01234567
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

IF n < 8 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TempString <- SUBSTR(OctalDigits, n, 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// '+' is the concatenation operator 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

TempString <- DenaryToOctal(INTDIV(n,8)) + SUBSTR(OctalDigits, INTMOD(n,8),1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

RETURN TempString 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 ENDFUNCTION 
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Identify where and why this is a recursive function. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The diagram shows the execution of the call 
\family typewriter
DenaryToOctal(39)
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2015-P2-Q4.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

Draw a similar diagram to show the execution of the call 
\family typewriter
DenaryToOctal(67)
\family default
.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Changes are to be made to the function 
\family typewriter
DenaryToOctal()
\family default
 so that it converts denary numbers to hexadecimal.
\end_layout

\begin_deeper
\begin_layout Standard
Describe the changes: 
\end_layout

\begin_layout Itemize
that are essential to make the revised function work. 
\end_layout

\begin_layout Itemize
that are non-essential but would help with the clarity of the pseudocode.
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to test an insertion sort algorithm. A top-down approach was used in the design of the program. The program, 
\family typewriter
InsertionSortTester
\family default
, has a number of parts: 
\end_layout

\begin_layout Itemize
input integer values into the array 
\end_layout

\begin_layout Itemize
output the initial values in the array 
\end_layout

\begin_layout Itemize
output the sorted values in the array 
\end_layout

\begin_layout Itemize
perform the insertion sort 
\end_layout

\begin_layout Itemize
validate the values 
\end_layout

\begin_layout Enumerate
Draw a diagram, which exhibits top-down design, for the 
\family typewriter
InsertionSortTester
\family default
 program. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_deeper
\begin_layout Standard
A list of data items is stored in the array 
\family typewriter
Values
\family default
. The pseudocode for the insertion sort algorithm is:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR i <- 2 TO Arraysize 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Temp <- Values[i] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

j <- i‚Äîl 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

WHILE (j > 0) AND (Values [j] > Temp) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Values[j+1] <‚Äî Values [j] 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

j <- j‚Äîl 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Values [j+1] <- Temp 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 ENDFOR 
\family default

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The sort algorithm is to be tested using the sequence of numbers: 6, 8, 2 and 1. Copy and complete the trace table given below. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c|">
\begin_inset Text

\begin_layout Standard

\family typewriter
Values
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[1]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[2]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[3]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[4]
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
i
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
j
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Temp
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why this particular algorithm is inefficient for an array where the initial values are already in order.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 different test cases for the program. Justify your selection in each case.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2015/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Students from several schools are entered for examinations in different subjects.
\end_layout

\begin_layout Standard
A relational database is to be used by the examination board to store data about examination entries and results. Four tables present in the database are STUDENT, SCHOOL, SUBJECT and STUDENT-SUBJECT.
\end_layout

\begin_layout Standard
Every time a student registers for a subject examination. a new row is created in the STUDENT-SUBJECT table. When the result becomes available, this is added to the appropriate row.
\end_layout

\begin_layout Standard
Each student, each school, and each subject has a unique identification code. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram to show the relationship between the STUDENT table and the SUBJECT table. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the type of relationship that exists between the STUDENT and SUBJECT tables. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Draw an E-R diagram to show the relationship between the four tables that provides for a fully normalised database design.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Standard
A table description can be expressed as:
\end_layout

\begin_layout Standard

\family typewriter
TableName(Attribute1, Attribute2, Attribute3, ...)
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
An incomplete STUDENT table is:
\end_layout

\begin_layout Standard

\family typewriter
STUDENT(
\family default

\family typewriter

\bar under
StudentID
\bar default

\family default

\family typewriter
, StudentName, DateOfBirth) 
\family default
 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Give a table description for the SUBJECT table. Ensure there are 
\series bold
two
\series default
 attributes in addition to the primary key. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Give a table description for the STUDENT-SUBJECT table. Ensure there is 
\series bold
one
\series default
 non-key attribute.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the type of relationship that exists between the STUDENT and the SCHOOL tables.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how the relationship between the STUDENT table and the SCHOOL table is established. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
High-level programming languages usually have libraries of commonly used routines. These include random number generators.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to generate 1000 random integers in the range 1 to 20.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
Maintain a count of how many times each number is produced 
\end_layout

\begin_layout Itemize
Print out a frequency table.
\end_layout

\begin_deeper
\begin_layout Standard
Example output:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="21" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Frequency
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
52
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
43
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
5: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
6: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
51
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
7: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
41
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
8: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
9: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
53
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
10: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
51
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
11: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
45
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
12: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
13: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
44
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
14: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
15: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
54
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
16: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
59
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
17: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
47
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
18: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
49
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
19: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
66
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
20: 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
53
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard
Random numbers generated by computers are usually referred to as pseudo-random numbers because they are generated by executing program code.
\end_layout

\begin_layout Standard
One criterion of a good pseudo-random number generator is that every number in the range has an equal chance of being generated. This means if 200 numbers are generated in the range 1 to 10, the expected frequency value of every number in this range is 20.
\end_layout

\begin_layout Standard
The program code is to be amended to check how well the given pseudo-random number generator meets this requirement.
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
Calculate the expected frequency 
\end_layout

\begin_layout Itemize
Output this expected frequency 
\end_layout

\begin_layout Itemize
Output the difference between the actual and the expected frequency for each number in the range as a third column of the frequency table. 
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers are identified by ID numbers. These ID numbers are to be stored in a hash table. The hashing function to be used is 
\end_layout

\begin_layout Standard
\align center

\family typewriter
Address <- IDnumber MOD Max 
\family default
 
\end_layout

\begin_layout Standard
The hash table is implemented as a one-dimensional array with elements indexed 0 to 
\family typewriter
(Max-1)
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Read ID numbers from a text file and store them in a hash table. For the purpose of testing the program. Max is to be set to the value 20.
\end_layout

\begin_deeper
\begin_layout Standard
Assume different IDs will hash to different addresses (no collisions). 
\end_layout

\end_deeper
\begin_layout Itemize
Print out the contents of the hash table in the order in which the elements are stored in the array. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output.
\begin_inset space \hfill{}

\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Amend your program code so that collisions can be managed using open hashing. This means a collision is resolved by searching sequentially from the hashed address for an empty location and storing the ID at this empty location.
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS2.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
Add code to your Task 2.2 program.
\end_layout

\begin_layout Standard
The program is to: 
\end_layout

\begin_layout Itemize
Take as input an ID number 
\end_layout

\begin_layout Itemize
Search the hash table and output the address (index number) of the hash table where the ID was found. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
KEYS2.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Standard
Run the program three times. Use the following inputs: 37, 77 and 97.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the program output. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A binary tree Abstract Data Type (ADT) has commands to create a new tree, add unique data items to the tree and print the tree.
\end_layout

\begin_layout Standard
The sequence of commands:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
CreateNewTree 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Dave
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Fred
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Ed
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Greg
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Bob
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Cid
\begin_inset Quotes qrd
\end_inset

) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
AddToTree(
\begin_inset Quotes qrd
\end_inset

Ali
\begin_inset Quotes qrd
\end_inset

)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Standard
would create the following binary tree: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P1-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The program to implement this ADT will use the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
 designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

Tree
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
tree : ARRAY OF Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
root : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
add(newItem)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
print() 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="none" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="12" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset


\family typewriter
Node
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
data : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
leftPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
rightPtr : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor()
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setData(s : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setLeftPtr(x : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
setRightPtr(y : INTEGER)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getData() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
summary() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getLeftPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
getRightPtr() : INTEGER
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The program code must: 
\end_layout

\begin_layout Itemize
Create a new tree, which has: 
\end_layout

\begin_deeper
\begin_layout Itemize
no nodes 
\end_layout

\begin_layout Itemize
the root set to -1 
\end_layout

\end_deeper
\begin_layout Itemize
Use the root as a pointer to the first node in the tree 
\end_layout

\begin_layout Itemize
Add a new node to the tree in the appropriate position 
\end_layout

\begin_layout Itemize
Use the 
\family typewriter
print()
\family default
 method to output, for each node, in array order: 
\end_layout

\begin_deeper
\begin_layout Itemize
the data item 
\end_layout

\begin_layout Itemize
the left pointer 
\end_layout

\begin_layout Itemize
the right pointer. 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to define the classes 
\family typewriter
Tree
\family default
 and 
\family typewriter
Node
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[30]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
The program is to be tested.
\end_layout

\begin_layout Standard
Write a sequence of program statements to: 
\end_layout

\begin_layout Itemize
Create a tree 
\end_layout

\begin_layout Itemize
Add the data items shown in the original list of ADT commands 
\end_layout

\begin_layout Itemize
Print the array contents. 
\end_layout

\begin_layout Standard
Execute your program to test it.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run.
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
A method 
\family typewriter
inOrderTraversal()
\family default
 is to be added, which outputs the data stored in the tree in alphabetical order.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
Implement this method 
\end_layout

\begin_layout Itemize
Test the program code with the data from Task 3.2. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Numbers in Computing are often represented in hexadecimal form.
\end_layout

\begin_layout Standard
A program is required to convert a hexadecimal number into a denary number and vice versa.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code with the following specification: . 
\end_layout

\begin_layout Itemize
Input a hexadecimal number as a string 
\end_layout

\begin_layout Itemize
Validate the input 
\end_layout

\begin_layout Itemize
Calculate the denary value of each hexadecimal digit (write this code as a function) 
\end_layout

\begin_layout Itemize
Calculate the denary value of the hexadecimal number input 
\end_layout

\begin_layout Itemize
Output the denary value. 
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Draw up a list of 
\series bold
three
\series default
 suitable test cases. Complete a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hexadecimal Number 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
The completed table.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write additional code to convert a denary number into a hexadecimal number.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Draw up a list of
\series bold
 three
\series default
 suitable test cases. Complete a table with the following headings: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Denary Number 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Purpose of the test 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Expected output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Provide screenshot evidence for your testing.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
The completed table.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Many elderly people spend later life in a nursing home. The Ministry of Health (MOH) requires each nursing home to keep detailed care records for each resident. Care staff make daily entries in the care records about all aspects of resident care. These care records are currently paper-based documents. There is no common format for the documents that different nursing homes use.
\end_layout

\begin_layout Standard
Care staff do not have computer access to medical records that each resident
\begin_inset Quotes els
\end_inset

s doctor holds. Nurses at a nursing home need to keep their own medical records and to consult with residents
\begin_inset Quotes els
\end_inset

 doctors.
\end_layout

\begin_layout Standard
The MOH is planning an initiative to computerise all care records and would like all nursing homes to use a common design for care records.
\end_layout

\begin_layout Standard
The MOH will send a project proposal which is to be circulated to all nursing homes. This is to find out which homes would consider taking part in a pilot project. The MOH's aim is to introduce a pilot system into a single nursing home.
\end_layout

\begin_layout Standard
The MOH needs to find a software house to design and implement the computerised care record system. It will send the project proposal to software houses.
\end_layout

\begin_layout Standard
At a later date, all nursing homes will use the new computer system. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
four
\series default
 topics you would expect to find in this project proposal.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Describe the purpose of this project proposal. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
Following production of the project proposal. the initial activities with their expected times are as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="50col%">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Label
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Activity 
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Time (weeks)
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send the project proposal document to all nursing homes. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
B 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Circulate the project proposal document to a number of software houses. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
C 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Review the feedback. Note which nursing homes and software houses have expressed interest. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
D 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
identify doctors who look after residents in homes that have expressed interest. Hold a presentation meeting to explain the proposed project to these doctors. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
E 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Presentation event for the chosen nursing home. 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
The Program Evaluation and Review Technique (PERT) chart for these initial activities is shown below. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q1-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the critical path for the initial activities. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Calculate the minimum time these initial activities will take.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

In activity E, the MOH presented more details about the project to the manager and care staff of the chosen nursing home. The manager and care staff raised a number of points about both social and ethical issues associated with the project.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 points that could have been raised.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Standard
Following activity E, the MOH decided the software house to which it would award the contract.
\end_layout

\begin_layout Standard
Following the initial project proposal. activities which make up the system development cycle are shown below: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="50col%">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Label
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Activity
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Time (weeks)
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
F 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Analysis 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
G 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Design 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
H 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data entry of current care record data 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
I 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Initial testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
J 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Program development 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
K 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Install new hardware in nursing home 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
L 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Alpha testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
M 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Beta testing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
N 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Implementation 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q1-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

The system development cycle starts at node (time point) 7. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The PERT chart shows four activities with dashed lines. Explain the significance of the dashed lines.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain the meanings of a dependent stage and concurrent stages in a PERT chart. Give an example of each for this project. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
The table describes activity I as 
\begin_inset Quotes els
\end_inset

initial testing'. One category of initial testing is white-box testing.
\end_layout

\begin_deeper
\begin_layout Standard
Name and describe two other categories of initial testing. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The PERT chart indicates that some testing can commence almost as soon as program development does. Describe the type of program development that would allow for this.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

An analyst from the software house carried out the analysis for the project.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 examples of people whom the analyst consulted. For each example. state: 
\end_layout

\begin_layout Itemize
the fact finding technique used 
\end_layout

\begin_layout Itemize
the nature of the information that the analyst obtained. 
\end_layout

\begin_layout Standard
Each fact finding technique should be different.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

When the analysis stage was completed. the following decisions were taken: 
\end_layout

\begin_deeper
\begin_layout Itemize
Each nursing home will store and manage its own care records data. 
\end_layout

\begin_layout Itemize
Each nursing home will be provided with a local area network (LAN). 
\end_layout

\begin_layout Itemize
The care record system on each LAN will use a client-server model with a web interface for client computers. 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Enumerate
Explain the meaning of the term client-server model. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State the 
\series bold
two
\series default
 items of software that the LAN will use to implement this client-server design. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
During the presentation event to doctors (part of activity D). the doctors gave feedback. They said that they would like to have access to the new computerised care records from their own offices. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

A second phase of the project is to allow each nursing home access to the medical data stored by doctors. This will involve connecting the LAN for each nursing home to a number of doctors' surgery LANs. 
\end_layout

\begin_deeper
\begin_layout Enumerate
(l) State 
\series bold
two
\series default
 methods for ensuring the security of access to the care record network application. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
(ll) Give 
\series bold
two
\series default
 methods for protecting the security of the LAN. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A firm hires vehicles to customers. A customer usually makes a booking a number of weeks before the start of the hire period. The customer pays a deposit at the time of the booking and the balance when they return the vehicle from hire.
\end_layout

\begin_layout Standard
At the time of the booking, the firm records the following data: 
\end_layout

\begin_layout Itemize
customer data, including a customer reference code 
\end_layout

\begin_layout Itemize
booking date 
\end_layout

\begin_layout Itemize
hire start date 
\end_layout

\begin_layout Itemize
hire return date 
\end_layout

\begin_layout Itemize
type of vehicle 
\end_layout

\begin_layout Itemize
deposit taken 
\end_layout

\begin_layout Standard
Vehicle types are coded as follows: 
\end_layout

\begin_layout Itemize
Small car - SC 
\end_layout

\begin_layout Itemize
Large car - LC 
\end_layout

\begin_layout Itemize
Utility vehicle - UV 
\end_layout

\begin_layout Standard
Each vehicle type has its own daily charge, for each day of the hire period.
\end_layout

\begin_layout Standard
Each vehicle has a unique registration.
\end_layout

\begin_layout Standard
Customers may make more than one booking. The software will not allow a customer to make more than one booking for the same start date.
\end_layout

\begin_layout Standard
The document below is an example of an invoice printed for the customer when they return the vehicle and pay the balance due. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/static/img/9597-ALVL-2016-P2-Q2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
The firm wants to model this application using a relational database. 
\end_layout

\begin_deeper
\begin_layout Enumerate
A database needs a number of tables to store the data for this application. Draw the Entity-Relationship (E-R) diagram showing the tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attributel
\bar default

\family default

\family typewriter
 , Attribute2 , Attribute3 , ....) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write table descriptions for the tables you identified in 
\series bold
part (i)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The firm implements the relational database using a Database Management System (DBMS). It writes programs to access the data using a Graphical User Interface (GUI).
\end_layout

\begin_deeper
\begin_layout Standard
One program is for recording a new booking.
\end_layout

\begin_layout Standard
The firm uses different types of components in a GUI for the display and entry of data.
\end_layout

\begin_layout Standard
Name 
\series bold
three
\series default
 types of component that the booking form could use and give the types of data it is used to capture. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The recursive procedure 
\family typewriter
X
\family default
 was two parameters, 
\family typewriter
Value
\family default
 and 
\family typewriter
Index
\family default
. The procedure processes the contents of an array, 
\family typewriter
T
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE X(Value, Index)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF T[Index] > 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] > Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

X(Value, Index * 2) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] < Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

X(Value, Index * 2 + 1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF T[Index] = Value
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

True
\begin_inset Quotes qrd
\end_inset


\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
l6 
\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
17 ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a recursive procedure. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Give the two line numbers which indicate that procedure x is recursive. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
An array T is used to store the data for a binary tree. A program places items in the array in the order in which they joined the tree structure. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="15">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
17 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
19 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
18 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw the binary tree for the array 
\family typewriter
T
\family default
 dataset. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
Copy and then complete the trace table for the procedure call 
\family typewriter
X(18, 1)
\family default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Procedure call 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Value
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Index
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
18
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe the purpose of procedure 
\family typewriter
X
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Data is to be transmitted in packets between two computers.
\end_layout

\begin_layout Standard
Each packet message can consist of: 
\end_layout

\begin_layout Itemize
upper case letters 
\end_layout

\begin_layout Itemize
the <Space> character. 
\end_layout

\begin_layout Standard
Each packet has a start character (#) and an end character (#).
\end_layout

\begin_layout Standard
A typical packet would be: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
#ETA FROM SRE#
\family default
 
\end_layout

\begin_layout Enumerate
Describe
\series bold
 two
\series default
 checks that the receiving computer should make for the integrity of: 
\end_layout

\begin_deeper
\begin_layout Itemize
the individual bytes which make up a packet 
\end_layout

\begin_layout Itemize
the collection of bytes which makes up the packet. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe 
\series bold
three
\series default
 validation checks that the receiving computer should pertorm on the packet. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer implements a linked list of surnames with a start pointer, 
\family typewriter
StartPtr
\family default
 and two one-dimensional arrays: 
\end_layout

\begin_layout Itemize
Array 
\family typewriter
Data
\family default
 stores the surnames. 
\end_layout

\begin_layout Itemize
Array 
\family typewriter
Ptr
\family default
 stores the link pointers. 
\end_layout

\begin_layout Itemize
Both arrays have lower bound 1 and upper bound 3000. 
\end_layout

\begin_layout Standard
The purpose of procedure 
\family typewriter
InsertListItem
\family default
 is to insert a new surname to the linked list.
\end_layout

\begin_layout Standard
Assume a function 
\family typewriter
NextFree()
\family default
 is available and returns: 
\end_layout

\begin_layout Itemize
the index position for the array 
\family typewriter
Data
\family default
 at which the new surname is to be inserted 
\end_layout

\begin_layout Itemize
-1 when the 
\family typewriter
Data
\family default
 array is full. 
\end_layout

\begin_layout Standard
The programmer designs the algorithm as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 PROCEDURE InsertListItem(NewSurname : STRING) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF NextFree() = ‚Äî1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

OUTPUT 
\begin_inset Quotes qld
\end_inset

List is full
\begin_inset Quotes qrd
\end_inset

 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O6 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// input the surname 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF StartPtr = 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

StartPtr w NextFree() 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Data[StartPtr] e NewSurname 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// traverse the linked list to find the position 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// at which to insert NewSurname
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset Formula $\vdots$
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Describe the state of the linked list. if the condition 
\family typewriter
StartPtr = 0
\family default
 in line 
\family typewriter
07
\family default
 is 
\family typewriter
True
\family default
. [1] 
\end_layout

\begin_layout Enumerate
It is now necessary to complete the design for procedure 
\family typewriter
InsertListItem
\family default
. 
\end_layout

\begin_deeper
\begin_layout Enumerate
The pseudocode already uses some variables.
\end_layout

\begin_deeper
\begin_layout Standard
Copy the table below and complete it to show any extra variables that you will need to use. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Variable
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Write the pseudocode for line 
\family typewriter
14
\family default
 onwards to complete the procedure. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2016/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A real-estate management company owns a number of residential and business units. When the company first acquires a unit, it often requires renovation work. The company records the renovation cost.
\end_layout

\begin_layout Standard
A residential unit will be a house or an individual flat within a building. A business unit will be either an office building, a storage unit or a factory.
\end_layout

\begin_layout Standard
A residential unit is either advertised for sale, with the company looking to make a profit, or retained for rental. If the unit is sold, the sale price is recorded. If the unit is retained, the monthly rental charged, the start date and length of the rental (in months) are recorded.
\end_layout

\begin_layout Standard
A business unit has a long term lease, which is usually 10 years or longer. The company records the nature of the business. it does not offer any of its business units for sale.
\end_layout

\begin_layout Standard
Other data recorded for a unit include: purchase price, purchase date, number of rooms, floor space, whether or not a lift is present. The company records whether the house has a garage and whether it has a garden.
\end_layout

\begin_layout Standard
A programmer will develop an application, using object-oriented programming to store and process the company
\begin_inset Quotes ers
\end_inset

s data. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, with base class 
\family typewriter
UNIT
\family default
, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
appropriate sub-class(es) 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
the properties required 
\end_layout

\begin_layout Itemize
appropriate methods, including 
\series bold
one
\series default
 pair of 
\begin_inset Quotes els
\end_inset

get
\begin_inset Quotes ers
\end_inset

 and 
\begin_inset Quotes els
\end_inset

set
\begin_inset Quotes els
\end_inset

 methods for 
\series bold
one
\series default
 of the properties.
\begin_inset space \hfill{}

\end_inset

 [8] 
\end_layout

\end_deeper
\begin_layout Enumerate
The company has recently purchased a number of units that they want to renovate as a 
\begin_inset Quotes els
\end_inset

block of flats
\begin_inset Quotes ers
\end_inset

 (a number of self-contained flats in the same building). Once the renovation is complete, the company may offer a block of flats for sale. Alternatively, it may retain the unit and advertise each individual flat for rental.
\end_layout

\begin_deeper
\begin_layout Standard
Explain how this would affect the design in 
\series bold
part (a)
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the meaning of the term encapsulation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the meaning of the term polymorphism. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A role-playing computer game includes a list of items called the inventory. This inventory can be represented using a one-dimensional (1 -D) array or a list structure.
\end_layout

\begin_layout Standard

\family typewriter
INVENTORY.TXT
\family default
 is a text file containing the items from the computer game inventory. Each item type can have many occurrences. For example:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Inventory
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ItemType
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Design and write program code to: 
\end_layout

\begin_layout Itemize
read the entire contents of 
\family typewriter
INVENTORY.TXT
\family default
 to an appropriate data structure called Inventory 
\end_layout

\begin_layout Itemize
find each item type in this inventory and write these into a second similar data structure called 
\family typewriter
ItemTypes
\family default
 
\end_layout

\begin_layout Itemize
count the number of each item type in the inventory and store this in a third similar data structure called 
\family typewriter
ItemCounts 
\family default
 
\end_layout

\begin_layout Itemize
display the contents of the ItemTypes and ItemCounts data structures using the format given below. 
\end_layout

\begin_layout Standard
Example run of the program:
\end_layout

\begin_layout Standard

\begin_inset Tabular 
<lyxtabular version="3" rows="10" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Inventory
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard
The output generated from this input would be:
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
ItemType
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Count
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Stone 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Glass 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sticky Piston 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Sand 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Iron Ore 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

[14]
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Every published book has an international Standard Book Number (ISBN). This ISBN is a 9-digit number plus a check digit which is calculated and added to the end of the number. A weighted-modulus method is used to calculate the check digit.
\end_layout

\begin_layout Standard
This method uses a weighted modulus 11. If the check digit is calculated as 10. it is replaced with the character 'X'. Where the check digit is calculated as 11, it will be replaced with 0.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
184146208 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times10=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times9=72$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times8=32$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times7=7$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times6=24$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6\times5=30$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2\times4=8$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times3=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times2=16$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 199
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $199/11=18$
\end_inset

 remainder 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-1=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 10 is replaced with X:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
ISBN is 184146208
\series bold
X
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
034085045 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times10=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $7\times9=63$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times8=40$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $1\times7=7$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times6=30$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times5=20$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $9\times4=36$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $2\times3=6$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $6\times2=12$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 154
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $154/11=14$
\end_inset

 remainder 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-0=11$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 11 is replaced with 0:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
ISBN is 034085045
\series bold
0
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular 
<lyxtabular version="3" rows="15" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
075154926 will be calculated as
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times10=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $3\times9=27$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times8=32$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times7=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $8\times6=48$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times5=25$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $0\times4=0$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $4\times3=12$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $5\times2=10$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Total = 214
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $214/11=19$
\end_inset

 remainder 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Formula $11-5=6$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
Therefore, 6 is added to the
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
end of the ISBN: 075154926
\series bold
6
\series default
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Study the identifier table and the incomplete recursive algorithm on the opposite page.
\end_layout

\begin_layout Standard
The missing lines in the algorithm are labelled 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
.
\end_layout

\begin_layout Standard
Write the
\series bold
 three
\series default
 missing lines of code. Label each as 
\series bold
A
\series default
, 
\series bold
B
\series default
 or 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
The three missing lines of code. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Identifier
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data Type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Number
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The ISBN to be processed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Digit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
lNTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A digit from the iSBN to be processed
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Total
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Running total for modulus calculation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NewNumber
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A version of the list string shortened by removing the first character
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckDigit
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The calculated check digit value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CalcModulus
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Used to store the result of 
\family typewriter
(Total MOD 11)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CheckValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Used to store the result of 
\family typewriter
(11 - CalcModulus)
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LENGTH(Number) > 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Digit <- INTEGER(LEFT(Number,1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Total <- Total + (Digit * (LENGTH(Number)+1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NewNumber <- RIGHT(Number, LENGTH(Number)-1) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CheckDigit <- .................. A ................. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Digit <- INTEGER(LEFT(Number,1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Total <- Total + (Digit 1 (LENGTH(Number)+1)) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CalcModulus <- Total MOD 11 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CheckValue <- 11 - CalcModulus 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF CheckValue = 11 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN STRING(O) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF CheckValue = 10 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

....................... B .......................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN STRING(CheckValue) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF LENGTH(Number) = 9 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN .................... C .................... 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN CheckDigit; 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
END FUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0. 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit(
\begin_inset Quotes qrd
\end_inset

184146208
\begin_inset Quotes qrd
\end_inset

,0)
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Write a program to implement the ISBN program using the 
\family typewriter
CalCheckDigit
\family default
 function.
\end_layout

\begin_layout Standard
The program will: 
\end_layout

\begin_layout Itemize
read the entire contents of the file 
\family typewriter
ISBNPRE.TXT
\family default
 (seven 9-digit lSBNs without check digits) into an appropriate data structure 
\end_layout

\begin_layout Itemize
use the function 
\family typewriter
CalCheckDigit
\family default
 to calculate the result (ISBN with check digit) for each entry in the file 
\end_layout

\begin_layout Itemize
write each result (ISBN with check digit) to the screen. 
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code for Task 2.2. 
\begin_inset space \hfill{}

\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Screenshot of the results of processing the 
\family typewriter
ISBNPRE.TXT
\family default
 file.
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A data structure is required to store 25 nodes. A linked list is maintained of all the nodes. A node contains a data value and two pointers: a left pointer and a right pointer.
\end_layout

\begin_layout Standard
Items in the list are initially linked using their 
\family typewriter
LeftChild
\family default
 pointers.
\end_layout

\begin_layout Standard
Each node ls implemented as an instance of the class 
\family typewriter
ConnectionNode
\family default
. The class ConnectionNode has the following properties: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard

\family typewriter
Class: Connection Node
\family default

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
DataValue
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
STRING
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
LeftChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The left node pointer 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RightChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The structure for the linked list is implemented as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Data Type 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
RobotData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ARRAY [l : 25] OF ConnectionNode
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
An array used to store the
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
25 nodes.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Root
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the root position 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
of the 
\family typewriter
RobotData
\family default
 array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
NextFreeChild
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
INTEGER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index for the next 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
available empty node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The first available node Is indicated by 
\family typewriter
NextFreeChild
\family default
. The initial value of 
\family typewriter
Root
\family default
 is 1 and the initial value of 
\family typewriter
NextFreeChild
\family default
 is 1.
\end_layout

\begin_layout Standard
The diagram shows the empty data structure with the linked list to record the unused nodes. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-1.png
	width 12.5page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write the program code to declare the 
\series bold
empty
\series default
 data structure and linked list of 25 unused nodes. Add statement(s) to initiallse the empty data structure.
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code for Task 3.1. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Standard
This data structure is used to record the possible routes for a robot to travel from a node A to a node Z. The following data structure illustrates many possible routes, for example, A
\begin_inset Formula $\rightarrow$
\end_inset

D
\begin_inset Formula $\rightarrow$
\end_inset

K
\begin_inset Formula $\rightarrow$
\end_inset

L
\begin_inset Formula $\rightarrow$
\end_inset

M
\begin_inset Formula $\rightarrow$
\end_inset

Z. It is only possible to move to one of two possible nodes; for example, from node A, the only move is to node B or node D. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
This data structure has 15 nodes (A to N and Z) but for future development a maximum of 25 nodes is specified. All nodes are unique.
\end_layout

\begin_layout Standard
The pseudocode on the next page can be used to add a node to the data structure. The procedure 
\family typewriter
AddToRobotData
\family default
 uses the parameters 
\family typewriter
NewDataItem
\family default
, 
\family typewriter
ParentItem
\family default
 and 
\family typewriter
ThisMove
\family default
.
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
ThisMove
\family default
 holds the move made to create this new item (
\begin_inset Quotes els
\end_inset

L' for LeftChild, 
\begin_inset Quotes els
\end_inset

R' for RightChild, 
\begin_inset Quotes els
\end_inset

X
\begin_inset Quotes ers
\end_inset

 for initial state/root), and the 
\family typewriter
ParentItem
\family default
 parameter holds the value of the parent item which points to this 
\family typewriter
NewDataItem
\family default
. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q3-3.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Standard
To add node B as shown, the procedure call would be 
\family typewriter
AddToRobotData ('B', 
\begin_inset Quotes els
\end_inset

A', 'L')
\family default
 . The parameters used would be:
\end_layout

\begin_layout Standard

\family typewriter
B
\family default
, the new node
\end_layout

\begin_layout Standard

\family typewriter
A
\family default
, the parent node
\end_layout

\begin_layout Standard

\family typewriter
L
\family default
, the location of the child (which has an index of 2) is recorded in 
\family typewriter
LeftChild
\family default
 of A.
\end_layout

\begin_layout Standard
The following pseudocode (available in PS EUDOCODE_TASK_3_2 . TXT) can be used to add a node to the data structure.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
FUNCTION FindNode(NodeValue) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Found <- FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

CurrentPosition <- Root 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

REPEAT 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RobotData[CurrentPosition].DataValue = NodeValue THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Found <- TRUE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

CurrentPosition <- CurrentPosition + 1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

UNTIL Found = TRUE OR CurrentPosition > 25 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF CurrentPOSition > 25 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN CurrentPosition 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
PROCEDURE AddToRobotData(NewDataItem, ParentItem, ThisMove) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF Root = 1 AND NextFreeChild = 1 THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild <- RobocData[NextFreeChild].LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotDataIRoot].LeftChild <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[Root].DataValue <- NewDataItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// does the parent exist? . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ParentPosition <- FindNode(ParentItem) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RarentPosition > 0 THEN // parent exists 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// does the child exist? 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ExistingChild <- FindNode(NewDataItem) ' 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ExistingChild > 0 THEN // child exists 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ChildPointer <- ExistingChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ChildPointer <- NextFreeChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NextFreeChild <- RobotDataINextFreeChild}.LeftChild 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ChildPointer].LeftChild <- 0 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ChildPointer].DataValue <- NewDataItem 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF ThisMove = 'L' THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ParentPosition].LeftChild <- ChildPointer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RobotData[ParentPosition].RightChild <- ChildPointer 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\series bold
 
\series default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write code to implement 
\family typewriter
AddToRobotData
\family default
 and 
\family typewriter
FindNode
\family default
 from this pseudocode.
\end_layout

\begin_layout Standard
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_2.TXT
\family default
 as a basis for writing your code.
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code for Task 3.2. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Write a procedure 
\family typewriter
OutputData
\family default
 which displays the value of 
\family typewriter
Root
\family default
, the value of 
\family typewriter
NextFreeChild
\family default
 and the contents of 
\family typewriter
RobotData
\family default
 in index order.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code for Task 3.3.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
The file 
\family typewriter
SEARCHTREE.TXT
\family default
 contains the data for the search tree. Each row of the file contains three comma separated values, for example, the first row contains '
\family typewriter
A
\family default
', '
\family typewriter
0
\family default
' and 'X'. The file is organised as: 
\family typewriter
NewDataltem, ParentItem, ThisMove
\family default

\end_layout

\begin_layout Standard

\family typewriter
NewDataItem, ParentItem, ThisMove
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset Formula $\dots$
\end_inset


\family default

\end_layout

\begin_layout Standard

\family typewriter
<End of File>
\family default

\end_layout

\begin_layout Standard
There are a total of 20 lines in the 
\family typewriter
SEARCHTREE.TXT
\family default
 file representing possible routes.
\end_layout

\begin_layout Standard
Write a main program to read the contents of this file and use 
\family typewriter
AddToRobotData
\family default
 and 
\family typewriter
FindNode
\family default
 to insert these routes into 
\family typewriter
RobotData
\family default
. Your program will then call the 
\family typewriter
OutputData
\family default
 procedure.
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for Task 3.4. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.4.
\begin_inset space \hfill{}

\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
Task 3.5
\end_layout

\begin_layout Standard
Write a recursive pre-order tree traversal that will display all valid routes from A to Z by following the routes described in 
\family typewriter
RobotData
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code for Task 3.5.
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Screenshot showing the output from running the program in Task 3.5.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer program can generate a simple Sudoku puzzle using a 4 x 4 two-dimensional array.
\end_layout

\begin_layout Standard
An example of this puzzle is: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The first step to creating this puzzle is to develop a program to display the 4 x 4 twodimensional array as a grid. This program will display the grid as: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Create a program design that will declare, initialise and display the example puzzle shown. This design will: 
\end_layout

\begin_layout Itemize
make use of top-down design 
\end_layout

\begin_layout Itemize
include the data structure to represent the puzzle as a grid 
\end_layout

\begin_layout Itemize
initialise the grid using the values shown 
\end_layout

\begin_layout Itemize
make use of appropriate procedures and/or functions. 
\end_layout

\begin_layout Subsubsection*
Evidence 13
\end_layout

\begin_layout Standard
Your program design for Task 4.1. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Write program code to display the puzzle designed in Task 4.1.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code.
\begin_inset space \hfill{}

\end_inset

 [5]
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Screenshot of the displayed grid. 
\begin_inset space \hfill{}

\end_inset

[1]
\end_layout

\begin_layout Standard
The puzzle is said to be valid if it follows these rules: 
\end_layout

\begin_layout Itemize
It consists of tour quadrants. 
\end_layout

\begin_layout Itemize
The numbers in each quadrant must add up to ten. 
\end_layout

\begin_layout Itemize
Each horizontal and vertical row of the puzzle must also add up to ten. 
\end_layout

\begin_layout Itemize
No number can be repeated in the same row, same column or same quadrant of the puzzle. 
\end_layout

\begin_layout Standard
A good strategy tor creating puzzles is to start with a valid 
\begin_inset Quotes els
\end_inset

base' puzzle and perform transformations on it to create new puzzles.
\end_layout

\begin_layout Standard
You will write program code to create new valid puzzles.
\end_layout

\begin_layout Standard
Each puzzle created will have two randomly selected transformations. from a possible four, performed on it. The following are the four possible transformations that can be carried out. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="30col%">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Transformation
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Explanation 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" topline="true" usebox="none" special="l">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
1
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps two rows in the same quadrants 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-1.png
	width 30page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
2
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps two columns in the same quadrants 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-2.png
	width 15page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
3
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps the top and bottom quadrant rows entirely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-3.png
	width 30page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
4
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Swaps the left and right quadrant columns entirely 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P1-Q4-4.png
	width 15page%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write additional program code with brief 
\series bold
internal commentary
\series default
 to identify each transformation.
\end_layout

\begin_layout Standard
The program code will: 
\end_layout

\begin_layout Itemize
create a method of selecting. at random, two of the four possible transformations to be applied to the puzzle 
\end_layout

\begin_layout Itemize
call a sub-program for each of the required transformations 
\end_layout

\begin_layout Itemize
randomly select which rows will be transformed for transformations 1 and 2. for example. either the top or bottom two rows (for transformation 1) OR either the left-most or right-most two columns (for transformation 2) respectively 
\end_layout

\begin_layout Itemize
display the puzzle before each transformation is applied and after the final transformation. Before each transformation. it will also display the name of the transformation being carried out.
\end_layout

\begin_deeper
\begin_layout Standard
For example:
\end_layout

\begin_layout Standard

\family typewriter
4321 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1243 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3412 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2134 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Transformation 1: Swaps two rows in the same quadrants 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1243 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4321 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3412 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2134 
\family default

\end_layout

\begin_layout Standard

\family typewriter
Transformation 4: Swaps the left and right quadrant columns entirely 
\family default

\end_layout

\begin_layout Standard

\family typewriter
4312 
\family default

\end_layout

\begin_layout Standard

\family typewriter
2143 
\family default

\end_layout

\begin_layout Standard

\family typewriter
1234 
\family default

\end_layout

\begin_layout Standard

\family typewriter
3421 
\family default
 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
Your program code that includes internal commentary.
\begin_inset space \hfill{}

\end_inset

 [14]
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Screenshots of the output that shows each of the four transformations applied. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The principal of a college decides to improve security access. Currently, the staff use keys to enter classrooms and laboratories. One of the principal
\begin_inset Quotes ers
\end_inset

s suggested improvements is to replace the existing locks and keys with a swipe card system. The principal plans to purchase swipe card readers for every room, and staff will be issued with their own swipe card. if a valid card is swiped through a particular reader, the corresponding door will be unlocked.
\end_layout

\begin_layout Standard
Software for controlling the system is required to: 
\end_layout

\begin_layout Itemize
define the rooms that can be entered by each card. The office staff will make any changes. 
\end_layout

\begin_layout Itemize
produce a pop-up screen on the office staff's computer if an unauthorised card is used to attempt an entry into a room. 
\end_layout

\begin_layout Itemize
produce reports. Some of the reports will be confidential and can only be viewed by the principal. 
\end_layout

\begin_layout Standard
A local software company is selected to produce the software. The company assigns a development team to the project. 
\end_layout

\begin_layout Enumerate
A systems analyst from the team makes an initial visit to the college.
\end_layout

\begin_deeper
\begin_layout Standard
State two groups of staff that the systems analyst would need to interview. Justify your answer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
As a result of the analysis carried out. a diagram is used to show entities and data flow. Draw a suitable diagram. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The next stage of system development is software design. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the checks that the team needs to make at the end of this stage. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe two methods that could be used to check this design. For each method, identify the members of the development team involved other than the systems analyst. [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
The swipe card system will need to be fully tested. The company carries out white box and black box testing.
\end_layout

\begin_deeper
\begin_layout Standard
Explain 
\series bold
three
\series default
 differences between black box and white box testing. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
User documentation will be produced during the development process.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 sections that should be included in the user guide for this system.
\begin_inset space \hfill{}

\end_inset

 [6] 
\end_layout

\end_deeper
\begin_layout Enumerate
After the system is implemented, maintenance will be required.
\end_layout

\begin_deeper
\begin_layout Standard
Name and describe 
\series bold
two
\series default
 types of maintenance. For each type, give an example for the swipe card system. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\end_deeper
\begin_layout Enumerate
Describe a method that can be used to ensure that only the office staff can change the system and only the principal can view confidential reports. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
The principal is considering expanding the use of the swipe card system to record attendance in classes.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
one
\series default
 disadvantage of this proposal and suggest a more reliable method.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A multinational company has many local branches in various parts of the country that are linked using a wide area network (WAN). 
\end_layout

\begin_layout Enumerate
The company's network transfers data using asynchronous data transmission. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State which of the following diagrams represents asynchronous data transmission. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q2-1.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why asynchronous data transmission affects network performance.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard
An employee works from home on her wireless laptop. The following diagram shows the configuration of the employee's home network. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q2-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset

This network uses both a switch and a router to transfer data. State which of the pieces of equipment labelled 
\series bold
A
\series default
 and 
\series bold
B
\series default
 is the switch. Explain your answer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 features of a router.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Describe 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage. for the employee, of working from home.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain what is meant by an object in object-oriented programming. .
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
A student is writing a program to represent people in a university. Tutors, office workers, lecturers and professors are all employed by the university. A professor is a senior lecturer. The university educates both undergraduate and graduate students.
\end_layout

\begin_deeper
\begin_layout Standard
The student
\begin_inset Quotes ers
\end_inset

s program contains a class with the identifier 
\family typewriter
Person
\family default
. Sub-classes share the characteristics of this class.
\end_layout

\begin_layout Standard
Copy and complete the following inheritance diagram by adding sub-classes 
\family typewriter
Professor
\family default
,
\end_layout

\begin_layout Standard

\family typewriter
OfficeWorker
\family default
, 
\family typewriter
Lecturer
\family default
, 
\family typewriter
Undergraduate
\family default
, 
\family typewriter
Staff
\family default
, 
\family typewriter
Graduate
\family default
, 
\family typewriter
Student
\family default
 and 
\family typewriter
Tutor
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q3.png
	width 50page%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why inheritance is an important feature of object-oriented programming.
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A stack is a data structure that can be implemented in object-oriented programming. The implementation of a stack requires an integer variable and an array. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the purpose of the integer variable in the implementation of a stack class.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe the purpose of the array in the implementation of a stack class.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Explain how to use the stack data structure to compute the following expression: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\noindent

\begin_inset Formula $\left(\text{A}+\text{B}\right)\times\left(\text{C}+\text{D}\right)$
\end_inset


\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q4] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
A local area network (LAN) can be set up as either client-server or peer-to-peer. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State where data are stored on a client-server network. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
State where data are stored on a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 benefit of a client-server network over a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Describe 
\series bold
one
\series default
 drawback of a client-server network compared to a peer-to-peer network.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A college has five IT rooms. Each room has 20 computers which can only print to a single printer in the room. At busy times in the year, there can be up to 100 students printing their coursework at the same time. 
\begin_inset Quotes els
\end_inset

0
\end_layout

\begin_deeper
\begin_layout Standard
Explain how all these print jobs are controlled and sent to the printer.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
A 30 megabyte file is transferred over a network to a printer in 5 seconds.
\end_layout

\begin_deeper
\begin_layout Standard
Calculate the transfer rate, in megabits per second, used to transfer this file. Show all of your working. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q5] 
\series default
The following grid shows the initial state of a popular puzzle. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q5.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
The aim of the puzzle is to fill the whole grid so that every row, every column and every 
\begin_inset Formula $3\times3$
\end_inset

 mini-grid contains a number between 1 and 9. No number should be repeated in any row, column or 3 x 3 minigrid.
\end_layout

\begin_layout Standard
A software company is creating an online version of the puzzle. A programmer is asked to create the puzzle software. 
\end_layout

\begin_layout Enumerate
The programmer decides to use a 2D array to store the puzzle. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Copy and complete the following line of pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
DECLARE Puzzle ARRAY[1 : ...., .... : ....] OF ......................
\family default
 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The circled value in the diagram above needs to be assigned to the appropriate array element. 
\end_layout

\end_deeper
\begin_layout Enumerate
Copy and complete the following line of pseudocode.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Puzzle[...., ....] <- ...............................
\family default
 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why a 2D array is more suitable than a single 1D array to represent this puzzle. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The puzzle grid can be saved by writing the array 
\family typewriter
Puzzle
\family default
 to a file.
\end_layout

\begin_deeper
\begin_layout Standard
Design an algorithm, using pseudocode, to write the array to the file. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
During the testing of the puzzle software, several errors are discovered.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 debugging techniques that could be used to locate these errors. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2017/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A computer company has several offices throughout the country, each with several salespersons. A record of the sales made by each salesperson has been set up using a relational database. There is a minimum amount of $150 for each sale.
\end_layout

\begin_layout Standard
The following tables hold the data.
\end_layout

\begin_layout Standard

\family typewriter
CUSTOMER (
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, CustomerEmail, CustomerTelephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
OFFICE (
\family default

\family typewriter

\bar under
OfficeID
\bar default

\family default

\family typewriter
, Address, Telephone) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALE (
\family default

\family typewriter

\bar under
CustomerID*
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SalesPersonID*
\bar default

\family default

\family typewriter
, SaleDate, Amount) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SALESPERSON (
\family default

\family typewriter

\bar under
SalesPersonID
\bar default

\family default

\family typewriter
, SalespersonName, OfficeID*) 
\family default

\end_layout

\begin_layout Standard

\series bold
Note:
\series default
 underline indicates primary key. An asterisk (*) indicates a foreign key. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-Fl) diagram to represent the data model. 
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\begin_layout Enumerate
(b) The following is a section of the data dictionary for the data model. it has three missing entries labelled 
\series bold
A
\series default
, 
\series bold
B 
\series default
and 
\series bold
C
\series default
. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Table
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
Field
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Data type
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Validation
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CUSTOMER
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CustomerID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Unique
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
CustomerID
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SaleData
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
SALE
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
Amount
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold

\begin_inset space \hspace{}
\length 1col%
\end_inset


\series default

\family default

\series bold
B
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
State a suitable entry for 
\series bold
A
\series default
, 
\series bold
B
\series default
 and 
\series bold
C
\series default
. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
There is an address field in this database.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why storing the address as a single field is not good database design. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard
Each month, a report is produced to show the sales for each salesperson. The following is a report for salesperson, B Chin. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2017-P2-Q6.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
To produce the report, the database uses the 
\family typewriter
SaleDate
\family default
 and 
\family typewriter
Amount
\family default
 fields in the 
\family typewriter
SALE
\family default
 table.
\end_layout

\begin_deeper
\begin_layout Standard
Name 
\series bold
four 
\series default
other fields that the database uses to produce this report.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 features of a relational database management system which would be used to calculate and display the total for this salesperson.
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is required to input and process the number of steps taken by members of a walking club each week. The number of steps taken by each member is an integer in the range 0 to 100000.
\end_layout

\begin_layout Standard
Each week, the 
\begin_inset Quotes eld
\end_inset

Star of the Week
\begin_inset Quotes qrd
\end_inset

 is the member who has taken the greatest number of steps.
\end_layout

\begin_layout Standard
The name and number of steps taken by the 
\series bold
previous
\series default
 week's 
\begin_inset Quotes qld
\end_inset

Star of the Week
\begin_inset Quotes qrd
\end_inset

 are stored in the text file, 
\family typewriter
STAR.TXT
\family default
.
\end_layout

\begin_layout Standard
The program specification is as follows: 
\end_layout

\begin_layout Itemize
Input 
\series bold
up to
\series default
 10 names and the number of steps each has taken. Assume that each number of steps is unique. 
\end_layout

\begin_layout Itemize
Find the walker who has taken the greatest number of steps from this data. 
\end_layout

\begin_layout Itemize
Read the data about the previous 
\begin_inset Quotes eld
\end_inset

Star of the Week
\begin_inset Quotes erd
\end_inset

 from the text file 
\family typewriter
STAR. TXT
\family default
. 
\end_layout

\begin_layout Itemize
Display a message on screen to show the previous star of the week 
\series bold
and
\series default
 the new star of the week, each with their number of steps. For example,
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Last week, Jenny Smith was 'Star of the Week' with 75827 steps taken. 
\family default

\end_layout

\begin_layout Standard

\family typewriter
This week, Vanessa Lim is 'Star of the Week' with 67152 steps taken. 
\family default
 
\end_layout

\end_deeper
\begin_layout Itemize
Update the text file, 
\family typewriter
STAR.TXT
\family default
, with the details of the new 
\begin_inset Quotes qld
\end_inset

Star of the Week
\begin_inset Quotes erd
\end_inset

. 
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code for this task that includes validation of data entered.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Standard
The program needs to be tested with different test cases. Consider carefully, test cases for input of names and steps.
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Copy the table with the following headings. Add other test cases to the table. One type of test case has already been added to the table. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Test case
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Purpose of test data
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Expected results
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Yi Ling Aw, 10232 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Test the maximum of 10 values 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 values entered and star of
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ryan Batisah, 42231 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
entered into the program. 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
the week is Vanessa Lim with
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Lee Casmir, 35020 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
67152 steps taken.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Daniel Bennett, 60192 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sarah Heng Chee, 29389 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vanessa Lim, 67152 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Wong Yip, 53231 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Rin Xie, 34200 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Tin Wee, 49480 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
David Bala, 32010 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Completed table with other test cases added. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Use 
\series bold
three
\series default
 of the test cases in the table, and produce a screenshot for each.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Three screenshots of test cases.
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following algorithm is an implementation of a quick sort that operates on an array 
\family typewriter
Scores
\family default
.
\end_layout

\begin_layout Standard
This algorithm assumes that the first element of an array is the zeroth element. This means that 
\family typewriter
Scores[0]
\family default
 is the first element in the array.
\end_layout

\begin_layout Standard
This pseudocode is available in the file 
\family typewriter
QUICKSORT.TXT
\family default

\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION QuickSort(Scores)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

QuickSortHelper(Scores, 0, LENGTH(Scores) - 1)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Scores
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION
\family default

\end_layout

\begin_layout Plain Layout

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION QuickSortHelper(Scores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

IF First < Last
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

SplitPoint <- PartitioniScores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

QuickSortHelper(Scores, First, SplitPoint ‚Äî 1)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

QuickSoRtHelper(Scores, SplitPoint + 1, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN Scores
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
FUNCTION Partition(Scores, First, Last)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

PivotValue <- ScoresiFirst]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

Lefthark <- First + 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RightMark <- Last
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

Done <- FALSE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

WHILE (Done = FALSE)
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE LeftMark <= RightMark AND Scores[LeftMark] <= PivotValue
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

LeftMark <- LeftMark + 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

WHILE Scores[RightMark] >= PivotValue AND RightMark >= LeftMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RightMark <- RightMark ‚Äî 1
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDWHILE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF RightMark < LeftMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Done <- TRUE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <- Scores[LeftMark]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Scores[LeftMark] <- Scores[RightMark]
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Scores[RightMark] <- Temp
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDWHILE 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\series bold

\emph on
<swap Scores[First] with Scores[RightMark]>
\emph default

\series default

\family default

\family typewriter
 
\family default

\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter

\begin_inset space \qquad{}

\end_inset

RETURN RightMark
\family default

\end_layout

\begin_layout Plain Layout
\noindent

\family typewriter
ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code to implement this algorithm. Ensure that you add the missing code to complete the algorithm. The area of missing code is highlighted as: 
\end_layout

\begin_layout Standard
\align center

\family typewriter

\series bold

\emph on
<swap Scores [First] with Scores [RightMark]>
\emph default

\series default

\family default
 
\end_layout

\begin_layout Standard
Copy the sample data available in the 
\family typewriter
SCORES.TXT
\family default
 file. Paste this into your programming code to set up the data to be sorted.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[12]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Add a function to your code to output Scores. Call this function before and after the operation of the quick sort so that the unsorted and sorted data is displayed.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Screenshot showing the unsorted and sorted 
\family typewriter
Scores
\family default
 data.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The file,
\family typewriter
 HASHEDDATA.TXT
\family default
, holds details of the names and telephone numbers of 250 people.
\end_layout

\begin_layout Standard
There are a total of 500 lines in the file, and a number of these lines are empty of name and telephone number.
\end_layout

\begin_layout Standard
An index is stored for each line of the file.
\end_layout

\begin_layout Standard
The format of the data in the file is: 
\end_layout

\begin_layout Standard
\align center
<Index>,<PersonName>,<TelephoneNumber> 
\end_layout

\begin_layout Standard
The first 10 lines from the file are shown as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Boxed
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "1in"
special "columnwidth - 2\fboxsep - 2\fboxrule"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout
0, ,
\end_layout

\begin_layout Plain Layout
1, ,
\end_layout

\begin_layout Plain Layout
2, ,
\end_layout

\begin_layout Plain Layout
3, Boon Keng V., 07492 546415
\end_layout

\begin_layout Plain Layout
4, ,
\end_layout

\begin_layout Plain Layout
5, ,
\end_layout

\begin_layout Plain Layout
6, Ahmad Yusof, 07439 778665
\end_layout

\begin_layout Plain Layout
7, Durno Peter, 07662 863518
\end_layout

\begin_layout Plain Layout
8, Batisah Wong, 07362 156265
\end_layout

\begin_layout Plain Layout
9, ,
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The values in the file are separated by the comma character.
\end_layout

\begin_layout Standard
A record structure is used to store a name and telephone number. A data structure of 500 records is needed to store all the names and telephone numbers. Each line in the file is written to a corresponding position in the data structure.
\end_layout

\begin_layout Standard
The records with index six to eight from the data structure are: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="right" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Index
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
PersonName
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
TelephoneNumber
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Ahmad Yusof 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07439 778665
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Durno Peter 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07662 863518
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
8
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Batisah Wong 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
07362 156265
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Use program code to create a: 
\end_layout

\begin_layout Itemize
record structure to hold the name and telephone number for one person 
\end_layout

\begin_layout Itemize
data structure, using this record structure to store 500 records. 
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the lines from the file 
\end_layout

\begin_layout Itemize
extract the <Index>, <PersonName> and <TelephoneNumber> values 
\end_layout

\begin_layout Itemize
store these values in the data structure. 
\end_layout

\begin_layout Standard
Create a procedure called 
\family typewriter
DisplayValues
\family default
 that will loop though the data structure and display the index, name and telephone number for every record where the name is present.
\end_layout

\begin_layout Standard
Ensure your procedure uses headings to identify the data displayed.
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
A Screenshot showing the output.
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
A hashing function was used to create the file. The same hashing function can be used to search the data structure for a particular name. The hashing function generates a hash. This is calculated as follows:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
Get SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Set HashTotal to 0
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
FOR each Character in SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Get the ASCII code for Character
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Multiply the ASCII code by the position of Character in SearchName
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter

\begin_inset space \qquad{}

\end_inset

Add the result to the HashTotal
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
Calculate Hash as HashTotal MOD 500
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
RETURN Hash
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
Add the program code for the hashing function. Use the following specification: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
FUNCTION GenerateHash(SearchName : STRING) : INTEGER
\family default
 
\end_layout

\begin_layout Standard
The function has a single parameter 
\family typewriter
SearchName
\family default
 and returns an integer value.
\end_layout

\begin_layout Standard
Write additional code for your program to allow you to test the implementation of this function.
\end_layout

\begin_layout Standard
The following test data will assist you.
\end_layout

\begin_layout Standard

\begin_inset space \qquad{}

\end_inset


\begin_inset Quotes eld
\end_inset

Tait Davinder
\begin_inset Quotes erd
\end_inset

 should return a hash of 87
\end_layout

\begin_layout Standard

\begin_inset space \qquad{}

\end_inset


\begin_inset Quotes eld
\end_inset

Anandan Yeo
\begin_inset Quotes qrd
\end_inset

 should return a hash of 156
\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
A screenshot (or screenshots) of your program to show the results of the hash calculation for both the given test data values.
\begin_inset space \hfill{}

\end_inset

[2]
\end_layout

\begin_layout Standard
The hash calculated from the 
\family typewriter
SearchName
\family default
 can be used to find a corresponding record in the data structure.
\end_layout

\begin_layout Standard
If the 
\family typewriter
SearchName
\family default
 is not found in the record given by the hash 
\series bold
and
\series default
 the record is not empty: 
\end_layout

\begin_layout Itemize
compare 
\family typewriter
SearchName
\family default
 with the next record 
\end_layout

\begin_layout Itemize
until the 
\family typewriter
SearchName
\family default
 is found or an empty record is found. 
\end_layout

\begin_layout Standard
If an empty record is found then the program will report that the name is 
\begin_inset Quotes eld
\end_inset

NOT FOUND
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
If the record is found, the program will output the index, name and telephone number.
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
Add the program code to implement the search as described.
\end_layout

\begin_layout Subsubsection*
Evidence 12
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
A screenshot (or screenshots) of your program to show the results of the following searches:
\end_layout

\begin_layout Standard
Search 1: Charlie Love
\end_layout

\begin_layout Standard
Search 2: Chin Tan
\end_layout

\begin_layout Standard
Search 3: John Barrowman
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
In a computer game, a player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) moves around a maze measuring 10 metres by 11 metres to collect a prize (
\begin_inset Quotes qrd
\end_inset


\family typewriter
P
\family default

\begin_inset Quotes qrd
\end_inset

). The prize is placed at a random position within the maze. The prize position is not where a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

) appears in the maze. An empty position is indicated with a full-stop (
\begin_inset Quotes qrd
\end_inset


\family typewriter
.
\family default

\begin_inset Quotes qrd
\end_inset

).
\end_layout

\begin_layout Standard
The maze is represented on the screen by a rectangular grid. Each square metre of the maze is represented by an x-coordinate and a y-coordinate. The top left square metre of the puzzle display has x = 
\family typewriter
0
\family default
 and y = 
\family typewriter
0
\family default
.
\end_layout

\begin_layout Standard
The player moves left, right, up or down according to a direction entered by the user. The game is turn-based; a user enters the direction, their player moves one position in that direction. lithe direction would place the player on a well, then the player does not move. The maze is displayed after each move. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P1-Q4.png
	width 25page%

\end_inset

 
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write a program to display the maze as shown. 
\end_layout

\begin_layout Itemize
The maze should be stored in a suitable data structure. 
\end_layout

\begin_layout Itemize
The data structure will allow fixed loop(s) to be used to display the maze. 
\end_layout

\begin_layout Standard
The maze is given in the text file 
\family typewriter
MAZE.TXT
\family default
. You may read in the data from this file or place the data in your program using any suitable method.
\end_layout

\begin_layout Subsubsection*
Evidence 14
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
The prize is placed randomly on the maze. It cannot appear in the same grid position as a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

).
\end_layout

\begin_layout Standard
Add to your program code to place the prize at a random position.
\end_layout

\begin_layout Standard
Take a screenshot of the maze with the prize displayed in it.
\end_layout

\begin_layout Subsubsection*
Evidence 15
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Evidence 16
\end_layout

\begin_layout Standard
A screenshot of the maze as output by your program. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Standard
The player is represented by the character 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

. The character starts the game in a central position on the grid, for example, x = 
\family typewriter
4
\family default
 and y = 
\family typewriter
5
\family default
.
\end_layout

\begin_layout Standard
To move the character, the user is prompted for a direction. The following are valid inputs: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Input character
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Action
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

U
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves up
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

D
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves down
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

L
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves left
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Player moves right
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset


\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Continue with previous move.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
If no previous move, do nothing
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
If the next position for the player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) is a wall (
\begin_inset Quotes qrd
\end_inset


\family typewriter
X
\family default

\begin_inset Quotes qrd
\end_inset

), then the player stays in their current position; this is called collision detection.
\end_layout

\begin_layout Standard
When the player enters the move, a new position for the player (
\begin_inset Quotes qrd
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

) is calculated and the maze is displayed. The previous position is changed back to a 
\begin_inset Quotes qld
\end_inset

.
\begin_inset Quotes qrd
\end_inset

 when the player has a new position. The moves are repeated until the player is at the same position as the prize.
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Add to your program code to: 
\end_layout

\begin_layout Itemize
place the player on the grid at a central position on the grid 
\end_layout

\begin_layout Itemize
take in and validate a direction 
\end_layout

\begin_layout Itemize
calculate a new position 
\end_layout

\begin_layout Itemize
check this position is not a wall 
\end_layout

\begin_layout Itemize
update the grid so that the previous position of 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 is replaced with a 
\begin_inset Quotes qld
\end_inset

 . 
\begin_inset Quotes qld
\end_inset

 and 
\begin_inset Quotes qld
\end_inset


\family typewriter
O
\family default

\begin_inset Quotes qrd
\end_inset

 is located in its new position 
\end_layout

\begin_layout Itemize
continue this until the player is at the same position as the prize. 
\end_layout

\begin_layout Subsubsection*
Evidence 17
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [16]
\end_layout

\begin_layout Standard
When the player and the prize are at the same position, the message 
\begin_inset Quotes eld
\end_inset

Player has reached the prize
\begin_inset Quotes erd
\end_inset

 is displayed and the game ends.
\end_layout

\begin_layout Subsubsection*
Task 4.4
\end_layout

\begin_layout Standard
Add to your program, code to end the game when this condition is met, and display the required message. Produce screenshots to show key elements of your program are functioning.
\end_layout

\begin_layout Standard
The screenshots required are: 
\end_layout

\begin_layout Itemize
entering each direction 
\end_layout

\begin_layout Itemize
player changing position 
\end_layout

\begin_layout Itemize
end of game 
\end_layout

\begin_layout Subsubsection*
Evidence 18
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
Evidence 19
\end_layout

\begin_layout Standard
Screenshots of: 
\end_layout

\begin_layout Itemize
entering each direction 
\end_layout

\begin_layout Itemize
player changing position 
\end_layout

\begin_layout Itemize
end of game (player wins) 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A mobile phone company has an option for Pay As You Go usage. Customers have to purchase credit in advance. The credit is used to pay for texts, calls and data. Customers can buy additional credit at any time.
\end_layout

\begin_layout Standard
The company requires software to allow their Pay As You Go customers to do the following tasks online: 
\end_layout

\begin_layout Itemize
check credit balance 
\end_layout

\begin_layout Itemize
check data usage 
\end_layout

\begin_layout Itemize
check call usage 
\end_layout

\begin_layout Itemize
pay for credit 
\end_layout

\begin_layout Standard
A software company was employed to put together a project team to produce the software. 
\end_layout

\begin_layout Enumerate
State 
\series bold
three
\series default
 members of the project team. Describe the role of each of these members. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
The initial phase of the system development cycle required that a specification be created for the system. 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 techniques that could have been used to gather the information for this specification. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
Explain how each technique would have been used in this project. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The specification is a detailed report.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 sections of this report. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The software could have been designed using different techniques. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Name 
\series bold
and
\series default
 describe 
\series bold
two
\series default
 design techniques that may have been used. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\begin_layout Enumerate
Explain why it is important for each member of the design team to use the same technique. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\begin_layout Enumerate
A customer's mobile phone number needs to be validated on entry.
\end_layout

\begin_deeper
\begin_layout Standard
Draw a flowchart to represent an algorithm for this validation. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
(e) The work to implement the new software needs to be managed. The following Program Evaluation and Review Technique (PERT) chart is used as a management tool.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
A
\family default
 ‚Äî Specification
\end_layout

\begin_layout Standard

\family typewriter
B
\family default
 ‚Äî Analysis
\end_layout

\begin_layout Standard

\family typewriter
C
\family default
 ‚Äî Design of software
\end_layout

\begin_layout Standard

\family typewriter
D
\family default
 ‚Äî Design of Interface
\end_layout

\begin_layout Standard

\family typewriter
E
\family default
 ‚Äî Documentation
\end_layout

\begin_layout Standard

\family typewriter
F
\family default
‚Äî Implementation
\end_layout

\begin_layout Standard

\family typewriter
G
\family default
 ‚Äî Testing
\end_layout

\begin_layout Standard

\family typewriter
H
\family default
 ‚Äî Acceptance testing
\end_layout

\begin_layout Standard

\family typewriter
I
\family default
 ‚Äî Hand over to phone company
\end_layout

\begin_layout Standard
Time is measured in weeks. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the critical path for the given activities 
\family typewriter
A
\family default
 to 
\family typewriter
I
\family default
. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Calculate the minimum time these activities will take. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
The member of the project team who worked on activity 0 fold the project manager he could not start work until one week after the scheduled start date.
\end_layout

\begin_deeper
\begin_layout Standard
Explain any impact this would have on the completion date of the project.
\begin_inset space \hfill{}

\end_inset

 [3] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
The software is intended for use on hand-held devices.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 ways that users can keep their data secure on these devices.
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
A member of the project team had the task of ensuring that social and ethical issues were considered.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
one
\series default
 example of each of these Issues that this member of the team might have considered. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The following algorithm calculates the average mark for a group of students.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FOR Counter <- 1 TO NumberOfStudents
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

Total <- O
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

INPUT Mark
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Total <- Total + Mark
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 Average <- Total / NumberOfStudents
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 OUTPUT Average
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
There is an error in this algorithm causing an incorrect result. Describe the error and explain the change required to correct this error. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\begin_layout Enumerate
State the name of this type of error.
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\begin_layout Enumerate
The lowest mark in the exam is 0 and the highest is 100. Give an example from each of the appropriate test cases which could be used to test the algorithm. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Name and describe a suitable technique that could be used to manually identify errors in the algorithm. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q3] 
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
A binary tree is as follows: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q3.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the in-order sequence. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the pre-order sequence. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Enumerate
A 1D array, 
\family typewriter
Value
\family default
, stores a list of scores as follows: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="16">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Index 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
11 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
12 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
13 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Score 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
23 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
36 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
48 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
50 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
58 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
64 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
69 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
74 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
79 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
86 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
92 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
99
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Using a linear search, state how many comparisons will be required to find the score of 64. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The following binary search algorithm could be used to search the list of scores.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 Lower <- LowestIndex
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 Upper <- HighestIndex
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 REPEAT
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

Middle <- (Lower + Upper) DIV 2
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

IF SearchItem > Value[Middle]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O6 
\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Lower <- Middle + l
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset

ELSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Upper <- Middle ‚Äî l
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 UNTIL Value[Middle] = SearchItem OR Lower > Upper
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 OUTPUT 
\begin_inset Quotes qld
\end_inset

Score found at position
\begin_inset Quotes qrd
\end_inset

 Middle
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
ii.
\end_layout

\end_inset

Score 80 is not in the list.
\end_layout

\begin_deeper
\begin_layout Standard
When searching for this score, state the values that will be examined. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iii.
\end_layout

\end_inset

When searching for a score of 80, this algorithm outputs:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
Score found at position 12
\family default

\end_layout

\begin_layout Standard
Describe how the algorithm gives this incorrect output. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
iv.
\end_layout

\end_inset

Describe how the algorithm could be changed to give a suitable message if the score is not in the list. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\end_deeper
\begin_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A university allows students to access the university network from home. 
\end_layout

\begin_layout Enumerate
The university server has a firewall.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 ways that a firewall can be used to block unauthorised access to the network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university wishes to restrict access to inappropriate websites from within its network.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 methods that could be used to restrict access to inappropriate websites. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university is concerned about the possible loss of data from their local servers.
\end_layout

\begin_deeper
\begin_layout Standard
Describe a strategy that could be used to prevent data loss. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The university has its own intranet.
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 benefits that the intranet might provide for students. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The organisers of a diving championship have created software to calculate and show the total score for each diver.
\end_layout

\begin_layout Standard
There are nine judges scoring each dive. The two best scores and the two worst scores are ignored. The other five scores are added together to give the diver
\begin_inset Quotes ers
\end_inset

s total score. 
\end_layout

\begin_layout Enumerate
Write an algorithm to take in the nine scores, delete the best two and the two worst scores, and total the five remaining scores. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
There are 10 divers in the final. The scoreboard shows the order of diving. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Order
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Diver name
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Total score
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Daniel Tan 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Parker Lam 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Mohamed Noor 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hariz Yazid 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
5 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Sheryl Xuan 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
6 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Karl Lim 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
7 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Elaine Ning 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Nadyia Esmadi 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
9 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cai Ng 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Hamid Mahmood 
\end_layout

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
The programmers decided to use a 1D array for the scores. They will also use a bubble sort to sort the scores into descending order. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a bubble sort can be used to arrange the scores into a descending or ascending order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_deeper
\begin_layout Standard
This is the bubble sort algorithm for sorting into descending order:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 WHILE NoSwaps = FALSE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

NoSwaps <- TRUE
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset

UpperBound <- ListLength
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

FOR Posn <- 0 TO ......
\family default

\family typewriter

\series bold
A
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF List[Posn] < ......
\family default

\family typewriter

\series bold
B
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O7 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

// Swap
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
O8 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

NoSwaps <- ......
\family default

\family typewriter

\series bold
C
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

Temp <- List[Posn]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

List[Posn] <- ListiPosn + 1]
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

List[Posn + 1] <- ......
\family default

\family typewriter

\series bold
D
\series default

\family default

\family typewriter
......
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
l3 
\begin_inset space \qquad{}

\end_inset

ENDFOR
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 ENDWHILE
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write the pseudocode for 
\family typewriter

\series bold
A
\series default

\family default
, 
\family typewriter

\series bold
B
\series default

\family default
, 
\family typewriter

\series bold
C
\series default

\family default

\series bold
 a
\series default
nd 
\family typewriter

\series bold
D
\series default

\family default
 in the algorithm. 
\begin_inset space \hfill{}

\end_inset

 [4] 
\end_layout

\end_deeper
\begin_layout Enumerate
During the first round of dives, the sorted scores for five divers are:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
48 
\family default

\end_layout

\begin_layout Standard

\family typewriter
45 
\family default

\end_layout

\begin_layout Standard

\family typewriter
40 
\family default

\end_layout

\begin_layout Standard

\family typewriter
37 
\family default

\end_layout

\begin_layout Standard

\family typewriter
36 
\family default

\end_layout

\begin_layout Standard
The sixth diver scores 42 and the software appends the score to the list as follows:
\end_layout

\begin_layout Standard

\family typewriter
48 
\family default

\end_layout

\begin_layout Standard

\family typewriter
45 
\family default

\end_layout

\begin_layout Standard

\family typewriter
40 
\family default

\end_layout

\begin_layout Standard

\family typewriter
37 
\family default

\end_layout

\begin_layout Standard

\family typewriter
36 
\family default

\end_layout

\begin_layout Standard

\family typewriter
42
\family default
 
\end_layout

\begin_layout Enumerate
State the number of passes needed through the list to return the list to its sorted order. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Explain why the bubble sort is efficient in this example. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Name another sort method that could have been used in this situation.
\end_layout

\begin_deeper
\begin_layout Standard
Compare the speed of sorting the divers
\begin_inset Quotes ers
\end_inset

 scores in your named method with using the bubble sort. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2018/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Customers want to buy tickets for a diving championship that takes place over three days. There are two sessions of diving each day.
\end_layout

\begin_layout Standard
Customers use a ticket ordering website to buy their tickets. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q6-1.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Enumerate
State the type of user interface that the ticket ordering website uses. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
All ticket sales are stored on a database server in the following tables:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
CUSTOMER(
\family default

\family typewriter

\bar under
CustomerID
\bar default

\family default

\family typewriter
, CustomerName, Email, ContactNumber) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
BOOKING(
\family default

\family typewriter

\bar under
BookinoID
\bar default

\family default

\family typewriter
, BookingDate, CustomerID) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
SESSION(
\family default

\family typewriter

\bar under
SessionID
\bar default

\family default

\family typewriter
, Date, Time, SessionCost) 
\family default

\end_layout

\begin_layout Standard

\family typewriter
BOOKING_SESSION(
\family default

\family typewriter

\bar under
BookingID
\bar default

\family default

\family typewriter
, 
\family default

\family typewriter

\bar under
SessionID
\bar default

\family default

\family typewriter
, Quantity)
\family default

\end_layout

\begin_layout Standard

\family typewriter
CustomerID
\family default
 is the unique identifier in the 
\family typewriter
CUSTOMER
\family default
 table.
\end_layout

\begin_layout Standard

\family typewriter
BookingID
\family default
 is the unique identifier in the 
\family typewriter
BOOKING
\family default
 table.
\end_layout

\begin_layout Standard

\family typewriter
SessionID
\family default
 is the unique identifier in the 
\family typewriter
SESSION
\family default
 table. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram to represent this data model. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Enumerate
Name the fields that would be used to calculate the customer
\begin_inset Quotes ers
\end_inset

s payment for a session. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Before customers can make an online ticket purchase, they have to fill in a registration form. The details from this form are used to complete the CUSTOMER table. 
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\begin_inset Graphics 
	filename C:/Users/Admin/Desktop/Github/question_bank/LyX/static/img/9597-ALVL-2018-P2-Q6-2.png
	width 50page%

\end_inset

 
\end_layout

\begin_layout Standard
Explain how the web server will use server-side script to process this form. 
\begin_inset space \hfill{}

\end_inset

 [5] 
\end_layout

\end_deeper
\begin_layout Enumerate
The organisers of the championship store all the data for the event using cloud storage.
\end_layout

\begin_deeper
\begin_layout Standard
Describe
\series bold
 three
\series default
 economic benefits to the organisers of using cloud-based storage. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A text file, 
\family typewriter
TIDES.TXT
\family default
. contains the low and high tide information for a coastal location tor each day of a month. Each line contains tab-delimited data that shows the date, the time. whether the tide is high or low and the tide height in metres.
\end_layout

\begin_layout Standard
Each line is in the format: 
\end_layout

\begin_layout Standard
\align center

\family typewriter
YYYY-MM-DD
\backslash
tHH:mm
\backslash
tTIDE
\backslash
tHEIGHT
\backslash
n 
\family default
 
\end_layout

\begin_layout Itemize
The date is in the term YYYY-MM-DD, for example. 2019-08-03 is 3rd August. 2019 
\end_layout

\begin_layout Itemize
The time is in the form HH:mm, for example. 13:47 
\end_layout

\begin_layout Itemize
TIDE is either HIGH or LOW 
\end_layout

\begin_layout Itemize
HEIGHT is a positive number shown to one decimal place 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
t
\family default
 represents the tab character 
\end_layout

\begin_layout Itemize

\family typewriter

\backslash
n
\family default
 represents the newline character 
\end_layout

\begin_layout Standard
The text file is stored in ascending order of date and time.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
read the tide data from a text file 
\end_layout

\begin_layout Itemize
find the highest high tide and print this value 
\end_layout

\begin_layout Itemize
find the lowest low tide and print this value. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 1
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
The tidal range is the difference between the heights of successive tides; from a high tide to the following low tide or from a low tide to the following high tide.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
output the largest tidal range and the date on which the second tide occurs 
\end_layout

\begin_layout Itemize
output the smallest tidal range and the date on which the second tide occurs. 
\end_layout

\begin_layout Standard
Use 
\family typewriter
TIDES.TXT
\family default
 to test your program code.
\end_layout

\begin_layout Subsubsection*
Evidence 2
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of your output. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Characters are numerically encoded using ASCII codes. 
\end_layout

\begin_layout Itemize
'A' has the denary value 65; 
\begin_inset Quotes els
\end_inset

B' has the denary value 66 and so on. 
\end_layout

\begin_layout Itemize
'a' has the denary value 97; 'b' has the denary value 98 and so on. 
\end_layout

\begin_layout Standard
The ROT-13 encoding function replaces a letter with the letter that is 13 positions after it in the alphabet. Characters that are not letters remain unchanged. .
\end_layout

\begin_layout Standard
The function wraps around from the end of the alphabet back to the beginning. The case of the coded letter should match the case of the original letter.
\end_layout

\begin_layout Standard
For example: 
\end_layout

\begin_layout Itemize
'A' is replaced with 'N'; 'a' is replaced with 'n' 
\end_layout

\begin_layout Itemize
'B' is replaced with '0
\begin_inset Quotes els
\end_inset

; 'b' is replaced with 'o' 
\end_layout

\begin_layout Itemize
'Z' is replaced with 'M'; 'z
\begin_inset Quotes els
\end_inset

 is replaced with 'm' 
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
Write program code that: 
\end_layout

\begin_layout Itemize
reads a string of characters as input 
\end_layout

\begin_layout Itemize
encodes the string in ROT-13 form 
\end_layout

\begin_layout Itemize
outputs the encoded string. 
\end_layout

\begin_layout Standard
Run the program 
\series bold
three
\series default
 times with the inputs:
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
This is a word.
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
ALL &&&& CAPITALS
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
UpperCamelCase12()
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 3
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshots of your outputs. 
\begin_inset space \hfill{}

\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
A string is encoded using ROT-13. The resulting string is then encoded using ROT-13. The output of the second encoding should be identical to the original string.
\end_layout

\begin_layout Standard
Amend your program code to apply HOT-13 twice, in the method described. Show that the resulting string is identical to the original string.
\end_layout

\begin_layout Subsubsection*
Evidence 4
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the output from one of the given inputs. 
\begin_inset space \hfill{}

\end_inset

[3]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A program is to be written to implement a to-do list using object-oriented programming (OOP). The list shows tasks that need to be done.
\end_layout

\begin_layout Standard
Each task is given a category and a description.
\end_layout

\begin_layout Standard
The base class will be called 
\family typewriter
ToDo
\family default
 and is designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="9" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
category : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
description : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor(c : STRING, d : STRING) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_category(s : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_description(s : STRING) 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_category() : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get:_description() : STRING 
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
summary() : STRING
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
summary()
\family default
 method returns the category and description as a single string.
\end_layout

\begin_layout Subsubsection*
Task 3.1
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
ToDo
\family default
.
\end_layout

\begin_layout Subsubsection*
Evidence 5
\end_layout

\begin_layout Standard
Your program code. 
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
Tasks should be sorted alphabetically by category. Within each category. tasks should be sorted alphabetically by description.
\end_layout

\begin_layout Standard
A task to be added to the list is compared to the tasks already in the list to determine its correct position in the list. If the list is empty. it is added to the beginning of the list.
\end_layout

\begin_layout Standard
This comparison will use an additional member method, 
\end_layout

\begin_layout Standard
\align center

\family typewriter
compare_with(td : ToDo) : INTEGER 
\family default
 
\end_layout

\begin_layout Standard
This function compares the instance (the item in the list) and the 
\family typewriter
ToDo
\family default
 object passed to it, returning one of three values:
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
-1 if the instance is before the given 
\family typewriter
ToDo
\family default

\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
0 if the two are equal
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset


\family default
+1 if the instance is after the given 
\family typewriter
ToDo
\family default

\end_layout

\begin_layout Subsubsection*
Task 3.2
\end_layout

\begin_layout Standard
There are four objects defined in the text file 
\family typewriter
TASK3_2.TXT
\family default
.
\end_layout

\begin_layout Standard
Write program code to: 
\end_layout

\begin_layout Itemize
implement the 
\family typewriter
compare_with()
\family default
 method 
\end_layout

\begin_layout Itemize
create an empty list of 
\family typewriter
ToDo
\family default
 objects 
\end_layout

\begin_layout Itemize
add each of the four objects in the text file 
\family typewriter
TASK3_2.TXT
\family default
 to its appropriate place in the list 
\end_layout

\begin_layout Itemize
printout the list contents using the 
\family typewriter
summary()
\family default
 method. 
\end_layout

\begin_layout Subsubsection*
Evidence 6
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of test run. 
\begin_inset space \hfill{}

\end_inset

[13]
\end_layout

\begin_layout Standard
The to-do list can have items with extra information. One such item has a date by which the task should be completed.
\end_layout

\begin_layout Standard
The 
\family typewriter
DatedToDo
\family default
 class inherits from the 
\family typewriter
ToDo
\family default
 class, extending it to have a 
\family typewriter
due_date
\family default
. designed as follows: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="5" columns="1">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

DatedToDo : ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
due_date : DATE
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
constructor(dt : DATE, 0 : STRING, d : STRING)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
set_due_date(d : DATE)
\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
get_due_date() : DATE 
\family default

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
DatedToDo
\family default
 class should extend the 
\family typewriter
compare_with()
\family default
 method to ensure that tasks are ordered by ascending 
\family typewriter
due_date
\family default
, and then by the ordering used by the base 
\family typewriter
compare_with()
\family default
 method. The 
\family typewriter
summary()
\family default
 method should also be extended to return the 
\family typewriter
due_date
\family default
 and the return values of the base 
\family typewriter
summary()
\family default
 method.
\end_layout

\begin_layout Subsubsection*
Task 3.3
\end_layout

\begin_layout Standard
There are seven objects defined in the text file 
\family typewriter
TASK3_3.TXT
\family default
.
\end_layout

\begin_layout Standard
Amend your program code to: 
\end_layout

\begin_layout Itemize
implement the 
\family typewriter
DatedToDo
\family default
 class, with 
\family typewriter
constructor
\family default
, 
\family typewriter
get_due_date
\family default
 and 
\family typewriter
set_due_date
\family default
 
\end_layout

\begin_layout Itemize
implement the extended 
\family typewriter
compare_with()
\family default
 method 
\end_layout

\begin_layout Itemize
implement the extended 
\family typewriter
summary()
\family default
 method 
\end_layout

\begin_layout Itemize
ensure all seven objects in the text file 
\family typewriter
TASK3_3.TXT
\family default
 are added to the list 
\end_layout

\begin_layout Itemize
print out the list contents using the 
\family typewriter
summary()
\family default
 method. 
\end_layout

\begin_layout Subsubsection*
Evidence 7
\end_layout

\begin_layout Standard
Your program code.
\end_layout

\begin_layout Standard
Screenshot of the test run.
\begin_inset space \hfill{}

\end_inset

[5]
\end_layout

\begin_layout Standard
\noindent
When a task in the to-do list has been completed, it should be removed.
\end_layout

\begin_layout Subsubsection*
Task 3.4
\end_layout

\begin_layout Standard
There are four completed tasks defined in the text file 
\family typewriter
TASK3_4.TXT
\family default
.
\end_layout

\begin_layout Standard
If any of the four tasks exists in the list, it should be removed.
\end_layout

\begin_layout Standard
Amend your program to: 
\end_layout

\begin_layout Itemize
recreate the list of seven tasks from Task 3.3 
\end_layout

\begin_layout Itemize
check if each of the four completed tasks in the text file 
\family typewriter
TASK3_4.TXT
\family default
 exists in the list and: 
\end_layout

\begin_deeper
\begin_layout Itemize
remove it from the list if it does or 
\end_layout

\begin_layout Itemize
print a warning message it the completed task does not exist 
\end_layout

\end_deeper
\begin_layout Itemize
print out the list after all four objects have been processed. 
\end_layout

\begin_layout Subsubsection*
Evidence 8
\end_layout

\begin_layout Standard
Your amended code.
\end_layout

\begin_layout Standard
Screenshot of the test run.
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P1/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A stack is used to store characters.
\end_layout

\begin_layout Subsubsection*
Task 4.1
\end_layout

\begin_layout Standard
Write program code to implement the stack and the operations specified.
\end_layout

\begin_layout Standard
Your code should allow operations to: 
\end_layout

\begin_layout Itemize
push an item on to the stack 
\end_layout

\begin_layout Itemize
pop an item off the stack 
\end_layout

\begin_layout Itemize
determine the size of the stack. A size of zero indicates that the stack is empty. 
\end_layout

\begin_layout Subsubsection*
Evidence 9
\end_layout

\begin_layout Standard
Your program code for the stack.
\begin_inset space \hfill{}

\end_inset

[10]
\end_layout

\begin_layout Standard
The stack is to be used to identify it an arithmetic expression is balanced.
\end_layout

\begin_layout Standard
An expression is balanced if each opening bracket has a corresponding closing bracket.
\end_layout

\begin_layout Standard
Different pairs of brackets can be used. These are: [], () or {}.
\end_layout

\begin_layout Standard
This is an example of an expression that is balanced.
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

([8-1]/(5*7)) 
\family default

\end_layout

\begin_layout Standard
This is an example of an expression that is not balanced.
\end_layout

\begin_layout Standard

\family typewriter

\begin_inset space \qquad{}

\end_inset

[(8-1]/(5*7)) 
\family default

\end_layout

\begin_layout Standard
Note the change in the order of the first two open bracket symbols. The first closing bracket should be a closing bracket ')' to match the previous opening bracket 
\begin_inset Quotes els
\end_inset

('.
\end_layout

\begin_layout Standard
Note that an expression is not balanced if the order of the brackets is incorrect, even if there are the same number of opening and closing brackets of each bracket type.
\end_layout

\begin_layout Standard
An expression is checked by iterating over it: 
\end_layout

\begin_layout Itemize
if a non-bracket symbol is found, continue to the next character. 
\end_layout

\begin_layout Itemize
If an opening symbol is found, push it on to the stack and continue to the next character. 
\end_layout

\begin_layout Itemize
If a closing bracket is encountered: 
\end_layout

\begin_deeper
\begin_layout Itemize
If the stack is empty, return an error (because there is no corresponding opening bracket) 
\end_layout

\begin_layout Itemize
else pop the symbol from the top of the stack and compare it to the current closing symbol to see if they make a matching pair 
\end_layout

\begin_layout Itemize
If they do match continue to the next character 
\end_layout

\begin_layout Itemize
else return an error (pairs of brackets must match). 
\end_layout

\end_deeper
\begin_layout Itemize
When the last symbol is encountered: 
\end_layout

\begin_deeper
\begin_layout Itemize
return an error if the stack is not empty (too many opening symbols) 
\end_layout

\begin_layout Itemize
else return a success message. 
\end_layout

\end_deeper
\begin_layout Subsubsection*
Task 4.2
\end_layout

\begin_layout Standard
Add 
\series bold
five
\series default
 other suitable test cases and a reason for choosing each test case. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 5col%
\end_inset


\series bold
Test case
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Reason for choice
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Expected value
\series default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
([8-1]/(5*7))
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Provided 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
[(8-1]/(5*7))
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Provided 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Succeeds
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Fails
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Evidence 10
\end_layout

\begin_layout Standard
The completed table with all seven test cases and a reason for choosing each test case.
\begin_inset space \hfill{}

\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3
\end_layout

\begin_layout Standard
Write program code that checks expressions using the given algorithm.
\end_layout

\begin_layout Standard
Use all 
\series bold
seven
\series default
 test cases to verify It.
\end_layout

\begin_layout Subsubsection*
Evidence 11
\end_layout

\begin_layout Standard
Your program code for the stack.
\end_layout

\begin_layout Standard
Screenshots for each test data run. 
\begin_inset space \hfill{}

\end_inset

[19]
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q1] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Pharmacists working in a group of pharmacies, dispense medicine to patients who present to them a prescription written by a doctor. A new system is to be built to allow a doctor to send prescription data electronically to a pharmacy of the patient's choice. Patients will either collect the medicine, or have the pharmacy deliver it to them.
\end_layout

\begin_layout Standard
A project proposal is written and sent to doctors and pharmacy staff, inviting each to respond within a given time. 
\end_layout

\begin_layout Enumerate
Give a reason why the project proposal is sent to: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Doctors 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Pharmacy staff 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
The responses from the doctors and pharmacy staff are reviewed. Invitations are sent to doctors to find out whether they are willing to take part in a pilot scheme. The project proposal is sent to prospective software developers. Some of the activities involved in the project are listed in the following table. 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="8" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Label 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\begin_inset space \hspace{}
\length 25col%
\end_inset

Activity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Duration(Weeks)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
A
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
B
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal to pharmacy staff 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
C
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Discuss all the responses from A and B. and revise the proposal if 2 required 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
D
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Send project proposal to prospective software developers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
E
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Invite doctors to be part of a pilot scheme 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
F
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Request quotations of cost and development time from software developers 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
G
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Select a software developer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(b)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a Gantt chart for the activities labelled 
\series bold
A
\series default
 to 
\series bold
G
\series default
. 
\begin_inset space \hfill{}

\end_inset

[6] 
\end_layout

\begin_layout Enumerate
State the estimated time taken to complete activities 
\series bold
A
\series default
 to 
\series bold
G
\series default
. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Standard
In activities 
\series bold
A
\series default
 and 
\series bold
B
\series default
, doctors and pharmacy staff identified ethical and security issues that would need to be addressed. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe one security issue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe one ethical issue. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
In activity 
\series bold
F
\series default
, quotations are received from software developers. The lowest cost is from a developer who works alone, but demonstrates a number of successful projects. Other software developers that employ many staff submit more expensive quotations. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

Explain why the group of pharmacies may decide against the single developer. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
An analyst from the chosen software developer reviews the current system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(e)
\end_layout

\end_inset

Give 
\series bold
four
\series default
 methods available to the analyst to find out how a system operates. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
The analyst proposes that the doctors and pharmacy staff interact with a web-based system. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(f)
\end_layout

\end_inset

tate the software that will be needed on the devices used by the doctors and pharmacy staff. other than the operating system. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard
The alternative to a web-based system would be to write and install purpose-built application software for each computer used by a doctor or member of the pharmacy staff. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(g)
\end_layout

\end_inset

Describe 
\series bold
two
\series default
 advantages to the software developer of a web-based solution over purpose- built software running on each user's computer. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\begin_layout Standard
Doctors may wish to write prescriptions when they visit patients in their own home. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(h)
\end_layout

\end_inset

Explain 
\series bold
one
\series default
 benefit of a web-based solution in this situation. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The computers used by the doctors and pharmacy staff are clients of the server operated by the pharmacy. Some validation is provided by client-side scripting. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(i)
\end_layout

\end_inset

Give 
\series bold
two
\series default
 advantages of using this type of scripting. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard
The new system is designed. coded and tested as a number of modules. A tester performing black-box testing on a module would need its specification. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(j)
\end_layout

\end_inset

Explain why the tester would not need access to the source code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(k)
\end_layout

\end_inset

Explain why someone designing a test strategy for white box testing would need access to the source code. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(l)
\end_layout

\end_inset

Alpha testing is performed on the system.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the purpose of alpha testing. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(m)
\end_layout

\end_inset

The group of pharmacies is responsible for the security and integrity of the stored data. 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
two 
\series default
methods that could be used to ensure security of the stored data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
two
\series default
 methods that could be used to ensure the integrity of the stored data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(n)
\end_layout

\end_inset

The group considers using either the cloud or its own server to store data needed by the proposed system.
\end_layout

\begin_deeper
\begin_layout Standard
Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of storing the data in the cloud. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q2] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A bakery bakes bread and cakes to sell in its own shop and to other shops throughout a city.
\end_layout

\begin_layout Standard
Its drivers visit every shop each day, delivering that day
\begin_inset Quotes ers
\end_inset

s order and collecting the order for the next day.
\end_layout

\begin_layout Standard
Order forms are pre-printed with the name of each shop and every item that the bakery bakes. The manager of each shop writes onto the form the quantity of each item required. When the drivers return to the bakery. the data from the order forms are collated to give the bakers the total of each item to bake.
\end_layout

\begin_layout Standard
Copies of the order forms are made and used as delivery notes for the next day
\begin_inset Quotes ers
\end_inset

s deliveries. The accounts department use the original order forms to prepare a weekly invoice for each shop.
\end_layout

\begin_layout Standard
The bakery wants the shops to submit their orders online.
\end_layout

\begin_layout Standard
A program is needed to determine the number of each item needed and produce the weekly invoice for each shop.
\end_layout

\begin_layout Standard
The new program will use a relational database with three tables: Product, Shop and Order.
\end_layout

\begin_layout Standard
Each product has a description. price. and a unique product ID number.
\end_layout

\begin_layout Standard
Each shop has a name. an address, telephone number. manager's name, and a unique shop iD number.
\end_layout

\begin_layout Standard
Each order has a product lD, a quantity, a shop ID and a date for delivery. 
\end_layout

\begin_layout Enumerate
Draw an Entity-Relationship (E-R) diagram showing the three tables and the relationships between them. 
\begin_inset space \hfill{}

\end_inset

[5] 
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (
\family default

\family typewriter

\bar under
Attribute1
\bar default

\family default

\family typewriter
, Attribute2, Attribute3, ...) 
\family default

\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Write table descriptions for the three tables. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard
The bakery can change the price of an item at any time. Validation ensures that the new price is within specified limits and is more likely to be correct. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why this could still result in incorrect weekly invoices, assuming that the new price input is correct. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Describe changes to the database and draw a modified E-R diagram to ensure correct invoices are created. 
\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q3] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A programmer is asked to write a program to store names in alphabetical order.
\end_layout

\begin_layout Standard
The program needs to: 
\end_layout

\begin_layout Itemize
add and remove names 
\end_layout

\begin_layout Itemize
search for the presence of a specific name 
\end_layout

\begin_layout Itemize
output all the names in alphabetical order. 
\end_layout

\begin_layout Standard
The programmer considers two options: an array and a linked list. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why an array allows for more efficient searching. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
State why this advantage becomes more significant as the number of names becomes much larger. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
one
\series default
 disadvantage of using an 
\series bold
array
\series default
 to store the names in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage of using a 
\series bold
linked list
\series default
 to store the names in alphabetical order. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard
A third option is to store the names in a binary tree. 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(c)
\end_layout

\end_inset

Explain how a binary tree provides some of the advantages of both an array and a linked list when storing sorted data. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate

\begin_inset Argument item:1
status collapsed


\begin_layout Standard
(d)
\end_layout

\end_inset

State why a binary tree may need to be re-created with exactly the same data items. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q4] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
A company operates a multi-storey car park. All parking bays are identified by a letter. indicating the floor. and a number indicating the position of the bay on that floor (for example. C34 indicates bay 34 on floor C).
\end_layout

\begin_layout Standard
The entrance to the car park is controlled by a barrier. Before the barrier lifts to allow a car to enter, the driver must press a button to indicate if they need a standard bay or a special bay.
\end_layout

\begin_layout Standard
Special bay users must present a card to a card reader at the barrier.
\end_layout

\begin_layout Standard
The car park has an additional third type of bay that has a charging point for electric vehicles. The hourly rate for these bays is not the same as standard bays. The cost of using this type of bay additionally depends on the cost of the electricity used. This is monitored by the charging device and stored.
\end_layout

\begin_layout Standard
A camera captures the vehicle registration number. A ticket is printed showing: 
\end_layout

\begin_layout Itemize
current time 
\end_layout

\begin_layout Itemize
vehicle registration number 
\end_layout

\begin_layout Itemize
floor letter 
\end_layout

\begin_layout Itemize
position number of a suitable bay where the car must be parked 
\end_layout

\begin_layout Itemize
the card number for the special bay, if a card had been presented at the barrier. 
\end_layout

\begin_layout Standard
When the driver takes the ticket from the printer. the entrance barrier lifts. Before a car is allowed to leave, the ticket must be presented and a charge paid. The charge is determined by the length of stay and type of bay. The hourly rate for a standard bay is not the same as that for a special bay. As a car approaches the exit barrier a camera captures the vehicle registration. The barrier only lifts if the charge for this vehicle has been paid.
\end_layout

\begin_layout Standard
This system is to be implemented using object-oriented programming (OOP).
\end_layout

\begin_layout Standard
The base class PARKING_BAY has a property to store whether or not a bay is occupied. 
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing: 
\end_layout

\begin_deeper
\begin_layout Itemize
any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
the properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
suitable methods to support the system with at least one getter and one setter method. 
\begin_inset space \hfill{}

\end_inset

[8] 
\end_layout

\end_deeper
\begin_layout Enumerate
Add a class, CAR_PARK. thathas properties to store: 
\end_layout

\begin_deeper
\begin_layout Itemize
a list of all bays 
\end_layout

\begin_layout Itemize
the number of unoccupied bays. 
\begin_inset space \hfill{}

\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why polymorphism is useful in object-oriented programming. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Explain the purpose of making the attributes of an object private. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q5] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
The function 
\family typewriter
z
\family default
 takes three integer parameters, 
\family typewriter
low
\family default
, 
\family typewriter
high
\family default
, 
\family typewriter
seek
\family default
 and returns an integer value. It operates on the values in the elements of the array 
\family typewriter
A
\family default
.
\end_layout

\begin_layout Standard
\noindent

\begin_inset Box Frameless
position "t"
hor_pos "l"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open


\begin_layout Plain Layout

\family typewriter
01 FUNCTION Z(low, high, seek, A) RETURNS INTEGER 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}

\end_inset

IF low > high THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN ‚Äî1 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}

\end_inset

mid <- low + INT( (high ‚Äî low) /2)
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}

\end_inset

IF seek = A[mid] THEN
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN mid 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

IF seek < A[mid] THEN 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
10 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Z(low, mid - 1, seek, A) 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
11 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ELSE 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
12 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

RETURN Z(mid + 1, high, seek, A) . 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
13 
\begin_inset space \qquad{}

\end_inset


\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
14 
\begin_inset space \qquad{}

\end_inset

ENDIF 
\family default

\end_layout

\begin_layout Plain Layout

\family typewriter
15 ENDFUNCTION
\family default

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what lines 
\family typewriter
10
\family default
 and 
\family typewriter
12
\family default
 tell you about the function. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
State the purpose for the 
\family typewriter
RETURN
\family default
 statements in lines 
\family typewriter
03
\family default
 and 
\family typewriter
07
\family default
 of function 
\family typewriter
z
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [1] 
\end_layout

\end_deeper
\begin_layout Standard
The values in each of the eight elements of the array 
\family typewriter
A
\family default
 are: 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="2" columns="9">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="l">
\begin_inset Text

\begin_layout Standard

\series bold
Element
\series default

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
0
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
1
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
2
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
3
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
4
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
5
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
6
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="none" valignment="top" usebox="none" special="c">
\begin_inset Text

\begin_layout Standard
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Value
\series default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
8 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
15 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
96 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
101 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
412 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
500
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Copy and then complete the trace table for the instruction:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
OUTPUT z(0, 7, 103, A)
\family default
 
\end_layout

\begin_layout Standard
\align center

\begin_inset Tabular 
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle" tabularwidth="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Function call 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
low
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
high
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
seek
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
mid
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
A[mid]
\series default

\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter

\series bold
OUTPUT
\series default

\family default

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
1
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
0
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
7
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
103
\family default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
<cell alignment="none" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\begin_inset space \hfill{}

\end_inset

[4] 
\end_layout

\end_deeper
\begin_layout Enumerate
Function 
\family typewriter
z
\family default
 can return two different types of value.
\end_layout

\begin_deeper
\begin_layout Standard
Explain what these represent. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The number of elements in array 
\family typewriter
A
\family default
 may be very large.
\end_layout

\begin_deeper
\begin_layout Standard
Explain why a programmer might prefer to use an iterative approach rather than the one used in function 
\family typewriter
z
\family default
. 
\begin_inset space \hfill{}

\end_inset

 [2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
[ALVL/9597/2019/P2/Q6] 
\series default

\end_layout

\begin_deeper
\begin_layout Standard
Data communication networks can use circuit switching or packet switching. 
\end_layout

\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
Give 
\series bold
two
\series default
 advantages of packet switching over circuit switching. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage of circuit switching over packet switching. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate

\begin_inset ERT
status collapsed

\begin_layout Plain Layout
{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
one
\series default
 reason for using either a parity check or a checksum. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 example of an error that a parity check cannot detect. 
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\end_deeper
\begin_layout Enumerate
Switches and routers are common devices used in networking.
\end_layout

\begin_deeper
\begin_layout Standard
Explain the most significant differences between a switch and a router. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the purpose of a bridge in a network.
\begin_inset space \hfill{}

\end_inset

[1] 
\end_layout

\begin_layout Enumerate
A local area network (LAN) can be set up as either client-server or peer-to-peer.
\end_layout

\begin_deeper
\begin_layout Standard
Give 
\series bold
two
\series default
 advantages in storing shared data on a client-server network rather than on a peer-to-peer network. 
\begin_inset space \hfill{}

\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Standard

\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
