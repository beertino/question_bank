#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 HCI 2020
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
two
\series default
 characteristics of client-server network.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Give 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of client-server network compared to peer-to-peer network.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Briefly explain how Domain Name Server (DNS) works.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe the DHCP server’s process to allocate an IP address to a client.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
Computing technology was adopted worldwide during the recent pandemic.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe 
\series bold
one
\series default
 positive and 
\series bold
one
\series default
 negative impact you have observed.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
The national task force sets a code of conduct for all computing professionals
 working on contact tracing, data analysis, etc.
 Describe two rules that you would expect to be included.
 For each of your rules, give an example of the unethical behaviour it is
 designed to prevent.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Using real-life examples, explain the terms data validation and data verificatio
n.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Describe how data is transmitted in a packet switching network, and give
 two advantages of packet switching over circuit switching network.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Explain the purpose of layering in TCP/IP model.
 List the layers in order and describe each layer’s major function.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The ASCII code in denary for the character ‘
\family typewriter
1
\family default
’ is 
\family typewriter
49
\family default
.
\end_layout

\begin_deeper
\begin_layout Enumerate
Using 7 bits, express the ASCII code for the character ‘
\family typewriter
4
\family default
’ in binary.
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Express the character ‘
\family typewriter
4
\family default
’ as a hexadecimal number.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Convert 
\family typewriter
4B1
\family default
 hexadecimal number to a binary number stored as two bytes.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
In a restaurant, every membership account number is made up of five digits
 followed by a letter e.g.
 
\family typewriter
36514C
\family default
 where the letter is a modulus-eleven check digit for the account number.
 Each digit is weighted, with the first digit having a weight of 
\family typewriter
7
\family default
 and each subsequent digit decreases its weight by 
\family typewriter
1
\family default
.
 Valid check digits are in the range of letter C to letter M, with C correspondi
ng to the value of 1, D corresponds to 2 and so on.
\end_layout

\begin_deeper
\begin_layout Enumerate
What is the purpose of including a check digit at the end of each membership
 account number? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Write, in 
\series bold
pseudocode
\series default
, an algorithm which checks whether a membership account number is valid.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Using your algorithm, determine whether a person with the account number
 
\family typewriter
47938K
\family default
 is a member of the restaurant.
 Explain your answer.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Run-length encoding is a simple data compression technique that can be effective
 when repeated values occur at adjacent positions within a string.
 Compression is achieved by replacing groups of repeated values with one
 copy of the value, followed by the number of times the value should be
 repeated.
 For example, “
\family typewriter
AAAAABBBAAAB
\family default
” would be compressed as “
\family typewriter
A5B3A3B1
\family default
”.
 
\end_layout

\begin_deeper
\begin_layout Standard
Write, in 
\series bold
pseudocode
\series default
, a function that implements the run-length compression technique described
 above.
 The function will take a string argument and return the run-length compressed
 string.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
Using 
\series bold
pseudocode
\series default
, write a detailed algorithm for a function which will take two string values,
 called 
\family typewriter
P
\family default
 and 
\family typewriter
Q
\family default
, and will search the string value 
\family typewriter
P
\family default
 for the first occurrence of the string value 
\family typewriter
Q
\family default
 within it.
 The value returned is the start position of the first occurrence of 
\family typewriter
Q
\family default
 in 
\family typewriter
P
\family default
, or zero if there is no occurrence.
 Assume the string index starts at 1.
 For example, if 
\family typewriter
P
\family default
 is '
\family typewriter
bananas
\family default
' and Q is '
\family typewriter
na
\family default
' then the function would give the result 3, because '
\family typewriter
na
\family default
' first occurs in '
\family typewriter
bananas
\family default
' starting at character position three.
 [6]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
State 
\series bold
two
\series default
 key characteristics of a recursive function, and when is it suitable to
 be used.
 [3]
\end_layout

\begin_layout Enumerate
The procedure 
\family typewriter
MoveTower(n,i,j)
\family default
 shown below simulates the movement of moving 
\family typewriter
n
\family default
 discs from peg 
\family typewriter
i
\family default
 to peg 
\family typewriter
j
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
PROCEDURE MoveTower(n, i, j) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF n = 1 OUTPUT ("Move disc from peg", i, "to peg", j) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

MoveTower(n-1, i, 6-i-j) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

OUTPUT ("Move disc from peg", i, "to peg", j) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

MoveTower(n-1, 6-i-j, j) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDIF
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Dry-run the procedure and show the output that is produced when the task
 is to move 3 discs from peg 1 to peg 3.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Assuming a stack is used for passing parameters to the procedure, show also
 the contents of the stack, excluding the return address, after each of
 the first 
\series bold
five
\series default
 procedure calls.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\begin_layout Enumerate
If a procedure is to be able to call itself recursively, it is usual for
 the values of any variables used in the procedure to be held in a stack
 rather than in fixed storage.
 Why is this? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A linked list ADT has the following operations defined: 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Create(x) 
\family default
-- creates an empty linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Insert(x,item,p)
\family default
 -- inserts new value, 
\family typewriter
item
\family default
, into linked list 
\family typewriter
x
\family default
 so that it is at position 
\family typewriter
p
\family default
 in the linked list; 
\end_layout

\begin_layout Itemize

\family typewriter
Delete(x,p)
\family default
 -- deletes the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Read(x,p)
\family default
 -- returns the item at position 
\family typewriter
p
\family default
 in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Length(x)
\family default
 -- returns the number of items in the linked list 
\family typewriter
x
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmptyList(x)
\family default
 -- returns 
\family typewriter
True
\family default
 if linked list 
\family typewriter
x
\family default
 is empty, otherwise returns 
\family typewriter
False
\family default
; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear(x)
\family default
 – empties the linked list 
\family typewriter
x
\family default
;
\end_layout

\begin_layout Standard
The linked list is implemented by the use of a collection of nodes that
 have two parts: the item data and a pointer to the next item in the list.
 In addition, there is a 
\family typewriter
Start
\family default
 pointer which points to the first item in the list.
\end_layout

\begin_layout Enumerate
Write algorithms that could be used to implement the ‘
\family typewriter
Delete
\family default
’ and ‘
\family typewriter
Insert
\family default
’ operation.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Standard
A stack ADT has the following operations:
\end_layout

\begin_layout Itemize

\family typewriter
Create()
\family default
 - creates a new stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Push(item)
\family default
 - adds 
\family typewriter
item
\family default
 onto the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
Pop()
\family default
 - deletes and returns item from the stack; 
\end_layout

\begin_layout Itemize

\family typewriter
IsEmpty()
\family default
 – if the stack is empty returns True, otherwise False; 
\end_layout

\begin_layout Itemize

\family typewriter
Clear()
\family default
 – removes all items in the stack;
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b)
\end_layout

\end_inset

 Show how to implement ‘
\family typewriter
Create
\family default
’, ‘
\family typewriter
Push
\family default
’ and ‘
\family typewriter
Pop
\family default
’ operation using the list ADT operations.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Standard
The stack implementation above is used to implement the undo/redo mechanism
 of a text editor.
 
\end_layout

\begin_layout Standard
An Undo stack is used to keep the edit history of the editor and the Redo
 stack is used to keep the history of the undo operations.
 The content of the text editor is stored as a string in the Undo stack
 and Redo stack.
 
\end_layout

\begin_layout Standard
When an undo is invoked, the Undo stack is popped and the content is pushed
 into the Redo Stack.
 When a redo is invoked, the Redo stack is popped and the content is pushed
 into the Undo Stack.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Using the stack ADT operations, show how to implement the following functions
 which return the contents.
 Assume that 
\family typewriter
undoStack
\family default
 and 
\family typewriter
redoStack
\family default
 are created.
 
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
FUNCTION Undo() RETURNS STRING
\family default
 
\end_layout

\begin_layout Enumerate

\family typewriter
FUNCTION Redo() RETURNS STRING
\family default

\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
S-Cut offers haircut service at a price based on age group at 60 outlets
 located around Singapore.
 S-Cut has engaged you to develop an application that runs on kiosk stationed
 at their outlets.
 The application uses a relational database to store the data.
 Customers need to register as a regular member with their name, contact
 number and price.
 They can purchase a haircut service using the kiosks provided.
 The service record should contain date of service, member information and
 the outlet information.
 Based on the requirements given above, design the database that consists
 of 3 tables: Member, Outlet and ServiceRecord.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Draw the Entity-Relationship (E-R) diagram to show the tables in third normal
 form (3NF) and their relationships between them.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName( 
\bar under
Attribute1
\bar default
, Attribute2*, Attribute3, …) 
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
 Foreign keys are indicated by using a dashed underline/asterisk.
 Using the information given, write table descriptions for the tables you
 have identified in part 
\series bold
(a)(i)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
To attract more customers, some outlets offer 20% discount on Saturday and
 Sunday.
 Write the table description with the changes to the database to capture
 the change in price per haircut on Saturday and Sunday.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
S-Cut offers platinum membership which entice members to additional benefits.
 Platinum member needs to credit $100 to their account which entitles them
 to 12 sessions of haircut services, in addition they will receive a birthday
 gift on their birthday month.
 To ensure greater productivity in development of the membership system,
 object oriented design is used.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a class diagram for member class(es) which exhibit the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
Suitable classes with appropriate properties and methods
\end_layout

\begin_layout Itemize
Inheritance 
\end_layout

\begin_layout Itemize
Polymorphism 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the term 
\series bold
encapsulation
\series default
 and how it is applied in your design in (c)(i).
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain the term 
\series bold
polymorphism
\series default
 and how it is applied in your design in (c)(i).
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
An alternative way to develop an application that runs on the kiosk would
 be a web-based application.
 State 
\series bold
two
\series default
 differences between a native application and a web-based application.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
S-Cut collects data from the customer, describe 
\series bold
two
\series default
 data protection obligations on how S-Cut must comply with the Personal
 Data Protection Act (PDPA).
 
\begin_inset space \hfill{}
\end_inset

[2] 
\end_layout

\end_deeper
\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
