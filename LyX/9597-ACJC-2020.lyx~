#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ACJC 2020
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A food delivery app offers promotions to customers based on their usage
 pattern.
 
\end_layout

\begin_deeper
\begin_layout Standard
First time customers would receive a $5 discount on their first purchase.
 If a customer has spent at least $1000 on the app in the last 3 months,
 the app would upgrade the customer to Gold status and offer 10% discount
 on all orders.
 
\end_layout

\begin_layout Standard
Gold status customers who have been inactive for 1 month would be offered
 an additional 5% discount on top of the existing 10% discount.
 Customers who have made their first purchase and have been inactive for
 1 month would receive a $5 discount instead.
 
\end_layout

\begin_layout Enumerate
Create a decision table to show these conditions and actions.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Simplify your decision table by removing redundancies from the decision
 table.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
The recursive function 
\family typewriter
Binomial
\family default
 has two parameters, 
\family typewriter
N
\family default
 and 
\family typewriter
R
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}
\end_inset

FUNCTION Binomial(N, R : INTEGERS) RETURNS INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF R = 0 OR R = N 
\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Answer ← 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Answer ← Binomial(N – 1, R) + Binomial(N – 1, R – 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN Answer 
\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}
\end_inset

ENDFUNCTION
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
State what is meant by a recursive function, and identify the line number
 that makes 
\family typewriter
Binomial
\family default
 recursive.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
An example of a trace tree diagram showing the recursive function call 
\family typewriter
Binomial(3,1)
\family default
 is shown.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename C:/Users/beert/OneDrive/Desktop/Github/question_bank/static/img/9597-ACJC-2020-P1-Q2.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Use the above example to create a trace tree diagram for the recursive function
 call 
\family typewriter
Binomial(3,2)
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

Give values of N and R which would cause the function to enter infinite
 recursion.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The function 
\family typewriter
Evaluate
\family default
 is designed to evaluate a polynomial at a given value of 
\begin_inset Formula $x$
\end_inset

.
 The polynomial is stored as a queue of coefficients in descending powers
 of x.
\end_layout

\begin_deeper
\begin_layout Standard
For example, the polynomial 
\begin_inset Formula $5x^{3}-2x^{2}+3x-1$
\end_inset

 is given as the queue 
\begin_inset Formula $[5,–2,3,–1]$
\end_inset

, where 5 is at the head of the queue.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}
\end_inset

FUNCTION Evaluate(X : INTEGER, Coeffs : QUEUE) RETURNS INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Answer ← 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Answer ← Answer + DEQUEUE Coeffs 
\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Answer ← Answer * X 
\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

UNTIL Coeffs IS EMPTY 
\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN Answer 
\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}
\end_inset

ENDFUNCTION
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Draw a trace table to determine the output of the function 
\family typewriter
Evaluate
\family default
 for 
\family typewriter
X = 2
\family default
 and 
\family typewriter
Coeffs = [5, –2, 3, –1]
\family default
, as described above.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Describe the error in the function 
\family typewriter
Evaluate
\family default
 as it is currently written.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Rewrite the pseudo-code above so that 
\family typewriter
Evaluate
\family default
 returns the correct value of the polynomial at a given value of 
\family typewriter
x
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
During Home-Based Learning, many lessons were carried out over the Internet.
\end_layout

\begin_deeper
\begin_layout Enumerate
For lessons carried out by video conferencing, tools by external companies
 such as Zoom or Google Meet were used.
\end_layout

\begin_deeper
\begin_layout Standard
Give one example of an ethical consideration companies such as Zoom or Google
 should take into account in this situation.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Many lesson resources and homework submissions were carried out via file
 uploads.
 Describe how a file can be uploaded from a student’s computer to a cloud
 drive by packet switching.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
For a Mother Tongue lesson, a teacher created a webpage in a non-English
 language.
 Some students who accessed the webpage saw random characters instead of
 the content intended by the teacher.
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the relevance of communications protocols in this context.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe how Unicode might address some of these problems.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A printing shop offers printing services to its customers.
 When a printing order is sent to the shop, the following information is
 recorded down:
\end_layout

\begin_deeper
\begin_layout Itemize
Date of order 
\end_layout

\begin_layout Itemize
Name of customer 
\end_layout

\begin_layout Itemize
Number of copies 
\end_layout

\begin_layout Itemize
Colour, or black and white, printing 
\end_layout

\begin_layout Itemize
Whether express printing is required
\end_layout

\begin_layout Standard
The printing shop accepts three types of orders, leaflets, books and posters.
\end_layout

\begin_layout Standard
Customers printing leaflets or books need to indicate if they require single
 side or double side printing.
\end_layout

\begin_layout Standard
In addition, for books, the type of cover (hard cover or soft cover) would
 need to be recorded.
 
\end_layout

\begin_layout Standard
Leaflets and books are available in three sizes (A3, A4 or A5), while posters
 are only available in a fixed size of A2.
\end_layout

\begin_layout Standard
For poster printing, customers have a choice of either glossy or matte finishing.
\end_layout

\begin_layout Standard
The total charge to user is determined by the specifications of the order
 and the formula is unique for each type of order.
\end_layout

\begin_layout Standard
This system is to be implemented using object-oriented programming (OOP).
\end_layout

\begin_layout Enumerate
Draw a class diagram, showing:
\end_layout

\begin_deeper
\begin_layout Itemize
Any derived classes and inheritance from the base class 
\end_layout

\begin_layout Itemize
The properties needed in the base, and any derived classes 
\end_layout

\begin_layout Itemize
Suitable methods to support the system with at least one getter and setter
\end_layout

\begin_layout Standard
The base class is 
\family typewriter
BASIC_ORDER
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the purpose of inheritance in object-oriented programing.
 
\begin_inset space \hfill{}
\end_inset

[2]  
\end_layout

\end_deeper
\begin_layout Enumerate
In a computer game, players’ names and scores are stored in a binary search
 tree, in increasing order of score.
\end_layout

\begin_deeper
\begin_layout Standard
The binary search tree has its data inserted in the following order:
\end_layout

\begin_layout Standard
Ryan 18 
\end_layout

\begin_layout Standard
Bella 25 
\end_layout

\begin_layout Standard
Joshua 27 
\end_layout

\begin_layout Standard
Shane 20 
\end_layout

\begin_layout Standard
Jasmine 17 
\end_layout

\begin_layout Standard
Alexis 21 
\end_layout

\begin_layout Standard
Leslie 15
\end_layout

\begin_layout Enumerate
Draw the binary search tree.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
The binary search tree is implemented using the two dimensional array shown
 below.
 Copy and fill in the entries in the array.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Score
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Left Pointer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Right Pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Enumerate
To delete a node from a binary tree, the following cases are considered:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Case
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node has no children
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Node is removed from tree
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node has one child
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Node is replaced with its child
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node has two children
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Call the node to be deleted 
\begin_inset Formula $D$
\end_inset

.
 Do not delete
\begin_inset Formula $D$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Look for the node 
\begin_inset Formula $E$
\end_inset

 that comes after 
\begin_inset Formula $D$
\end_inset

 in an in-order traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Copy the data 
\begin_inset Formula $E$
\end_inset

 into 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- Delete 
\begin_inset Formula $E$
\end_inset

 using one of the previous two cases.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Draw the tree at each step after the following players are deleted, one
 after another:
\end_layout

\begin_layout Enumerate
Joshua 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Jasmine
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
Ryan 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The program has a feature which allows the user to enter an integer.
 The program then returns a list of players whose score is greater than
 that integer.
 Describe how the program can create this list using the binary search tree.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
  
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
The following is the pseudocode for an in-place quicksort algorithm for
 sorting in ascending order.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01
\begin_inset space \qquad{}
\end_inset

FUNCTION Partition(L, R : INTEGERS, MyList : LIST) RETURNS INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
02
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Pivot ← MyList[R] 
\end_layout

\begin_layout Plain Layout

\family typewriter
03
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

i ← L 
\end_layout

\begin_layout Plain Layout

\family typewriter
04
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

j ← L 
\end_layout

\begin_layout Plain Layout

\family typewriter
05
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
06
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF MyList[j] > Pivot 
\end_layout

\begin_layout Plain Layout

\family typewriter
07
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
08
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\series bold
A
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
09
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
10
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Temp ← MyList[j] 11 MyList[j] ← MyList[i] 
\end_layout

\begin_layout Plain Layout

\family typewriter
12
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\series bold
B
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
13
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
14
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

UNTIL j = R 
\end_layout

\begin_layout Plain Layout

\family typewriter
15
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

MyList[R] ← MyList[i] // swap elements with index i and R 
\end_layout

\begin_layout Plain Layout

\family typewriter
16
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

MyList[i] ← Pivot 
\end_layout

\begin_layout Plain Layout

\family typewriter
17
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\series bold
C
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
18
\begin_inset space \qquad{}
\end_inset

ENDFUNCTION 
\end_layout

\begin_layout Plain Layout

\family typewriter
19
\begin_inset space \qquad{}
\end_inset

PROCEDURE Quicksort(L, R : INTEGERS, MyList : LIST) 
\end_layout

\begin_layout Plain Layout

\family typewriter
20
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF 
\series bold
D
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
21
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
22
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

PivotPos = Partition(R, L, MyList) 
\end_layout

\begin_layout Plain Layout

\family typewriter
23
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

CALL Quicksort(L, PivotPos - 1, MyList) 
\end_layout

\begin_layout Plain Layout

\family typewriter
24
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\series bold
E
\series default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
25
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
26
\begin_inset space \qquad{}
\end_inset

ENDPROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Write pseudo-code to replace 
\family typewriter
\series bold
A
\family default
\series default
, 
\family typewriter
\series bold
B
\family default
\series default
, 
\family typewriter
\series bold
C
\family default
\series default
, 
\family typewriter
\series bold
D
\family default
\series default
 and 
\family typewriter
\series bold
E
\family default
\series default
 in the above algorithm.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
State the time complexity of the algorithm in the above pseudo-code.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State and explain when the worst case scenario (for running time) for quicksort
 arises in the above algorithm.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Another programmer suggested insertion sort would be more efficient during
 the worst case scenario in (iii).
\end_layout

\begin_deeper
\begin_layout Standard
State and explain if insertion sort is indeed more efficient in this instance.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A program needs to store an array of names and scores in a two dimensional
 array and perform the following:
\end_layout

\begin_deeper
\begin_layout Itemize
Output the names and scores in alphabetical order.
 
\end_layout

\begin_layout Itemize
Check for the presence of a particular name
\end_layout

\begin_layout Standard
The data to be stored in the array is as follows:
\end_layout

\begin_layout Standard
Peter 68 
\end_layout

\begin_layout Standard
Mary 70 
\end_layout

\begin_layout Standard
Kelvin 48 
\end_layout

\begin_layout Standard
Casper 44 
\end_layout

\begin_layout Standard
Luther 76
\end_layout

\begin_layout Enumerate
Draw a flowchart to represent a linear search algorithm that returns the
 score of a particular name.
 
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\begin_layout Enumerate
Instead of storing the data in an array, it is suggested that the names
 could be stored in a hash table instead.
 
\end_layout

\begin_layout Standard
With reference to the requirements of the program, suggest one advantage
 and one disadvantage of storing the names in a hash table instead of an
 array.
 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
(iii) An array can be used to create the hash table data structure.
 Describe the process of inserting the above data into a hash table.
 You may assume there will be no collisions.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A programmer is tasked to write a program to store the examination scores
 of students in the entire school.
 For each student, the database would need to store the following data:
 name, form class, subject class, subject, score and subject teacher.
\end_layout

\begin_deeper
\begin_layout Enumerate
Suggest a suitable data type for each of the following fields: 
\end_layout

\begin_deeper
\begin_layout Itemize
Name 
\end_layout

\begin_layout Itemize
Class 
\end_layout

\begin_layout Itemize
Score 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The programmer is considering storing this data in either a relational or
 non-relational database.
\end_layout

\begin_deeper
\begin_layout Enumerate
State three key differences between the two types of databases.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
State and explain which database system the programmer should choose.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Standard
A healthcare group would like to store patient data in a relational database.
 When a patient visits the clinic, the clinic will record the following
 information:
\end_layout

\begin_layout Itemize
Date and time of visit 
\end_layout

\begin_layout Itemize
Name of attending doctor and his NRIC 
\end_layout

\begin_layout Itemize
Patient name and NRIC number
\end_layout

\begin_layout Standard
After the doctor has attended to the patient, the patient would be given
 a prescription.
 The prescription would record the medication which the patient is supposed
 to take.
 Each prescription, which consists of at least one medicine, would have
 its own unique identification number.
 Each medicine would have a unique identification number, name and price.
 
\end_layout

\begin_layout Standard
The data is stored in a relational database with five tables: 
\family typewriter
Patient
\family default
, 
\family typewriter
Doctor
\family default
, 
\family typewriter
Appointment
\family default
, 
\family typewriter
Prescription
\family default
 and 
\family typewriter
Medicine
\family default
.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Draw the Entity-Relationship (E-R) diagram to show the tables in third
 normal form (3NF) and the relationships between them.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 A table description can be written as:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TableName (Attribute1, Attribute2, Attribute3, …)
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
 Foreign keys are indicated by using a dashed underline.
\end_layout

\begin_layout Standard
Using the information provided, write table descriptions for the tables
 you identified in part (c).
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset

[]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
