#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A one-dimensional array 
\family typewriter
X
\family default
 will be used to record the timings of the participating teams racing in
 a 200 metres dragon boat race event.
 Five dragon boat teams will compete in the event, and the timing (in seconds)
 of each team will be captured as records in 
\family typewriter
X
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Timing, seconds
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
58.61 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
49.01 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
48.54 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
59.32 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
49.78
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\end_layout

\begin_layout Standard
A segment of the pseudocode to perform bubble sort is given below.
 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Line 1: 
\begin_inset space \qquad{}
\end_inset

flag <- TRUE 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 2: 
\begin_inset space \qquad{}
\end_inset

WHILE flag = TRUE DO 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 3: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

flag <- FALSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 4: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR i = 1 to N //N is the size of array X 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 5: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF X[i] > X[i+1] 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 6: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 7: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

SWAP(X[i], X[i+1])//swaps value of items 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 8: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

flag <- TRUE 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 9: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 10: 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NEXT i 
\end_layout

\begin_layout Plain Layout

\family typewriter
Line 11: 
\begin_inset space \qquad{}
\end_inset

ENDWHILE
\end_layout

\end_inset

 An error is detected in the pseudocode above.
 
\end_layout

\begin_layout Enumerate
Identify the error by stating the line number, and the type of error.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate

\series bold
Without
\series default
 changing the order and the types of constructs used, rectify the error
 in 
\series bold
(a)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Using the race timings of the dragon boat event given above, use a trace
 table to illustrate that the amended algorithm works.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Describe the worst case scenario, and state the worst case time complexity
 for performing the bubble sort using the algorithm given above.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
In the worst case scenario, state the total number of comparisons made by
 the bubble sort algorithm if 10 lanes are used.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
Every sales transaction made in JPJC supermarket is stored as a record in
 a serial file for auditing purposes.
 At the end of each day, a copy of the daily serial file, sorted by transaction
 amount in descending order will be archived into the main database.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a serial file? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Explain how an archive file is different from a backup file, and describe
 how a backup file for sales transactions can be created for JPJC supermarket.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
Merge sort algorithm is used to arrange the sales transaction records by
 ordering them in descending order of transaction amounts.
 The algorithm will first read all the daily unsorted sales transactions
 into 
\family typewriter
A
\family default
, a fixed size array of records with index starting from 1.
 Then, 
\family typewriter
mergesort
\family default
 will be applied to sort 
\family typewriter
A
\family default
.
 The pseudocode for 
\family typewriter
mergesort
\family default
 is given below, 
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
PROCEDURE mergesort(A: ARRAY of RECORDS, x, y: INTEGERS)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF x < y 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

m x + ((y - x) DIV 2) //DIV performs integer division 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(A, x, m) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

mergesort(A, m + 1, y) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

merge(A, x, m, y) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\end_layout

\begin_layout Plain Layout

\family typewriter
//---main program--- 
\end_layout

\begin_layout Plain Layout

\family typewriter
mergesort(A, x, y) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given that array 
\family typewriter
A = [39.10, 17.50, 35.40, 42.68, 8.90, 35.40]
\family default
, and 
\family typewriter
merge(A, x, m, y)
\family default
 will sort and combine elements of 
\family typewriter
A[x:m]
\family default
, and 
\family typewriter
A[m+1:y]
\family default
 into 
\family typewriter
A[x:y]
\family default
 in descending order.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 State the values of 
\family typewriter
x
\family default
, and 
\family typewriter
y
\family default
 when 
\family typewriter
mergesort
\family default
 is called in the main program.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 State the total number of times 
\family typewriter
mergesort
\family default
 and 
\family typewriter
merge
\family default
 are called in the entire program.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
The following diagram shows an incomplete trace tree diagram of the array
 of sales transaction records represented by its sales amount.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 Draw and complete the trace tree diagram above by applying merge sort to
 the unsorted array of records A.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 The time complexity for merge sort is 
\begin_inset Formula $O(N\log_{2}N)$
\end_inset

.
 Explain why this time complexity is applicable to the best, average and
 worst case scenarios.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
State what is meant by a recursive algorithm? 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain the difference between an iterative algorithm and a recursive algorithm.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Design a recursive algorithm 
\family typewriter
SumOfCubes(n)
\family default
 using pseudocode, that returns the integer value of series 
\begin_inset Formula 
\[
1^{3}+2^{3}+3^{3}+…+(n-1)^{3}+n^{3},
\]

\end_inset

where 
\begin_inset Formula $n=1,2,3,…$
\end_inset

 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Explain what will happen when the value of 
\family typewriter
n 
\family default
gets too large.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
The elections department of a town wishes to store the records of its voters
 in a linked list.
 The stored records are first ordered by the voter’s age (in years), followed
 by voter’s name in alphabetical order.
 The voters list is maintained with the record of the youngest voter at
 the start of the list.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why the sequence of nodes in a linked list does not always reflect
 how the data is stored in the memory of the computer.
 [2]   
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Age
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Link
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Tim Tan
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Annie Hao
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Bob Boon
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Lester Moh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
b
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
18
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Ari Bello
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
c
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
52
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Helen How
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
23
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Cindy Ku
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
d
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
55
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Charles Chu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
53
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Mimi Lee
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
e
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
40
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Jenny Tsai
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
f
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Head
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
g
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Free
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
8
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Two linked lists are kept to manage the actual data, and the free spaces.
 When a new item is added, a node is taken from the head of the free space
 list, and when a node is deleted, the deleted node will be returned to
 the tail of the free space list.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b)
\end_layout

\end_inset

 Given that 
\family typewriter
Ari Bello
\family default
 is the youngest voter, state the values of 
\family typewriter
a
\family default
, 
\family typewriter
b
\family default
, 
\family typewriter
c
\family default
, 
\family typewriter
d
\family default
, 
\family typewriter
e
\family default
, 
\family typewriter
f
\family default
, and 
\family typewriter
g
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Draw the 
\series bold
linked list diagram
\series default
 to show its state right after each of the following successive operations:
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Insert 
\family typewriter
18
\family default
 years old, 
\family typewriter
Ahmad Ali
\family default
.
 
\end_layout

\begin_layout Enumerate
Delete 
\family typewriter
23
\family default
 years old, 
\family typewriter
Cindy Ku
\family default
.
 
\end_layout

\begin_layout Enumerate
Insert 
\family typewriter
37
\family default
 years old, 
\family typewriter
Tania Tan
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Describe 
\series bold
one
\series default
 advantage and 
\series bold
one
\series default
 disadvantage of using a linked list over a static array.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
The stack is a first in last out data structure where the items are inserted
 to and deleted from the top of the stack.
 The items of the stack are globally stored in a fixed length array 
\family typewriter
S
\family default
 of size 20.
 A stack pointer 
\family typewriter
sp
\family default
 points to the top item in the stack, and is initialised to 0.
 The three basic methods of the stack are:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
PUSH(X) //inserts X as new item on the top of STACK S 
\end_layout

\begin_layout Itemize

\family typewriter
POP() 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

//removes and returns item at the top of STACK S.
 
\end_layout

\begin_layout Itemize

\family typewriter
PEEK() 
\begin_inset space ~
\end_inset

//returns value of the item on top of STACK S without removing it.
 
\end_layout

\begin_layout Enumerate
Write the pseudocode for the algorithms 
\family typewriter
PUSH(X)
\family default
, 
\family typewriter
POP()
\family default
, and 
\family typewriter
PEEK()
\family default
.
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Standard
The precedence order of the operators from highest to lowest is as follows:
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Parenthesis 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset


\family typewriter
 '^' 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 
\family typewriter
'*'
\family default
 or 
\family typewriter
'/'
\family default
 with equivalent level of priority 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
4.
\end_layout

\end_inset


\family typewriter
 '+'
\family default
 or 
\family typewriter
'-'
\family default
 with equivalent level of priority
\end_layout

\begin_layout Standard
The pseudocode below shows a stack-based function 
\family typewriter
InfixToPostfix
\family default
 that converts and returns an input expression represented in infix notation
 to its postfix form.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION InfixToPostfix(infix: STRING) RETURNS postfix 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

Scan through infix expression one token at a time from leftmost.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

Initialise empty STACK S 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

Initialise empty STRING postfix 
\end_layout

\begin_layout Plain Layout

\family typewriter
FOR token read from infix item by item 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

CASE of token: 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

operand : postfix <- postfix + token
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

'(' : PUSH(token) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

')' : REPEAT postfix <- postfix + POP() UNTIL POP() = '(' operator:
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

WHILE S not empty 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF token = '(' THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

BREAK 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF PEEK() is higher or equal precedence than token THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

postfix <- postfix + POP() 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDWHILE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

PUSH(token) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

END CASE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

NEXT token 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

postfix <- postfix + POP() 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

UNTIL S is empty 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

RETURN postfix 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b)
\end_layout

\end_inset

 Complete the trace table given below for 
\family typewriter
InfixToPostfix("A/(B-C)*D^E")
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
token 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING postfix 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Stack, S
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Appends to postfix 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
"A" 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
empty
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
/ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Push to S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
"A" 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
/
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
( 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Push to S 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
"A" 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
/,(
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
…………… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
…………… 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
……………
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Show, with the aid of diagrams, how the computer uses a stack to directly
 evaluate the value of the postfix expression 
\family typewriter
895-/12+*4-
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3] 
\end_layout

\end_deeper
\begin_layout Enumerate
Traversal was performed on the binary tree given below.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
List the nodes, in the order, that are visited for, 
\end_layout

\begin_deeper
\begin_layout Enumerate
in-order traversal, 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
pre-order traversal, and 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
post-order traversal.
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_deeper
\begin_layout Enumerate
A binary search tree is considered as an ordered binary tree where the key
 values of nodes in the left sub-tree are less than the value of its parent
 (root) node's key, and key values of nodes in the right sub-tree are greater
 than the value of its parent (root) node’s key.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain how a recursive algorithm can be used to locate a node with key
 value 
\family typewriter
search_key
\family default
 by returning 
\family typewriter
TRUE
\family default
 when 
\family typewriter
search_key
\family default
 is found, and 
\family typewriter
FALSE
\family default
 otherwise.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
State 
\series bold
one
\series default
 advantage of using binary search tree as data structure over linked list,
 and describe a situation that would negate this advantage.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Standard
  
\end_layout

\end_deeper
\begin_layout Enumerate
Car owners who wish to purchase or renew their insurance policy with XYZ
 Motor Insurance are required to accumulate not more than 6 demerit points
 in their driving records.
 Under this demerit points system, a driver who clocks up more than 20 demerit
 points will have his/her driving license revoked, thus denying the person
 from driving and from purchasing any vehicle insurance.
 Drivers who have not made any insurance claims for the past 3 years can
 get 2 demerit points off, and current employees of XYZ Motor Insurance
 can get 1 demerit point deducted.
 In addition, drivers awarded with certificate of merit can get 1 demerit
 point off as well.
 XYZ Motor Insurance only allows drivers to receive a maximum deduction
 of 3 demerit points per year.
 Draw a decision table to reflect the eligibility of car owners who wish
 to purchase or renew a car insurance policy with XYZ Motor Insurance.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
A company currently uses a computerised flat file to keep track of the monthly
 claims submitted by its employee, and has decided to use a relational database
 to store and manage the claims submitted by the employees instead.
 The following table shows the details of the computerised flat file.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Claims ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Item Description 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Staff ID 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Staff Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Department 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Amount
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2818
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phone charger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
P212
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
John Lee
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Production
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$53.23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3291
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Car Transport
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S281
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Chan, Molly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sales
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$31.40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3998
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Meal, Lunch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
O323 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Omar Hairi 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$7.20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4820 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AAA Batteries 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
E493 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muthu K.
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Engineering 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$10.17
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6322 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hard Drive 3TB 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A550 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jervois F.
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Accounts 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$27.99
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7384 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Medical 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M438 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zudin B Ali 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marketing 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
$48.00
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
….
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
State and justify 
\series bold
one
\series default
 reason made by the company to migrate its claims information from the existing
 flat file system to a relational database management system.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
State 
\series bold
two
\series default
 other fields which would be useful for the company to capture.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Given that the every claim is associated with one item, write the table
 descriptions of the relational database in 
\series bold
first normal form
\series default
 and 
\series bold
second normal form
\series default
.
 You are to include the fields in 
\series bold
(b)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
What is the denary value of hexadecimal ABCD? 
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
An integer variable of size 4 bytes is used to keep track of the number
 of commuters who travel to work from Jurong bus interchange.
 State the maximum number of commuters this variable can keep track.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
A program written using object-oriented programming has 
\family typewriter
point
\family default
, 
\family typewriter
circle
\family default
, and 
\family typewriter
cone
\family default
 as its defined classes.
 The following diagram below shows the attributes and methods of the class
 
\family typewriter
point
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
point 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Properties: 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROTECTED: 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
x-value: REAL 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
y-value: REAL 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Methods: 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PUBLIC: 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor() 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
getCoordinates(): TUPLE 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
setCoordinates(x, y: REAL)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Enumerate
Draw an inheritance diagram for 
\series bold
all
\series default
 the 
\series bold
three
\series default
 classes defined in the program.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Explain the differences between 
\end_layout

\begin_deeper
\begin_layout Enumerate
private and protected attributes/ methods of a class, 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
an object and a class.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A clinic manages patients’ medical and financial records through an Internet-bas
ed information management portal.
 Due to several security incidents related to unintended disclosure of patients’
 information, the clinic’s management has decided to migrate the portal
 to a local area network (LAN) that consists only 
\series bold
four
\series default
 computers and 
\series bold
one
\series default
 printer.
 Information of patients’ medical and financial records can only be accessed
 by authorised staff on one of the four computers.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Describe the meaning of the term local area network (LAN).
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain why ring networks today rarely use physical layout of a ring? 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Describe the functions of a multi-station access unit used in a Token Ring
 network.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Describe how token passing enables a computer to send data to the printer
 in this Token Ring network.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Enumerate
A programmer is writing a program to implement a role-playing computer game
 using Object-Oriented Programming (OOP).
\end_layout

\begin_deeper
\begin_layout Standard
The players have to collect food items.
 A food item has the following attributes:
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\end_layout

\begin_layout Itemize

\family typewriter
value : INTEGER
\end_layout

\begin_layout Standard
and the following methods:
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\end_layout

\begin_layout Itemize

\family typewriter
get_value()
\end_layout

\begin_layout Standard
A player takes on the role of a person.
 A person has the following attributes:
\end_layout

\begin_layout Itemize

\family typewriter
name : STRING 
\end_layout

\begin_layout Itemize

\family typewriter
health : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\end_layout

\begin_layout Itemize

\family typewriter
strength : INTEGER
\family default
 which is initialised at a value of 
\family typewriter
100
\end_layout

\begin_layout Standard
and the following methods:
\end_layout

\begin_layout Itemize

\family typewriter
get_name() 
\end_layout

\begin_layout Itemize

\family typewriter
get_health() 
\end_layout

\begin_layout Itemize

\family typewriter
get_strength() 
\end_layout

\begin_layout Itemize

\family typewriter
eat(food)
\family default
 adds the value of the food to the strength.
 The code should display the player’s new strength.
 
\end_layout

\begin_layout Itemize

\family typewriter
attack(opponent)
\end_layout

\begin_layout Standard
For the 
\family typewriter
attack
\family default
 method, 
\family typewriter
opponent
\family default
 is another person.
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated.
 
\end_layout

\begin_layout Itemize
If the player’s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to attack and there is no
 change to 
\family typewriter
opponent
\family default
’s 
\family typewriter
health
\family default
.
 
\end_layout

\begin_layout Itemize
If the player’s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the attack is successful and 
\family typewriter
opponent
\family default
’s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
r
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Itemize
If opponent’s health is now negative, then opponent has been defeated.
 
\end_layout

\end_deeper
\begin_layout Itemize
The player’s 
\family typewriter
strength
\family default
 is decreased by r.
\end_layout

\begin_layout Standard
There are two subclasses of the 
\family typewriter
Person
\family default
 class – 
\family typewriter
Healer
\family default
 and the 
\family typewriter
Warrior
\family default
.
\end_layout

\begin_layout Standard
Healer has one additional method:
\end_layout

\begin_layout Itemize

\family typewriter
heal(patient)
\end_layout

\begin_layout Standard
 
\end_layout

\begin_layout Standard
For the 
\family typewriter
heal
\family default
 method, 
\family typewriter
patient
\family default
 is another person.
\end_layout

\begin_layout Itemize
A random integer 
\family typewriter
r
\family default
 between 
\family typewriter
1
\family default
 and 
\family typewriter
10
\family default
 (inclusive) is generated.
 
\end_layout

\begin_layout Itemize
If the player’s 
\family typewriter
strength
\family default
 is less than 
\family typewriter
r
\family default
, then the player does not have enough strength to heal and there is no
 change to 
\family typewriter
patient
\family default
’s 
\family typewriter
health
\family default
.
 
\end_layout

\begin_layout Itemize
If the player’s 
\family typewriter
strength
\family default
 is at least 
\family typewriter
r
\family default
, then the healing is successful and 
\family typewriter
patient
\family default
’s 
\family typewriter
health
\family default
 is increased by 
\family typewriter
r
\family default
, up to a maximum of 
\family typewriter
100
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
Warrior
\family default
’s 
\family typewriter
attack
\family default
 method is twice as effective, meaning that if the player has enough strength
 to attack, 
\family typewriter
opponent
\family default
’s 
\family typewriter
health
\family default
 is decreased by 
\family typewriter
2*r
\family default
, while the player’s 
\family typewriter
strength
\family default
 is decreased by 
\family typewriter
r
\family default
.
\end_layout

\begin_layout Subsubsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Food
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
Task 1.2
\end_layout

\begin_layout Standard
Write program code to define the class 
\family typewriter
Person
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
attack
\family default
, including the new value of opponent’s 
\family typewriter
health
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Subsubsection*
Task 1.3
\end_layout

\begin_layout Standard
Use appropriate inheritance to write program code to define the class 
\family typewriter
Healer
\family default
.
\end_layout

\begin_layout Standard
The code should display appropriate messages about the outcome of 
\family typewriter
heal
\family default
, including the new value of 
\family typewriter
patient
\family default
’s 
\family typewriter
health
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsubsection*
Task 1.4
\end_layout

\begin_layout Standard
Use appropriate inheritance and polymorphism to write program code to define
 the class 
\family typewriter
Warrior
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
Test your code with the following steps in order:
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Food
\family default
 item with name 
\family typewriter
'Cheese'
\family default
 and value 
\family typewriter
10
\family default
.
 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Warrior
\family default
 with 
\family typewriter
name
\family default
 
\family typewriter
'Sam'
\family default
.
 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Healer
\family default
 with name 
\family typewriter
'Alex'
\family default
.
 
\end_layout

\begin_layout Itemize
Create a 
\family typewriter
Person
\family default
 with name 
\family typewriter
'Jan'
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
'Jan'
\family default
 attacks 
\family typewriter
'Sam'
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 attacks 
\family typewriter
'Jan'
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
'Alex'
\family default
 heals 
\family typewriter
'Jan'
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
'Sam'
\family default
 eats 
\family typewriter
'Cheese'
\family default
.
\end_layout

\begin_layout Standard
Download your program code and output for Task 1 as 
\family typewriter
TASK1_<your name>_<centre number>_<index number>.ipynb
\family default
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
An 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard consists of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 grid of small squares.
 For this task, the squares are numbered using a coordinate system as a
 tuple of two integers.
 The first integer is the column number, starting from 
\family typewriter
1
\family default
 at the left, and the second integer is the row number, starting from 
\family typewriter
1
\family default
 at the bottom.
\end_layout

\begin_deeper
\begin_layout Standard
A chess knight is a piece that occupies a square, and can then move to another
 square according to one of the following rules:
\end_layout

\begin_layout Itemize
moving two squares horizontally and then one square vertically in either
 direction, or 
\end_layout

\begin_layout Itemize
moving two squares vertically and then one square horizontally in either
 direction.
\end_layout

\begin_layout Standard
See the diagram below for examples.
\end_layout

\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(2,1)
\family default
 can move to 
\family typewriter
(1,3)
\family default
, 
\family typewriter
(3,3)
\family default
 or 
\family typewriter
(4,2)
\family default
.
 
\end_layout

\begin_layout Standard
The knight at 
\family typewriter
(6,7)
\family default
 can move to 
\family typewriter
(4,6)
\family default
, 
\family typewriter
(4,8)
\family default
, 
\family typewriter
(5,5)
\family default
, 
\family typewriter
(7,5)
\family default
, 
\family typewriter
(8,6)
\family default
 or 
\family typewriter
(8,8)
\family default
.
\end_layout

\begin_layout Standard
Only the starting and ending squares of the knight’s move are counted as
 being visited by the knight, and not the squares that the knight passes
 over while moving.
\end_layout

\begin_layout Standard
A knight’s tour is a sequence of moves that a chess knight makes on a chessboard
, so that it visits every square of the chessboard exactly once.
 It does not need to return to its starting square.
\end_layout

\begin_layout Subsubsection*
Task 2.1
\end_layout

\begin_layout Standard
For a given value of 
\family typewriter
n
\family default
 and a list of squares, write program code to determine if the list is a
 knight’s tour of an 
\begin_inset Formula $\mathtt{n\times n}$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
Test your code using the values
\family typewriter
 
\begin_inset Formula $\mathtt{n=7}$
\end_inset


\family default
 and the list of squares given in the files: 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2TOUR.txt
\family default
, which is a valid tour; 
\end_layout

\begin_layout Itemize

\family typewriter
TASK2NOTOUR.txt
\family default
, which is not a valid tour.
 
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Standard
An algorithm to generate a knight’s tour needs to keep track of the squares
 already visited, so that the knight does not visit them a second time during
 the tour.
\end_layout

\begin_layout Subsubsection*
Task 2.2
\end_layout

\begin_layout Standard
Suppose the knight is currently on square square, and a list of squares
 already visited by the knight is given in 
\family typewriter
lis
\family default
.
\end_layout

\begin_layout Standard
Write a function 
\family typewriter
available(square,lis)
\family default
 that returns a list of squares which the knight can visit on its next move
 from 
\family typewriter
square
\family default
, and are not currently in 
\family typewriter
lis
\family default
.
 These are the squares available to the knight as it tries to complete the
 tour.
\end_layout

\begin_layout Standard
The output should be given in lexicographic order, that is, with the column
 numbers in ascending order, and, among the squares with the same column
 number, with the row numbers in ascending order.
 [6]
\end_layout

\begin_layout Subsubsection*
Task 2.3
\end_layout

\begin_layout Standard
The knight starts at 
\family typewriter
(1,1)
\family default
, the bottom left square, of an 
\begin_inset Formula $8\mathtt{\times}8$
\end_inset

 chessboard.
\end_layout

\begin_layout Standard
From each square, the knight moves to the available square from which it
 has the smallest number of available squares after that.
 If there is a tie, the square which comes first in lexicographic order
 is chosen.
\end_layout

\begin_layout Standard
Write program code to generate the knight’s tour as a list of squares in
 the order they are visited.
\end_layout

\begin_layout Standard
Download your program code and output for Task 2 as TASK2_<your name>_<centre
 number>_<index number>.ipynb [9]
\end_layout

\end_deeper
\begin_layout Enumerate
  3 A text file INVENTORY.txt contains the inventory data for a certain electroni
cs store.
 Each line in the file contains tab-delimited data that shows the product
 name, product type, purchase price, selling price and quantity available.
\end_layout

\begin_deeper
\begin_layout Standard
Each line is in the format
\end_layout

\begin_layout Standard
Name
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\end_layout

\begin_layout Standard
where 
\backslash
t represents the tab character.
\end_layout

\begin_layout Standard
Task 3.1 
\end_layout

\begin_layout Standard
Write program code to:
\end_layout

\begin_layout Standard
• Read the inventory data from the text file; • Find the average selling
 price of products belonging to the Laptop product type and display this
 value; • Count the number of products in each product type and store it
 in appropriate data structure called TypeCount; • Display the product type
 with the greatest number of products.
 If there is a tie, display all of the product types with the greatest number
 of products.
\end_layout

\begin_layout Standard
Download your program code and output for Task 3.1 as TASK3_1_<your name>_<centre
 number>_<index number>.ipynb [6]
\end_layout

\begin_layout Standard
Task 3.2 
\end_layout

\begin_layout Standard
The profit margin of each product can be calculated by the following equation:
\end_layout

\begin_layout Standard
Profit margin = selling price – purchase price.
\end_layout

\begin_layout Standard
Write program code to:
\end_layout

\begin_layout Standard
• Calculate and display the total profit the store could make if all products
 are sold; • Sort the inventory data using a Merge sort algorithm in descending
 order of profit margin; • Display the sorted inventory data in the format
 given below.
\end_layout

\begin_layout Standard
Product Product Type Profit Margin ThinkingPad 14 Computer 300 Bapple 8
 Phone 450
\end_layout

\begin_layout Standard
Download your program code and output for Task 3.2 as TASK3_2_<your name>_<centre
 number>_<index number>.ipynb [9]
\end_layout

\begin_layout Standard
  Task 3.3
\end_layout

\begin_layout Standard
A store manager decided to make some changes to INVENTORY.txt and saved it
 as INVENTORY_SERIAL.txt.
 Each line in the updated file contains tab-delimited data that shows the
 serial number, product name, product type, purchase price, selling price
 and quantity available.
\end_layout

\begin_layout Standard
Each line is in the format:
\end_layout

\begin_layout Standard
Serial_No
\backslash
tName
\backslash
tType
\backslash
tPurchase_Price
\backslash
tSelling_Price
\backslash
tQuantity
\end_layout

\begin_layout Standard
where 
\backslash
t represents the tab character.
\end_layout

\begin_layout Standard
Write program code to insert the data from INVENTORY_SERIAL.txt into a NoSQL
 database OUTLETS under the collection GEM.
\end_layout

\begin_layout Standard
Download your program code for Task 3.3 as TASK3_3_<your name>_<centre number>_<i
ndex number>.py [5]
\end_layout

\begin_layout Standard
Task 3.4
\end_layout

\begin_layout Standard
The database administrator wants to validate that the store manager did
 not make any errors when he edited the text file.
 Write program code to check that the database conforms to the below specificati
ons:
\end_layout

\begin_layout Standard
• Serial_No consists of one digit followed by two letters, followed by one
 digit (e.g.
 1AB7); • Name consists of only letters, digits and spaces; • Quantity is
 a positive integer.
 Any document that has an error should be removed from the database.
 You may assume data fields not specified above are error free.
 Display the documents that were removed.
\end_layout

\begin_layout Standard
Download your program code for Task 3.4 as TASK3_4_<your name>_<centre number>_<i
ndex number>.py [5]
\end_layout

\end_deeper
\begin_layout Enumerate
4 A company keeps records of the employees working for it.
 The following are the information stored in the company’s database:
\end_layout

\begin_deeper
\begin_layout Standard
• Employee_name – name of the employee • Employee_ID – unique ID number
 allocated to each employee • Job_type – type of job the employee is employed
 for ('Sales' or 'Tech_support') • Date_of_employment – date the employee
 joined the company • Service_status – whether the employee is still in
 service ('True' means the employee is still in the company, 'False' means
 the employee has left the company) For sales employees, the following extra
 information is recorded:
\end_layout

\begin_layout Standard
• Total_sales – the amount of sales in dollars made by the employee For
 tech support employees, the following extra information is recorded:
\end_layout

\begin_layout Standard
• Bugs_resolved – the total number of bugs the employee has resolved The
 database is expected to be normalised and stored in three different tables:
\end_layout

\begin_layout Standard
Employee Sales Tech_support
\end_layout

\begin_layout Standard
Task 4.1
\end_layout

\begin_layout Standard
Create an SQL file called TASK4_1_<your name>_<centre number>_<index number>.sql
 to show the SQL code to create the database records.db with the three tables.
 Primary keys and foreign keys should be defined where appropriate.
\end_layout

\begin_layout Standard
Save your SQL code as TASK4_1_<your name>_<centre number>_<index number>.sql
 [5]
\end_layout

\begin_layout Standard
Task 4.2 The files SALES.txt and TECH_SUPPORT.txt contain information regarding
 the sales and tech support employees respectively.
 The information should be inserted into the database.
\end_layout

\begin_layout Standard
For SALES.txt, information is given in the following order: Employee_ID,Employee_
name,Date_of_Employment,Service_status,Total_Sales
\end_layout

\begin_layout Standard
For TECH_SUPPORT.txt, information is given in the following order: Employee_ID,Em
ployee_name,Date_of_Employment,Service_status,Bugs_resolved
\end_layout

\begin_layout Standard
Write a python program to insert all information from the two files into
 the records database, records.db.
 Run the program.
\end_layout

\begin_layout Standard
Save your program code as TASK4_2_<your name>_<centre number>_<index number>.py
 [5]
\end_layout

\begin_layout Standard
  Task 4.3
\end_layout

\begin_layout Standard
The company wants to filter the employees by Service_status and display
 the results in a web browser.
\end_layout

\begin_layout Standard
Write a Python program and the necessary files to create a web application
 that:
\end_layout

\begin_layout Standard
• receives a Service_status string from a HTML form, then • creates and
 returns a HTML document that enables the web browser to display either
\end_layout

\begin_layout Standard
o an ordered list of employees that are still in service, or o an ordered
 list of employees that are no longer in service,
\end_layout

\begin_layout Standard
depending on the Service_status string entered by the user.
\end_layout

\begin_layout Standard
The list should be sorted in alphabetical order.
\end_layout

\begin_layout Standard
Save your Python program as TASK4_3_<your name>_<centre number>_<index number>.py
 with any additional files / sub-folders as needed in a folder named TASK4_3_<yo
ur name>_<centre number>_<index number>
\end_layout

\begin_layout Standard
Run the web application.
 Save the output of the program when 'TRUE' is entered as the 
\end_layout

\end_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
