#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2017
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
You are provided with the usernames and passwords of some members of a recreatio
n club in the text file 
\family typewriter
ACCOUNTS.txt
\family default
.
 The format of each record is: 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
<username> <password> 
\end_layout

\begin_layout Standard
Sample records from the file:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
bzkoh F9obSbf2&
\end_layout

\begin_layout Plain Layout

\family typewriter
pdnathan %57+g/J[ 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Members use their usernames and passwords to login to the club’s portal
 to book facilities.
 Arising from a new IT security policy, all passwords must fulfil all the
 following requirements: 
\end_layout

\begin_layout Itemize
At least 8 characters in length, 
\end_layout

\begin_layout Itemize
At least 1 uppercase letter, 
\end_layout

\begin_layout Itemize
At least 1 lowercase letter, 
\end_layout

\begin_layout Itemize
At least 1 digit, 
\end_layout

\begin_layout Itemize
At least 1 punctuation mark / special symbol which is a printable ASCII
 character (excluding whitespace).
 
\end_layout

\begin_layout Standard
These characters have ASCII code (in decimal) from
\end_layout

\begin_layout Itemize
33 to 47
\end_layout

\begin_layout Itemize
58 to 64 
\end_layout

\begin_layout Itemize
91 to 96
\end_layout

\begin_layout Itemize
123 to 126 
\end_layout

\begin_layout Standard
For examples, ASCII code 33 is ‘
\family typewriter
!
\family default
’, ASCII code 47 is ‘
\family typewriter
/
\family default
’
\end_layout

\begin_layout Standard

\series bold
Examples of passwords that fulfil all requirements:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
AbCd35*n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
iloveApples2
\backslash

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
3#$%^&*(Kc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
<jumping9Jac>
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
Examples of passwords that do not meet all requirements and reasons: 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
cocoN8%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Less than 8 characters.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
coconut8%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No uppercase letter.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
COCO8888
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No lowercase letter.
 No symbol
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
iLikeDo^ 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No digit.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
EatLiv3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Less than 8 characters.
 No symbol.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
comeHome
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No digit.
 no symbol.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Task 1.1
\end_layout

\begin_layout Standard
Write program code to find all the passwords from the data file 
\family typewriter
ACCOUNTS.txt
\family default
 that do not meet the IT security requirements.
\end_layout

\begin_layout Standard
Display this list of passwords together with its usernames and reasons for
 not meeting requirements.
 
\end_layout

\begin_layout Standard
Display also the number of passwords that fail to meet requirements at the
 end of the listing.
 
\end_layout

\begin_layout Standard

\series bold
Sample output: 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
\bar under
Username
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 Password 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Reasons for not meeting requirements 
\end_layout

\begin_layout Plain Layout

\family typewriter
chiangyy 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

cocoN8% 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Less than 8 characters.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
ngpingyi 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

coconut8% 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

No uppercase letter.
\end_layout

\begin_layout Plain Layout

\family typewriter
joegomez 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

COCO8888 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 No lowercase letter.
 No symbol.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
michaelbb 
\begin_inset space ~
\end_inset

iLikeDo^ 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

No digit.
\end_layout

\begin_layout Plain Layout

\family typewriter
douglaslim EatLiv3 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Less than 8 characters.
 No symbol.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
yusufahmad comeHome 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

No digit.
 No symbol.
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
6 passwords do not meet requirements 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Evidence 1: 
\end_layout

\begin_layout Standard
Your program code for 
\series bold
task 1.1
\series default
.
 
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[14]
\end_layout

\begin_layout Subsection*
Evidence 2: 
\end_layout

\begin_layout Standard
Screenshot of running 
\series bold
task 1.1
\series default
.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\end_deeper
\begin_layout Enumerate
A Fibonacci series is a series of integers in which each number (Fibonacci
 number) is the sum of the two preceding numbers.
 This is the start of the Fibonacci series: 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
1, 1, 2, 3, 5, 8, 13, 21, 34, ......
\end_layout

\begin_layout Standard
The first two terms are both 1, and subsequent term is sum of previous two
 terms.
 
\end_layout

\begin_layout Standard
Using 
\family typewriter
Fibonacci(n)
\family default
 to define the nth term of the Fibonacci series, 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Fibonacci(1) = Fibonacci(2) = 1 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

, n = 1,2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Fibonacci(n) = Fibonacci(n-1) + Fibonacci(n-2), n = 3,4,5,......
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Examples:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
Fibonacci(3) = Fibonacci(2) + Fibonacci(1) = 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Fibonacci(4) = Fibonacci(3) + Fibonacci(2) = 3 
\end_layout

\begin_layout Plain Layout

\family typewriter
......
 
\end_layout

\begin_layout Plain Layout

\family typewriter
Fibonacci(9) = Fibonacci(8) + Fibonacci(7) = 34 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Task 2.1 
\end_layout

\begin_layout Standard
Write program code for a 
\series bold
recursive function
\series default
 
\family typewriter
fib
\family default
 to compute the nth term of the Fibonacci series.
 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
FUNCTION fib (n : INTEGER) : INTEGER
\family default
 
\end_layout

\begin_layout Standard
Write additional code to print the first 15 Fibonacci numbers using 
\family typewriter
fib
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 3:
\end_layout

\begin_layout Standard
Your program code for task 2.1 and screenshot of running task.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 2.2 
\end_layout

\begin_layout Standard
Write program code for a 
\series bold
non-recursive function
\series default
 
\family typewriter
fib_nr
\family default
 to compute the nth term of the Fibonacci series.
 
\end_layout

\begin_layout Standard
\noindent
\align center

\family typewriter
FUNCTION fib_nr (n : INTEGER) : INTEGER 
\end_layout

\begin_layout Standard
Write additional code to print the first 15 Fibonacci numbers using 
\family typewriter
fib_nr
\family default
.
 
\end_layout

\begin_layout Subsection*
Evidence 4: 
\end_layout

\begin_layout Standard
Your program code for task 2.2 and screenshot of running task.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Subsection*
Task 2.3
\end_layout

\begin_layout Standard
Recursive function 
\family typewriter
fib
\family default
 will call itself when it is run.
\end_layout

\begin_layout Standard
Amend your recursive function 
\family typewriter
fib
\family default
 to 
\series bold
\emph on
show the number of times
\series default
\emph default
 that the function 
\family typewriter
fib
\family default
 is called 
\emph on
from the main program
\emph default
 for a given value of 
\family typewriter
n
\family default
.
 
\end_layout

\begin_layout Standard
Test your amended program code by calling 
\family typewriter
fib(10)
\family default
 and 
\family typewriter
fib(30)
\family default
 to show the number of times that 
\family typewriter
fib
\family default
 is called when 
\family typewriter
n=10
\family default
 and 
\family typewriter
n=30
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 5:
\end_layout

\begin_layout Standard
Your amended program code for 
\family typewriter
fib
\family default
.
 Screenshots of running fib for 
\family typewriter
n=10
\family default
 and 
\family typewriter
n=30
\family default
.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Evidence 6: 
\end_layout

\begin_layout Standard
For any given value of 
\family typewriter
n
\family default
, function 
\family typewriter
fib
\family default
 takes a longer time to run than 
\family typewriter
fib_nr
\family default
.
 Explain why.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Enumerate
Write a program to find all the words in a text and print them in alphabetical
 order, along with its number of occurrences.
 Use a linked list to store this information.
 Each node of the linked list will hold a word, the number of occurrence
 of that word, and a pointer to the next node in alphabetical order.
 
\end_layout

\begin_deeper
\begin_layout Standard
Implement each node as an instance of the class 
\family typewriter
Node
\family default
, which has the following properties: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Word
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node's value for the word
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Count
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node's value for the number of occurrences of that word
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Pointer
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The pointer of the node
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Implement the linked list using an instance of the class 
\family typewriter
LinkedList
\family default
, which has the following properties and methods:
\end_layout

\begin_layout Itemize
Properties
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
WordList : ARRAY[20] of Node
\family default
 The words and number of occurrences from the text stored in an array of
 20 nodes
\end_layout

\begin_layout Itemize

\family typewriter
Start : INTEGER
\family default
 Index for the root position of the 
\family typewriter
WordList
\family default
 array 
\end_layout

\begin_layout Itemize

\family typewriter
NextFree :INTEGER
\family default
 Index for the next unused node 
\end_layout

\end_deeper
\begin_layout Itemize
Methods
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Initialise : PROCEDURE
\family default
 Sets all node data values to empty string (for 
\family typewriter
Word
\family default
) and 0 (for 
\family typewriter
Count
\family default
).
 Set pointers to indicate all nodes are unused and linked.
 Initialise values for 
\family typewriter
Start
\family default
 and 
\family typewriter
NextFree
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
Display : PROCEDURE
\family default
 Display the current state of array content and pointers in table index
 form.
\end_layout

\begin_layout Itemize

\family typewriter
Insert :PROCEDURE
\family default
 Insert word from the text into the linked list.
 If word exists in linked list, increment 
\family typewriter
Count
\family default
 by 1.
\end_layout

\begin_deeper
\begin_layout Standard
If word does not exist in linked list, add new node with new word and set
 
\family typewriter
Count
\family default
 to 1.
 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Maintain a linked list of all the unused nodes.
 Indicate 
\family typewriter
NULL
\family default
 with integer -1.
 
\end_layout

\begin_layout Standard
The diagram shows the linked list with:
\end_layout

\begin_layout Itemize
the words “
\family typewriter
the quick brown fox jumps
\family default
” added
\end_layout

\begin_layout Itemize
the unused nodes linked together.
\end_layout

\begin_layout Subsection*
Task 3.1 
\end_layout

\begin_layout Standard
Write the program code for the classes 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
, including the 
\family typewriter
Initialise
\family default
 and 
\family typewriter
Display
\family default
 method.
 The code should follow the specifications given.
 Do not write the 
\family typewriter
Insert
\family default
 procedure yet.
\end_layout

\begin_layout Subsection*
Evidence 7:
\end_layout

\begin_layout Standard
Your program code for the 
\family typewriter
Node
\family default
 and 
\family typewriter
LinkedList
\family default
 classes.
\begin_inset space \hfill{}
\end_inset

 [10]
\end_layout

\begin_layout Subsection*
Task 3.2 
\end_layout

\begin_layout Standard
Write program code in the 
\series bold
main program
\series default
 to create a linked list object and display the linked list in index order.
 
\end_layout

\begin_layout Subsection*
Evidence 8:
\end_layout

\begin_layout Standard

\series bold
Program code
\series default
 and 
\series bold
screenshot
\series default
 confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
 object.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsection*
Task 3.3 
\end_layout

\begin_layout Standard
Write the 
\family typewriter
Insert
\family default
 procedure that will insert a word from the text into the linked list.
 If word already exists in linked list, increment 
\family typewriter
Count
\family default
 by 1.
\end_layout

\begin_layout Standard
If word does not exist in linked list, add a new node with the new word
 and set 
\family typewriter
Count
\family default
 to 1.
 You should check for availability of free node before adding a new node.
 If you use additional method(s) and/or variable(s), present them in a table
 like this: 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Additional method / variable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\begin_inset Formula $\cdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
Add appropriate comments to explain your program code.
\end_layout

\begin_layout Subsection*
Evidence 9: 
\end_layout

\begin_layout Standard
Your program code for 
\family typewriter
Insert
\family default
 procedure and other methods (if any), 
\series bold
with suitable comments
\series default
.
 Table of additional method(s) and/or variable(s), if any.
 
\begin_inset space \hfill{}
\end_inset

[17]
\end_layout

\begin_layout Subsection*
Task 3.4 
\end_layout

\begin_layout Standard
Write additional code in the 
\series bold
main program
\series default
 to read all the words from the text file 
\family typewriter
WORDTEXT.txt
\family default
 and display the linked list in index order.
 
\end_layout

\begin_layout Subsection*
Evidence 10: 
\end_layout

\begin_layout Standard
Your 
\series bold
additional program code
\series default
 and 
\series bold
screenshot
\series default
 showing the contents of the linked list after reading in all the words
 from the text file 
\family typewriter
WORDTEXT.txt
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 3.5 
\end_layout

\begin_layout Standard
Write a 
\series bold
recursive
\series default
 
\family typewriter
ReverseTraversal
\family default
 procedure that will traverse the linked list in reverse order and display
 the words and its count.
 
\end_layout

\begin_layout Subsection*
Evidence 11: 
\end_layout

\begin_layout Standard
Your recursive 
\family typewriter
ReverseTraversal
\family default
 
\series bold
program code
\series default
 and 
\series bold
screenshot
\series default
 of running the procedure.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\end_deeper
\begin_layout Enumerate
Records of songs are stored in a hash table.
 Each song record is an instance of the class 
\family typewriter
SongRecord
\family default
, which has 
\family typewriter
SongID
\family default
 and 
\family typewriter
SongTitle
\family default
 as its data members.
\end_layout

\begin_deeper
\begin_layout Standard
Implement the hash table as an instance of the class 
\family typewriter
HashTable
\family default
 using the following properties and methods: 
\end_layout

\begin_layout Itemize
Properties
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Size
\family default
 Maximum number of addresses in hash table 
\end_layout

\begin_layout Itemize

\family typewriter
Array
\family default
 One-dimensional array of hash table to store records indexed 
\family typewriter
0
\family default
 to 
\family typewriter
(Size – 1)
\end_layout

\end_deeper
\begin_layout Itemize
Methods 
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Initialise :
\family default
 Initialises 
\family typewriter
Size
\family default
 and 
\family typewriter
Array
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
Hash
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
Function to calculate the address of the hash table 
\end_layout

\begin_layout Itemize
Takes 
\family typewriter
SongID
\family default
 as argument
\end_layout

\begin_layout Itemize
ASCII code is calculated for each character from 
\family typewriter
SongID
\end_layout

\begin_layout Itemize
Total of all ASCII values is calculated
\end_layout

\begin_layout Itemize
Total is divided by 
\family typewriter
Size
\family default
 and the remainder calculated with modulo arithmetic, where 
\family typewriter
Size
\family default
 is the maximum number of locations 
\end_layout

\begin_layout Itemize
Value returned by the function is 
\family typewriter
remainder
\family default
.
 This value is the address for the record in the hash table
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Display
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
Displays the contents of the hash table under this heading: 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Index
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Song ID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Song Title
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\dots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\dots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\dots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family typewriter
Add
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
Adds a record into the hash table 
\end_layout

\begin_layout Itemize
Takes 
\family typewriter
SongID
\family default
 and 
\family typewriter
SongTitle
\family default
 as arguments 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Remove
\family default
 
\end_layout

\begin_deeper
\begin_layout Itemize
Removes a record from the hash table
\end_layout

\begin_layout Itemize
Takes 
\family typewriter
SongID
\family default
 as argument 
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
For example, if 
\family typewriter
Size
\family default
 has value of 
\family typewriter
13
\family default
, a song record with 
\family typewriter
SongID “T3311”
\family default
 will be hashed to address 
\family typewriter
11
\family default
.
 
\end_layout

\begin_layout Standard
Total ASCII (“
\family typewriter
T
\family default
” + “
\family typewriter
3
\family default
” + “
\family typewriter
3
\family default
” + “
\family typewriter
1
\family default
” + “
\family typewriter
1
\family default
”) = 284
\end_layout

\begin_layout Standard
284 mod 13 = 11 
\end_layout

\begin_layout Standard
Therefore, add record with 
\family typewriter
SongID “T3311”
\family default
 to the hash table array with address 
\family typewriter
11
\family default
.
 
\end_layout

\begin_layout Subsection*
Task 4.1 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
SongRecord
\family default
, with data type specified clearly for its data members.
 
\end_layout

\begin_layout Subsection*
Evidence 12: 
\end_layout

\begin_layout Standard
Program code for class 
\family typewriter
SongRecord
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsection*
Task 4.2 
\end_layout

\begin_layout Standard
Write program code for the class 
\family typewriter
HashTable
\family default
, using the specifications above.
 Include all the methods stated: 
\family typewriter
Initialise
\family default
, 
\family typewriter
Hash
\family default
, 
\family typewriter
Display
\family default
, 
\family typewriter
Add
\family default
, and 
\family typewriter
Remove
\family default
.
 
\end_layout

\begin_layout Standard
Assume no collision of records for 
\family typewriter
Add
\family default
 and 
\family typewriter
Remove
\family default
 here.
 
\end_layout

\begin_layout Subsection*
Evidence 13: 
\end_layout

\begin_layout Standard
Program code for class 
\family typewriter
HashTable
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[14]
\end_layout

\begin_layout Subsection*
Task 4.3
\end_layout

\begin_layout Standard
Test your program code for 
\family typewriter
Size
\family default
 of value 13, by
\end_layout

\begin_layout Enumerate

\series bold
adding
\series default
 the following records into the hash table and 
\series bold
display
\series default
 the hash table.
 You may copy and paste these song records from the data file 
\family typewriter
SONG1.txt
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\bar under
Song ID
\bar default
 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\bar under
Song Title
\bar default
 
\end_layout

\begin_layout Plain Layout

\family typewriter
T3311 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Titanium
\end_layout

\begin_layout Plain Layout

\family typewriter
V2233 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Victory 
\end_layout

\begin_layout Plain Layout

\family typewriter
H7444 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Happy 
\end_layout

\begin_layout Plain Layout

\family typewriter
G5955 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Golden 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
removing
\series default
 song record 
\family typewriter
H7444
\family default
 and 
\series bold
display
\series default
 the hash table.
 
\end_layout

\begin_layout Subsection*
Evidence 14: 
\end_layout

\begin_layout Standard
Screenshots of running 
\series bold
task 4.3 (a) and (b)
\series default
.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsection*
Task 4.4 
\end_layout

\begin_layout Standard
Amend your program code to your 
\family typewriter
HashTable
\family default
 class to handle collisions when more than one record is hashed to the same
 location.
\end_layout

\begin_layout Standard
Explain how the collision handling works.
 
\end_layout

\begin_layout Standard

\series bold
\emph on
When adding a new record
\series default
\emph default
, ensure that no record with the same 
\family typewriter
SongID
\family default
 is stored in more than one location.
 Output an appropriate message if an existing song record is added.
 
\end_layout

\begin_layout Standard

\series bold
\emph on
When removing a record
\series default
\emph default
, output an appropriate message if record does not exist in hash table.
 
\end_layout

\begin_layout Subsection*
Evidence 15: 
\end_layout

\begin_layout Standard
Amended program code for 
\family typewriter
HashTable
\family default
 class.
\end_layout

\begin_layout Standard
Highlight your amended program code in 
\series bold
bold
\series default
.
 
\end_layout

\begin_layout Standard
Explanation of how collision handling works.
\begin_inset space \hfill{}
\end_inset

 [8]
\end_layout

\begin_layout Subsection*
Task 4.5
\end_layout

\begin_layout Standard
Test your amended program code by 
\end_layout

\begin_layout Enumerate
adding the following song records into the hash table.
 You may copy and paste these song records from the data file 
\family typewriter
SONG2.txt
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\bar under
Song ID
\bar default
 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\bar under
Song Title
\end_layout

\begin_layout Plain Layout

\family typewriter
G5955 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Golden
\end_layout

\begin_layout Plain Layout

\family typewriter
C9999 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Champion 
\end_layout

\begin_layout Plain Layout

\family typewriter
D7474 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Delta 
\end_layout

\begin_layout Plain Layout

\family typewriter
J8868 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Jump 
\end_layout

\begin_layout Plain Layout

\family typewriter
R1711 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Radar
\family default
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
removing song record 
\family typewriter
S1234
\family default
 and 
\family typewriter
G5955
\family default
.
\end_layout

\begin_layout Subsection*
Evidence 16: 
\end_layout

\begin_layout Standard
Screenshots of running 
\series bold
task 4.5 (a) and (b)
\series default
.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Standard
\noindent
A Foreign Government Agency is looking for a Tourist Information Management
 System.
 The system should be able to cater for the following two requirements:
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
a)
\end_layout

\end_inset

 Capture and provision of information for migration control propose and
 other aspects of citizen identification 
\end_layout

\begin_deeper
\begin_layout Standard
This is to facilitate the processing of Disembarkation/ Embarkation (D/E)
 cards collected from visitors at the checkpoints.
 It also captures visitors’ arrival data e.g., the number of arrivals by countries
 of residence, their modes of arrival and demographics (e.g., age and gender).
 
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
b)
\end_layout

\end_inset

 Data Warehouse for analysis 
\end_layout

\begin_deeper
\begin_layout Standard
The Data Warehouse has to receive data and code information on Disembarkation/Em
barkation cards (D/E cards).
 Information gathered in this manner is to analyse visitor arrival trends
 and serve as input to the computation of key performance indicators (Tourism
 Receipts, TourismSector Value, etc.)
\end_layout

\end_deeper
\begin_layout Standard
The Agency wishes to replace this manual system with a computerised system.
\end_layout

\begin_layout Standard
\noindent
A system developer is employed to carry out the task.
 The first task assigned to the system developer is to write a project proposal.
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists
 the problems in the current system.
 Write the Problem Statement.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Enumerate
The system developer has drawn up a list of activities and their likely
 duration.
 
\end_layout

\begin_deeper
\begin_layout Standard
Activity Description Weeks to complete A Write requirement specification
 1 B Produce program design 1 C Write module code 7 D Module testing 2 E
 Integration testing 2 F Alpha testing 2 G Install software and carry out
 acceptance testing 2 H Research and order hardware 1 J Install delivered
 hardware 3 K Write technical documentation 4 L Write user training guide
 2 M Train users on installed hardware and software 1 N Sign off final system
 1 Page 3 (a) From this data a GANTT chart is constructed.
 Activity A B C D E F G H J K L M N Week number 1 2 3 4 5 6 7 8 9 10 11
 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 Copy and complete the GANTT
 chart by adding activities M and N.
 [2] (b) State the earliest completion date in terms of week number.
 [1] (c) There are problems with the progress of the project: • Activity
 E showed that the code contained major errors.
 The senior programmer now estimates that: • further module coding will
 require another 2 weeks • further module testing will require another 2
 weeks • further integration testing will require another 2 weeks • The
 hardware delivery is delayed by 16 weeks A revised GANTT chart is now required
 Copy and complete the chart in the grid below Activity A B C D E F G H
 J K L M N Week number 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 [9] Page 4 (d) State the new estimated completion
 date in terms of week number.
 [1] A team was formed for the designing of this project.
 (e) Why the team work and the roles of team members working on a computer
 project are important? [2] 
\end_layout

\end_deeper
\begin_layout Enumerate
The design for the new system includes the provision of a network of computers
 in the office with a central file server.
 Each office staff will have access to a computer to retrieve and update
 visitors’ data held on the central file server.
 Some support staff are allowed to access the data but not change it.
 In addition the system has an Internet link which allows staff to access
 the system from outside the office.
 
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
three
\series default
 ways in which the security of this system can be implemented.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
The office staff enters information provided by visitor into the computer
 system using a graphical user interface.
 Some of the information required includes: • Passport number • visitor’s
 salutation (e.g.
 Dr., Mr., Ms, Mrs, Mdm…) • visitor name and address • visitor gender (e.g.
 F or M) • mobile number For this application design a simple screen layout
 which makes use of appropriate graphical user interface controls.
 [3] 
\end_layout

\begin_layout Enumerate
Top-down design is a technique used to produce solutions to computer system.
 (a) Explain the term top-down design.
 [3] (b) Explain three advantages of using top-down design to solve complex
 problems.
 [3] (c) Explain three techniques that can be used to ensure that program
 code is understandable and can be easily maintained.
 [3] Page 5 
\end_layout

\begin_layout Enumerate
The following pseudo-code algorithm describes one method of finding an arbitrary
 visitor name in an alphabetically ordered array of N unique names.
 set first to 1 set last to N repeat set mid to the integer part of (first
 + last) /2 If the mid name precedes the wanted name then set first to mid
 + 1 else set last to mid - 1 endif until first > last or midth name is
 the wanted name (a) If 142 names are stored in the array, and JOSEPH is
 the 44th name, state the elements of the array that are examined when searching
 for JOSEPH.
 [4] (b) If a search is made for a name that is not in the array, what is
 the largest number of elements that might need to be examined before one
 could say that the name is not present? Explain how you arrive at your
 answer.
 [3] 
\end_layout

\begin_layout Enumerate
Visitors can claim the GST (Goods and Services Tax) before they leave the
 country.
 A programmer is going to write part of the computer system using an object-orie
nted programming (OOP) language, which will store details of claims by visitor
 either pay by cash or hand phone transfer.
 The claim receive by hand phone transfer will have a rebate of 0.2%.
 while claim receive by cash will have to pay 0.5% of service charge and
 recording the currency exchange rate.
 Properties identified the claims included: • Passport number • Receipt
 number Type of claims (cash or hand phone transfer) Page 6 (a) Draw a diagram
 that shows how the properties could be distributed amongst a number of
 classes.
 Include in your diagram any inheritance between classes.
 Also indicate appropriate methods (including one pair of 'get' and 'set'
 methods for one of the properties) that would be required.
 One method should demonstrate polymorphism.
 [6] (b) In the context of object-oriented programming explain what is meant
 by: (i) Encapsulation and how classes support information hiding and implementa
tion independence.
 [3] (ii) Inheritance and how it promotes software reuse.
 [2] (iii) Polymorphism and how it enables code generalisation.
 [2] (iv) Computational thinking and why it is important? [5] (c) Give two
 advantages of object-oriented programming.
 [2]
\end_layout

\begin_layout Enumerate
The system developer recommending cloud computing for the Agency.
 (a) What are the three different layers of cloud computing? [3] (b) Discuss
 the benefits and drawbacks of using the cloud for storing data rather than
 other methods.
 [4] Page 7 
\end_layout

\begin_layout Enumerate
PJ Mall plans to create a database to store data on its shops.
 It rents out shops to tenants who run their business.
 • Each tenant is to provide information on its company name, director of
 company, company address, contact number, and retail type.
 • There is a start and end date for every rental.
 • Each shop rented by the tenant consists of one or more unit spaces.
 • Each unit space is located at a particular level and has a unit number.
 • There are 3 categories of unit space.
 Each category has its own size and rental rate.
 Category Size (square feet) Rental rate ($ per square feet) A Less than
 200 40 B 200 – 2000 30 C More than 2000 20 Here are some tenants who run
 their business in PJ mall: Company Name Level Unit Number Retail Type Bata
 2 03 – 04 Footwear Challenger 2 06 – 08 Technology Coldwear 3 08 Fashion
 Esprit 3 09 – 10 Fashion Giant 1 01 – 12 Supermarket Hi Tea 1 14 Food &
 Beverage PappaRich 2 11 – 13 Food & Beverage … … … … … (a) A solution is
 to create a relational database which requires a number of tables to store
 data for this application.
 (i) Draw the E-R diagram showing the tables and the relationships between
 them.
 [5] (ii) A table description can be described as TableName (Attrbute1,
 Attribute2, Attribute3, ……) The primary key is indicated by underlining
 one or more attributes.
 Write table descriptions for the tables in part (i).
 [6] (b) Describe two advantages of using a relational database for storing
 data on its shops rather than a customised software.
 [4] Page 8 
\end_layout

\begin_layout Enumerate
A dataset of fruit names is to be stored in a binary search tree.
 The names of the fruits are inserted into the tree in the order shown:
 Papaya, Mango, Durian, Strawberry, Orange, Rambutan, Watermelon (a) Draw
 the binary search tree.
 [3] The binary tree is implemented using these identifiers.
 Variable Data Type Description RootPtr INTEGER Array subscript of the root
 of tree Fruit ARRAY [1..100] of STRING Array of fruit names LeftPtr ARRAY
 [1..100] of INTEGER Array of left pointer values RightPtr ARRAY [1..100] of
 INTEGER Array of right pointer values (b) Draw a diagram to show the contents
 of the binary tree in array form and the root pointer variable for the
 fruits inserted in (a) above.
 [3] (c) The pseudocode shows an algorithm to search for a particular fruit
 in the binary tree.
 Additional variables SearchFruit, IsFound, and Current are used.
 INPUT SearchFruit IsFound ← False Current ← RootPtr REPEAT ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 ...
 UNTIL Current = 0 OR IsFound = TRUE IF IsFound = False THEN OUTPUT SearchFruit
 "Not found" ENDIF Complete the algorithm in the REPEAT-UNTIL loop by writing
 the missing lines.
 [6] Page 9 
\end_layout

\begin_layout Enumerate
The ASCII encoding system can be used to represent characters on computers.
 (a) The ASCII code in decimal for the numeric character ‘1’ is 49.
 Using 8 bits, what is the ASCII code for the character ‘4’ in binary? [2]
 (b) The ASCII codes for uppercase letters are from 01000001 for ‘A’ to
 01011010 for ‘Z’.
 What is the ASCII code for ‘W’ in binary? [2] (c) An alternative encoding
 system is Unicode.
 State one advantage and one disadvantage of using ASCII rather than Unicode.
 [2] 
\end_layout

\begin_layout Enumerate
A fashion shop gives customers a discount on purchases totalling more than
 $30: • Discount of 5% with a member card • Discount of 5% for purchases
 totalling more than $200 • Discount of 10% with a member card and for purchases
 totalling more than $200 Draw a decision table and simplify it by removing
 redundancies.
 [8]
\end_layout

\begin_layout Enumerate
The following list of numbers is to be sorted in ascending order.
 98, 12, 23, 8, 74, 30, 62 (a) Show the list of numbers after each pass
 by performing (i) a bubble sort, [3] (ii) an insertion sort.
 [3] (b) By comparing how the bubble and insertion sort work, explain which
 one is a faster sort.
\end_layout

\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[1]:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[2]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
In[3]:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
# Task 1.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Program Code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Output:
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
<INSERT_IMAGE_HERE>
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="28">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Plain text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
f
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
g
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
h
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
i
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
j
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
k
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
l
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
m
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
o
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
p
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
t
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
u
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
v
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
w
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Formula $\downarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is substituted by
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Cipher text alphabet:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
J
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
N
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
R
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
T
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
W
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Please enter a menu item index (or −1 to complete the order):
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
