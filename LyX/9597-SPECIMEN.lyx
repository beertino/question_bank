#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 Specimen Paper
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
A program is to process daily high scores recorded from an online game.
 The program can be run every day.
 
\end_layout

\begin_deeper
\begin_layout Standard
All scores are integers in the range 1 to 500.
\end_layout

\begin_layout Standard
The program reads from the file 
\family typewriter
HIGHEST.txt
\family default
, the current high score and player name from running the program on previous
 days.
 
\end_layout

\begin_layout Standard
The program specification is to: 
\end_layout

\begin_layout Itemize
input 
\series bold
up to
\series default
 5 player names and 5 scores 
\end_layout

\begin_layout Itemize
calculate and display on screen: 
\end_layout

\begin_deeper
\begin_layout Itemize
the highest score with the player name from today 
\end_layout

\begin_layout Itemize
a message saying whether or not a score today beat the current highest score
 
\end_layout

\end_deeper
\begin_layout Itemize
update the file 
\family typewriter
HIGHEST.txt
\family default
 if a higher score was input today.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 1.1
\end_layout

\begin_layout Plain Layout
\noindent
Write program code for this task.
\end_layout

\begin_layout Plain Layout
\noindent

\series bold
Evidence 1
\series default
: Your program code.
 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 1.2
\end_layout

\begin_layout Plain Layout
\noindent
Draw up a set of test data which tests the functionality of your program.
 Consider carefully all cases which could occur for both the scores input
 and the two processing requirements.
\end_layout

\begin_layout Plain Layout
\noindent

\series bold
Evidence 2
\series default
: A screenshot for each test case you considered.
 Annotate the screenshot explaining the purpose of each test.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The following is a pseudocode algorithm for a bubble sort on an array 
\family typewriter
Animal
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Standard
This array stores string data and has a final subscript 
\family typewriter
MAX
\family default
.
 
\end_layout

\begin_layout Standard
The algorithm is both poorly designed and inefficient (but does work).
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FOR A = 1 TO MAX - 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

FOR B = 1 TO MAX - 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF Animal(B) > Animal (B + 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Temp = Animal(B) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Animal(B) = Animal(B + 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Animal(B + 1) = Temp
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDFOR 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFOR 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 2.1
\end_layout

\begin_layout Plain Layout
\noindent
Write program code for this algorithm including all the improvements you
 would make to: 
\end_layout

\begin_layout Itemize
\noindent
follow good programming practice 
\end_layout

\begin_layout Itemize
\noindent
make the algorithm more efficient 
\end_layout

\begin_layout Plain Layout
\noindent
Use the sample array data available from text file 
\family typewriter
ANIMALS+SPORTS.txt
\family default
 and paste this into your programming code.
 
\end_layout

\begin_layout Plain Layout
\noindent

\series bold
Evidence 3
\series default
: Your program code.
 
\begin_inset space \hfill{}
\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 2.2
\end_layout

\begin_layout Plain Layout
The bubble sort code could be useful for many programs where a sort routine
 is required.
 Re-design the program code to have a procedure 
\family typewriter
BubbleSort
\family default
.
 This procedure should have parameters which allow it to be used for any
 array of string data.
 Use the data provided in the array 
\family typewriter
Sport
\family default
.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 4
\series default
: Your amended program code.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 5
\series default
: One screenshot showing the output from running the program code for array
 
\family typewriter
Sport
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
An application is to be created to store a number of countries and their
 population as a direct access file.
 It is estimated there are around 250 countries.
 
\end_layout

\begin_deeper
\begin_layout Standard
This data is provided in file 
\family typewriter
COUNTRIES.txt
\family default
.
 Each country takes up one line, for example: India 1173.108
\end_layout

\begin_layout Standard
Countries are written to and read from the direct access file using a hashing
 function.
 The address is calculated from a 
\series bold
hashing function
\series default
 as follows:
\end_layout

\begin_layout Itemize
The ASCII code is calculated for each character within the country string
 
\end_layout

\begin_layout Itemize
The total of all ASCII values is calculated 
\end_layout

\begin_layout Itemize
The total is divided by 373 and the remainder calculated with modulo arithmetic
 
\end_layout

\begin_layout Itemize
The value returned by the function is the (remainder + 1).
 This value is the address for the country name and population for this
 country.
\end_layout

\begin_layout Standard
For example, if the user inputs 
\series bold
India
\series default
, the value from the hashing function is 113.
 Therefore, write India to the file with address 113.
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 3.1 
\end_layout

\begin_layout Plain Layout
\noindent
Write program code for the hashing function using the following specification.
\end_layout

\begin_layout Plain Layout
\noindent
\align center

\family typewriter
FUNCTION HashKey (ThisCountry : STRING) : INTEGER
\end_layout

\begin_layout Plain Layout
The function has a single parameter 
\family typewriter
ThisCountry
\family default
 and returns the hash key (i.e.
 the address) as an integer.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 6
\series default
: Your 
\family typewriter
HashKey
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
Task 3.2 
\end_layout

\begin_layout Plain Layout
Write program code for a procedure 
\family typewriter
CreateCountry
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
the program reads the 
\series bold
first
\series default
 country name and the population from 
\family typewriter
COUNTRIES.txt
\family default
 
\end_layout

\begin_layout Itemize
the address is hashed from the country name using function 
\family typewriter
HashKey
\family default
 
\end_layout

\begin_layout Itemize
the data for this country is stored in the direct access file 
\family typewriter
NEWFILE
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 7
\series default
: Your 
\family typewriter
CreateCountry
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 3.3 
\end_layout

\begin_layout Plain Layout
Write program code for a procedure 
\family typewriter
LookUpCountry
\family default
 which does the following: 
\end_layout

\begin_layout Itemize
the user inputs the country name 
\end_layout

\begin_layout Itemize
the address is hashed from the country name 
\end_layout

\begin_layout Itemize
the country and population is located in 
\family typewriter
NEWFILE
\family default
 
\end_layout

\begin_layout Itemize
the address, the country name and population are output
\end_layout

\begin_layout Plain Layout
Run the program and retrieve Afghanistan from 
\family typewriter
NEWFILE
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 8
\series default
: Your 
\family typewriter
LookUpCountry
\family default
 program code.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 9
\series default
: A screenshot confirming the retrieval of the Afghanistan data.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
Task 3.4 
\end_layout

\begin_layout Plain Layout
Amend your 
\family typewriter
CreateCountry
\family default
 program code from Task 3.2 so that 
\series bold
all the country records
\series default
 are read from 
\family typewriter
COUNTRIES.txt
\family default
, their addresses calculated and the country data is written to 
\family typewriter
NEWFILE
\family default
.
\end_layout

\begin_layout Plain Layout

\series bold
You must ensure that when a collision occurs your program design will deal
 with this situation with the result that all records are written to NEWFILE.
\end_layout

\begin_layout Plain Layout
Add comment lines to your program code at the start of the procedure to
 describe your design for dealing with a collision.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 10
\series default
: Your program code for the amended procedure 
\family typewriter
CreateCountry
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[9]
\end_layout

\begin_layout Subsubsection*
Task 3.5 
\end_layout

\begin_layout Plain Layout
Amend your 
\family typewriter
LookupCountry
\family default
 procedure to find the country data affected by collisions.
 You must ensure that the address output is the one where the country data
 has been stored.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 11
\series default
: Your program code for the amended procedure 
\family typewriter
LookUpCountry
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 12
\series default
: Produce two screenshots showing the retrieval of 
\series bold
Chile
\series default
 and 
\series bold
India
\series default
 by the user.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The Romans had their own system of number representation which used a sequence
 of uppercase letter characters to represent a number.
 We shall consider the denary numbers 1 to 20 only.
 
\end_layout

\begin_deeper
\begin_layout Standard
The following letters represent each of the values shown:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Roman Numeral
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Five
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
L
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fifty
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A number is always written with the smallest number of characters, with
 the letters in sequence starting with the character with the largest value.
 
\end_layout

\begin_layout Itemize
For example, 6 is written 
\family typewriter
VI
\family default
 (not 
\family typewriter
IIIIII
\family default
) The exceptions to this sequence are as follows: 
\end_layout

\begin_layout Itemize
one less than 5 - which is written as 
\family typewriter
IV
\family default
 
\end_layout

\begin_layout Itemize
one less than 10 - which is written as 
\family typewriter
IX
\family default
 
\end_layout

\begin_layout Itemize
ten less than 50 - which is written as 
\family typewriter
XL
\family default
 
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 4.1 
\end_layout

\begin_layout Plain Layout
\noindent
Write program code with the following specification: 
\end_layout

\begin_layout Itemize
\noindent
Input a denary number in the range 1 to 20 
\end_layout

\begin_layout Itemize
\noindent
Validate the input 
\end_layout

\begin_layout Itemize
\noindent
Calculate the Roman numeral representation (write this code as a function)
 
\end_layout

\begin_layout Itemize
\noindent
Output the Roman number
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 13
\series default
: Your program code.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsubsection*
Task 4.2 
\end_layout

\begin_layout Plain Layout
Draw up a list of five suitable tests and provide screenshot evidence for
 your testing.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 14
\series default
: Annotated screenshots for each test data run.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Subsubsection*
Task 4.3 
\end_layout

\begin_layout Plain Layout
Write additional program code with appropriate data validation for the following
 specification: 
\end_layout

\begin_layout Itemize
Input two Roman numeral numbers between 1 and 20 
\end_layout

\begin_layout Itemize
Output the sum of the numbers as a Roman numeral number
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 15
\series default
: Your program code.
 
\begin_inset space \hfill{}
\end_inset

 []
\end_layout

\begin_layout Subsubsection*
Task 4.4 
\end_layout

\begin_layout Plain Layout
Draw up a list of three suitable tests and provide screenshot evidence for
 your testing.
\end_layout

\begin_layout Plain Layout

\series bold
Evidence 16
\series default
: Annotated screenshots for each test data run.
 
\begin_inset space \hfill{}
\end_inset

[] 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Enumerate
In a school each teacher is expected to keep paper records on each student
 that they teach.
 The teacher mark book contains data on student results in examinations,
 tests and homework assignments.
 Examination data for each student is extracted from the school examination
 summary results sheets.
 
\end_layout

\begin_deeper
\begin_layout Standard
In addition other records are also kept on one-to-one interviews between
 the teacher and the student (using an interview form) where recent performance
 and previous targets are discussed and new targets are set.
 
\end_layout

\begin_layout Standard
The school principal requires a regular report on each student's performance
 and new targets set.The teacher has to produce this report from information
 on the interview forms.
\end_layout

\begin_layout Standard
The school wishes to replace this manual system with a computerised system.
 A system developer is employed to carry out the task.
 The first task assigned to the system developer is to write a project proposal.
\end_layout

\begin_layout Enumerate
One section of the project proposal is the Problem Statement which lists
 the problems in the current system.
 Write the Problem Statement.
 [6]
\end_layout

\begin_layout Enumerate
The proposal is accepted and the system developer produces the following
 Program Evaluation and Review Technique (PERT) chart:
\end_layout

\begin_deeper
\begin_layout Standard
A - analysis of the solution 
\end_layout

\begin_layout Standard
B - design of the solution 
\end_layout

\begin_layout Standard
C - development of the solution 
\end_layout

\begin_layout Standard
D - documentation of the solution 
\end_layout

\begin_layout Standard
E - implementation of the solution 
\end_layout

\begin_layout Standard
F - testing of the solution
\end_layout

\begin_layout Standard
Time is measured in weeks.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q1-1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Enumerate
State the critical path.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
State the minimum time in which the project could be completed.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Explain dependent stages and concurrent stages.
 For each type of stage give an example from this chart.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
A decision is made that the PERT chart should show more detail with regard
 to testing.
 It is proposed that stage F (testing) should be removed from the chart
 and three new stages added:
\end_layout

\begin_deeper
\begin_layout Standard
L - black box testing - 2 weeks 
\end_layout

\begin_layout Standard
M - white box testing - 2 weeks 
\end_layout

\begin_layout Standard
N - beta testing - 3 weeks
\end_layout

\begin_layout Standard
Redraw the PERT chart to show the effect of these changes.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q1-2.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
The Gantt chart above is based on the information in part (b).
 There are two activities missing and also one of the activities shown is
 incorrect.
 Draw a sketch of the Gantt chart to show the correct version.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
As a result of the analysis carried out a dataflow diagram (DFD) is used
 to summarise the current system.
 This DFD is used in the initial stages of the design.
\end_layout

\begin_deeper
\begin_layout Enumerate
Draw a DFD for the system described above.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
By using examples from your DFD explain how the diagram helps to specify
 three important components of the current system.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
The design for the new system includes the provision of a network of computers
 in the school with a central file server.
 Each teacher will have access to a computer to retrieve and update student
 data held on the central file server.
 Some support staff are allowed to access the data but not change it.
 In addition the system has an Internet link which allows teachers to access
 the system from outside the school.
\end_layout

\begin_deeper
\begin_layout Standard
Describe three ways in which the security of this system can be maintained.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
It is proposed that the system is also made available to students and their
 parents.
 Both students and their parents would be allowed to add data to the system.
 
\end_layout

\begin_deeper
\begin_layout Standard
Give an example of what parents and students could be allowed to do and
 state the ethical issue that may arise out of this.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the difference between data validation and data verification.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_deeper
\begin_layout Standard
A car insurance company allows customers to insure their car using one of
 the two methods: 
\end_layout

\begin_layout Itemize
method A: by using the Internet or 
\end_layout

\begin_layout Itemize
method B: by using the telephone to talk to a sales representative
\end_layout

\end_deeper
\begin_layout Enumerate
For method A describe how the car registration could be validated.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
For method B describe how the car registration could be verified.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
The sales representative enters information provided by new customers into
 the computer system using a graphical user interface.
 Some of the information required includes: 
\end_layout

\begin_deeper
\begin_layout Itemize
customer salutation 
\end_layout

\begin_layout Itemize
customer name and address 
\end_layout

\begin_layout Itemize
customer gender 
\end_layout

\begin_layout Itemize
car registration number
\end_layout

\begin_layout Standard
For this application design a simple screen layout which makes use of appropriat
e graphical user interface controls.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A recursive procedure for finding a value, 
\family typewriter
SearchItem
\family default
, in an ordered array 
\family typewriter
X
\family default
, is as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 PROCEDURE Search(Low, High) 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}
\end_inset

Middle <- (Low + High) DIV 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

IF X[Middle] = SearchItem THEN OUTPUT "found" 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}
\end_inset

IF X[Middle] > SearchItem 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Search(Low, Middle - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Search(Middle + 1, High) 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDPROCEDURE
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: the 
\family typewriter
DIV
\family default
 operation returns an integer quotient after division e.g.
 
\family typewriter
7 DIV 2 = 3
\end_layout

\begin_layout Enumerate
Using the above procedure explain what is meant by a recursive algorithm.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_deeper
\begin_layout Standard
Array 
\family typewriter
X
\family default
 has 15 elements and the subscripts start at 1.
\end_layout

\end_deeper
\begin_layout Enumerate
If the procedure was used to search the array 
\family typewriter
X
\family default
 for the value stored at 
\family typewriter
X[3]
\family default
 state the calls to Search as the recursion executes.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
A program is to be written using this procedure.
 Explain why the search for an item not present in the array would eventually
 result in the program crashing.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Explain what changes need to be made to this procedure so that it handles
 the case where 
\family typewriter
SearchItem
\family default
 is not present in array 
\family typewriter
X
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
An email packet consists of 128 bytes.
 The first 126 bytes contain both control data and also a part of the email
 message.
 Byte 127 in the packet is a checksum.
 Byte 128 is currently not used.
 Even parity is used in each byte.
\end_layout

\begin_deeper
\begin_layout Enumerate
If the first seven bits of a byte are 0 0 1 1 0 1 1 state the value of the
 parity bit.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
A computer receives a packet which contains the following byte: 0 1 1 0
 1 1 1 0.
 Describe the actions of the computer upon receipt of this byte.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
Describe how the checksum byte is produced by the sender computer.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
It is decided to use the unused byte as a parity byte.
 Explain, using an example, how this byte could be used to detect and correct
 a single bit error in the packet.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
A programmer is going to write an application, using an object-oriented
 programming language, which will store details of the vehicles available
 for hire from a vehicle rental company.
 The company hires out both cars and vans.
 The conditions of the hire state that cars can only carry passengers and
 vans can only carry loads.
 Properties identified include:
\end_layout

\begin_deeper
\begin_layout Itemize
Registration code 
\end_layout

\begin_layout Itemize
Maximum number of passengers 
\end_layout

\begin_layout Itemize
Maximum load weight 
\end_layout

\begin_layout Itemize
Type of vehicle
\end_layout

\begin_layout Enumerate
Draw a diagram that shows how the properties could be distributed amongst
 a number of classes.
 Include in your diagram any inheritance between the classes.
 Also indicate some of the methods that would be required.
 One method should demonstrate polymorphism.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Enumerate
The company decide that they wish to also rent out minibuses for the carrying
 of passengers.
 They decide to offer 6, 12 or 14 seater minibuses.
 Explain how this affects the classes, properties and methods given in 
\series bold
(a)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\begin_layout Enumerate
Explain, using this example, why encapsulation is an example of good programming
 practice.
 
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\begin_layout Enumerate
An order form used by the customer of a supplier of goods has the following
 form: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\begin_layout Itemize
Each customer may send many orders.
 
\end_layout

\begin_layout Itemize
Each order may have multiple lines for products.
 
\end_layout

\begin_layout Itemize
One line contains the details for the order of an individual product.
 
\end_layout

\begin_layout Itemize
A product can appear only on one line on an order.
 
\end_layout

\begin_layout Itemize
A product may occur on many different orders.
\end_layout

\begin_layout Enumerate
Identify the tables that will give a normalized solution to this problem.
 Draw an E-R diagram that shows these tables and the relationships between
 them.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Enumerate
A table description can be expressed as:
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\family typewriter
TableName(
\bar under
Attribute1
\bar default
, Attribute2, Attribute3, …)
\end_layout

\begin_layout Standard
The primary key is indicated by underlining one or more attributes.
\end_layout

\begin_layout Standard
Give the table descriptions for the tables.
 
\begin_inset space \hfill{}
\end_inset

[10] 
\end_layout

\end_deeper
\end_deeper
\end_body
\end_document
