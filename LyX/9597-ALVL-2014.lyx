#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
9597 ALVL 2014
\end_layout

\begin_layout Subsection
Paper 1
\end_layout

\begin_layout Enumerate
Many applications require the user to search for a data item from a file
 or one-dimensional array.
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
JARGON.TXT
\family default
 is a text file containing computing terms with one term per line.
 The program will read all the terms from 
\family typewriter
JARGON.TXT
\family default
 into an array.
\end_layout

\begin_layout Standard
The user will choose if the type of search is to find:
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 An exact match 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 A match at the beginning of the term text
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 A match anywhere within the term text
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 1.1
\end_layout

\begin_layout Plain Layout
Design and write program code to:
\end_layout

\begin_layout Itemize
Read the entire contents of 
\family typewriter
JARGON.TXT
\family default
 into an array 
\end_layout

\begin_layout Itemize
Allow the user to repeatedly select the type of search, then input a term
 
\end_layout

\begin_layout Itemize
Output the matching term(s) found 
\end_layout

\begin_layout Itemize
Output a count of the number of matches 
\end_layout

\begin_layout Itemize
End with the input of term "XXX"
\end_layout

\begin_layout Plain Layout
A typical run of the program is shown below:
\end_layout

\begin_layout Plain Layout

\family typewriter
+++++++++++++++++++++++ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1.
 Exact match 
\end_layout

\begin_layout Plain Layout

\family typewriter
2.
 Start of term 
\end_layout

\begin_layout Plain Layout

\family typewriter
3.
 Within term 
\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++ 
\end_layout

\begin_layout Plain Layout

\family typewriter
Choice ?1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Term?firewall 
\end_layout

\begin_layout Plain Layout

\family typewriter
firewall 
\end_layout

\begin_layout Plain Layout

\family typewriter
There were 1 matching term(s)
\end_layout

\begin_layout Plain Layout

\family typewriter
+++++++++++++++++++++++ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1.
 Exact match 
\end_layout

\begin_layout Plain Layout

\family typewriter
2.
 Start of term 
\end_layout

\begin_layout Plain Layout

\family typewriter
3.
 Within term 
\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++ 
\end_layout

\begin_layout Plain Layout

\family typewriter
Choice ?2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Term?data 
\end_layout

\begin_layout Plain Layout

\family typewriter
data flow diagram 
\end_layout

\begin_layout Plain Layout

\family typewriter
database management system 
\end_layout

\begin_layout Plain Layout

\family typewriter
data file 
\end_layout

\begin_layout Plain Layout

\family typewriter
database 
\end_layout

\begin_layout Plain Layout

\family typewriter
There were 4 matching term(s)
\end_layout

\begin_layout Plain Layout

\family typewriter
+++++++++++++++++++++++ 
\end_layout

\begin_layout Plain Layout

\family typewriter
1.
 Exact match 
\end_layout

\begin_layout Plain Layout

\family typewriter
2.
 Start of term 
\end_layout

\begin_layout Plain Layout

\family typewriter
3.
 Within term 
\end_layout

\begin_layout Plain Layout

\family typewriter
++++++++++++++++++
\end_layout

\begin_layout Plain Layout

\family typewriter
Choice ?3 
\end_layout

\begin_layout Plain Layout

\family typewriter
Term?box 
\end_layout

\begin_layout Plain Layout

\family typewriter
white box testing 
\end_layout

\begin_layout Plain Layout

\family typewriter
black box testing 
\end_layout

\begin_layout Plain Layout

\family typewriter
There were 2 matching term(s)
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 1
\end_layout

\begin_layout Plain Layout
The program code.
 
\begin_inset space \hfill{}
\end_inset

[11]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 1.2
\end_layout

\begin_layout Plain Layout
Study the contents of 
\family typewriter
JARGON.TXT
\family default
 and then design four test cases to thoroughly test the working of your
 program code.
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 2
\end_layout

\begin_layout Plain Layout
State the test data used in Task 1.2 and show screenshots to confirm the
 successful testing of each of your four test cases.
 
\begin_inset space \hfill{}
\end_inset

[4] 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A binary search (binary chop) is a technique to search for a value in an
 ordered dataset.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 2.1
\end_layout

\begin_layout Plain Layout
Study the identifier table and incomplete recursive algorithm.
 
\end_layout

\begin_layout Plain Layout
The missing parts of the algorithm are labelled A, B and C.
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Variable
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ThisArray
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ARRAY OF STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Array containing the the dataset
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
FindValue
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Item to be found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Low
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lowest index of the considered list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
High 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Highest index of the considered list 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Middle 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The array index for the middle position of the current list considered
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION BinarySearch(ThisArray, FindValue, Low, High) RETURNS INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

DECLARE Middle : INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF ...............
 A ...............
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN -1 // not found 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// calculate new Middle value 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Middle ← ...............
 B ...............
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF ThisArray[Middle] > FindValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN BinarySearch(ThisArray, FindValue, Low, Middle - 1) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF ThisArray[Middle] < FindValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

...............
 C ...............
 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

RETURN Middle // found at position Middle 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDFUNCTION 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 3
\end_layout

\begin_layout Plain Layout
What are the three missing lines in this pseudocode? 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 2.2
\end_layout

\begin_layout Plain Layout
Write a program to implement binary search.
 
\end_layout

\begin_layout Plain Layout
The program will
\end_layout

\begin_layout Itemize
Call procedure InitialiseAnimals 
\end_layout

\begin_layout Itemize
Input an animal name
\end_layout

\begin_layout Itemize
Use the function BinarySearch 
\end_layout

\begin_layout Itemize
Report whether or now this animal name was found.
 If found, also output the index position.
\end_layout

\begin_layout Plain Layout
The array in the program has identifier 
\family typewriter
MyAnimal
\family default
.
 
\end_layout

\begin_layout Plain Layout
Use the dataset given in the file 
\family typewriter
ANIMALS.TXT
\family default
.
 You should paste the contents of this file into your program.
 The statements will form the basis of the code for the procedure 
\family typewriter
InitialiseAnimals
\family default
.
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 4
\end_layout

\begin_layout Plain Layout
Program code for Task 2.2 
\begin_inset space \hfill{}
\end_inset

[7]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 5
\end_layout

\begin_layout Plain Layout
Screenshot to confirm that an animal wich is present in the list was found
 with its index position displayed.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 2.3
\end_layout

\begin_layout Plain Layout
Amend the program as follows: 
\end_layout

\begin_layout Plain Layout
The program must also output the number of function calls carried out.
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 6
\end_layout

\begin_layout Plain Layout
The amended program code.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 7
\end_layout

\begin_layout Plain Layout
Screenshots showing the amended ouput for runs of the program where: 
\end_layout

\begin_layout Itemize
the animal is found
\end_layout

\begin_layout Itemize
the animal is not found.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A program is to be written to represent and implement a linked list of nodes.
 Each node contains a string data value and a pointer.
 The pointers link the data items in alphabetical order.
 
\end_layout

\begin_deeper
\begin_layout Standard
The unused nodes are linked as shown below.
 The first unused node is the position where the next new data item is to
 be stored.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-ALVL-2014-P1-Q3.png
	width 50page%

\end_inset


\end_layout

\begin_layout Standard
The diagram shows the linked list with: 
\end_layout

\begin_layout Itemize
the items MANGO, ORANGE, BANANA and LEMON (added in that order).
 
\end_layout

\begin_layout Itemize
the unused nodes linked together.
\end_layout

\begin_layout Standard
Each node is implemented as an instance of the class
\family typewriter
 ListNode
\family default
.
 The class 
\family typewriter
ListNode
\family default
 has the following properties: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Class
\family typewriter
: ListNode
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PointerValue
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A linked list is implemented as an instance of the class 
\family typewriter
LinkedList
\family default
.
 The class 
\family typewriter
LinkedList
\family default
 has the following properties and methods: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Class
\family typewriter
: LinkedList
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Properties
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Node
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ARRAY[30] OF ListNode
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The linked list data structure — data values and pointers.The array index
 starts at 1.For testing purposes the dataset has a maximum of 30 items.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index position of the node at the start of the linked list
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
NextFree
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Index position of the next unused node 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methods
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Initialise
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROCEDURE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sets all the node data values to ‘empty string’.
\end_layout

\begin_layout Plain Layout
Set pointers to indicate all nodes are unused and linked.
\end_layout

\begin_layout Plain Layout
lnitialise values for 
\family typewriter
Start
\family default
 and 
\family typewriter
NextFree
\family default
.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
AddNode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROCEDURE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Add a new data item to the linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Traversal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROCEDURE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Display the data items in order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ReverseTraversal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROCEDURE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Display the data items in reverse order.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DisplayLinkedList
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
PROCEDURE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Display the current state of pointers and the array contents.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
IsEmpty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
FUNCTION RETURNS BOOLEAN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tests for empty linked list.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
IsFull
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
FUNCTION RETURNS BOOLEAN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tests for no unused nodes.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 3.1
\end_layout

\begin_layout Plain Layout
Write program code that repeatedly:
\end_layout

\begin_layout Itemize
displays a menu with the following choices: 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
1.
\end_layout

\end_inset

 Add an item 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
2.
\end_layout

\end_inset

 Traverse the linked list of used nodes and output the data values 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
3.
\end_layout

\end_inset

 Output all pointers and data values 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
4.
\end_layout

\end_inset

 Exit 
\end_layout

\end_deeper
\begin_layout Itemize
calls an appropriate procedure depending on the user's choice.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 8
\end_layout

\begin_layout Plain Layout
Program code for Task 3.1.
\begin_inset space \hfill{}
\end_inset

 [5]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 3.2
\end_layout

\begin_layout Plain Layout
Write program code for the classes 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 including the 
\family typewriter
IsEmpty
\family default
 method.
 The code should follow the specification given.
 
\end_layout

\begin_layout Plain Layout
Do not attempt to write the methods 
\family typewriter
AddNode
\family default
, 
\family typewriter
Traversal
\family default
, 
\family typewriter
ReverseTraversal
\family default
 or 
\family typewriter
IsFull
\family default
 at this stage.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 9
\end_layout

\begin_layout Plain Layout
Program code for the 
\family typewriter
ListNode
\family default
 and 
\family typewriter
LinkedList
\family default
 classes (Task 3.2).
\begin_inset space \hfill{}
\end_inset

 [12]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 3.3
\end_layout

\begin_layout Plain Layout
Write code to create a 
\family typewriter
LinkedList
\family default
 object in the main program.
\end_layout

\begin_layout Plain Layout
Run the program and select menu choice 3 to confirm the initial values of
 the pointers and data values when the linked list is empty.
 [10]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 10
\end_layout

\begin_layout Plain Layout
Screenshot confirming all values after initialisation of the 
\family typewriter
LinkedList
\family default
 object (Task 3.3).
 
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 3.4
\end_layout

\begin_layout Plain Layout
Consider the 
\family typewriter
AddNode
\family default
 method.
 The following algorithm will add a new data item to the linked list.
 
\end_layout

\begin_layout Plain Layout
The algorithm uses the variables below:
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
NewItem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
New data item input by the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Found
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
BOOLEAN
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flags to 
\family typewriter
TRUE
\family default
 when the position at which to insert the new item has been found
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Current
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Current array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Previous
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Previous array index position during list traversal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Temp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Temporary storage of pointer value
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
PROCEDURE AddNode 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

INPUT NewItem 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

Node[NextFree].DataValue <— NewItem 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF Start = 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Start <— NextFree 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Temp <— Node[NextFree].PointerValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[NextFree].PointerValue <— 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NextFree <— Temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// traverse the list - starting at Start to find 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// the position at which to insert the new item 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Temp <— Node[NextFree].PointerValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF NewItem < Node[Start].DataValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// new item will become the start of the list 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[NextFree].PointerValue <— Start 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Start <— NextFree 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NextFree <— Temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// the new item is not at the start of the list 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Previous <— 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Current <— Start 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Found <— False 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

REPEAT 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF NewItem <= Node[Current].DataValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[Previous].PointerValue <— NextFree 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[NextFree].PointerValue <— Current 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NextFree <— Temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Found <— True 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ELSE 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// move on to the next node 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Previous <— Current 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Current <— Node[Current].PointerValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

UNTIL Found = True OR Current = 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF Current <— 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[Previous].PointerValue <— NextFree 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Node[NextFree].PointerValue <— 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

NextFree <— Temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPROCEDURE 
\end_layout

\begin_layout Plain Layout
Note: The above pseudocode is available in the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Write code to implement for the 
\family typewriter
LinkedList
\family default
 class: 
\end_layout

\begin_layout Itemize
the 
\family typewriter
AddNode
\family default
 method 
\end_layout

\begin_layout Itemize
the 
\family typewriter
IsFull
\family default
 method.
 
\end_layout

\begin_layout Plain Layout
You may use the text file 
\family typewriter
PSEUDOCODE_TASK_3_4.TXT
\family default
 as a basis for the writing of your code.
 
\end_layout

\begin_layout Plain Layout
The main program should check each time that the 
\family typewriter
LinkedList
\family default
 object is not full before using the 
\family typewriter
AddNode
\family default
 method.
 
\end_layout

\begin_layout Plain Layout
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values: 
\end_layout

\begin_deeper
\begin_layout Plain Layout
MANGO, ORANGE.
 BANANA.
 LEMON in that order.
 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 3 to display.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 11
\end_layout

\begin_layout Plain Layout
Program code for method 
\family typewriter
AddNode
\family default
.
 
\begin_inset space \hfill{}
\end_inset

[8]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 12
\end_layout

\begin_layout Plain Layout
Screenshot showing the pointers and the addition of the four nodes to the
 linked list.
\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 3.5
\end_layout

\begin_layout Plain Layout
Write program code to implement the 
\family typewriter
LinkedList
\family default
 class method 
\family typewriter
Traversal
\family default
 by calling the 
\family typewriter
TraversalInOrder
\family default
 procedure given below.
 
\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
PROCEDURE TraversalInOrder(Index) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF Index <> 0 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

THEN 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

OUTPUT Node[lndex].DataValue 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

// follow the pointer to the next data item in the linked list 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

TraversalInOrder(Node[Index].PointerValue) 
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ENDIF 
\end_layout

\begin_layout Plain Layout

\family typewriter
ENDPRCCEDURE 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 13
\end_layout

\begin_layout Plain Layout
Program code for procedures 
\family typewriter
Traversal
\family default
 and 
\family typewriter
TraversalInOrder
\family default
.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 3.6
\end_layout

\begin_layout Plain Layout
Run the program as follows: 
\end_layout

\begin_layout Itemize
Menu choice 1 four times, inputting the data values: 
\end_layout

\begin_deeper
\begin_layout Plain Layout
MANGO, ORANGE, BANANA.
 LEMON in that order.
 
\end_layout

\end_deeper
\begin_layout Itemize
Menu choice 2 to display.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 14
\end_layout

\begin_layout Plain Layout
Screenshot showing the program execution to test the 
\family typewriter
Traversal
\family default
 method.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 3.7
\end_layout

\begin_layout Plain Layout
Make a copy of the 
\family typewriter
TraversalInOrder
\family default
 and 
\family typewriter
Traversal
\family default
 procedures.
\end_layout

\begin_layout Plain Layout
Paste to form two new procedures 
\family typewriter
TraversalInReverseOrder
\family default
 and 
\family typewriter
ReverseTraversal
\family default
.
 
\end_layout

\begin_layout Plain Layout
Make the necessary changes/additions to these procedures in order that the
 data items are output in reverse order by calling the new method 
\family typewriter
ReverseTraversal
\family default
.
\end_layout

\begin_layout Plain Layout
Run the program code from a new menu choice 4.
\end_layout

\begin_layout Plain Layout
Test the method using the four items given in Task 3.6.
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 15
\end_layout

\begin_layout Plain Layout
Program code for the new procedures.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 16
\end_layout

\begin_layout Plain Layout
Screenshot showing option 4 selected and the resulting output.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Design and code a computer program to simulate the following: 
\end_layout

\begin_deeper
\begin_layout Standard
A garden has a rectangular fish pond measuring 15 metres by 8 metres.
 
\end_layout

\begin_layout Standard
The pond is to be represented on the screen by a rectangular grid.
 Each square metre of the pond is represented by an x-coordinate and a y-coordin
ate.
 The top left square metre of the pond display has x = 1 and y = 1.
 
\end_layout

\begin_layout Standard
A boy throws a stone into the pond.
 The user will input the x-coordinate and y-coordlnate of the stone impact
 position.
 
\end_layout

\begin_layout Standard
A grid representing the pond is then displayed with the stone's impact position:
 
\end_layout

\begin_layout Standard

\family typewriter
X coordinate <1 to 15>? 9 
\end_layout

\begin_layout Standard

\family typewriter
Y coordinate <1 to 8>? 3 
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 S .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task 4.1
\end_layout

\begin_layout Plain Layout
The following are the suggested characters to use for the visual representation
 of the pond: 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Character
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ASCII code (decimal)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stone impact position
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
Decide on the design to be used for: 
\end_layout

\begin_layout Itemize
The data structure to represent the grid
\end_layout

\begin_layout Itemize
The contents of each square metre of the pond 
\end_layout

\begin_layout Itemize
Procedure(s) and/or function(s)s to be used 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 17
\end_layout

\begin_layout Plain Layout
Show your program design (Task 4.1).
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 4.2
\end_layout

\begin_layout Plain Layout
Write program code to display the pond contents after a single stone has
 been thrown.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 18
\end_layout

\begin_layout Plain Layout
The program code.
 
\begin_inset space \hfill{}
\end_inset

 [7]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 19
\end_layout

\begin_layout Plain Layout
Screenshot for a single run of the program.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 4.3
\end_layout

\begin_layout Plain Layout
The boy has been told to stop throwing stones into the pond because the
 pond now has three fish.
 The fish randomly swim around.
 Each fish will occupy a unique grid position.
\end_layout

\begin_layout Plain Layout
Using a random number generator, simulate the positioning of the three fish.
 
\end_layout

\begin_layout Plain Layout
Use the following character for a fish: 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Character
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ASCII code (decimal)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
Write program code to show the pond containing the three fish at a particular
 instance of time.
 The program will now only display the pond and fish.
 
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 20
\end_layout

\begin_layout Plain Layout
The program code for Task 4.3.
 
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 21
\end_layout

\begin_layout Plain Layout
Screenshot for a single run of the program.
 
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Subsubsection*
\noindent
Task 4.4
\end_layout

\begin_layout Plain Layout
The boy has been asked to feed the fish.
 He cannot see the fish in the pond.
 He throws a food pellet into the pond which lands inside one of the square
 metres.
 If one of the fish is in this square.
 it eats the food and becomes a happy fish.
 
\end_layout

\begin_layout Plain Layout
Use character symbols for the pond‘s grid display as follows: 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Character
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ASCII code (decimal)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Represents
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
46
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
One square metre of water
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
P
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
80
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pellet (if not eaten by one of the fish)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Happy (fed) fish
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
70
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fish
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
Write program code to simulate the boy throwing one food pellet into the
 pond.
 The user will input an x-coordinate and y-coordinate for the food pellet
 position.
 You should consider the possible reuse of any code from Tasks 4.2 and 4.3.
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 22
\end_layout

\begin_layout Plain Layout
The program code.
\begin_inset space \hfill{}
\end_inset

 [6]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence 23
\end_layout

\begin_layout Plain Layout
Screenshotevldence similar to that shown which shows: 
\end_layout

\begin_layout Itemize
one throw which did not feed a fish 
\end_layout

\begin_deeper
\begin_layout Plain Layout

\family typewriter
X coordinate <1 to 15>? 2 
\end_layout

\begin_layout Plain Layout

\family typewriter
Y coordinate <1 to 8>? 5 
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 F .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 P .
 .
 .
 .
 .
 .
 .
 .
 F .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 F .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\end_deeper
\begin_layout Itemize
a second throw where a fish was fed 
\end_layout

\begin_deeper
\begin_layout Plain Layout

\family typewriter
X coordinate <1 to 15>? 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
Y coordinate <1 to 8>? 5 
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 F
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
H .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 F .
 .
 .
 .
 .
 .
 .
\end_layout

\begin_layout Plain Layout

\family typewriter
.
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
 .
\family default

\begin_inset space \hfill{}
\end_inset

 [3]
\end_layout

\end_deeper
\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Paper 2
\end_layout

\begin_layout Enumerate
A supermarket chain wants to encourage customers to return to its store.
 They operate a scheme of rewards for customers based on how much they spend
 over a period of time.
\end_layout

\begin_deeper
\begin_layout Standard
Customers are issued with a card that is readable by a Point of Sale (POS)
 terminal.
 When a customer provides their card at the checkout, the system identifies
 them and stores the products they purchased and how much they spent.
\end_layout

\begin_layout Standard
Currently the only use of this data is to issue the customer with vouchers
 every three months.
 Vouchers have a value based on the total amount the customer has spent
 during the previous three months.
 The vouchers can only be used in part payment for goods bought in the supermark
et.
\end_layout

\begin_layout Standard
The supermarket managers want to make more use of the customer purchase
 data.
 They hire a software development company to produce software that will
 implement new uses of the data.
\end_layout

\begin_layout Standard
Software developers have skills in developing software.
 The supermarket managers have in depth knowledge of their business.
 At first, software developers will have little knowledge of the business.
\end_layout

\begin_layout Enumerate
Explain how the supermarket managers can communicate to the software developers
 what they require.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
Before designing the new software, the software developers need to understand
 the content and structure of the customer purchase data.
 Give two methods that can be used for this task, justifying the use of
 each.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Enumerate
Once the analysis phase has been completed, describe what decisions software
 developers need to make before coding can begin.
 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\begin_layout Standard
The work to implement new uses of the customer data needs to be managed.
 The following Program Evaluation and Review Technique (PERT) chart is used
 as a management tool.
\end_layout

\begin_layout Standard
Time is measured in weeks.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-ALVL-2014-P2-Q1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Each activity indicated by a dashed line on the PERT chart is a dummy activity.
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain the nature and purpose of a dummy activity.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Enumerate
Each of the following activities matches one of the labels A-H on the chart.
\end_layout

\begin_deeper
\begin_layout Itemize
write user documentation 
\end_layout

\begin_layout Itemize
train users 
\end_layout

\begin_layout Itemize
write code 
\end_layout

\begin_layout Itemize
convert files
\end_layout

\begin_layout Itemize
test code 
\end_layout

\begin_layout Itemize
end-user testing 
\end_layout

\begin_layout Itemize
test system 
\end_layout

\begin_layout Itemize
install new hardware
\end_layout

\begin_layout Standard
Copy and complete the following table, 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="50col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Activity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
E
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
F
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
G
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
H
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain the significance of the dummy activity that leads into event 8.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

 From the PERT chart:
\end_layout

\begin_deeper
\begin_layout Enumerate
State the critical path.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
State the minimum time in which the new software can be developed and implemente
d.
\begin_inset space \hfill{}
\end_inset

 [1]
\end_layout

\begin_layout Enumerate
The chart omits an activity: 
\series bold
write technical documentation
\series default
.
 State a starting point and a finishing point for this activity.
 Justify your choices.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\begin_layout Standard
Management staff can already access the company network remotely for other
 software applications.
 Management are to be given the facility to access, and interact with, the
 customer data Via the company LAN.
 However, a decision is made not to allow access to the customer data remotely
 for this updated system.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(f)
\end_layout

\end_inset

 Describe 
\series bold
two
\series default
 methods which can be used to ensure that there is no remote access to customer
 data by management staff.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
ln the new system, customers will have access to information through a web
 browser.
 Each customer will be able to see some information about their purchase
 history.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(g)
\end_layout

\end_inset

 Explain what software needs to be developed to provide this customer facility.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(h)
\end_layout

\end_inset

 One of the software developers has the task of ensuring that social issues
 are considered.
 This developer has to document these issues.
 
\end_layout

\begin_deeper
\begin_layout Standard
Describe 
\series bold
two
\series default
 issues that might be in the document with regard to customers accessing
 their data.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Consider the following binary tree:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-ALVL-2014-P2-Q2.png
	width 50page%

\end_inset


\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for a post-order traversal.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
List the nodes, in order, that are visited for an inorder traversal.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
What property is exhibited by the list of items produced in 
\series bold
part (b)
\series default
? 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Describe an algorithm, using pseudocode, to perform a binary tree search.
 The output should state whether or not the item is present in the tree.
 
\begin_inset space \hfill{}
\end_inset

[5]
\end_layout

\end_deeper
\begin_layout Enumerate
A network manager for a sales company types the following into his computer:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
copy C:
\backslash
monthlysales
\backslash
*.dat E
\backslash
:
\backslash
backup
\backslash
junesales /V
\end_layout

\begin_layout Enumerate
State the type of user interface being used.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
Describe, using the example, two benefits of the user interface named in
 
\series bold
(a)
\series default
.
 
\begin_inset space \hfill{}
\end_inset

[4]
\end_layout

\begin_layout Standard
The network manager has a disabled user who cannot use a keyboard but can
 control a point-and-click device that moves a pointer on the screen.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Describe a user interface that would allow this user to enter text into
 a word processor.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 The sales company provides a special user interface for this user.
 State
\series bold
 two
\series default
 benefits to the company.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
A small local area network (LAN) in a school consists of one switch, one
 file server and ten computers.
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why circuit switching could be used in this LAN.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
The network has a connection to the lnternet added.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(b)
\end_layout

\end_inset

Explain how packet switching is used when a web page is downloaded from
 the Internet.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\begin_layout Standard
A packet from the web server consists of 256 bytes.
 One of the bytes is the checksum byte.
 In each byte one bit is the parity bit.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 If the byte 0 0 1 1 0 1 0 1 results in a parity error, state the type of
 parity being used.
 
\begin_inset space \hfill{}
\end_inset

[1]
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 The receiving computer uses the checksum byte to check whether the packet
 contains an error.
 Explain how it does this.
\begin_inset space \hfill{}
\end_inset

 [4]
\end_layout

\end_deeper
\begin_layout Enumerate
A software developer is given the task of producing software for a college.
 The software will help to manage information about what students do after
 finishing at the college.
\end_layout

\begin_deeper
\begin_layout Standard
The destination of each student after college is classified in one of three
 possible ways:
\end_layout

\begin_layout Itemize
University
\end_layout

\begin_layout Itemize
Employment 
\end_layout

\begin_layout Itemize
Other
\end_layout

\begin_layout Standard
The college wishes to store:
\end_layout

\begin_layout Itemize
name 
\end_layout

\begin_layout Itemize
number of A Level passes 
\end_layout

\begin_layout Itemize
destination (U / E / O) 
\end_layout

\begin_layout Itemize
university attended 
\end_layout

\begin_layout Itemize
main subject studied at university 
\end_layout

\begin_layout Itemize
type of employment 
\end_layout

\begin_layout Itemize
what students do when their destination is classified as 'O'
\end_layout

\begin_layout Standard
The software developer will use an objectoriented approach to developing
 a solution.
\end_layout

\begin_layout Enumerate
Draw a class diagram which exhibits the following:
\end_layout

\begin_deeper
\begin_layout Itemize
suitable classes with appropriate properties and methods 
\end_layout

\begin_layout Itemize
inheritance 
\end_layout

\begin_layout Itemize
polymorphism 
\begin_inset space \hfill{}
\end_inset

[6]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain how your solution to (a) demonstrates software reuse.
\begin_inset space \hfill{}
\end_inset

 [2]
\end_layout

\begin_layout Standard
The data on the students is to be stored in a serial text file called STUDENT.DAT.
 Each line of the file has the same structure:
\end_layout

\begin_layout Standard

\family typewriter
<Name><NoOfPasses><Destination><University><MainSubject><EmpType><Other>
\end_layout

\begin_layout Standard
with the string NULL stored where appropriate.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 Write an algorithm, in pseudocode, to read data from 
\family typewriter
STUDENT.DAT
\family default
 and to output the following:
\end_layout

\begin_deeper
\begin_layout Itemize
total number of students going to university 
\end_layout

\begin_layout Itemize
average number of passes for the students going to university e total number
 of students
\begin_inset space \hfill{}
\end_inset

 [7]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A function is to be written that returns the sum of all values held in an
 array that are greater than a minimum value.
 The function will be used with arrays of varying size, but never more than
 a maximum of 50 000 elements.
\end_layout

\begin_deeper
\begin_layout Standard
A first attempt at writing the program code for the function is given below:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
01 FUNCTION TotalSum(Results : ARRAY[50000] OF REAL, ArraySize : INTEGER,
 MinValue : REAL) RETURNS REAL 
\end_layout

\begin_layout Plain Layout

\family typewriter
02 
\begin_inset space \qquad{}
\end_inset

DECLARE Sum, Counter : INTEGER 
\end_layout

\begin_layout Plain Layout

\family typewriter
03 
\begin_inset space \qquad{}
\end_inset

DECLARE Temp : Real 
\end_layout

\begin_layout Plain Layout

\family typewriter
04 
\begin_inset space \qquad{}
\end_inset

Sum = 0.0 
\end_layout

\begin_layout Plain Layout

\family typewriter
05 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

FOR Counter = 1 TOO ArraySize 
\end_layout

\begin_layout Plain Layout

\family typewriter
06 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Temp = Results[Counter] 
\end_layout

\begin_layout Plain Layout

\family typewriter
07 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

IF Temp > MinValue THEN Sum = Sum * Temp 
\end_layout

\begin_layout Plain Layout

\family typewriter
08 
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

ENDEOR 
\end_layout

\begin_layout Plain Layout

\family typewriter
09 
\begin_inset space \qquad{}
\end_inset

RETURN Sum 
\end_layout

\begin_layout Plain Layout

\family typewriter
10 ENDFUNCTION
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The function is included in a program specifically written to test the function.
 The main program outputs the value returned by the function.
 A compiler was used to compile the source program.
\end_layout

\begin_layout Enumerate
The compiler reported an error at line 5 in the function.
 Identify the error and explain why it was flagged as a syntax error.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
The compiler also reported an error at line 8.
 State the type of error reported by the compiler justifying your answer.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Standard
The errors indicated in 
\series bold
parts (a)
\series default
 and 
\series bold
(b)
\series default
 were corrected.
 A successful compilation produces executable code.
 When the code was executed, the program failed to complete and reports
 an error at line 7.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(c)
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Enumerate
State the type of error that occurred.
 Justify your answer.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\begin_layout Enumerate
The error described in 
\series bold
part (c) (i)
\series default
 depends on the detection of another type of error.
 Name this other type of error.
 How should the code be changed to correct this error?
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Standard
When the program finally runs without error, the test plan needs to be completed.
 The test plan uses data that tests different sizes of array, different
 array values and different minimum values.
 
\end_layout

\begin_layout Standard
The array 
\family typewriter
TempArray
\family default
 is used in the main program as the array to be processed.  
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(d)
\end_layout

\end_inset

 Each element of 
\family typewriter
TempArray
\family default
 stores a random value between 1.0 and 10.0.
\end_layout

\begin_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 1000, 5.0)
\end_layout

\begin_layout Standard
is not an appropriate black box test.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\begin_layout Enumerate
Explain why the function call:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
TotalSum(TempArray, 10, 10.5)
\end_layout

\begin_layout Standard
is not an appropriate white box test.
 
\begin_inset space \hfill{}
\end_inset

[2]
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
(e)
\end_layout

\end_inset

if each element of 
\family typewriter
TempArray
\family default
 stores the value 1.0, state a function call that will be an appropriate
 black box test.
 Justify your answer.
 
\begin_inset space \hfill{}
\end_inset

[3]
\end_layout

\end_deeper
\begin_layout Section
9597 ALVL 201X TEMPLATE
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsubsection*
\noindent
Task X.X
\end_layout

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset

[10]
\end_layout

\begin_layout Subsubsection*

\series bold
Evidence X
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\family typewriter
FUNCTION CalCheckDigit(Number AS STRING, Total AS INTEGER) RETURNS STRING
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IF LENGTH(Number) > 1 THEN
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset


\begin_inset space \qquad{}
\end_inset

Digit <- INTEGER(LBFT(Number,1))
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
// Calculate ISBN, an example of how the function is called.
\end_layout

\begin_layout Plain Layout

\family typewriter
// Second parameter is always 0.
\end_layout

\begin_layout Plain Layout

\family typewriter
ISBN = CalCheckDigit("184146208",0)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Class: Connection Node
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Attributes
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Identifier
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 1col%
\end_inset


\family default
Data Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 5col%
\end_inset


\family default
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
DataValue
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The node data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
LeftChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The left node pointer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
RightChild
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The right node pointer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="1">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset space \hspace{}
\length 25col%
\end_inset

ToDo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
category : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
description : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
constructor(c : STRING, d : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_category(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
set_description(s : STRING)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get_category() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
get:_description() : STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
summary() : STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename static/img/9597-SPECIMENT-P2-Q6.png
	width 50page%

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
 
\end_layout

\end_body
\end_document
